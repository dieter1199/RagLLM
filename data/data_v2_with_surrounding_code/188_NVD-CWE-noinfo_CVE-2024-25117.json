{
    "cve_id": "CVE-2024-25117",
    "cve_description": "php-svg-lib is a scalable vector graphics (SVG) file parsing/rendering library. Prior to version 0.5.2, php-svg-lib fails to validate that font-family doesn't contain a PHAR url, which might leads to RCE on PHP < 8.0, and doesn't validate if external references are allowed. This might leads to bypass of restrictions or RCE on projects that are using it, if they do not strictly revalidate the fontName that is passed by php-svg-lib. The `Style::fromAttributes(`), or the `Style::parseCssStyle()` should check the content of the `font-family` and prevents it to use a PHAR url, to avoid passing an invalid and dangerous `fontName` value to other libraries. The same check as done in the `Style::fromStyleSheets` might be reused. Libraries using this library as a dependency might be vulnerable to some bypass of restrictions, or even remote code execution, if they do not double check the value of the `fontName` that is passed by php-svg-lib. Version 0.5.2 contains a fix for this issue.",
    "cve_publish_date": "2024-02-21T17:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Remove invalid condition around image href validation",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "Image.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "6",
            "number_of_lines_deleted_vulnerable_to_cve": "8",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 19:     protected $href = null;",
                "// Line 20: ",
                "// Line 21:     protected function before($attributes)",
                "// Line 22:     {",
                "// Line 23:         parent::before($attributes);",
                "// Line 24: ",
                "// Line 25:         $surface = $this->document->getSurface();",
                "// Line 26:         $surface->save();",
                "// Line 27: ",
                "// Line 28:         $this->applyTransform($attributes);",
                "// vulnerable line: 29: }",
                "// Line 30: ",
                "// Line 31:     public function start($attributes)",
                "// Line 32:     {",
                "// Line 33:         $height = $this->document->getHeight();",
                "// Line 34:         $width = $this->document->getWidth();",
                "// Line 35:         $this->y = $height;",
                "// Line 36: ",
                "// Line 37:         if (isset($attributes['x'])) {",
                "// Line 38:             $this->x = $this->convertSize($attributes['x'], $width);",
                "// vulnerable line: 39: }",
                "// Line 40:         if (isset($attributes['y'])) {",
                "// Line 41:             $this->y = $height - $this->convertSize($attributes['y'], $height);",
                "// vulnerable line: 42: }",
                "// Line 43: ",
                "// Line 44:         if (isset($attributes['width'])) {",
                "// Line 45:             $this->width = $this->convertSize($attributes['width'], $width);",
                "// vulnerable line: 46: }",
                "// Line 47:         if (isset($attributes['height'])) {",
                "// Line 48:             $this->height = $this->convertSize($attributes['height'], $height);",
                "// vulnerable line: 49: }",
                "// Line 50: ",
                "// Line 51:         if (isset($attributes['xlink:href'])) {",
                "// Line 52:             $this->href = $attributes['xlink:href'];",
                "// vulnerable line: 53: }",
                "// Line 54: ",
                "// Line 55:         if (isset($attributes['href'])) {",
                "// Line 56:             $this->href = $attributes['href'];",
                "// vulnerable line: 57: }",
                "// Line 58: ",
                "// Line 59:         $this->document->getSurface()->transform(1, 0, 0, -1, 0, $height);",
                "// Line 60: ",
                "// vulnerable line: 61: if ($from === \"font-family\") {",
                "// vulnerable line: 62: $scheme = \\strtolower(parse_url($this->href, PHP_URL_SCHEME) ?: \"\");",
                "// vulnerable line: 63: if (",
                "// vulnerable line: 64: $scheme === \"phar\" || \\strtolower(\\substr($this->href, 0, 7)) === \"phar://\"",
                "// vulnerable line: 65: || ($this->document->allowExternalReferences === false && $scheme !== \"data\")",
                "// vulnerable line: 66: ) {",
                "// vulnerable line: 67: return;",
                "// vulnerable line: 68: }",
                "// vulnerable line: 69: }",
                "// Line 70: ",
                "// Line 71:         $this->document->getSurface()->drawImage($this->href, $this->x, $this->y, $this->width, $this->height);",
                "// vulnerable line: 72: }",
                "// Line 73: ",
                "// Line 74:     protected function after()",
                "// Line 75:     {",
                "// Line 76:         $this->document->getSurface()->restore();",
                "// vulnerable line: 77: }",
                "// vulnerable line: 78: } "
            ]
        }
    ]
}