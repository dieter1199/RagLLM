{
    "cve_id": "CVE-2017-20191",
    "cve_description": "A vulnerability was found in Zimbra zm-admin-ajax up to 8.8.1. It has been classified as problematic. This affects the function XFormItem.prototype.setError of the file WebRoot/js/ajax/dwt/xforms/XFormItem.js of the component Form Textbox Field Error Handler. The manipulation of the argument message leads to cross site scripting. It is possible to initiate the attack remotely. Upgrading to version 8.8.2 is able to address this issue. The identifier of the patch is bb240ce0c71c01caabaa43eed30c78ba8d7d3591. It is recommended to upgrade the affected component. The identifier VDB-258621 was assigned to this vulnerability.",
    "cve_publish_date": "2024-03-31T09:15Z",
    "cwe_id": "CWE-79",
    "cwe_name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "cwe_description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
    "commit_message": "ZCS-1795 Persistent XSS happens on textbox\n\nIssue:\n- Error text in form fields were executing text in dom, which can be used for XSS attacks\n\nResolution:\n- Before adding error to DOM, html encode the text to make sure it is not executed in browser\n- This is done at a generic place so it will affect error display for all form fields",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "XFormItem.js",
            "code_language": "JavaScript",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 681:  */",
                "// Line 682: XFormItem.prototype.setError = function(message, childError) {",
                "// Line 683:     var errLoc = this.getErrorLocation();",
                "// Line 684:     if (errLoc == _PARENT_ || errLoc == _INHERIT_){",
                "// Line 685:         this.getParentItem().setError(message, true);",
                "// Line 686:         return;",
                "// Line 687:     }",
                "// Line 688:     this.getForm().addErrorItem(this);",
                "// Line 689:     this.__errorState = XFormItem.ERROR_STATE_ERROR;",
                "// Line 690:     var container = this.getErrorContainer(true);",
                "// vulnerable line: 691: if (container) container.innerHTML = message;",
                "// Line 692: };",
                "// Line 693: ",
                "// Line 694: /** ",
                "// Line 695:  * Clears the error message for this form item. ",
                "// Line 696:  * This will clear the error for this item, or ",
                "// Line 697:  * useing the errorLocation, follow the chain up,",
                "// Line 698:  * to clear the error on the related item.",
                "// Line 699:  */",
                "// Line 700: XFormItem.prototype.clearError = function() {",
                "// Line 701:     var errLoc = this.getErrorLocation();"
            ]
        }
    ]
}