{
    "cve_id": "CVE-2024-29041",
    "cve_description": "Express.js minimalist web framework for node. Versions of Express.js prior to 4.19.0 and all pre-release alpha and beta versions of 5.0 are affected by an open redirect vulnerability using malformed URLs. When a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list. The main method impacted is `res.location()` but this is also called from within `res.redirect()`. The vulnerability is fixed in 4.19.2 and 5.0.0-beta.3.",
    "cve_publish_date": "2024-03-25T21:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Prevent open redirect allow list bypass due to encodeurl\n\nCo-authored-by: Jon Church <me@jonchurch.com>",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "response.js",
            "code_language": "JavaScript",
            "number_of_lines_added_for_mitigation": "19",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 909: ",
                "// Line 910: res.location = function location(url) {",
                "// Line 911:   var loc = url;",
                "// Line 912: ",
                "// Line 913:   // \"back\" is an alias for the referrer",
                "// Line 914:   if (url === 'back') {",
                "// Line 915:     loc = this.req.get('Referrer') || '/';",
                "// Line 916:   }",
                "// Line 917: ",
                "// Line 918:   // set location",
                "// vulnerable line: 919: return this.set('Location', encodeUrl(loc));",
                "// Line 920: };",
                "// Line 921: ",
                "// Line 922: /**",
                "// Line 923:  * Redirect to the given `url` with optional response `status`",
                "// Line 924:  * defaulting to 302.",
                "// Line 925:  *",
                "// Line 926:  * The resulting `url` is determined by `res.location()`, so",
                "// Line 927:  * it will play nicely with mounted apps, relative paths,",
                "// Line 928:  * `\"back\"` etc.",
                "// Line 929:  *"
            ]
        }
    ]
}