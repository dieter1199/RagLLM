{
    "cve_id": "CVE-2024-27085",
    "cve_description": "Discourse is an open source platform for community discussion. In affected versions users that are allowed to invite others can inject arbitrarily large data in parameters used in the invite route. The problem has been patched in the latest version of Discourse. Users are advised to upgrade. Users unable to upgrade should disable invites or restrict access to them using the `invite allowed groups` site setting. ",
    "cve_publish_date": "2024-03-15T20:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "SECURITY: Limit invites params length",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "invite.rb",
            "code_language": "Ruby",
            "number_of_lines_added_for_mitigation": "3",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 25:   belongs_to :invited_by, class_name: \"User\"",
                "// Line 26: ",
                "// Line 27:   has_many :invited_users",
                "// Line 28:   has_many :users, through: :invited_users",
                "// Line 29:   has_many :invited_groups",
                "// Line 30:   has_many :groups, through: :invited_groups",
                "// Line 31:   has_many :topic_invites",
                "// Line 32:   has_many :topics, through: :topic_invites, source: :topic",
                "// Line 33: ",
                "// Line 34:   validates_presence_of :invited_by_id",
                "// vulnerable line: 35: validates :email, email: true, allow_blank: true",
                "// Line 36:   validates :custom_message, length: { maximum: 1000 }",
                "// Line 37:   validate :ensure_max_redemptions_allowed",
                "// Line 38:   validate :valid_redemption_count",
                "// Line 39:   validate :valid_domain, if: :will_save_change_to_domain?",
                "// Line 40:   validate :user_doesnt_already_exist, if: :will_save_change_to_email?",
                "// Line 41:   validate :email_xor_domain",
                "// Line 42: ",
                "// Line 43:   before_create do",
                "// Line 44:     self.invite_key ||= SecureRandom.base58(10)",
                "// Line 45:     self.expires_at ||= SiteSetting.invite_expiry_days.days.from_now",
                "// Line 343:       )",
                "// Line 344:     end",
                "// Line 345:   end",
                "// Line 346: ",
                "// Line 347:   def valid_domain",
                "// Line 348:     return if self.domain.blank?",
                "// Line 349: ",
                "// Line 350:     self.domain.downcase!",
                "// Line 351: ",
                "// Line 352:     if self.domain !~ Invite::DOMAIN_REGEX",
                "// vulnerable line: 353: self.errors.add(:base, I18n.t(\"invite.domain_not_allowed\"))",
                "// Line 354:     end",
                "// Line 355:   end",
                "// Line 356: ",
                "// Line 357:   def user_exists_error_msg(email)",
                "// Line 358:     error_key = SiteSetting.hide_email_address_taken? ? \"generic_error_response\" : \"user_exists\"",
                "// Line 359: ",
                "// Line 360:     I18n.t(\"invite.#{error_key}\", email: CGI.escapeHTML(email))",
                "// Line 361:   end",
                "// Line 362: end",
                "// Line 363: "
            ]
        }
    ]
}