{
    "cve_id": "CVE-2023-38511",
    "cve_description": "iTop is an IT service management platform.  Dashboard editor : can load multiple files and URL, and full path disclosure on dashboard config file. This vulnerability is fixed in 3.0.4 and 3.1.1.\n",
    "cve_publish_date": "2024-04-15T17:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "NÂ°6552 - Security hardening",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "dashboard.class.inc.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "7",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 922:         $oUDSearch = new DBObjectSearch('UserDashboard');",
                "// Line 923:         $oUDSearch->AddCondition('user_id', UserRights::GetUserId(), '=');",
                "// Line 924:         $oUDSearch->AddCondition('menu_code', $sDashBoardId, '=');",
                "// Line 925:         $oUDSet = new DBObjectSet($oUDSearch);",
                "// Line 926:         if ($oUDSet->Count() > 0) {",
                "// Line 927:             // Assuming there is at most one couple {user, menu}!",
                "// Line 928:             $oUserDashboard = $oUDSet->Fetch();",
                "// Line 929:             $sDashboardDefinition = $oUserDashboard->Get('contents');",
                "// Line 930:             $bCustomized = true;",
                "// Line 931:         } else {",
                "// vulnerable line: 932: $sDashboardDefinition = @file_get_contents($sDashboardFile);",
                "// Line 933:         }",
                "// Line 934: ",
                "// Line 935: ",
                "// Line 936:         if ($sDashboardDefinition !== false) {",
                "// Line 937:             $oDashboard = new RuntimeDashboard($sDashBoardId);",
                "// Line 938:             $oDashboard->FromXml($sDashboardDefinition);",
                "// Line 939:             $oDashboard->SetCustomFlag($bCustomized);",
                "// vulnerable line: 940: $oDashboard->SetDefinitionFile($sDashboardFile);",
                "// Line 941:         } else {",
                "// Line 942:             $oDashboard = null;",
                "// Line 943:         }",
                "// Line 944: ",
                "// Line 945:         return $oDashboard;",
                "// Line 946:     }",
                "// Line 947: ",
                "// Line 948:     /**",
                "// Line 949:      * @inheritDoc",
                "// Line 950:      * @throws \\Exception"
            ]
        }
    ]
}