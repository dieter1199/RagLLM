{
    "cve_id": "CVE-2024-4941",
    "cve_description": "A local file inclusion vulnerability exists in the JSON component of gradio-app/gradio version 4.25. The vulnerability arises from improper input validation in the `postprocess()` function within `gradio/components/json_component.py`, where a user-controlled string is parsed as JSON. If the parsed JSON object contains a `path` key, the specified file is moved to a temporary directory, making it possible to retrieve it later via the `/file=..` endpoint. This issue is due to the `processing_utils.move_files_to_cache()` function traversing any object passed to it, looking for a dictionary with a `path` key, and then copying the specified file to a temporary directory. The vulnerability can be exploited by an attacker to read files on the remote system, posing a significant security risk.",
    "cve_publish_date": "2024-06-06T18:15Z",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "Ensure JSON component outputs handled properly in postprocess (#8292)\n\n* Add code\r\n\r\n* Json postprocess\r\n\r\n* add changeset\r\n\r\n* add changeset\r\n\r\n* Fix json tests\r\n\r\n* fix flag\r\n\r\n* Address comments\r\n\r\n---------\r\n\r\nCo-authored-by: gradio-pr-bot <gradio-pr-bot@users.noreply.github.com>",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "base.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "3",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 12: from abc import ABC, abstractmethod",
                "// Line 13: from enum import Enum",
                "// Line 14: from pathlib import Path",
                "// Line 15: from typing import TYPE_CHECKING, Any, Callable",
                "// Line 16: ",
                "// Line 17: import gradio_client.utils as client_utils",
                "// Line 18: ",
                "// Line 19: from gradio import utils",
                "// Line 20: from gradio.blocks import Block, BlockContext",
                "// Line 21: from gradio.component_meta import ComponentMeta",
                "// vulnerable line: 22: from gradio.data_classes import GradioDataModel",
                "// Line 23: from gradio.events import EventListener",
                "// Line 24: from gradio.layouts import Form",
                "// Line 25: from gradio.processing_utils import move_files_to_cache",
                "// Line 26: ",
                "// Line 27: if TYPE_CHECKING:",
                "// Line 28:     from typing import TypedDict",
                "// Line 29: ",
                "// Line 30:     class DataframeData(TypedDict):",
                "// Line 31:         headers: list[str]",
                "// Line 32:         data: list[list[str | int | bool]]"
            ]
        },
        {
            "filename_of_changes": "data_classes.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "9",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 9: from abc import ABC, abstractmethod",
                "// Line 10: from enum import Enum, auto",
                "// Line 11: from typing import TYPE_CHECKING, Any, List, Optional, Tuple, Union",
                "// Line 12: ",
                "// Line 13: from fastapi import Request",
                "// Line 14: from gradio_client.utils import traverse",
                "// Line 15: ",
                "// Line 16: from . import wasm_utils",
                "// Line 17: ",
                "// Line 18: if not wasm_utils.IS_WASM or TYPE_CHECKING:",
                "// vulnerable line: 19: from pydantic import BaseModel, RootModel, ValidationError",
                "// Line 20: else:",
                "// Line 21:     # XXX: Currently Pyodide V2 is not available on Pyodide,",
                "// Line 22:     # so we install V1 for the Wasm version.",
                "// Line 23:     from typing import Generic, TypeVar",
                "// Line 24: ",
                "// Line 25:     from pydantic import BaseModel as BaseModelV1",
                "// Line 26:     from pydantic import ValidationError, schema_of",
                "// Line 27: ",
                "// Line 28:     # Map V2 method calls to V1 implementations.",
                "// Line 29:     # Ref: https://docs.pydantic.dev/latest/migration/#changes-to-pydanticbasemodel"
            ]
        },
        {
            "filename_of_changes": "helpers.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "json_component.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "11",
            "number_of_lines_deleted_vulnerable_to_cve": "7",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 70: ",
                "// Line 71:     def preprocess(self, payload: dict | list | None) -> dict | list | None:",
                "// Line 72:         \"\"\"",
                "// Line 73:         Parameters:",
                "// Line 74:             payload: JSON value as a `dict` or `list`",
                "// Line 75:         Returns:",
                "// Line 76:             Passes the JSON value as a `dict` or `list` depending on the value.",
                "// Line 77:         \"\"\"",
                "// Line 78:         return payload",
                "// Line 79: ",
                "// vulnerable line: 80: def postprocess(self, value: dict | list | str | None) -> dict | list | None:",
                "// Line 81:         \"\"\"",
                "// Line 82:         Parameters:",
                "// Line 83:             value: Expects a valid JSON `str` -- or a `list` or `dict` that can be serialized to a JSON string. The `list` or `dict` value can contain numpy arrays.",
                "// Line 84:         Returns:",
                "// Line 85:             Returns the JSON as a `list` or `dict`.",
                "// Line 86:         \"\"\"",
                "// Line 87:         if value is None:",
                "// Line 88:             return None",
                "// Line 89:         if isinstance(value, str):",
                "// vulnerable line: 90: return orjson.loads(value)",
                "// Line 91:         else:",
                "// Line 92:             # Use orjson to convert NumPy arrays and datetime objects to JSON.",
                "// Line 93:             # This ensures a backward compatibility with the previous behavior.",
                "// Line 94:             # See https://github.com/gradio-app/gradio/pull/8041",
                "// vulnerable line: 95: return orjson.loads(",
                "// vulnerable line: 96: orjson.dumps(",
                "// vulnerable line: 97: value,",
                "// vulnerable line: 98: option=orjson.OPT_SERIALIZE_NUMPY | orjson.OPT_PASSTHROUGH_DATETIME,",
                "// vulnerable line: 99: default=str,",
                "// Line 100:                 )",
                "// Line 101:             )",
                "// Line 102: ",
                "// Line 103:     def example_payload(self) -> Any:",
                "// Line 104:         return {\"foo\": \"bar\"}",
                "// Line 105: ",
                "// Line 106:     def example_value(self) -> Any:",
                "// Line 107:         return {\"foo\": \"bar\"}",
                "// Line 108: ",
                "// Line 109:     def read_from_flag(self, payload: Any):"
            ]
        },
        {
            "filename_of_changes": "processing_utils.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "16",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 13: from pathlib import Path",
                "// Line 14: from typing import TYPE_CHECKING, Any",
                "// Line 15: ",
                "// Line 16: import aiofiles",
                "// Line 17: import httpx",
                "// Line 18: import numpy as np",
                "// Line 19: from gradio_client import utils as client_utils",
                "// Line 20: from PIL import Image, ImageOps, PngImagePlugin",
                "// Line 21: ",
                "// Line 22: from gradio import utils, wasm_utils",
                "// vulnerable line: 23: from gradio.data_classes import FileData, GradioModel, GradioRootModel",
                "// Line 24: from gradio.utils import abspath, get_upload_folder, is_in_or_equal",
                "// Line 25: ",
                "// Line 26: with warnings.catch_warnings():",
                "// Line 27:     warnings.simplefilter(\"ignore\")  # Ignore pydub warning if ffmpeg is not installed",
                "// Line 28:     from pydub import AudioSegment",
                "// Line 29: ",
                "// Line 30: if wasm_utils.IS_WASM:",
                "// Line 31:     import pyodide.http  # type: ignore",
                "// Line 32:     import urllib3",
                "// Line 33: "
            ]
        },
        {
            "filename_of_changes": "test_helpers.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "19",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 10: ",
                "// Line 11: import gradio_client as grc",
                "// Line 12: import pytest",
                "// Line 13: from gradio_client import media_data",
                "// Line 14: from gradio_client import utils as client_utils",
                "// Line 15: from pydub import AudioSegment",
                "// Line 16: from starlette.testclient import TestClient",
                "// Line 17: from tqdm import tqdm",
                "// Line 18: ",
                "// Line 19: import gradio as gr",
                "// vulnerable line: 20: from gradio import utils",
                "// Line 21: ",
                "// Line 22: ",
                "// Line 23: @patch(\"gradio.utils.get_cache_folder\", return_value=Path(tempfile.mkdtemp()))",
                "// Line 24: class TestExamples:",
                "// Line 25:     def test_handle_single_input(self, patched_cache_folder):",
                "// Line 26:         examples = gr.Examples([\"hello\", \"hi\"], gr.Textbox())",
                "// Line 27:         assert examples.processed_examples == [[\"hello\"], [\"hi\"]]",
                "// Line 28: ",
                "// Line 29:         examples = gr.Examples([[\"hello\"]], gr.Textbox())",
                "// Line 30:         assert examples.processed_examples == [[\"hello\"]]"
            ]
        },
        {
            "filename_of_changes": "test_json.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "6",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 68:             [\"M\", 30],",
                "// Line 69:             [\"F\", 20],",
                "// Line 70:             [\"M\", 40],",
                "// Line 71:             [\"O\", 20],",
                "// Line 72:             [\"F\", 30],",
                "// Line 73:         ]",
                "// Line 74:         assert (",
                "// Line 75:             await iface.process_api(",
                "// Line 76:                 0, [{\"data\": y_data, \"headers\": [\"gender\", \"age\"]}], state={}",
                "// Line 77:             )",
                "// vulnerable line: 78: )[\"data\"][0] == {",
                "// Line 79:             \"M\": 35,",
                "// Line 80:             \"F\": 25,",
                "// Line 81:             \"O\": 20,",
                "// Line 82:         }",
                "// Line 83: ",
                "// Line 84:     @pytest.mark.parametrize(",
                "// Line 85:         \"value, expected\",",
                "// Line 86:         [",
                "// Line 87:             (None, None),",
                "// Line 88:             (True, True),",
                "// Line 89:             ([1, 2, 3], [1, 2, 3]),",
                "// Line 90:             ([np.array([1, 2, 3])], [[1, 2, 3]]),",
                "// Line 91:             ({\"foo\": [1, 2, 3]}, {\"foo\": [1, 2, 3]}),",
                "// Line 92:             ({\"foo\": np.array([1, 2, 3])}, {\"foo\": [1, 2, 3]}),",
                "// Line 93:         ],",
                "// Line 94:     )",
                "// Line 95:     def test_postprocess_returns_json_serializable_value(self, value, expected):",
                "// Line 96:         json_component = gr.JSON()",
                "// Line 97:         postprocessed_value = json_component.postprocess(value)",
                "// vulnerable line: 98: assert postprocessed_value == expected",
                "// vulnerable line: 99: assert json.loads(json.dumps(postprocessed_value)) == expected"
            ]
        },
        {
            "filename_of_changes": "test_processing_utils.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "30",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 4: from copy import deepcopy",
                "// Line 5: from pathlib import Path",
                "// Line 6: from unittest.mock import patch",
                "// Line 7: ",
                "// Line 8: import ffmpy",
                "// Line 9: import numpy as np",
                "// Line 10: import pytest",
                "// Line 11: from gradio_client import media_data",
                "// Line 12: from PIL import Image, ImageCms",
                "// Line 13: ",
                "// vulnerable line: 14: from gradio import processing_utils, utils",
                "// Line 15: ",
                "// Line 16: ",
                "// Line 17: class TestTempFileManagement:",
                "// Line 18:     def test_hash_file(self):",
                "// Line 19:         h1 = processing_utils.hash_file(\"gradio/test_data/cheetah1.jpg\")",
                "// Line 20:         h2 = processing_utils.hash_file(\"gradio/test_data/cheetah1-copy.jpg\")",
                "// Line 21:         h3 = processing_utils.hash_file(\"gradio/test_data/cheetah2.jpg\")",
                "// Line 22:         assert h1 == h2",
                "// Line 23:         assert h1 != h3",
                "// Line 24: "
            ]
        }
    ]
}