{
    "cve_id": "CVE-2024-23328",
    "cve_description": "Dataease is an open source data visualization analysis tool. A deserialization vulnerability exists in the DataEase datasource, which can be exploited to execute arbitrary code. The location of the vulnerability code is `core/core-backend/src/main/java/io/dataease/datasource/type/Mysql.java.` The blacklist of mysql jdbc attacks can be bypassed and attackers can further exploit it for deserialized execution or reading arbitrary files. This vulnerability is patched in 1.18.15 and 2.3.0.",
    "cve_publish_date": "2024-02-29T01:44Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "fix: 限制 mysql 非法参数",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "Mysql.java",
            "code_language": "Java",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 18:     private List<String> showTableSqls = Arrays.asList(\"show tables\");",
                "// Line 19: ",
                "// Line 20:     public String getJdbc() {",
                "// Line 21:         if (StringUtils.isEmpty(extraParams.trim())) {",
                "// Line 22:             return \"jdbc:mysql://HOSTNAME:PORT/DATABASE\"",
                "// Line 23:                     .replace(\"HOSTNAME\", getHost().trim())",
                "// Line 24:                     .replace(\"PORT\", getPort().toString().trim())",
                "// Line 25:                     .replace(\"DATABASE\", getDataBase().trim());",
                "// Line 26:         } else {",
                "// Line 27:             for (String illegalParameter : illegalParameters) {",
                "// vulnerable line: 28: if (getExtraParams().toLowerCase().contains(illegalParameter.toLowerCase())) {",
                "// Line 29:                     DEException.throwException(\"Illegal parameter: \" + illegalParameter);",
                "// Line 30:                 }",
                "// Line 31:             }",
                "// Line 32: ",
                "// Line 33:             return \"jdbc:mysql://HOSTNAME:PORT/DATABASE?EXTRA_PARAMS\"",
                "// Line 34:                     .replace(\"HOSTNAME\", getHost().trim())",
                "// Line 35:                     .replace(\"PORT\", getPort().toString().trim())",
                "// Line 36:                     .replace(\"DATABASE\", getDataBase().trim())",
                "// Line 37:                     .replace(\"EXTRA_PARAMS\", getExtraParams().trim());",
                "// Line 38:         }"
            ]
        }
    ]
}