{
    "cve_id": "CVE-2024-28871",
    "cve_description": "LibHTP is a security-aware parser for the HTTP protocol and the related bits and pieces. Version 0.5.46 may parse malformed request traffic, leading to excessive CPU usage. Version 0.5.47 contains a patch for the issue. No known workarounds are available.",
    "cve_publish_date": "2024-04-04T15:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "http0.9: process headers if there are non-space characters\n\nPreviously, we fell back on HTTP/0.9 if there was a missing protocol\nexcept if the following line cintained a colon.\n\nThis makes libhtp stricter to consider a transaction as 0.9\nby only accepting if we have spaces after the request line\n\nas done in libhtp-rs\n\nTicket: 6643",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "test_main.cpp",
            "code_language": "C++",
            "number_of_lines_added_for_mitigation": "0",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 551:     ASSERT_TRUE(tx != NULL);",
                "// Line 552: ",
                "// Line 553:     ASSERT_TRUE(tx->flags & HTP_HOST_MISSING);",
                "// Line 554: }",
                "// Line 555: ",
                "// Line 556: TEST_F(ConnectionParsing, Http_0_9_Multiple) {",
                "// Line 557:     int rc = test_run(home, \"23-http09-multiple.t\", cfg, &connp);",
                "// Line 558:     ASSERT_GE(rc, 0);",
                "// Line 559: ",
                "// Line 560:     ASSERT_EQ(1, htp_list_size(connp->conn->transactions));",
                "// vulnerable line: 561: ASSERT_TRUE(connp->conn->flags & HTP_CONN_HTTP_0_9_EXTRA);",
                "// Line 562: ",
                "// Line 563:     htp_tx_t *tx = (htp_tx_t *) htp_list_get(connp->conn->transactions, 0);",
                "// Line 564:     ASSERT_TRUE(tx != NULL);",
                "// Line 565: }",
                "// Line 566: ",
                "// Line 567: TEST_F(ConnectionParsing, Http_0_9_Explicit) {",
                "// Line 568:     int rc = test_run(home, \"24-http09-explicit.t\", cfg, &connp);",
                "// Line 569:     ASSERT_GE(rc, 0);",
                "// Line 570: ",
                "// Line 571:     ASSERT_EQ(1, htp_list_size(connp->conn->transactions));"
            ]
        }
    ]
}