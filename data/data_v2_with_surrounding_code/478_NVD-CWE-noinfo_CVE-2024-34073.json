{
    "cve_id": "CVE-2024-34073",
    "cve_description": "sagemaker-python-sdk is a library for training and deploying machine learning models on Amazon SageMaker. In affected versions the capture_dependencies function in `sagemaker.serve.save_retrive.version_1_0_0.save.utils` module allows for potentially unsafe Operating System (OS) Command Injection if inappropriate command is passed as the “requirements_path” parameter. This consequently may allow an unprivileged third party to cause remote code execution, denial of service, affecting both confidentiality and integrity. This issue has been addressed in version 2.214.3. Users are advised to upgrade. Users unable to upgrade should not override the “requirements_path” parameter of capture_dependencies function in `sagemaker.serve.save_retrive.version_1_0_0.save.utils`, and instead use the default value.",
    "cve_publish_date": "2024-05-03T11:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "[Fix] Switch to subprocess in ModelBuilder when capturing dependencies (#4556)\n\n* [Fix] Switch to subprogress in ModelBuilder when capturing dependencies\r\n\r\n* Fix style issues and explicitly set check to true",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "utils.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "4",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 91:             \"And follow the ones that match your environment.\"",
                "// Line 92:             \"Please note that you may need to restart your runtime after installation.\"",
                "// Line 93:         )",
                "// Line 94:         import sagemaker",
                "// Line 95: ",
                "// Line 96:         sagemaker_dependency = f\"{sagemaker.__package__}=={sagemaker.__version__}\"",
                "// Line 97:         with open(requirements_path, \"w\") as f:",
                "// Line 98:             f.write(sagemaker_dependency)",
                "// Line 99:         return",
                "// Line 100: ",
                "// vulnerable line: 101: command = f\"pigar gen -f {Path(requirements_path)} {os.getcwd()}\"",
                "// vulnerable line: 102: logging.info(\"Running command %s\", command)",
                "// Line 103: ",
                "// vulnerable line: 104: os.system(command)",
                "// Line 105:     logger.info(\"Dependencies captured successfully\")",
                "// Line 106: ",
                "// Line 107: ",
                "// Line 108: def capture_optimization_metadata(model: Model, framework) -> dict:",
                "// Line 109:     \"\"\"Placeholder docstring\"\"\"",
                "// Line 110:     logging.info(\"Capturing optimization metadata...\")",
                "// Line 111:     # get size of the model",
                "// Line 112:     model_size = sys.getsizeof(model)",
                "// Line 113:     # TODO: We may need to use framework specific way to get the model size",
                "// Line 114:     # example torchsummary for pytorch etc."
            ]
        }
    ]
}