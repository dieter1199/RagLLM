{
    "cve_id": "CVE-2024-34084",
    "cve_description": "Minder's `HandleGithubWebhook` is susceptible to a denial of service attack from an untrusted HTTP request. The vulnerability exists before the request has been validated, and as such the request is still untrusted at the point of failure. This allows an attacker with the ability to send requests to `HandleGithubWebhook` to crash the Minder controlplane and deny other users from using it. This vulnerability is fixed in 0.0.48.",
    "cve_publish_date": "2024-05-07T15:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Merge pull request from GHSA-9c5w-9q3f-3hv7\n\nSigned-off-by: Juan Antonio Osorio <ozz@stacklok.com>",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "server.go",
            "code_language": "Go",
            "number_of_lines_added_for_mitigation": "15",
            "number_of_lines_deleted_vulnerable_to_cve": "4",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 310:     }",
                "// Line 311:     err = gwmux.HandlePath(http.MethodGet, \"/api/v1/auth/callback/{provider}/web\", s.HandleOAuthCallback())",
                "// Line 312:     if err != nil {",
                "// Line 313:         return fmt.Errorf(\"failed to register provider callback handler: %w\", err)",
                "// Line 314:     }",
                "// Line 315:     err = gwmux.HandlePath(http.MethodGet, \"/api/v1/auth/callback/{provider}/app\", s.HandleGitHubAppCallback())",
                "// Line 316:     if err != nil {",
                "// Line 317:         return fmt.Errorf(\"failed to register GitHub App callback handler: %w\", err)",
                "// Line 318:     }",
                "// Line 319: ",
                "// vulnerable line: 320: mux.Handle(\"/\", s.handlerWithHTTPMiddleware(gwmux))",
                "// vulnerable line: 321: mux.Handle(\"/api/v1/webhook/\", mw(s.HandleGitHubWebHook()))",
                "// vulnerable line: 322: mux.Handle(\"/api/v1/ghapp/\", mw(s.HandleGitHubAppWebhook()))",
                "// vulnerable line: 323: mux.Handle(\"/api/v1/gh-marketplace/\", mw(s.NoopWebhookHandler()))",
                "// Line 324:     mux.Handle(\"/static/\", fs)",
                "// Line 325: ",
                "// Line 326:     errch := make(chan error)",
                "// Line 327: ",
                "// Line 328:     log.Printf(\"Starting HTTP server on %s\", s.cfg.HTTPServer.GetAddress())",
                "// Line 329: ",
                "// Line 330:     server := http.Server{",
                "// Line 331:         Addr:              s.cfg.HTTPServer.GetAddress(),",
                "// Line 332:         Handler:           mux,",
                "// Line 333:         ReadHeaderTimeout: readHeaderTimeout,"
            ]
        }
    ]
}