{
    "cve_id": "CVE-2024-1626",
    "cve_description": "An Insecure Direct Object Reference (IDOR) vulnerability exists in the lunary-ai/lunary repository, version 0.3.0, within the project update endpoint. The vulnerability allows authenticated users to modify the name of any project within the system without proper authorization checks, by directly referencing the project's ID in the PATCH request to the '/v1/projects/:projectId' endpoint. This issue arises because the endpoint does not verify if the provided project ID belongs to the currently authenticated user, enabling unauthorized modifications across different organizational projects.",
    "cve_publish_date": "2024-04-16T00:15Z",
    "cwe_id": "CWE-250",
    "cwe_name": "Execution with Unnecessary Privileges",
    "cwe_description": "The product performs an operation at a privilege level that is higher than the minimum level required, which creates new weaknesses or amplifies the consequences of other weaknesses.",
    "commit_message": "feat: add project modification safeguard",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "authorization.ts",
            "code_language": "TypeScript",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: import sql from \"./db\"",
                "// Line 2: ",
                "// vulnerable line: 3: export async function verifyProjectAccess(projectId: string, userId: string) {",
                "// Line 4:   const [{ exists: hasAccess }] = await sql`",
                "// Line 5:       select exists (",
                "// Line 6:         select 1 ",
                "// Line 7:         from project ",
                "// Line 8:         where org_id = (select org_id from account where id = ${userId}) ",
                "// Line 9:           and id = ${projectId}",
                "// Line 10:       )",
                "// Line 11:     `",
                "// Line 12:   return hasAccess",
                "// Line 13: }"
            ]
        },
        {
            "filename_of_changes": "index.ts",
            "code_language": "TypeScript",
            "number_of_lines_added_for_mitigation": "9",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// vulnerable line: 1: import { verifyProjectAccess } from \"@/src/utils/authorization\"",
                "// Line 2: import sql from \"@/src/utils/db\"",
                "// Line 3: import Context from \"@/src/utils/koa\"",
                "// Line 4: import Router from \"koa-router\"",
                "// Line 5: import { z } from \"zod\"",
                "// Line 6: ",
                "// Line 7: const projects = new Router({",
                "// Line 8:   prefix: \"/projects\",",
                "// Line 9: })",
                "// Line 10: ",
                "// Line 11: projects.get(\"/\", async (ctx: Context) => {",
                "// Line 64:       projectId: project.id,",
                "// Line 65:     },",
                "// Line 66:   ]",
                "// Line 67:   await sql`insert into api_key ${sql(privateKey)}`",
                "// Line 68:   ctx.body = project",
                "// Line 69: })",
                "// Line 70: ",
                "// Line 71: projects.delete(\"/:projectId\", async (ctx: Context) => {",
                "// Line 72:   const { projectId } = ctx.params",
                "// Line 73:   const { orgId, userId } = ctx.state",
                "// vulnerable line: 74: console.log(ctx.state)",
                "// Line 75: ",
                "// vulnerable line: 76: const hasProjectAccess = await verifyProjectAccess(projectId, userId)",
                "// Line 77:   const [user] = await sql`select * from account where id = ${userId}`",
                "// Line 78: ",
                "// Line 79:   if (!hasProjectAccess) {",
                "// Line 80:     ctx.throw(401, \"Not allowed\")",
                "// Line 81:   }",
                "// Line 82: ",
                "// Line 83:   if (user.role !== \"admin\") {",
                "// Line 84:     ctx.throw(403, \"You must be an admin to delete a project\")",
                "// Line 85:   }",
                "// Line 86: "
            ]
        }
    ]
}