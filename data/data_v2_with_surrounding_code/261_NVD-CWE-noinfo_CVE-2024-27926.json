{
    "cve_id": "CVE-2024-27926",
    "cve_description": "RSSHub is an open source RSS feed generator. Starting in version 1.0.0-master.cbbd829 and prior to version 1.0.0-master.d8ca915, ahen the specially crafted image is supplied to the internal media proxy, it proxies the image without handling XSS vulnerabilities, allowing for the execution of arbitrary JavaScript code. Users who access the deliberately constructed URL are affected. This vulnerability was fixed in version 1.0.0-master.d8ca915. No known workarounds are available.",
    "cve_publish_date": "2024-03-21T02:52Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "feat: remove MEDIA_PROXY_KEY and internal media proxy",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "channel.ts",
            "code_language": "TypeScript",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 48:     LOCATION: ['[Location]', '📍'],",
                "// Line 49:     CONTACT: ['[Contact]', '📱'],",
                "// Line 50:     STICKER: ['[Sticker]', '[Sticker]'],",
                "// Line 51:     ANIMATED_STICKER: ['[Animated Sticker]', '[Animated Sticker]'],",
                "// Line 52:     // VIDEO_STICKER: ['[Video Sticker]', '[Video Sticker]'],  // not supported yet by t.me",
                "// Line 53:     UNSUPPORTED: ['[Unsupported]', '🚫'],",
                "// Line 54:     PARTIALLY_UNSUPPORTED: ['', ''],",
                "// Line 55: };",
                "// Line 56: ",
                "// Line 57: export default async (ctx) => {",
                "// vulnerable line: 58: const useWeb = ctx.req.param('routeParams') || !(config.telegram.session && config.feature.mediaProxyKey);",
                "// Line 59:     if (!useWeb) {",
                "// Line 60:         return require('./tglib/channel').default(ctx);",
                "// Line 61:     }",
                "// Line 62: ",
                "// Line 63:     const username = ctx.req.param('username');",
                "// Line 64:     let routeParams = ctx.req.param('routeParams');",
                "// Line 65:     let showLinkPreview = true;",
                "// Line 66:     let showViaBot = true;",
                "// Line 67:     let showReplyTo = true;",
                "// Line 68:     let showFwdFrom = true;"
            ]
        },
        {
            "filename_of_changes": "config.ts",
            "code_language": "TypeScript",
            "number_of_lines_added_for_mitigation": "0",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 54:     };",
                "// Line 55:     hotlink: {",
                "// Line 56:         template?: string;",
                "// Line 57:         includePaths?: string[];",
                "// Line 58:         excludePaths?: string[];",
                "// Line 59:     };",
                "// Line 60:     feature: {",
                "// Line 61:         allow_user_hotlink_template: boolean;",
                "// Line 62:         filter_regex_engine: string;",
                "// Line 63:         allow_user_supply_unsafe_domain: boolean;",
                "// vulnerable line: 64: mediaProxyKey?: string;",
                "// Line 65:     };",
                "// Line 66:     suffix?: string;",
                "// Line 67:     titleLengthLimit: number;",
                "// Line 68:     openai: {",
                "// Line 69:         apiKey?: string;",
                "// Line 70:         model?: string;",
                "// Line 71:         temperature?: number;",
                "// Line 72:         maxTokens?: number;",
                "// Line 73:         endpoint: string;",
                "// Line 74:         prompt?: string;",
                "// Line 384:         // feed config",
                "// Line 385:         hotlink: {",
                "// Line 386:             template: envs.HOTLINK_TEMPLATE,",
                "// Line 387:             includePaths: envs.HOTLINK_INCLUDE_PATHS ? envs.HOTLINK_INCLUDE_PATHS.split(',') : undefined,",
                "// Line 388:             excludePaths: envs.HOTLINK_EXCLUDE_PATHS ? envs.HOTLINK_EXCLUDE_PATHS.split(',') : undefined,",
                "// Line 389:         },",
                "// Line 390:         feature: {",
                "// Line 391:             allow_user_hotlink_template: toBoolean(envs.ALLOW_USER_HOTLINK_TEMPLATE, false),",
                "// Line 392:             filter_regex_engine: envs.FILTER_REGEX_ENGINE || 're2',",
                "// Line 393:             allow_user_supply_unsafe_domain: toBoolean(envs.ALLOW_USER_SUPPLY_UNSAFE_DOMAIN, false),",
                "// vulnerable line: 394: mediaProxyKey: envs.MEDIA_PROXY_KEY,",
                "// Line 395:         },",
                "// Line 396:         suffix: envs.SUFFIX,",
                "// Line 397:         titleLengthLimit: toInt(envs.TITLE_LENGTH_LIMIT, 150),",
                "// Line 398:         openai: {",
                "// Line 399:             apiKey: envs.OPENAI_API_KEY,",
                "// Line 400:             model: envs.OPENAI_MODEL || 'gpt-3.5-turbo-16k',",
                "// Line 401:             temperature: toInt(envs.OPENAI_TEMPERATURE, 0.2),",
                "// Line 402:             maxTokens: toInt(envs.OPENAI_MAX_TOKENS, 0) || undefined,",
                "// Line 403:             endpoint: envs.OPENAI_API_ENDPOINT || 'https://api.openai.com/v1',",
                "// Line 404:             prompt: envs.OPENAI_PROMPT || 'Please summarize the following article and reply with markdown format.',"
            ]
        },
        {
            "filename_of_changes": "maintainer.ts",
            "code_language": "TypeScript",
            "number_of_lines_added_for_mitigation": "0",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: export default {",
                "// vulnerable line: 2: '/m/:key/:url': ['TonyRL'],",
                "// Line 3:     '/routes/:lang?': ['DIYgod'],",
                "// Line 4:     '/transform/html/:url/:routeParams': ['ttttmr'],",
                "// Line 5:     '/transform/json/:url/:routeParams': ['ttttmr'],",
                "// Line 6:     '/transform/sitemap/:url/:routeParams?': ['flrngel'],",
                "// Line 7: };"
            ]
        },
        {
            "filename_of_changes": "router.ts",
            "code_language": "TypeScript",
            "number_of_lines_added_for_mitigation": "0",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: export default (router) => {",
                "// vulnerable line: 2: router.get('/m/:key/:url', './media');",
                "// Line 3:     router.get('/routes/:lang?', './routes');",
                "// Line 4:     router.get('/transform/html/:url/:routeParams', './transform/html');",
                "// Line 5:     router.get('/transform/json/:url/:routeParams', './transform/json');",
                "// Line 6:     router.get('/transform/sitemap/:url/:routeParams?', './transform/sitemap');",
                "// Line 7: };"
            ]
        },
        {
            "filename_of_changes": "timeline.ts",
            "code_language": "TypeScript",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 138:             const rep = await got.post(`https://api.weibo.com/oauth2/access_token?client_id=${app_key}&client_secret=${app_secret}&code=${code}&redirect_uri=${redirect_url}&grant_type=authorization_code`);",
                "// Line 139:             const token = rep.data.access_token;",
                "// Line 140:             const uid = rep.data.uid;",
                "// Line 141:             const expires_in = rep.data.expires_in;",
                "// Line 142:             await cache.set('weibotimelineuid' + uid, token, expires_in);",
                "// Line 143: ",
                "// Line 144:             ctx.set({",
                "// Line 145:                 'Content-Type': 'text/html; charset=UTF-8',",
                "// Line 146:                 'Cache-Control': 'no-cache',",
                "// Line 147:             });",
                "// vulnerable line: 148: ctx.body = `<script>window.location = '/weibo/timeline/${uid}${routeParams ? `/${routeParams}` : ''}'</script>`;",
                "// Line 149:         }",
                "// Line 150:     } else {",
                "// Line 151:         const { app_key = '', redirect_url = ctx.req.origin + '/weibo/timeline/0' } = config.weibo;",
                "// Line 152: ",
                "// Line 153:         ctx.status = 302;",
                "// Line 154:         ctx.set({",
                "// Line 155:             'Cache-Control': 'no-cache',",
                "// Line 156:         });",
                "// Line 157:         ctx.redirect(`https://api.weibo.com/oauth2/authorize?client_id=${app_key}&redirect_uri=${redirect_url}${routeParams ? `&state=${feature}/${routeParams.replaceAll('&', '%26')}` : ''}`);",
                "// Line 158:     }"
            ]
        }
    ]
}