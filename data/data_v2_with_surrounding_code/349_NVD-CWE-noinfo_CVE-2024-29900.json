{
    "cve_id": "CVE-2024-29900",
    "cve_description": "Electron Packager bundles Electron-based application source code with a renamed Electron executable and supporting files into folders ready for distribution. A random segment of ~1-10kb of Node.js heap memory allocated either side of a known buffer will be leaked into the final executable. This memory _could_ contain sensitive information such as environment variables, secrets files, etc. This issue is patched in 18.3.1.\n",
    "cve_publish_date": "2024-03-29T16:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "fix: do not deref the integrity buffer (#1699)",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "resedit.ts",
            "code_language": "TypeScript",
            "number_of_lines_added_for_mitigation": "8",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 110:     if (!newStrings[key]) delete newStrings[key];",
                "// Line 111:   }",
                "// Line 112:   versionInfo[0].setStringValues(languageInfo[0], newStrings);",
                "// Line 113: ",
                "// Line 114:   // Output version info",
                "// Line 115:   versionInfo[0].outputToResourceEntries(res.entries);",
                "// Line 116: ",
                "// Line 117:   // Asar Integrity",
                "// Line 118:   if (options.asarIntegrity) {",
                "// Line 119:     res.entries.push({",
                "// vulnerable line: 120: type: 'Integrity',",
                "// vulnerable line: 121: id: 'ElectronAsar',",
                "// vulnerable line: 122: bin: Buffer.from(JSON.stringify(options.asarIntegrity)).buffer,",
                "// Line 123:       lang: languageInfo[0].lang,",
                "// Line 124:       codepage: languageInfo[0].codepage,",
                "// Line 125:     });",
                "// Line 126:   }",
                "// Line 127: ",
                "// Line 128:   res.outputResource(exe);",
                "// Line 129: ",
                "// Line 130:   await fs.writeFile(exePath, Buffer.from(exe.generate()));",
                "// Line 131: }"
            ]
        }
    ]
}