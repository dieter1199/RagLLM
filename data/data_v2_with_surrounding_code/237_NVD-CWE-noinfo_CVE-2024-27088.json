{
    "cve_id": "CVE-2024-27088",
    "cve_description": "es5-ext contains ECMAScript 5 extensions. Passing functions with very long names or complex default argument names into `function#copy` or `function#toStringTokens` may cause the script to stall. The vulnerability is patched in v0.10.63.",
    "cve_publish_date": "2024-02-26T17:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "fix: Support ES2015+ function definitions in `function#toStringTokens()`\n\nAdditionally revert from problematic regex based implementation. Addresses #021",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "to-string-tokens.js",
            "code_language": "JavaScript",
            "number_of_lines_added_for_mitigation": "7",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 3: \"use strict\";",
                "// Line 4: ",
                "// Line 5: module.exports = function (t, a) {",
                "// Line 6:     a.deep(t.call(function (a, b) { return this[a] + this[b]; }), {",
                "// Line 7:         args: \"a, b\",",
                "// Line 8:         body: \" return this[a] + this[b]; \"",
                "// Line 9:     });",
                "// Line 10:     a.deep(t.call(function () {}), { args: \"\", body: \"\" });",
                "// Line 11:     // eslint-disable-next-line no-unused-vars",
                "// Line 12:     a.deep(t.call(function (raz) {}), { args: \"raz\", body: \"\" });",
                "// vulnerable line: 13: a.deep(t.call(function () { Object(); }), { args: \"\", body: \" Object(); \" });",
                "// Line 14: ",
                "// Line 15:     try {",
                "// vulnerable line: 16: eval(\"(() => {})\");",
                "// Line 17:     } catch (e) {",
                "// Line 18:         // Non ES2015 env",
                "// Line 19:         return;",
                "// Line 20:     }",
                "// Line 21: ",
                "// Line 22:     a.deep(t.call(eval(\"(() => {})\")), { args: \"\", body: \"\" });",
                "// Line 23:     a.deep(t.call(eval(\"((elo) => foo)\")), { args: \"elo\", body: \"foo\" });",
                "// Line 24:     a.deep(t.call(eval(\"(elo => foo)\")), { args: \"elo\", body: \"foo\" });",
                "// Line 25:     a.deep(t.call(eval(\"((elo, bar) => foo())\")), { args: \"elo, bar\", body: \"foo()\" });",
                "// Line 26: };"
            ]
        }
    ]
}