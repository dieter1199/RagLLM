{
    "cve_id": "CVE-2024-28868",
    "cve_description": "Umbraco is an ASP.NET content management system. Umbraco 10 prior to 10.8.4 with access to the native login screen is vulnerable to a possible user enumeration attack. This issue was fixed in version 10.8.5. As a workaround, one may disable the native login screen by exclusively using external logins.",
    "cve_publish_date": "2024-03-20T20:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Merge pull request from GHSA-552f-97wf-pmpq\n\nCo-authored-by: jey <jey@umbraco.dk>\n(cherry picked from commit b743f6a2df7c4e8bc72d6aaffd2ae1544ed2ad1a)",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "UmbracoUserManager.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "4",
            "number_of_lines_deleted_vulnerable_to_cve": "4",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 127:             Logger.LogWarning(14, \"Password validation failed: {errors}.\", string.Join(\";\", errors.Select(e => e.Code)));",
                "// Line 128:             return IdentityResult.Failed(errors.ToArray());",
                "// Line 129:         }",
                "// Line 130: ",
                "// Line 131:         return IdentityResult.Success;",
                "// Line 132:     }",
                "// Line 133: ",
                "// Line 134:     /// <inheritdoc />",
                "// Line 135:     public override async Task<bool> CheckPasswordAsync(TUser user, string? password)",
                "// Line 136:     {",
                "// vulnerable line: 137: // we cannot proceed if the user passed in does not have an identity",
                "// vulnerable line: 138: if (user.HasIdentity == false)",
                "// Line 139:         {",
                "// Line 140:             return false;",
                "// Line 141:         }",
                "// Line 142: ",
                "// Line 143:         // use the default behavior",
                "// Line 144:         return await base.CheckPasswordAsync(user, password);",
                "// Line 145:     }",
                "// Line 146: ",
                "// Line 147:     /// <summary>",
                "// Line 148:     ///     This is a special method that will reset the password but will raise the Password Changed event instead of the"
            ]
        }
    ]
}