{
    "cve_id": "CVE-2024-31206",
    "cve_description": "dectalk-tts is a Node package to interact with the aeiou Dectalk web API. In `dectalk-tts@1.0.0`, network requests to the third-party API are sent over HTTP, which is unencrypted. Unencrypted traffic can be easily intercepted and modified by attackers. Anyone who uses the package could be the victim of a man-in-the-middle (MITM) attack. The network request was upgraded to HTTPS in version `1.0.1`. There are no workarounds, but some precautions include not sending any sensitive information and carefully verifying the API response before saving it.",
    "cve_publish_date": "2024-04-04T23:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Send request over HTTPS (#4)",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "index.ts",
            "code_language": "TypeScript",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 8:  * @throws If the API returns a non-200 response",
                "// Line 9:  */",
                "// Line 10: export default async function dectalk(text: string): Promise<Buffer> {",
                "// Line 11:     // The API does not like empty prompts",
                "// Line 12:     text = text.trim();",
                "// Line 13:     if (text.length === 0) {",
                "// Line 14:         throw new TypeError('Text cannot be empty or only whitespace');",
                "// Line 15:     }",
                "// Line 16: ",
                "// Line 17:     // Format request URL",
                "// vulnerable line: 18: const url = new URL('http://tts.cyzon.us/tts');",
                "// Line 19:     url.search = new URLSearchParams({ text }).toString();",
                "// Line 20: ",
                "// Line 21:     // Send request",
                "// Line 22:     const response = await fetch(url);",
                "// Line 23: ",
                "// Line 24:     // TODO look into custom behavior for aeiou's error codes",
                "// Line 25:     // https://github.com/calzoneman/aeiou/blob/master/docs/usage-guidelines.md",
                "// Line 26:     if (!response.ok) {",
                "// Line 27:         throw new Error(`${response.status} ${response.statusText}`, { cause: response });",
                "// Line 28:     }"
            ]
        }
    ]
}