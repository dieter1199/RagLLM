{
    "cve_id": "CVE-2024-24821",
    "cve_description": "Composer is a dependency Manager for the PHP language. In affected versions several files within the local working directory are included during the invocation of Composer and in the context of the executing user. As such, under certain conditions arbitrary code execution may lead to local privilege escalation, provide lateral user movement or malicious code execution when Composer is invoked within a directory with tampered files. All Composer CLI commands are affected, including composer.phar's self-update. The following scenarios are of high risk: Composer being run with sudo, Pipelines which may execute Composer on untrusted projects, Shared environments with developers who run Composer individually on the same project. This vulnerability has been addressed in versions 2.7.0 and 2.2.23. It is advised that the patched versions are applied at the earliest convenience. Where not possible, the following should be addressed: Remove all sudo composer privileges for all users to mitigate root privilege escalation, and avoid running Composer within an untrusted directory, or if needed, verify that the contents of `vendor/composer/InstalledVersions.php` and `vendor/composer/installed.php` do not include untrusted code.  A reset can also be done on these files by the following:```sh\nrm vendor/composer/installed.php vendor/composer/InstalledVersions.php\ncomposer install --no-scripts --no-plugins\n```",
    "cve_publish_date": "2024-02-09T00:15Z",
    "cwe_id": "CWE-829",
    "cwe_name": "Inclusion of Functionality from Untrusted Control Sphere",
    "cwe_description": "The product imports, requires, or includes executable functionality (such as a library) from a source that is outside of the intended control sphere.",
    "commit_message": "Merge pull request from GHSA-7c6p-848j-wh5h\n\n* Fix usage of possibly compromised installed.php/InstalledVersions.php at runtime, refs GHSA-7c6p-848j-wh5h\n\n* Fix InstalledVersionsTest regression",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "Factory.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "8",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 344: ",
                "// Line 345:         // initialize composer",
                "// Line 346:         $composer = $fullLoad ? new Composer() : new PartialComposer();",
                "// Line 347:         $composer->setConfig($config);",
                "// Line 348: ",
                "// Line 349:         if ($fullLoad) {",
                "// Line 350:             // load auth configs into the IO instance",
                "// Line 351:             $io->loadConfiguration($config);",
                "// Line 352: ",
                "// Line 353:             // load existing Composer\\InstalledVersions instance if available and scripts/plugins are allowed, as they might need it",
                "// vulnerable line: 354: if (false === $disablePlugins && false === $disableScripts && !class_exists('Composer\\InstalledVersions', false) && file_exists($installedVersionsPath = $config->get('vendor-dir').'/composer/InstalledVersions.php')) {",
                "// vulnerable line: 355: include $installedVersionsPath;",
                "// Line 356:             }",
                "// Line 357:         }",
                "// Line 358: ",
                "// Line 359:         $httpDownloader = self::createHttpDownloader($io, $config);",
                "// Line 360:         $process = new ProcessExecutor($io);",
                "// Line 361:         $loop = new Loop($httpDownloader, $process);",
                "// Line 362:         $composer->setLoop($loop);",
                "// Line 363: ",
                "// Line 364:         // initialize event dispatcher",
                "// Line 365:         $dispatcher = new EventDispatcher($composer, $io, $process);"
            ]
        },
        {
            "filename_of_changes": "InstalledVersionsTest.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 42:         $prop->setAccessible(true);",
                "// Line 43:         $prop->setValue(null, self::$previousRegisteredLoaders);",
                "// Line 44:         InstalledVersions::reload(null); // @phpstan-ignore-line",
                "// Line 45:     }",
                "// Line 46: ",
                "// Line 47:     public function setUp(): void",
                "// Line 48:     {",
                "// Line 49:         $this->root = self::getUniqueTmpDirectory();",
                "// Line 50: ",
                "// Line 51:         $dir = $this->root;",
                "// vulnerable line: 52: InstalledVersions::reload(require __DIR__.'/Repository/Fixtures/installed.php');",
                "// Line 53:     }",
                "// Line 54: ",
                "// Line 55:     public function testGetInstalledPackages(): void",
                "// Line 56:     {",
                "// Line 57:         $names = [",
                "// Line 58:             '__root__',",
                "// Line 59:             'a/provider',",
                "// Line 60:             'a/provider2',",
                "// Line 61:             'b/replacer',",
                "// Line 62:             'c/c',",
                "// Line 215:             'dev' => true,",
                "// Line 216:         ], InstalledVersions::getRootPackage());",
                "// Line 217:     }",
                "// Line 218: ",
                "// Line 219:     /**",
                "// Line 220:      * @group legacy",
                "// Line 221:      */",
                "// Line 222:     public function testGetRawData(): void",
                "// Line 223:     {",
                "// Line 224:         $dir = $this->root;",
                "// vulnerable line: 225: $this->assertSame(require __DIR__.'/Repository/Fixtures/installed.php', InstalledVersions::getRawData());",
                "// Line 226:     }",
                "// Line 227: ",
                "// Line 228:     /**",
                "// Line 229:      * @dataProvider getReferenceProvider",
                "// Line 230:      */",
                "// Line 231:     public function testGetReference(?string $expected, string $name): void",
                "// Line 232:     {",
                "// Line 233:         $this->assertSame($expected, InstalledVersions::getReference($name));",
                "// Line 234:     }",
                "// Line 235: "
            ]
        },
        {
            "filename_of_changes": "installed_complex.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "26",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        }
    ]
}