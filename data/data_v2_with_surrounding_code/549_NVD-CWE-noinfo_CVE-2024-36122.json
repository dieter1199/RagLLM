{
    "cve_id": "CVE-2024-36122",
    "cve_description": "Discourse is an open-source discussion platform. Prior to version 3.2.3 on the `stable` branch and version 3.3.0.beta4 on the `beta` and `tests-passed` branches, moderators using the review queue to review users may see a users email address even when the Allow moderators to view email addresses setting is disabled. This issue is patched in version 3.2.3 on the `stable` branch and version 3.3.0.beta4 on the `beta` and `tests-passed` branches. As possible workarounds, either prevent moderators from accessing the review queue or disable the approve suspect users site setting and the must approve users site setting to prevent users from being added to the review queue.",
    "cve_publish_date": "2024-07-03T20:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "SECURITY: Update reviewable user serializer payload\n\nExclude email from reviewable user serializer based on user scope.",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "reviewable_user_serializer.rb",
            "code_language": "Ruby",
            "number_of_lines_added_for_mitigation": "10",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "reviewable_user_serializer_spec.rb",
            "code_language": "Ruby",
            "number_of_lines_added_for_mitigation": "27",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: # frozen_string_literal: true",
                "// Line 2: ",
                "// Line 3: RSpec.describe ReviewableUserSerializer do",
                "// Line 4:   let(:user) { Fabricate(:user) }",
                "// Line 5:   let(:admin) { Fabricate(:admin) }",
                "// Line 6: ",
                "// vulnerable line: 7: it \"includes the user fields for review\" do",
                "// Line 8:     SiteSetting.must_approve_users = true",
                "// Line 9:     Jobs::CreateUserReviewable.new.execute(user_id: user.id)",
                "// vulnerable line: 10: reviewable = Reviewable.find_by(target: user)",
                "// Line 11: ",
                "// Line 12:     json = ReviewableUserSerializer.new(reviewable, scope: Guardian.new(admin), root: nil).as_json",
                "// Line 13:     expect(json[:user_id]).to eq(reviewable.target_id)",
                "// Line 14:     expect(json[:payload][\"username\"]).to eq(user.username)",
                "// Line 15:     expect(json[:payload][\"email\"]).to eq(user.email)",
                "// Line 16:     expect(json[:payload][\"name\"]).to eq(user.name)",
                "// Line 17:     expect(json[:topic_url]).to be_blank",
                "// Line 18:   end",
                "// Line 19: end"
            ]
        }
    ]
}