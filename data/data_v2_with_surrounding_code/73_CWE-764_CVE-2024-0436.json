{
    "cve_id": "CVE-2024-0436",
    "cve_description": "Theoretically, it would be possible for an attacker to brute-force the password for an instance in single-user password protection mode via a timing attack given the linear nature of the `!==` used for comparison.\n\nThe risk is minified by the additional overhead of the request, which varies in a non-constant nature making the attack less reliable to execute ",
    "cve_publish_date": "2024-02-26T16:27Z",
    "cwe_id": "CWE-764",
    "cwe_name": "Multiple Locks of a Critical Resource",
    "cwe_description": "The product locks a critical resource more times than intended, leading to an unexpected state in the system.",
    "commit_message": "Change pwd check to O(1) check to prevent timing attacks - single user mode (#575)\n\nChange pwd check to O(1) check to prevent timing attacks",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "index.jsx",
            "code_language": "JavaScript",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 30:         <img src={_initLogo} className=\"mb-20 w-80 opacity-80\" alt=\"logo\" />",
                "// Line 31:         {mode === \"single\" ? <SingleUserAuth /> : <MultiUserAuth />}",
                "// Line 32:       </div>",
                "// Line 33:     </div>",
                "// Line 34:   );",
                "// Line 35: }",
                "// Line 36: ",
                "// Line 37: export function usePasswordModal() {",
                "// Line 38:   const [auth, setAuth] = useState({",
                "// Line 39:     loading: true,",
                "// vulnerable line: 40: required: false,",
                "// Line 41:     mode: \"single\",",
                "// Line 42:   });",
                "// Line 43: ",
                "// Line 44:   useEffect(() => {",
                "// Line 45:     async function checkAuthReq() {",
                "// Line 46:       if (!window) return;",
                "// Line 47: ",
                "// Line 48:       // If the last validity check is still valid",
                "// Line 49:       // we can skip the loading.",
                "// Line 50:       if (!System.needsAuthCheck()) {"
            ]
        },
        {
            "filename_of_changes": "validatedRequest.js",
            "code_language": "JavaScript",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 30:   const token = auth ? auth.split(\" \")[1] : null;",
                "// Line 31: ",
                "// Line 32:   if (!token) {",
                "// Line 33:     response.status(401).json({",
                "// Line 34:       error: \"No auth token found.\",",
                "// Line 35:     });",
                "// Line 36:     return;",
                "// Line 37:   }",
                "// Line 38: ",
                "// Line 39:   const { p } = decodeJWT(token);",
                "// vulnerable line: 40: if (p !== process.env.AUTH_TOKEN) {",
                "// Line 41:     response.status(401).json({",
                "// Line 42:       error: \"Invalid auth token found.\",",
                "// Line 43:     });",
                "// Line 44:     return;",
                "// Line 45:   }",
                "// Line 46: ",
                "// Line 47:   next();",
                "// Line 48: }",
                "// Line 49: ",
                "// Line 50: async function validateMultiUserRequest(request, response, next) {"
            ]
        }
    ]
}