{
    "cve_id": "CVE-2024-25109",
    "cve_description": "ManageWiki is a MediaWiki extension allowing users to manage wikis. Special:ManageWiki does not escape escape interface messages on the `columns` and `help` keys on the form descriptor. An attacker may exploit this and would have a cross site scripting attack vector. Exploiting this on-wiki requires the `(editinterface)` right. Users should apply the code changes in commits `886cc6b94`, `2ef0f50880`, and `6942e8b2c` to resolve this vulnerability. There are no known workarounds for this vulnerability.",
    "cve_publish_date": "2024-02-09T23:15Z",
    "cwe_id": "CWE-79",
    "cwe_name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "cwe_description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
    "commit_message": "Merge pull request from GHSA-4jr2-jhfm-2r84\n\n* Fix numerous XSS vulnerabilities\n\nSee security advisory\n\n* Fix XSS on the namespace subpage",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "ManageWikiFormFactoryBuilder.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "6",
            "number_of_lines_deleted_vulnerable_to_cve": "6",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 269:         foreach ( $config->get( 'ManageWikiExtensions' ) as $name => $ext ) {",
                "// Line 270:             $filteredList = array_filter( $manageWikiSettings, static function ( $value ) use ( $name ) {",
                "// Line 271:                 return $value['from'] == $name;",
                "// Line 272:             } );",
                "// Line 273: ",
                "// Line 274:             $hasSettings = count( array_diff_assoc( $filteredList, array_keys( $manageWikiSettings ) ) ) > 0;",
                "// Line 275: ",
                "// Line 276:             $mwRequirements = $ext['requires'] ? ManageWikiRequirements::process( $ext['requires'], $extList, false, $wiki ) : true;",
                "// Line 277: ",
                "// Line 278:             $help = [];",
                "// vulnerable line: 279: $conflictLabel = wfMessage( 'managewiki-conflicts' )->text();",
                "// vulnerable line: 280: $requiresLabel = wfMessage( 'managewiki-requires' )->text();",
                "// Line 281: ",
                "// Line 282:             if ( $ext['conflicts'] ) {",
                "// Line 283:                 $help[] = \"{$conflictLabel} {$ext['conflicts']}<br/>\";",
                "// Line 284:             }",
                "// Line 285: ",
                "// Line 286:             if ( $ext['requires'] ) {",
                "// Line 287:                 $requires = [];",
                "// Line 288:                 foreach ( $ext['requires'] as $require => $data ) {",
                "// Line 289:                     if ( is_array( $data ) ) {",
                "// Line 290:                         foreach ( $data as $index => $element ) {",
                "// Line 373:                 $value = $setList[$name] ?? null;",
                "// Line 374:                 if ( isset( $set['associativeKey'] ) ) {",
                "// Line 375:                     $value = $setList[$name][ $set['associativeKey'] ] ?? $set['overridedefault'][ $set['associativeKey'] ];",
                "// Line 376:                 }",
                "// Line 377: ",
                "// Line 378:                 $configs = ManageWikiTypes::process( $config, $disabled, $groupList, 'settings', $set, $value, $name );",
                "// Line 379: ",
                "// Line 380:                 $help = ( $msgHelp->exists() ) ? $msgHelp->escaped() : $set['help'];",
                "// Line 381:                 if ( $set['requires'] ) {",
                "// Line 382:                     $requires = [];",
                "// vulnerable line: 383: $requiresLabel = wfMessage( 'managewiki-requires' )->text();",
                "// Line 384: ",
                "// Line 385:                     foreach ( $set['requires'] as $require => $data ) {",
                "// Line 386:                         if ( is_array( $data ) ) {",
                "// Line 387:                             foreach ( $data as $index => $element ) {",
                "// Line 388:                                 if ( is_array( $element ) ) {",
                "// Line 389:                                     $data[$index] = '( ' . implode( ' OR ', $element ) . ' )';",
                "// Line 390:                                 }",
                "// Line 391:                             }",
                "// Line 392:                         }",
                "// Line 393: ",
                "// Line 518:                 $msgName = wfMessage( \"managewiki-namespaces-{$key}-name\" );",
                "// Line 519:                 $msgHelp = wfMessage( \"managewiki-namespaces-{$key}-help\" );",
                "// Line 520: ",
                "// Line 521:                 if ( $add && ( $a['main'] && $name == 'namespace' || $a['talk'] && $name == 'namespacetalk' ) && !in_array( $id, (array)( $a['excluded'] ?? [] ) ) && in_array( $id, (array)( $a['only'] ?? [ $id ] ) ) ) {",
                "// Line 522:                     if ( is_array( $a['overridedefault'] ) ) {",
                "// Line 523:                         $a['overridedefault'] = $a['overridedefault'][$id] ?? $a['overridedefault']['default'];",
                "// Line 524:                     }",
                "// Line 525: ",
                "// Line 526:                     $configs = ManageWikiTypes::process( $config, $disabled, false, 'namespaces', $a, $namespaceData['additional'][$key] ?? null, false, $a['overridedefault'], $a['type'] );",
                "// Line 527: ",
                "// vulnerable line: 528: $help = ( $msgHelp->exists() ) ? $msgHelp->text() : $a['help'];",
                "// Line 529:                     if ( $a['requires'] ) {",
                "// Line 530:                         $requires = [];",
                "// vulnerable line: 531: $requiresLabel = wfMessage( 'managewiki-requires' )->text();",
                "// Line 532: ",
                "// Line 533:                         foreach ( $a['requires'] as $require => $data ) {",
                "// Line 534:                             if ( is_array( $data ) ) {",
                "// Line 535:                                 foreach ( $data as $index => $element ) {",
                "// Line 536:                                     if ( is_array( $element ) ) {",
                "// Line 537:                                         $data[$index] = '( ' . implode( ' OR ', $element ) . ' )';",
                "// Line 538:                                     }",
                "// Line 539:                                 }",
                "// Line 540:                             }",
                "// Line 541: ",
                "// Line 653:                 'section' => 'autopromote'",
                "// Line 654:             ]",
                "// Line 655:         ];",
                "// Line 656: ",
                "// Line 657:         foreach ( $groupData['allPermissions'] as $perm ) {",
                "// Line 658:             $assigned = in_array( $perm, $groupData['assignedPermissions'] );",
                "// Line 659: ",
                "// Line 660:             $formDescriptor[\"right-{$perm}\"] = [",
                "// Line 661:                 'type' => 'check',",
                "// Line 662:                 'label' => $perm,",
                "// vulnerable line: 663: 'help' => User::getRightDescription( $perm ),",
                "// Line 664:                 'section' => ( $assigned ) ? 'assigned' : 'unassigned',",
                "// Line 665:                 'default' => $assigned,",
                "// Line 666:                 'disabled' => !$ceMW",
                "// Line 667:             ];",
                "// Line 668:         }",
                "// Line 669: ",
                "// Line 670:         $rowsBuilt = [];",
                "// Line 671: ",
                "// Line 672:         foreach ( $groupData['allGroups'] as $group ) {",
                "// Line 673:             $rowsBuilt[UserGroupMembership::getGroupName( $group )] = $group;"
            ]
        }
    ]
}