{
    "cve_id": "CVE-2024-38519",
    "cve_description": "`yt-dlp` and `youtube-dl` are command-line audio/video downloaders. Prior to the fixed versions,Â `yt-dlp` and `youtube-dl` do not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` and `youtube-dl` also read config from the working directory (and on Windows executables will be executed from the `yt-dlp` or `youtube-dl` directory), this could lead to arbitrary code being executed.\n\n\n\n\n`yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions. `youtube-dl` fixes this issue in commit `d42a222` on the `master` branch and in nightly builds tagged 2024-07-03 or later. This might mean some very uncommon extensions might not get downloaded, however it will also limit the possible exploitation surface. In addition to upgrading, have `.%(ext)s` at the end of the output template and make sure the user trusts the websites that they are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like one's user directory, `system32`, or other binaries locations. For users who are not able to upgrade, keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`); make sure the extension of the media to download is a common video/audio/sub/... one; try to avoid the generic extractor; and/or use `--ignore-config --config-location ...` to not load config from common locations.",
    "cve_publish_date": "2024-07-02T14:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "[core] Disallow unsafe extensions (CVE-2024-38519)\n\nRef: https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j\n\nAuthored by: Grub4K",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "YoutubeDL.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "20",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 152:     traverse_obj,",
                "// Line 153:     try_call,",
                "// Line 154:     try_get,",
                "// Line 155:     url_basename,",
                "// Line 156:     variadic,",
                "// Line 157:     version_tuple,",
                "// Line 158:     windows_enable_vt_mode,",
                "// Line 159:     write_json_file,",
                "// Line 160:     write_string,",
                "// Line 161: )",
                "// vulnerable line: 162: from .utils._utils import _YDLLogger",
                "// Line 163: from .utils.networking import (",
                "// Line 164:     HTTPHeaderDict,",
                "// Line 165:     clean_headers,",
                "// Line 166:     clean_proxies,",
                "// Line 167:     std_headers,",
                "// Line 168: )",
                "// Line 169: from .version import CHANNEL, ORIGIN, RELEASE_GIT_HEAD, VARIANT, __version__",
                "// Line 170: ",
                "// Line 171: if compat_os_name == 'nt':",
                "// Line 172:     import ctypes",
                "// Line 447:                        X-Forwarded-For HTTP header",
                "// Line 448:     geo_bypass_ip_block:",
                "// Line 449:                        IP range in CIDR notation that will be used similarly to",
                "// Line 450:                        geo_bypass_country",
                "// Line 451:     external_downloader: A dictionary of protocol keys and the executable of the",
                "// Line 452:                        external downloader to use for it. The allowed protocols",
                "// Line 453:                        are default|http|ftp|m3u8|dash|rtsp|rtmp|mms.",
                "// Line 454:                        Set the value to 'native' to use the native downloader",
                "// Line 455:     compat_opts:       Compatibility options. See \"Differences in default behavior\".",
                "// Line 456:                        The following options do not work when used through the API:",
                "// vulnerable line: 457: filename, abort-on-error, multistreams, no-live-chat, format-sort",
                "// vulnerable line: 458: no-clean-infojson, no-playlist-metafiles, no-keep-subs, no-attach-info-json.",
                "// Line 459:                        Refer __init__.py for their implementation",
                "// Line 460:     progress_template: Dictionary of templates for progress outputs.",
                "// Line 461:                        Allowed keys are 'download', 'postprocess',",
                "// Line 462:                        'download-title' (console title) and 'postprocess-title'.",
                "// Line 463:                        The template is mapped on a dictionary with keys 'progress' and 'info'",
                "// Line 464:     retry_sleep_functions: Dictionary of functions that takes the number of attempts",
                "// Line 465:                        as argument and returns the time to sleep in seconds.",
                "// Line 466:                        Allowed keys are 'http', 'fragment', 'file_access'",
                "// Line 467:     download_ranges:   A callback function that gets called for every video with",
                "// Line 468:                        the signature (info_dict, ydl) -> Iterable[Section]."
            ]
        },
        {
            "filename_of_changes": "__init__.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "8",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "options.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 474:         '--compat-options',",
                "// Line 475:         metavar='OPTS', dest='compat_opts', default=set(), type='str',",
                "// Line 476:         action='callback', callback=_set_from_options_callback,",
                "// Line 477:         callback_kwargs={",
                "// Line 478:             'allowed_values': {",
                "// Line 479:                 'filename', 'filename-sanitization', 'format-sort', 'abort-on-error', 'format-spec', 'no-playlist-metafiles',",
                "// Line 480:                 'multistreams', 'no-live-chat', 'playlist-index', 'list-formats', 'no-direct-merge', 'playlist-match-filter',",
                "// Line 481:                 'no-attach-info-json', 'embed-thumbnail-atomicparsley', 'no-external-downloader-progress',",
                "// Line 482:                 'embed-metadata', 'seperate-video-versions', 'no-clean-infojson', 'no-keep-subs', 'no-certifi',",
                "// Line 483:                 'no-youtube-channel-redirect', 'no-youtube-unavailable-videos', 'no-youtube-prefer-utc-upload-date',",
                "// vulnerable line: 484: 'prefer-legacy-http-handler', 'manifest-filesize-approx',",
                "// Line 485:             }, 'aliases': {",
                "// Line 486:                 'youtube-dl': ['all', '-multistreams', '-playlist-match-filter', '-manifest-filesize-approx'],",
                "// Line 487:                 'youtube-dlc': ['all', '-no-youtube-channel-redirect', '-no-live-chat', '-playlist-match-filter', '-manifest-filesize-approx'],",
                "// Line 488:                 '2021': ['2022', 'no-certifi', 'filename-sanitization'],",
                "// Line 489:                 '2022': ['2023', 'no-external-downloader-progress', 'playlist-match-filter', 'prefer-legacy-http-handler', 'manifest-filesize-approx'],",
                "// Line 490:                 '2023': [],",
                "// Line 491:             },",
                "// Line 492:         }, help=(",
                "// Line 493:             'Options that can help keep compatibility with youtube-dl or youtube-dlc '",
                "// Line 494:             'configurations by reverting some of the changes made in yt-dlp. '"
            ]
        }
    ]
}