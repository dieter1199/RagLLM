{
    "cve_id": "CVE-2024-37310",
    "cve_description": "EVerest is an EV charging software stack. An integer overflow in the \"v2g_incoming_v2gtp\" function in the v2g_server.cpp implementation can allow a remote attacker to overflow the process' heap. This vulnerability is fixed in 2024.3.1 and 2024.6.0.",
    "cve_publish_date": "2024-07-10T20:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Fix EvseV2G: Prevent interger overflow after reading v2gtp message length (#706)\n\nSigned-off-by: Sebastian Lukas <sebastian.lukas@pionix.de>",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "v2g_server.cpp",
            "code_language": "C++",
            "number_of_lines_added_for_mitigation": "8",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 157:         return -1;",
                "// Line 158:     }",
                "// Line 159: ",
                "// Line 160:     rv = read_v2gtpHeader(conn->buffer, &conn->payload_len);",
                "// Line 161:     if (rv == -1) {",
                "// Line 162:         dlog(DLOG_LEVEL_ERROR, \"Invalid v2gtp header\");",
                "// Line 163:         return -1;",
                "// Line 164:     }",
                "// Line 165: ",
                "// Line 166:     if (conn->payload_len + V2GTP_HEADER_LENGTH > DEFAULT_BUFFER_SIZE) {",
                "// vulnerable line: 167: dlog(DLOG_LEVEL_ERROR, \"payload too long: have %d, would need %d\", DEFAULT_BUFFER_SIZE,",
                "// Line 168:              conn->payload_len + V2GTP_HEADER_LENGTH);",
                "// Line 169: ",
                "// Line 170:         /* we have no way to flush/discard remaining unread data from the socket without reading it in chunks,",
                "// Line 171:          * but this opens the chance to bind us in a \"endless\" read loop; so to protect us, simply close the connection",
                "// Line 172:          */",
                "// Line 173: ",
                "// Line 174:         return -1;",
                "// Line 175:     }",
                "// Line 176:     /* read request */",
                "// Line 177:     rv = connection_read(conn, &conn->buffer[V2GTP_HEADER_LENGTH], conn->payload_len);"
            ]
        }
    ]
}