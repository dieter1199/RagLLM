{
    "cve_id": "CVE-2024-31450",
    "cve_description": "Owncast is an open source, self-hosted, decentralized, single user live video streaming and chat server. The Owncast application exposes an administrator API at the URL /api/admin. The emoji/delete endpoint of said API allows administrators to delete custom emojis, which are saved on disk. The parameter name is taken from the JSON request and directly appended to the filepath that points to the emoji to delete. By using path traversal sequences (../), attackers with administrative privileges can exploit this endpoint to delete arbitrary files on the system, outside of the emoji directory. This vulnerability is fixed in 0.1.3.",
    "cve_publish_date": "2024-04-19T19:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "fix(api): protect emoji delete api from path traversal exploit",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "emoji.go",
            "code_language": "Go",
            "number_of_lines_added_for_mitigation": "5",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 69:         Name string `json:\"name\"`",
                "// Line 70:     }",
                "// Line 71: ",
                "// Line 72:     emoji := new(deleteEmoji)",
                "// Line 73: ",
                "// Line 74:     if err := json.NewDecoder(r.Body).Decode(emoji); err != nil {",
                "// Line 75:         controllers.WriteSimpleResponse(w, false, err.Error())",
                "// Line 76:         return",
                "// Line 77:     }",
                "// Line 78: ",
                "// vulnerable line: 79: // var emojiFileName = filepath.Base(emoji.Name)",
                "// Line 80:     targetPath := filepath.Join(config.CustomEmojiPath, emoji.Name)",
                "// Line 81: ",
                "// Line 82:     if err := os.Remove(targetPath); err != nil {",
                "// Line 83:         if os.IsNotExist(err) {",
                "// Line 84:             controllers.WriteSimpleResponse(w, false, fmt.Sprintf(\"Emoji %q doesn't exist\", emoji.Name))",
                "// Line 85:         } else {",
                "// Line 86:             controllers.WriteSimpleResponse(w, false, err.Error())",
                "// Line 87:         }",
                "// Line 88:         return",
                "// Line 89:     }"
            ]
        }
    ]
}