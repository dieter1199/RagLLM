{
    "cve_id": "CVE-2023-51447",
    "cve_description": "Decidim is a participatory democracy framework. Starting in version 0.27.0 and prior to versions 0.27.5 and 0.28.0, the dynamic file upload feature is subject to potential cross-site scripting attacks in case the attacker manages to modify the file names of the records being uploaded to the server. This appears in sections where the user controls the file upload dialogs themselves and has the technical knowledge to change the file names through the dynamic upload endpoint. Therefore I believe it would require the attacker to control the whole session of the particular user but in any case, this needs to be fixed. Successful exploit of this vulnerability would require the user to have successfully uploaded a file blob to the server with a malicious file name and then have the possibility to direct the other user to the edit page of the record where the attachment is attached. The users are able to craft the direct upload requests themselves controlling the file name that gets stored to the database. The attacker is able to change the filename e.g. to `<svg onload=alert('XSS')>` if they know how to craft these requests themselves. And then enter the returned blob ID to the form inputs manually by modifying the edit page source. Versions 0.27.5 and 0.28.0 contain a patch for this issue. As a workaround, disable dynamic uploads for the instance, e.g. from proposals.",
    "cve_publish_date": "2024-02-20T18:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Fix issues with the file uploader input display (#11612)",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "upload_modal_cell.rb",
            "code_language": "Ruby",
            "number_of_lines_added_for_mitigation": "4",
            "number_of_lines_deleted_vulnerable_to_cve": "4",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 152:       rand(1..10_000)",
                "// Line 153:     end",
                "// Line 154: ",
                "// Line 155:     def title_for(attachment)",
                "// Line 156:       return unless has_title?",
                "// Line 157: ",
                "// Line 158:       decidim_html_escape(decidim_sanitize(translated_attribute(attachment.title)))",
                "// Line 159:     end",
                "// Line 160: ",
                "// Line 161:     def truncated_file_name_for(attachment, max_length = 31)",
                "// vulnerable line: 162: filename = file_name_for(attachment)",
                "// vulnerable line: 163: return filename if filename.length <= max_length",
                "// Line 164: ",
                "// Line 165:       name = File.basename(filename, File.extname(filename))",
                "// vulnerable line: 166: name.truncate(max_length, omission: \"...#{name.last((max_length / 2) - 3)}#{File.extname(filename)}\")",
                "// Line 167:     end",
                "// Line 168: ",
                "// Line 169:     def file_name_for(attachment)",
                "// vulnerable line: 170: determine_filename(attachment)",
                "// Line 171:     end",
                "// Line 172: ",
                "// Line 173:     def determine_filename(attachment)",
                "// Line 174:       return attachment.filename.to_s if attachment.is_a? ActiveStorage::Blob",
                "// Line 175:       return blob(attachment).filename.to_s if blob(attachment).present?",
                "// Line 176:       return attachment.original_filename.to_s.presence || attachhment.path.split(\"/\").last if attachment.is_a? ActionDispatch::Http::UploadedFile",
                "// Line 177: ",
                "// Line 178:       attachment.url.split(\"/\").last",
                "// Line 179:     end",
                "// Line 180: "
            ]
        },
        {
            "filename_of_changes": "upload_modal_cell_spec.rb",
            "code_language": "Ruby",
            "number_of_lines_added_for_mitigation": "16",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        }
    ]
}