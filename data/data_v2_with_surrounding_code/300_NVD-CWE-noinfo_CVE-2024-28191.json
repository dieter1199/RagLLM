{
    "cve_id": "CVE-2024-28191",
    "cve_description": "Contao is an open source content management system. Starting in version 4.0.0 and prior to version 4.13.40 and 5.3.4, it is possible to inject insert tags in frontend forms if the output is structured in a very specific way. Contao versions 4.13.40 and 5.3.4 have a patch for this issue. As a workaround, do not output user data from frontend forms next to each other, always separate them by at least one character.",
    "cve_publish_date": "2024-04-09T14:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Merge pull request from GHSA-747v-52c4-8vj8\n\n# Conflicts:\n#    core-bundle/src/String/SimpleTokenParser.php\n#    core-bundle/tests/Contao/InputTest.php\n\nCo-authored-by: Leo Feyer <1192057+leofeyer@users.noreply.github.com>",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "Input.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "4",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 959:         if (\\is_array($varValue))",
                "// Line 960:         {",
                "// Line 961:             foreach ($varValue as $k=>$v)",
                "// Line 962:             {",
                "// Line 963:                 $varValue[$k] = static::encodeInsertTags($v);",
                "// Line 964:             }",
                "// Line 965: ",
                "// Line 966:             return $varValue;",
                "// Line 967:         }",
                "// Line 968: ",
                "// vulnerable line: 969: return str_replace(array('{{', '}}'), array('&#123;&#123;', '&#125;&#125;'), (string) $varValue);",
                "// Line 970:     }",
                "// Line 971: ",
                "// Line 972:     /**",
                "// Line 973:      * Fallback to the session form data if there is no post data",
                "// Line 974:      *",
                "// Line 975:      * @param string $strKey The variable name",
                "// Line 976:      *",
                "// Line 977:      * @return mixed The variable value",
                "// Line 978:      */",
                "// Line 979:     public static function findPost($strKey)"
            ]
        },
        {
            "filename_of_changes": "SimpleTokenParser.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 123:             '/##([^#=!<>\\s][^=!<>\\s]*?)##/',",
                "// Line 124:             function (array $matches) use ($data) {",
                "// Line 125:                 if (!\u0007rray_key_exists($matches[1], $data)) {",
                "// Line 126:                     if (null !== $this->logger) {",
                "// Line 127:                         $this->logger->log(LogLevel::INFO, sprintf('Tried to parse unknown simple token \"%s\".', $matches[1]));",
                "// Line 128:                     }",
                "// Line 129: ",
                "// Line 130:                     return '##'.$matches[1].'##';",
                "// Line 131:                 }",
                "// Line 132: ",
                "// vulnerable line: 133: return $data[$matches[1]];",
                "// Line 134:             },",
                "// Line 135:             $subject",
                "// Line 136:         );",
                "// Line 137:     }",
                "// Line 138: ",
                "// Line 139:     private function canUseExpressionLanguage(array $data): bool",
                "// Line 140:     {",
                "// Line 141:         foreach (array_keys($data) as $token) {",
                "// Line 142:             if (!preg_match('/^[a-zA-Z_-ÿ][a-zA-Z0-9_-ÿ]*$/', (string) $token)) {",
                "// Line 143:                 trigger_deprecation('contao/core-bundle', '4.10', 'Using tokens that are not valid PHP variables has been deprecated and will no longer work in Contao 5.0. Falling back to legacy token parsing.');"
            ]
        }
    ]
}