{
    "cve_id": "CVE-2024-38516",
    "cve_description": "ai-client-html is an Aimeos e-commerce HTML client component. Debug information revealed sensitive information from environment variables in error log. This issue has been patched in versions 2024.04.7, 2023.10.15, 2022.10.13 and 2021.10.22.",
    "cve_publish_date": "2024-06-25T21:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Don't log security relevant data to prevent revealing information",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "Standard.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "5",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 13: ",
                "// Line 14: /**",
                "// Line 15:  * Default implementation of confirm checkout HTML client.",
                "// Line 16:  *",
                "// Line 17:  * @package Client",
                "// Line 18:  * @subpackage Html",
                "// Line 19:  */",
                "// Line 20: class Standard",
                "// Line 21:     extends \\Aimeos\\Client\\Html\\Common\\Client\\Factory\\Base",
                "// Line 22:     implements \\Aimeos\\Client\\Html\\Common\\Client\\Factory\\Iface",
                "// vulnerable line: 23: {",
                "// Line 24:     /** client/html/checkout/confirm/name",
                "// Line 25:      * Class name of the used checkout confirm client implementation",
                "// Line 26:      *",
                "// Line 27:      * Each default HTML client can be replace by an alternative imlementation.",
                "// Line 28:      * To use this implementation, you have to set the last part of the class",
                "// Line 29:      * name as configuration value so the client factory knows which class it",
                "// Line 30:      * has to instantiate.",
                "// Line 31:      *",
                "// Line 32:      * For example, if the name of the default class is",
                "// Line 33:      *",
                "// Line 55:      */",
                "// Line 56: ",
                "// Line 57: ",
                "// Line 58:     /**",
                "// Line 59:      * Processes the input, e.g. store given values.",
                "// Line 60:      *",
                "// Line 61:      * A view must be available and this method doesn't generate any output",
                "// Line 62:      * besides setting view variables if necessary.",
                "// Line 63:      */",
                "// Line 64:     public function init()",
                "// vulnerable line: 65: {",
                "// Line 66:         $view = $this->view();",
                "// Line 67:         $context = $this->context();",
                "// Line 68: ",
                "// Line 69:         $config = $context->config();",
                "// Line 70:         $session = $context->session();",
                "// Line 71: ",
                "// Line 72:         if( ( $orderid = $session->get( 'aimeos/orderid' ) ) === null ) {",
                "// Line 73:             throw new \\Aimeos\\Client\\Html\\Exception( 'No order ID available' );",
                "// Line 74:         }",
                "// Line 75: ",
                "// Line 76:         $ref = $config->get( 'mshop/order/manager/subdomains', [] );",
                "// Line 77:         $ref = $config->get( 'client/html/checkout/confirm/domains', $ref );",
                "// Line 78:         $orderCntl = \\Aimeos\\Controller\\Frontend::create( $context, 'order' )->uses( $ref );",
                "// Line 79: ",
                "// Line 80:         if( ( $code = $view->param( 'code' ) ) !== null )",
                "// vulnerable line: 81: {",
                "// Line 82:             $serviceCntl = \\Aimeos\\Controller\\Frontend::create( $context, 'service' );",
                "// Line 83:             $orderItem = $serviceCntl->updateSync( $view->request(), $code, $orderid );",
                "// Line 84:         }",
                "// Line 85:         else",
                "// vulnerable line: 86: {",
                "// Line 87:             $orderItem = $orderCntl->get( $orderid, false );",
                "// Line 88:         }",
                "// Line 89: ",
                "// Line 90:         // update stock, coupons, etc.",
                "// Line 91:         $orderCntl->update( $orderItem );",
                "// Line 92: ",
                "// Line 93:         parent::init();",
                "// Line 94: ",
                "// Line 95:         if( $orderItem->getStatusPayment() > \\Aimeos\\MShop\\Order\\Item\\Base::PAY_REFUSED )",
                "// vulnerable line: 96: {",
                "// Line 97:             \\Aimeos\\Controller\\Frontend::create( $context, 'basket' )->clear();",
                "// Line 98:             $session->remove( array_keys( $session->get( 'aimeos/basket/cache', [] ) ) );",
                "// Line 99:         }",
                "// Line 100: ",
                "// Line 101:         $orderCntl->save( $orderItem );",
                "// Line 102:     }",
                "// Line 103: ",
                "// Line 104: ",
                "// Line 105:     /**",
                "// Line 106:      * Sets the necessary parameter values in the view.",
                "// Line 107:      *",
                "// Line 108:      * @param \\Aimeos\\Base\\View\\Iface $view The view object which generates the HTML output",
                "// Line 109:      * @param array &$tags Result array for the list of tags that are associated to the output",
                "// Line 110:      * @param string|null &$expire Result variable for the expiration date of the output (null for no expiry)",
                "// Line 111:      * @return \\Aimeos\\Base\\View\\Iface Modified view object",
                "// Line 112:      */",
                "// Line 113:     public function data( \\Aimeos\\Base\\View\\Iface $view, array &$tags = [], string &$expire = null ) : \\Aimeos\\Base\\View\\Iface",
                "// vulnerable line: 114: {",
                "// Line 115:         $context = $this->context();",
                "// Line 116:         $config = $context->config();",
                "// Line 117: ",
                "// vulnerable line: 118: if( ( $id = $context->session()->get( 'aimeos/orderid' ) ) === null )",
                "// vulnerable line: 119: {",
                "// vulnerable line: 120: $context->logger()->log( 'Lost session at confirmation page' . PHP_EOL",
                "// vulnerable line: 121: . '$_COOKIE: ' . print_r( $_COOKIE, true ) . PHP_EOL",
                "// vulnerable line: 122: . '$_SERVER: ' . print_r( $_SERVER, true ) );",
                "// Line 123:             throw new \\Aimeos\\Client\\Html\\Exception( $context->translate( 'client', 'No order ID available in session' ) );",
                "// Line 124:         }",
                "// Line 125: ",
                "// Line 126:         /** client/html/checkout/confirm/domains",
                "// Line 127:          * List of domains to fetch items related to the order",
                "// Line 128:          *",
                "// Line 129:          * To adapt the order data loaded for displaying at the checkout confirmation",
                "// Line 130:          * page, add or remove the names of the domains using this setting. By default,",
                "// Line 131:          * all order sub-domains are included (order/address, order/coupon, order/product",
                "// Line 132:          * and order/service) and you can remove unused domains or add additional ones"
            ]
        }
    ]
}