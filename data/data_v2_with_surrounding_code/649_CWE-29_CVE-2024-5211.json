{
    "cve_id": "CVE-2024-5211",
    "cve_description": "A path traversal vulnerability in mintplex-labs/anything-llm allowed a manager to bypass the `normalizePath()` function, intended to defend against path traversal attacks. This vulnerability enables the manager to read, delete, or overwrite the 'anythingllm.db' database file and other files stored in the 'storage' directory, such as internal communication keys and .env secrets. Exploitation of this vulnerability could lead to application compromise, denial of service (DoS) attacks, and unauthorized admin account takeover. The issue stems from improper validation of user-supplied input in the process of setting a custom logo for the app, which can be manipulated to achieve arbitrary file read, deletion, or overwrite, and to execute a DoS attack by deleting critical files required for the application's operation.",
    "cve_publish_date": "2024-06-12T12:15Z",
    "cwe_id": "CWE-29",
    "cwe_name": "Path Traversal: '\\..\\filename'",
    "cwe_description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '\\..\\filename' (leading backslash dot dot) sequences that can resolve to a location that is outside of that directory.",
    "commit_message": "patch path normalization",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "index.js",
            "code_language": "JavaScript",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 115:  * @returns {boolean} - Returns true if the inner path is within the outer path, false otherwise.",
                "// Line 116:  */",
                "// Line 117: function isWithin(outer, inner) {",
                "// Line 118:   if (outer === inner) return false;",
                "// Line 119:   const rel = path.relative(outer, inner);",
                "// Line 120:   return !rel.startsWith(\"../\") && rel !== \"..\";",
                "// Line 121: }",
                "// Line 122: ",
                "// Line 123: function normalizePath(filepath = \"\") {",
                "// Line 124:   const result = path",
                "// vulnerable line: 125: .normalize(filepath.trim())",
                "// Line 126:     .replace(/^(\\.\\.(\\/|\\|$))+/, \"\")",
                "// Line 127:     .trim();",
                "// Line 128:   if ([\"..\", \".\", \"/\"].includes(result)) throw new Error(\"Invalid path.\");",
                "// Line 129:   return result;",
                "// Line 130: }",
                "// Line 131: ",
                "// Line 132: module.exports = {",
                "// Line 133:   trashFile,",
                "// Line 134:   isTextType,",
                "// Line 135:   createdDate,"
            ]
        }
    ]
}