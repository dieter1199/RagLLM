{
    "cve_id": "CVE-2024-1729",
    "cve_description": "A timing attack vulnerability exists in the gradio-app/gradio repository, specifically within the login function in routes.py. The vulnerability arises from the use of a direct comparison operation (`app.auth[username] == password`) to validate user credentials, which can be exploited to guess passwords based on response times. Successful exploitation of this vulnerability could allow an attacker to bypass authentication mechanisms and gain unauthorized access.",
    "cve_publish_date": "2024-03-29T05:15Z",
    "cwe_id": "CWE-367",
    "cwe_name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
    "cwe_description": "The product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state.",
    "commit_message": "Prevent timing attacks to guess Gradio passwords (#7440)\n\n* secure timing\r\n\r\n* add changeset\r\n\r\n* format\r\n\r\n* add changeset\r\n\r\n---------\r\n\r\nCo-authored-by: gradio-pr-bot <gradio-pr-bot@users.noreply.github.com>",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "route_utils.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "6",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 562:     for file, dest in zip(files, destinations):",
                "// Line 563:         shutil.move(file, dest)",
                "// Line 564: ",
                "// Line 565: ",
                "// Line 566: def update_root_in_config(config: dict, root: str) -> dict:",
                "// Line 567:     \"\"\"",
                "// Line 568:     Updates the root \"key\" in the config dictionary to the new root url. If the",
                "// Line 569:     root url has changed, all of the urls in the config that correspond to component",
                "// Line 570:     file urls are updated to use the new root url.",
                "// Line 571:     \"\"\"",
                "// vulnerable line: 572: previous_root = config.get(\"root\", None)",
                "// Line 573:     if previous_root is None or previous_root != root:",
                "// Line 574:         config[\"root\"] = root",
                "// Line 575:         config = processing_utils.add_root_url(config, root, previous_root)",
                "// Line 576:     return config"
            ]
        },
        {
            "filename_of_changes": "routes.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 268: ",
                "// Line 269:         @app.post(\"/login\")",
                "// Line 270:         @app.post(\"/login/\")",
                "// Line 271:         def login(form_data: OAuth2PasswordRequestForm = Depends()):",
                "// Line 272:             username, password = form_data.username.strip(), form_data.password",
                "// Line 273:             if app.auth is None:",
                "// Line 274:                 return RedirectResponse(url=\"/\", status_code=status.HTTP_302_FOUND)",
                "// Line 275:             if (",
                "// Line 276:                 not callable(app.auth)",
                "// Line 277:                 and username in app.auth",
                "// vulnerable line: 278: and app.auth[username] == password",
                "// Line 279:             ) or (callable(app.auth) and app.auth.__call__(username, password)):",
                "// Line 280:                 token = secrets.token_urlsafe(16)",
                "// Line 281:                 app.tokens[token] = username",
                "// Line 282:                 response = JSONResponse(content={\"success\": True})",
                "// Line 283:                 response.set_cookie(",
                "// Line 284:                     key=f\"access-token-{app.cookie_id}\",",
                "// Line 285:                     value=token,",
                "// Line 286:                     httponly=True,",
                "// Line 287:                     samesite=\"none\",",
                "// Line 288:                     secure=True,"
            ]
        },
        {
            "filename_of_changes": "test_routes.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "13",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 18: from gradio import (",
                "// Line 19:     Blocks,",
                "// Line 20:     Button,",
                "// Line 21:     Interface,",
                "// Line 22:     Number,",
                "// Line 23:     Textbox,",
                "// Line 24:     close_all,",
                "// Line 25:     routes,",
                "// Line 26:     wasm_utils,",
                "// Line 27: )",
                "// vulnerable line: 28: from gradio.route_utils import FnIndexInferError, get_root_url",
                "// Line 29: ",
                "// Line 30: ",
                "// Line 31: @pytest.fixture()",
                "// Line 32: def test_client():",
                "// Line 33:     io = Interface(lambda x: x + x, \"text\", \"text\")",
                "// Line 34:     app, _, _ = io.launch(prevent_thread_lock=True)",
                "// Line 35:     test_client = TestClient(app)",
                "// Line 36:     yield test_client",
                "// Line 37:     io.close()",
                "// Line 38:     close_all()"
            ]
        }
    ]
}