{
    "cve_id": "CVE-2024-21515",
    "cve_description": "This affects versions of the package opencart/opencart from 4.0.0.0. A reflected XSS issue was identified in the filename parameter of the admin tool/log route. An attacker could obtain a user's token by tricking the user to click on a maliciously crafted URL. The user is then prompted to login and redirected again upon authentication with the payload automatically executing. If the attacked user has admin privileges, this vulnerability could be used as the start of a chain of exploits like Zip Slip or arbitrary file write vulnerabilities in the admin functionality.\r\r**Notes:**\r\r1) This is only exploitable if the attacker knows the name or path of the admin directory. The name of the directory is \"admin\" by default but there is a pop-up in the dashboard warning users to rename it.\r\r2) The fix for this vulnerability is incomplete. The redirect is removed so that it is not possible for an attacker to control the redirect post admin login anymore, but it is still possible to exploit this issue in admin if the user is authenticated as an admin already.",
    "cve_publish_date": "2024-06-22T05:15Z",
    "cwe_id": "CWE-79",
    "cwe_name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "cwe_description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
    "commit_message": "removed a xss vunribility if the attack knows the admin path",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "login.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "22",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 12:      * @return void",
                "// Line 13:      */",
                "// Line 14:     public function index(): void {",
                "// Line 15:         $this->load->language('common/login');",
                "// Line 16: ",
                "// Line 17:         $this->document->setTitle($this->language->get('heading_title'));",
                "// Line 18: ",
                "// Line 19:         // Check to see if user is already logged",
                "// Line 20:         if ($this->user->isLogged() && isset($this->request->get['user_token']) && isset($this->session->data['user_token']) && ($this->request->get['user_token'] == $this->session->data['user_token'])) {",
                "// Line 21:             $this->response->redirect($this->url->link('common/dashboard', 'user_token=' . $this->session->data['user_token'], true));",
                "// vulnerable line: 22: }",
                "// Line 23: ",
                "// Line 24:         // Check to see if user is using incorrect token",
                "// Line 25:         if (isset($this->request->get['user_token']) && (!isset($this->session->data['user_token']) || ($this->request->get['user_token'] != $this->session->data['user_token']))) {",
                "// Line 26:             $data['error_warning'] = $this->language->get('error_token');",
                "// Line 27:         } elseif (isset($this->session->data['error'])) {",
                "// Line 28:             $data['error_warning'] = $this->session->data['error'];",
                "// Line 29: ",
                "// Line 30:             unset($this->session->data['error']);",
                "// vulnerable line: 31: } else {",
                "// Line 32:             $data['error_warning'] = '';",
                "// vulnerable line: 33: }",
                "// Line 34: ",
                "// Line 35:         if (isset($this->session->data['success'])) {",
                "// Line 36:             $data['success'] = $this->session->data['success'];",
                "// Line 37: ",
                "// Line 38:             unset($this->session->data['success']);",
                "// vulnerable line: 39: } else {",
                "// Line 40:             $data['success'] = '';",
                "// vulnerable line: 41: }",
                "// Line 42: ",
                "// Line 43:         // Create a login token to prevent brute force attacks",
                "// Line 44:         $this->session->data['login_token'] = oc_token(32);",
                "// Line 45: ",
                "// Line 46:         $data['login'] = $this->url->link('common/login.login', 'login_token=' . $this->session->data['login_token'], true);",
                "// Line 47: ",
                "// Line 48:         if ($this->config->get('config_mail_engine')) {",
                "// Line 49:             $data['forgotten'] = $this->url->link('common/forgotten');",
                "// vulnerable line: 50: } else {",
                "// Line 51:             $data['forgotten'] = '';",
                "// vulnerable line: 52: }",
                "// Line 53: ",
                "// vulnerable line: 54: if (isset($this->request->get['route']) && $this->request->get['route'] != 'common/login') {",
                "// vulnerable line: 55: $args = $this->request->get;",
                "// Line 56: ",
                "// vulnerable line: 57: $route = $args['route'];",
                "// Line 58: ",
                "// vulnerable line: 59: unset($args['route']);",
                "// vulnerable line: 60: unset($args['user_token']);",
                "// Line 61: ",
                "// vulnerable line: 62: $url = '';",
                "// Line 63: ",
                "// vulnerable line: 64: $url .= http_build_query($args);",
                "// Line 65: ",
                "// vulnerable line: 66: $data['redirect'] = $this->url->link($route, $url);",
                "// vulnerable line: 67: } else {",
                "// vulnerable line: 68: $data['redirect'] = '';",
                "// vulnerable line: 69: }",
                "// Line 70: ",
                "// Line 71:         $data['header'] = $this->load->controller('common/header');",
                "// Line 72:         $data['footer'] = $this->load->controller('common/footer');",
                "// Line 73: ",
                "// Line 74:         $this->response->setOutput($this->load->view('common/login', $data));",
                "// vulnerable line: 75: }",
                "// Line 76: ",
                "// Line 77:     /**",
                "// Line 78:      * Login",
                "// Line 79:      *",
                "// Line 80:      * @return void",
                "// Line 81:      */",
                "// Line 82:     public function login(): void {",
                "// Line 83:         $this->load->language('common/login');",
                "// Line 84: ",
                "// Line 85:         $json = [];",
                "// Line 87:         // Stop any undefined index messages.",
                "// Line 88:         $keys = [",
                "// Line 89:             'username',",
                "// Line 90:             'password',",
                "// Line 91:             'redirect'",
                "// Line 92:         ];",
                "// Line 93: ",
                "// Line 94:         foreach ($keys as $key) {",
                "// Line 95:             if (!isset($this->request->post[$key])) {",
                "// Line 96:                 $this->request->post[$key] = '';",
                "// vulnerable line: 97: }",
                "// vulnerable line: 98: }",
                "// Line 99: ",
                "// Line 100:         if ($this->user->isLogged() && isset($this->request->get['user_token']) && isset($this->session->data['user_token']) && ($this->request->get['user_token'] == $this->session->data['user_token'])) {",
                "// vulnerable line: 101: $json['redirect'] = $this->url->link('common/dashboard', 'user_token=' . $this->session->data['user_token'], true);",
                "// vulnerable line: 102: }",
                "// Line 103: ",
                "// Line 104:         if (!isset($this->request->get['login_token']) || !isset($this->session->data['login_token']) || $this->request->get['login_token'] != $this->session->data['login_token']) {",
                "// Line 105:             $this->session->data['error'] = $this->language->get('error_login');",
                "// Line 106: ",
                "// Line 107:             $json['redirect'] = $this->url->link('common/login', '', true);",
                "// vulnerable line: 108: }",
                "// Line 109: ",
                "// Line 110:         if (!$json && !$this->user->login($this->request->post['username'], html_entity_decode($this->request->post['password'], ENT_QUOTES, 'UTF-8'))) {",
                "// Line 111:             $json['error'] = $this->language->get('error_login');",
                "// vulnerable line: 112: }",
                "// Line 113: ",
                "// Line 114:         if (!$json) {",
                "// Line 115:             $this->session->data['user_token'] = oc_token(32);",
                "// Line 116: ",
                "// Line 117:             // Remove login token so it cannot be used again.",
                "// Line 118:             unset($this->session->data['login_token']);",
                "// Line 119: ",
                "// Line 120:             $login_data = [",
                "// Line 121:                 'ip'         => oc_get_ip(),",
                "// Line 122:                 'user_agent' => $this->request->server['HTTP_USER_AGENT']",
                "// Line 123:             ];",
                "// Line 124: ",
                "// Line 125:             $this->load->model('user/user');",
                "// Line 126: ",
                "// Line 127:             $this->model_user_user->addLogin($this->user->getId(), $login_data);",
                "// Line 128: ",
                "// vulnerable line: 129: if ($this->request->post['redirect'] && str_starts_with(html_entity_decode($this->request->post['redirect'], ENT_QUOTES, 'UTF-8'), HTTP_SERVER)) {",
                "// vulnerable line: 130: $json['redirect'] = html_entity_decode($this->request->post['redirect'], ENT_QUOTES, 'UTF-8') . '&user_token=' . $this->session->data['user_token'];",
                "// vulnerable line: 131: } else {",
                "// vulnerable line: 132: $json['redirect'] = $this->url->link('common/dashboard', 'user_token=' . $this->session->data['user_token'], true);",
                "// vulnerable line: 133: }",
                "// vulnerable line: 134: }",
                "// Line 135: ",
                "// Line 136:         $this->response->addHeader('Content-Type: application/json');",
                "// Line 137:         $this->response->setOutput(json_encode($json));",
                "// vulnerable line: 138: }",
                "// vulnerable line: 139: }"
            ]
        }
    ]
}