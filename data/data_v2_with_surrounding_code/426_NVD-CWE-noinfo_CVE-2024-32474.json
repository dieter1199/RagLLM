{
    "cve_id": "CVE-2024-32474",
    "cve_description": "Sentry is an error tracking and performance monitoring platform. Prior to 24.4.1, when authenticating as a superuser to Sentry with a username and password, the password is leaked as cleartext in logs under the _event_: `auth-index.validate_superuser`. An attacker with access to the log data could use these leaked credentials to login to the Sentry system as superuser. Self-hosted users on affected versions should upgrade to 24.4.1 or later. Users can configure the logging level to exclude logs of the `INFO` level and only generate logs for levels at `WARNING` or more.",
    "cve_publish_date": "2024-04-18T20:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "chore(auth): explicitly log challenge and response for debugging (#69148)",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "auth_index.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "0",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 133:         If the user doesn't have a password or u2f device, we say they're authenticated if they have a",
                "// Line 134:         valid SSO session.",
                "// Line 135: ",
                "// Line 136:         By nature of granting an active superuser session, we want to make sure that the user has completed",
                "// Line 137:         SSO and if they do not, we redirect them back to the SSO login.",
                "// Line 138: ",
                "// Line 139:         \"\"\"",
                "// Line 140:         logger.info(",
                "// Line 141:             \"auth-index.validate_superuser\",",
                "// Line 142:             extra={",
                "// vulnerable line: 143: \"validator\": validator,",
                "// Line 144:                 \"user\": request.user.id,",
                "// Line 145:                 \"raise_exception\": not DISABLE_SSO_CHECK_FOR_LOCAL_DEV,",
                "// Line 146:                 \"verify_authenticator\": verify_authenticator,",
                "// Line 147:             },",
                "// Line 148:         )",
                "// Line 149:         # Disable exception for missing password or u2f code if we're running locally",
                "// Line 150:         validator.is_valid(raise_exception=not DISABLE_SSO_CHECK_FOR_LOCAL_DEV)",
                "// Line 151: ",
                "// Line 152:         authenticated = (",
                "// Line 153:             self._verify_user_via_inputs(validator, request)"
            ]
        }
    ]
}