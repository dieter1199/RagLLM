{
    "cve_id": "CVE-2024-27628",
    "cve_description": "Buffer Overflow vulnerability in DCMTK v.3.6.8 allows an attacker to execute arbitrary code via the EctEnhancedCT method component.",
    "cve_publish_date": "2024-06-28T19:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Fixed possible overflows when allocating memory.\n\nThanks to GitHub user \"bananabr\" (Daniel Berredo) for the report and\nsuggested patch.",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "enhanced_ct.cc",
            "code_language": "C++",
            "number_of_lines_added_for_mitigation": "13",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 97:     {",
                "// Line 98:         // Avoid compiler warning about unused parameter \"pixel\"",
                "// Line 99:         (void)pixel;",
                "// Line 100:         // Input data is checked before",
                "// Line 101:         Uint16 rows = 0;",
                "// Line 102:         Uint16 cols = 0;",
                "// Line 103:         m_CT.getRows(rows);",
                "// Line 104:         m_CT.getColumns(cols);",
                "// Line 105:         const size_t numFrames      = m_CT.m_Frames.size();",
                "// Line 106:         const size_t numBytesFrame  = m_CT.m_Frames[0]->length;",
                "// vulnerable line: 107: const size_t numPixelsFrame = rows * cols;",
                "// Line 108:         // Creates the correct pixel data element, based on the image pixel module used.",
                "// Line 109:         DcmPixelData* pixData = new DcmPixelData(DCM_PixelData);",
                "// Line 110:         OFCondition result;",
                "// Line 111:         if (pixData)",
                "// Line 112:         {",
                "// Line 113:             pixData->setVR(EVR_OW);",
                "// Line 114:             Uint16* ptr          = NULL;",
                "// Line 115:             size_t numBytesTotal = numBytesFrame * numFrames / 2;",
                "// Line 116:             if (numBytesTotal <= 4294967294UL)",
                "// Line 117:             {"
            ]
        }
    ]
}