{
    "cve_id": "CVE-2024-33904",
    "cve_description": "In plugins/HookSystem.cpp in Hyprland through 0.39.1 (before 28c8561), through a race condition, a local attacker can cause execution of arbitrary assembly code by writing to a predictable temporary file.",
    "cve_publish_date": "2024-04-29T06:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "hooksystem: use a random 700 directory for assembler",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "HookSystem.cpp",
            "code_language": "C++",
            "number_of_lines_added_for_mitigation": "17",
            "number_of_lines_deleted_vulnerable_to_cve": "10",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 139:             assemblyBuilder += code + \"",
                "// Line 140: \";",
                "// Line 141:             currentDestinationOffset += len;",
                "// Line 142:         }",
                "// Line 143: ",
                "// Line 144:         lastAsmNewline = probe.assembly.find(\"",
                "// Line 145: \", lastAsmNewline) + 1;",
                "// Line 146:         currentAddress += len;",
                "// Line 147:     }",
                "// Line 148: ",
                "// vulnerable line: 149: std::ofstream ofs(\"/tmp/hypr/.hookcode.asm\", std::ios::trunc);",
                "// Line 150:     ofs << assemblyBuilder;",
                "// Line 151:     ofs.close();",
                "// vulnerable line: 152: std::string ret = execAndGet(",
                "// vulnerable line: 153: \"cc -x assembler -c /tmp/hypr/.hookcode.asm -o /tmp/hypr/.hookbinary.o 2>&1 && objcopy -O binary -j .text /tmp/hypr/.hookbinary.o /tmp/hypr/.hookbinary2.o 2>&1\");",
                "// Line 154:     Debug::log(LOG, \"[functionhook] assembler returned:",
                "// Line 155: {}\", ret);",
                "// vulnerable line: 156: if (!std::filesystem::exists(\"/tmp/hypr/.hookbinary2.o\")) {",
                "// vulnerable line: 157: std::filesystem::remove(\"/tmp/hypr/.hookcode.asm\");",
                "// vulnerable line: 158: std::filesystem::remove(\"/tmp/hypr/.hookbinary.asm\");",
                "// Line 159:         return {};",
                "// Line 160:     }",
                "// Line 161: ",
                "// vulnerable line: 162: std::ifstream ifs(\"/tmp/hypr/.hookbinary2.o\", std::ios::binary);",
                "// Line 163:     returns = {std::vector<char>(std::istreambuf_iterator<char>(ifs), {})};",
                "// Line 164:     ifs.close();",
                "// vulnerable line: 165: std::filesystem::remove(\"/tmp/hypr/.hookcode.asm\");",
                "// vulnerable line: 166: std::filesystem::remove(\"/tmp/hypr/.hookbinary.o\");",
                "// vulnerable line: 167: std::filesystem::remove(\"/tmp/hypr/.hookbinary2.o\");",
                "// Line 168: ",
                "// Line 169:     return returns;",
                "// Line 170: }",
                "// Line 171: ",
                "// Line 172: bool CFunctionHook::hook() {",
                "// Line 173: ",
                "// Line 174:     // check for unsupported platforms",
                "// Line 175: #if !defined(__x86_64__)",
                "// Line 176:     return false;",
                "// Line 177: #endif"
            ]
        }
    ]
}