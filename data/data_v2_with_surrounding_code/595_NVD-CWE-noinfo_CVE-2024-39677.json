{
    "cve_id": "CVE-2024-39677",
    "cve_description": "NHibernate is an object-relational mapper for the .NET framework. A SQL injection vulnerability exists in some types implementing ILiteralType.ObjectToSQLString. Callers of these methods are exposed to the vulnerability, which includes mappings using inheritance with discriminator values; HQL queries referencing a static field of the application; users of the SqlInsertBuilder and SqlUpdateBuilder utilities, calling their AddColumn overload taking a literal value; and any direct use of the ObjectToSQLString methods for building SQL queries on the user side. This vulnerability is fixed in 5.4.9 and 5.5.2.",
    "cve_publish_date": "2024-07-08T15:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Handle SQL injection vulnerabilities within ObjectToSQLString (#3547)\n\nCo-authored-by: Alex Zaytsev <hazzik@gmail.com>\r\nCo-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "AbstractCharType.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: using System;",
                "// Line 2: using System.Data.Common;",
                "// Line 3: using NHibernate.Engine;",
                "// Line 4: using NHibernate.SqlTypes;",
                "// Line 5: ",
                "// Line 6: namespace NHibernate.Type",
                "// vulnerable line: 7: {",
                "// Line 8:     /// <summary>",
                "// Line 9:     /// Common base class for <see cref=\"CharType\" /> and <see cref=\"AnsiCharType\" />.",
                "// Line 10:     /// </summary>",
                "// Line 11:     [Serializable]",
                "// Line 12:     public abstract class AbstractCharType : PrimitiveType, IDiscriminatorType",
                "// vulnerable line: 13: {",
                "// Line 14:         public AbstractCharType(SqlType sqlType)",
                "// Line 15:             : base(sqlType) {}",
                "// Line 16: ",
                "// Line 17:         public override object DefaultValue",
                "// vulnerable line: 18: {",
                "// Line 19:             get { throw new NotSupportedException(\"not a valid id type\"); }",
                "// vulnerable line: 20: }",
                "// Line 21: ",
                "// Line 22:         public override object Get(DbDataReader rs, int index, ISessionImplementor session)",
                "// vulnerable line: 23: {",
                "// Line 24:             string dbValue = Convert.ToString(rs[index]);",
                "// Line 25:             // The check of the Length is a workaround see NH-2340",
                "// Line 26:             if (dbValue.Length > 0)",
                "// vulnerable line: 27: {",
                "// Line 28:                 return dbValue[0];",
                "// vulnerable line: 29: }",
                "// Line 30:             return '\u0000'; // This line should never be executed",
                "// vulnerable line: 31: }",
                "// Line 32: ",
                "// Line 33:         public override object Get(DbDataReader rs, string name, ISessionImplementor session)",
                "// vulnerable line: 34: {",
                "// Line 35:             return Get(rs, rs.GetOrdinal(name), session);",
                "// vulnerable line: 36: }",
                "// Line 37: ",
                "// Line 38:         public override System.Type PrimitiveClass",
                "// vulnerable line: 39: {",
                "// Line 40:             get { return typeof(char); }",
                "// vulnerable line: 41: }",
                "// Line 42: ",
                "// Line 43:         public override System.Type ReturnedClass",
                "// vulnerable line: 44: {",
                "// Line 45:             get { return typeof(char); }",
                "// vulnerable line: 46: }",
                "// Line 47: ",
                "// Line 48:         public override void Set(DbCommand cmd, object value, int index, ISessionImplementor session)",
                "// vulnerable line: 49: {",
                "// Line 50:             cmd.Parameters[index].Value = Convert.ToChar(value);",
                "// vulnerable line: 51: }",
                "// Line 52: ",
                "// Line 53:         public override string ObjectToSQLString(object value, Dialect.Dialect dialect)",
                "// vulnerable line: 54: {",
                "// Line 55:             return ''' + value.ToString() + ''';",
                "// vulnerable line: 56: }",
                "// Line 57: ",
                "// Line 58:         // 6.0 TODO: rename \"xml\" parameter as \"value\": it is not a xml string. The fact it generally comes from a xml",
                "// Line 59:         // attribute value is irrelevant to the method behavior.",
                "// Line 60:         /// <inheritdoc />",
                "// Line 61:         public virtual object StringToObject(string xml)",
                "// vulnerable line: 62: {",
                "// Line 63:             if (xml.Length != 1)",
                "// Line 64:                 throw new MappingException(\"multiple or zero characters found parsing string\");",
                "// Line 65: ",
                "// Line 66:             return xml[0];",
                "// vulnerable line: 67: }",
                "// Line 68: ",
                "// Line 69:         // Since 5.2",
                "// Line 70:         [Obsolete(\"This method has no more usages and will be removed in a future version.\")]",
                "// Line 71:         public override object FromStringValue(string xml)",
                "// vulnerable line: 72: {",
                "// Line 73:             return xml[0];",
                "// vulnerable line: 74: }",
                "// vulnerable line: 75: }",
                "// vulnerable line: 76: }"
            ]
        },
        {
            "filename_of_changes": "AbstractDateTimeType.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 169:             return date;",
                "// Line 170:         }",
                "// Line 171: ",
                "// Line 172:         /// <inheritdoc />",
                "// Line 173:         public override System.Type PrimitiveClass => typeof(DateTime);",
                "// Line 174: ",
                "// Line 175:         /// <inheritdoc />",
                "// Line 176:         public override object DefaultValue => BaseDateValue;",
                "// Line 177: ",
                "// Line 178:         /// <inheritdoc />",
                "// vulnerable line: 179: public override string ObjectToSQLString(object value, Dialect.Dialect dialect) =>",
                "// vulnerable line: 180: \"'\" + (DateTime) value + \"'\";",
                "// Line 181:     }",
                "// Line 182: }"
            ]
        },
        {
            "filename_of_changes": "AbstractStringType.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: using System;",
                "// Line 2: using System.Collections.Generic;",
                "// Line 3: using System.Data.Common;",
                "// Line 4: using System.Globalization;",
                "// Line 5: using NHibernate.Driver;",
                "// Line 6: using NHibernate.Engine;",
                "// Line 7: using NHibernate.SqlTypes;",
                "// Line 8: using NHibernate.UserTypes;",
                "// Line 9: ",
                "// Line 10: namespace NHibernate.Type",
                "// vulnerable line: 11: {",
                "// Line 12:     [Serializable]",
                "// Line 13:     public abstract class AbstractStringType: ImmutableType, IDiscriminatorType, IParameterizedType",
                "// vulnerable line: 14: {",
                "// Line 15:         private static StringComparer _defaultComparer = StringComparer.Ordinal;",
                "// Line 16:         private StringComparer _comparer;",
                "// Line 17: ",
                "// Line 18:         /// <summary>",
                "// Line 19:         /// The comparer culture parameter name. Value should be <c>Current</c>, <c>Invariant</c>,",
                "// Line 20:         /// <c>Ordinal</c> or any valid culture name.",
                "// Line 21:         /// </summary>",
                "// Line 22:         /// <remarks>Default comparison is ordinal.</remarks>",
                "// Line 23:         public const string ComparerCultureParameterName = \"ComparerCulture\";",
                "// Line 24: ",
                "// Line 27:         /// case insensitive.",
                "// Line 28:         /// </summary>",
                "// Line 29:         /// <remarks>Default comparison is case sensitive.</remarks>",
                "// Line 30:         public const string IgnoreCaseParameterName = \"IgnoreCase\";",
                "// Line 31: ",
                "// Line 32:         /// <summary>",
                "// Line 33:         /// The default string comparer for determining string equality and calculating hash codes.",
                "// Line 34:         /// Default is <c>StringComparer.Ordinal</c>.",
                "// Line 35:         /// </summary>",
                "// Line 36:         public static StringComparer DefaultComparer",
                "// vulnerable line: 37: {",
                "// Line 38:             get => _defaultComparer;",
                "// Line 39:             set => _defaultComparer = value ?? throw new ArgumentNullException(nameof(value));",
                "// vulnerable line: 40: }",
                "// Line 41: ",
                "// Line 42:         /// <summary>",
                "// Line 43:         /// The string comparer of this instance of string type, for determining string equality and",
                "// Line 44:         /// calculating hash codes. Set <see langword=\"null\" /> to use <see cref=\"DefaultComparer\"/>.",
                "// Line 45:         /// </summary>",
                "// Line 46:         protected StringComparer Comparer",
                "// vulnerable line: 47: {",
                "// Line 48:             get => _comparer ?? _defaultComparer;",
                "// Line 49:             set => _comparer = value;",
                "// vulnerable line: 50: }",
                "// Line 51: ",
                "// Line 52:         public AbstractStringType(SqlType sqlType)",
                "// Line 53:             : base(sqlType)",
                "// vulnerable line: 54: {",
                "// vulnerable line: 55: }",
                "// Line 56: ",
                "// Line 57:         public override void Set(DbCommand cmd, object value, int index, ISessionImplementor session)",
                "// vulnerable line: 58: {",
                "// Line 59:             var parameter = cmd.Parameters[index];",
                "// Line 60: ",
                "// Line 61:             if (value is Enum)",
                "// Line 62:                 value = value.ToString();",
                "// Line 63: ",
                "// Line 64:             //Allow the driver to adjust the parameter for the value",
                "// Line 65:             session.Factory.ConnectionProvider.Driver.AdjustParameterForValue(parameter, SqlType, value);",
                "// Line 66: ",
                "// Line 67:             // set the parameter value before the size check, since ODBC changes the size automatically",
                "// Line 68:             parameter.Value = value;",
                "// Line 69: ",
                "// Line 70:             if (parameter.Size > 0 && ((string)value).Length > parameter.Size)",
                "// Line 71:                 throw new HibernateException(\"The length of the string value exceeds the length configured in the mapping/parameter.\");",
                "// vulnerable line: 72: }",
                "// Line 73: ",
                "// Line 74:         public override object Get(DbDataReader rs, int index, ISessionImplementor session)",
                "// vulnerable line: 75: {",
                "// Line 76:             return Convert.ToString(rs[index]);",
                "// vulnerable line: 77: }",
                "// Line 78: ",
                "// Line 79:         public override object Get(DbDataReader rs, string name, ISessionImplementor session)",
                "// vulnerable line: 80: {",
                "// Line 81:             return Convert.ToString(rs[name]);",
                "// vulnerable line: 82: }",
                "// Line 83: ",
                "// Line 84:         public override bool IsEqual(object x, object y)",
                "// vulnerable line: 85: {",
                "// Line 86:             return Comparer.Equals(x, y);",
                "// vulnerable line: 87: }",
                "// Line 88: ",
                "// Line 89:         public override int GetHashCode(object x)",
                "// vulnerable line: 90: {",
                "// Line 91:             return Comparer.GetHashCode(x);",
                "// vulnerable line: 92: }",
                "// Line 93: ",
                "// Line 94:         /// <inheritdoc />",
                "// Line 95:         public override string ToLoggableString(object value, ISessionFactoryImplementor factory)",
                "// vulnerable line: 96: {",
                "// Line 97:             return (value == null) ? null :",
                "// Line 98:                 // 6.0 TODO: inline this call.",
                "// Line 99: #pragma warning disable 618",
                "// Line 100:                 ToString(value);",
                "// Line 101: #pragma warning restore 618",
                "// vulnerable line: 102: }",
                "// Line 103: ",
                "// Line 104:         // Since 5.2",
                "// Line 105:         [Obsolete(\"This method has no more usages and will be removed in a future version. Override ToLoggableString instead.\")]",
                "// Line 106:         public override string ToString(object val)",
                "// vulnerable line: 107: {",
                "// Line 108:             return (string)val;",
                "// vulnerable line: 109: }",
                "// Line 110: ",
                "// Line 111:         // Since 5.2",
                "// Line 112:         [Obsolete(\"This method has no more usages and will be removed in a future version.\")]",
                "// Line 113:         public override object FromStringValue(string xml)",
                "// vulnerable line: 114: {",
                "// Line 115:             return xml;",
                "// vulnerable line: 116: }",
                "// Line 117: ",
                "// Line 118:         public override System.Type ReturnedClass",
                "// vulnerable line: 119: {",
                "// Line 120:             get { return typeof(string); }",
                "// vulnerable line: 121: }",
                "// Line 122: ",
                "// Line 123:         #region IIdentifierType Members",
                "// Line 124: ",
                "// Line 125:         // 6.0 TODO: rename \"xml\" parameter as \"value\": it is not a xml string. The fact it generally comes from a xml",
                "// Line 126:         // attribute value is irrelevant to the method behavior.",
                "// Line 127:         /// <inheritdoc />",
                "// Line 128:         public object StringToObject(string xml)",
                "// vulnerable line: 129: {",
                "// Line 130:             return xml;",
                "// vulnerable line: 131: }",
                "// Line 132: ",
                "// Line 133:         #endregion",
                "// Line 134: ",
                "// Line 135:         #region ILiteralType Members",
                "// Line 136: ",
                "// Line 137:         public string ObjectToSQLString(object value, Dialect.Dialect dialect)",
                "// vulnerable line: 138: {",
                "// vulnerable line: 139: return \"'\" + (string)value + \"'\";",
                "// vulnerable line: 140: }",
                "// Line 141: ",
                "// Line 142:         #endregion",
                "// Line 143: ",
                "// Line 144:         #region IParameterizedType Members",
                "// Line 145: ",
                "// Line 146:         public void SetParameterValues(IDictionary<string, string> parameters)",
                "// vulnerable line: 147: {",
                "// Line 148:             if (parameters == null)",
                "// Line 149:                 return;",
                "// Line 150: ",
                "// Line 151:             var ignoreCase = false;",
                "// Line 152:             var hasCultureNameParameter = parameters.TryGetValue(ComparerCultureParameterName, out var cultureName);",
                "// Line 153:             var hasIgnoreCaseParameter =",
                "// Line 154:                 parameters.TryGetValue(IgnoreCaseParameterName, out var ignoreCaseString) &&",
                "// Line 155:                 bool.TryParse(ignoreCaseString, out ignoreCase);",
                "// Line 156: ",
                "// Line 157:             if (hasCultureNameParameter || hasIgnoreCaseParameter)",
                "// vulnerable line: 158: {",
                "// Line 159:                 Comparer = GetComparer(cultureName, ignoreCase);",
                "// vulnerable line: 160: }",
                "// vulnerable line: 161: }",
                "// Line 162: ",
                "// Line 163:         private static StringComparer GetComparer(string cultureName, bool ignoreCase)",
                "// vulnerable line: 164: {",
                "// Line 165:             if (cultureName == null ||",
                "// Line 166:                 string.Equals(cultureName, \"ordinal\", StringComparison.OrdinalIgnoreCase))",
                "// vulnerable line: 167: {",
                "// Line 168:                 return ignoreCase ? StringComparer.OrdinalIgnoreCase : StringComparer.Ordinal;",
                "// vulnerable line: 169: }",
                "// Line 170: ",
                "// Line 171:             return StringComparer.Create(GetCultureInfo(cultureName), ignoreCase);",
                "// vulnerable line: 172: }",
                "// Line 173: ",
                "// Line 174:         private static CultureInfo GetCultureInfo(string cultureName)",
                "// vulnerable line: 175: {",
                "// Line 176:             if (string.Equals(cultureName, \"invariant\", StringComparison.OrdinalIgnoreCase))",
                "// vulnerable line: 177: {",
                "// Line 178:                 return CultureInfo.InvariantCulture;",
                "// vulnerable line: 179: }",
                "// Line 180:             ",
                "// Line 181:             if (string.Equals(cultureName, \"current\", StringComparison.OrdinalIgnoreCase))",
                "// vulnerable line: 182: {",
                "// Line 183:                 return CultureInfo.CurrentCulture;",
                "// vulnerable line: 184: }",
                "// Line 185: ",
                "// Line 186:             return CultureInfo.GetCultureInfo(cultureName);",
                "// vulnerable line: 187: }",
                "// Line 188: ",
                "// Line 189:         #endregion",
                "// Line 190: ",
                "// Line 191:         #region override of System.Object Members",
                "// Line 192: ",
                "// Line 193:         /// <summary>",
                "// Line 194:         /// Determines whether the specified <see cref=\"Object\"/> is equal to this",
                "// Line 195:         /// <see cref=\"AbstractStringType\"/>.",
                "// Line 196:         /// </summary>",
                "// Line 197:         /// <param name=\"obj\">The <see cref=\"Object\"/> to compare with this <c>AbstractStringType</c>.</param>",
                "// Line 198:         /// <returns><see langword=\"true\"/> if the SqlType, Name and Comparer properties are the same.</returns>",
                "// Line 199:         public override bool Equals(object obj)",
                "// vulnerable line: 200: {",
                "// Line 201:             if (!base.Equals(obj))",
                "// Line 202:                 return false;",
                "// Line 203: ",
                "// Line 204:             return Equals(Comparer, ((AbstractStringType) obj).Comparer);",
                "// vulnerable line: 205: }",
                "// Line 206: ",
                "// Line 207:         /// <summary>",
                "// Line 208:         /// Serves as a hash function for the <see cref=\"AbstractStringType\"/>, ",
                "// Line 209:         /// suitable for use in hashing algorithms and data structures like a hash table.",
                "// Line 210:         /// </summary>",
                "// Line 211:         /// <returns>",
                "// Line 212:         /// A hash code that is based on the <see cref=\"NullableType.SqlType\"/>'s",
                "// Line 213:         /// hash code, the <see cref=\"AbstractType.Name\"/>'s hash code and the <see cref=\"Comparer\"/> hash",
                "// Line 214:         /// code.</returns>",
                "// Line 215:         public override int GetHashCode()",
                "// vulnerable line: 216: {",
                "// Line 217:             return base.GetHashCode() * 37 ^ Comparer.GetHashCode();",
                "// vulnerable line: 218: }",
                "// Line 219: ",
                "// Line 220:         #endregion",
                "// vulnerable line: 221: }",
                "// vulnerable line: 222: }"
            ]
        },
        {
            "filename_of_changes": "ByteType.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "ByteType.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 47:             dp.Value = dp.DbType == DbType.Int16 ? Convert.ToInt16(value) : Convert.ToByte(value);",
                "// Line 48:         }",
                "// Line 49:         ",
                "// Line 50:         public override string Name",
                "// Line 51:         {",
                "// Line 52:             get { return \"Byte\"; }",
                "// Line 53:         }",
                "// Line 54: ",
                "// Line 55:         public override string ObjectToSQLString(object value, Dialect.Dialect dialect)",
                "// Line 56:         {",
                "// vulnerable line: 57: return value.ToString();",
                "// Line 58:         }",
                "// Line 59: ",
                "// Line 60:         // 6.0 TODO: rename \"xml\" parameter as \"value\": it is not a xml string. The fact it generally comes from a xml",
                "// Line 61:         // attribute value is irrelevant to the method behavior.",
                "// Line 62:         /// <inheritdoc />",
                "// Line 63:         public virtual object StringToObject(string xml)",
                "// Line 64:         {",
                "// Line 65:             return Byte.Parse(xml);",
                "// Line 66:         }",
                "// Line 67: "
            ]
        },
        {
            "filename_of_changes": "CharBooleanType.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "4",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: using System;",
                "// Line 2: using System.Data;",
                "// Line 3: using System.Data.Common;",
                "// Line 4: using NHibernate.Engine;",
                "// Line 5: using NHibernate.SqlTypes;",
                "// vulnerable line: 6: using NHibernate.Util;",
                "// Line 7: ",
                "// Line 8: namespace NHibernate.Type",
                "// vulnerable line: 9: {",
                "// Line 10:     /// <summary>",
                "// Line 11:     /// Maps a <see cref=\"System.Boolean\"/> Property ",
                "// Line 12:     /// to a <see cref=\"DbType.AnsiStringFixedLength\"/> column.",
                "// Line 13:     /// </summary>",
                "// Line 14:     [Serializable]",
                "// Line 15:     public abstract class CharBooleanType : BooleanType",
                "// vulnerable line: 16: {",
                "// Line 17:         /// <summary></summary>",
                "// Line 18:         protected abstract string TrueString { get; }",
                "// Line 19: ",
                "// Line 20:         /// <summary></summary>",
                "// Line 21:         protected abstract string FalseString { get; }",
                "// Line 22: ",
                "// Line 23:         /// <summary>",
                "// Line 24:         /// ",
                "// Line 25:         /// </summary>",
                "// Line 26:         /// <param name=\"sqlType\"></param>",
                "// Line 27:         protected CharBooleanType(AnsiStringFixedLengthSqlType sqlType) : base(sqlType)",
                "// vulnerable line: 28: {",
                "// vulnerable line: 29: }",
                "// Line 30: ",
                "// Line 31:         public override object Get(DbDataReader rs, int index, ISessionImplementor session)",
                "// vulnerable line: 32: {",
                "// Line 33:             string code = Convert.ToString(rs[index]);",
                "// Line 34:             if (code == null)",
                "// vulnerable line: 35: {",
                "// Line 36:                 return null;",
                "// vulnerable line: 37: }",
                "// Line 38:             else",
                "// vulnerable line: 39: {",
                "// Line 40:                 return code.Equals(TrueString, StringComparison.InvariantCultureIgnoreCase);",
                "// vulnerable line: 41: }",
                "// vulnerable line: 42: }",
                "// Line 43: ",
                "// Line 44:         public override object Get(DbDataReader rs, string name, ISessionImplementor session)",
                "// vulnerable line: 45: {",
                "// Line 46:             return Get(rs, rs.GetOrdinal(name), session);",
                "// vulnerable line: 47: }",
                "// Line 48: ",
                "// Line 49:         public override void Set(DbCommand cmd, Object value, int index, ISessionImplementor session)",
                "// vulnerable line: 50: {",
                "// Line 51:             cmd.Parameters[index].Value = ToCharacter(value);",
                "// vulnerable line: 52: }",
                "// Line 53: ",
                "// Line 54:         private string ToCharacter(object value)",
                "// vulnerable line: 55: {",
                "// Line 56:             return ((bool) value) ? TrueString : FalseString;",
                "// vulnerable line: 57: }",
                "// Line 58: ",
                "// Line 59:         public override string ObjectToSQLString(object value, Dialect.Dialect dialect)",
                "// vulnerable line: 60: {",
                "// vulnerable line: 61: return \"'\" + ToCharacter(value) + \"'\";",
                "// vulnerable line: 62: }",
                "// Line 63: ",
                "// Line 64:         // 6.0 TODO: rename \"xml\" parameter as \"value\": it is not a xml string. The fact it generally comes from a xml",
                "// Line 65:         // attribute value is irrelevant to the method behavior.",
                "// Line 66:         /// <inheritdoc />",
                "// Line 67:         public override object StringToObject(String xml)",
                "// vulnerable line: 68: {",
                "// Line 69:             if (string.Equals(TrueString, xml, StringComparison.InvariantCultureIgnoreCase))",
                "// vulnerable line: 70: {",
                "// Line 71:                 return true;",
                "// vulnerable line: 72: }",
                "// Line 73:             else if (string.Equals(FalseString, xml, StringComparison.InvariantCultureIgnoreCase))",
                "// vulnerable line: 74: {",
                "// Line 75:                 return false;",
                "// vulnerable line: 76: }",
                "// Line 77:             else",
                "// vulnerable line: 78: {",
                "// Line 79:                 throw new HibernateException(\"Could not interpret: \" + xml);",
                "// vulnerable line: 80: }",
                "// vulnerable line: 81: }",
                "// vulnerable line: 82: }",
                "// vulnerable line: 83: }"
            ]
        },
        {
            "filename_of_changes": "DB2Dialect.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "25",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "DateTimeOffSetType.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: using System;",
                "// Line 2: using System.Collections;",
                "// Line 3: using System.Collections.Generic;",
                "// Line 4: using System.Data;",
                "// Line 5: using System.Data.Common;",
                "// Line 6: using NHibernate.Engine;",
                "// Line 7: using NHibernate.SqlTypes;",
                "// Line 8: ",
                "// Line 9: namespace NHibernate.Type",
                "// vulnerable line: 10: {",
                "// Line 11:     /// <summary>",
                "// Line 12:     /// Maps a <see cref=\"System.DateTimeOffset\" /> Property to a <see cref=\"DbType.DateTimeOffset\"/>",
                "// Line 13:     /// </summary>",
                "// Line 14:     [Serializable]",
                "// Line 15:     public partial class DateTimeOffsetType : PrimitiveType, IIdentifierType, ILiteralType, IVersionType",
                "// vulnerable line: 16: {",
                "// Line 17:         static readonly DateTimeOffset BaseDateValue = DateTimeOffset.MinValue;",
                "// Line 18: ",
                "// Line 19:         /// <summary>",
                "// Line 20:         /// Default constructor.",
                "// Line 21:         /// </summary>",
                "// Line 22:         public DateTimeOffsetType() : base(SqlTypeFactory.DateTimeOffSet)",
                "// vulnerable line: 23: {",
                "// vulnerable line: 24: }",
                "// Line 25: ",
                "// Line 26:         /// <summary>",
                "// Line 27:         /// Constructor for specifying a datetimeoffset with a scale. Use <see cref=\"SqlTypeFactory.GetDateTimeOffset\"/>.",
                "// Line 28:         /// </summary>",
                "// Line 29:         /// <param name=\"sqlType\">The sql type to use for the type.</param>",
                "// Line 30:         public DateTimeOffsetType(DateTimeOffsetSqlType sqlType) : base(sqlType)",
                "// vulnerable line: 31: {",
                "// vulnerable line: 32: }",
                "// Line 33: ",
                "// Line 34:         public override string Name",
                "// vulnerable line: 35: {",
                "// Line 36:             get { return \"DateTimeOffset\"; }",
                "// vulnerable line: 37: }",
                "// Line 38: ",
                "// Line 39:         public override System.Type ReturnedClass",
                "// vulnerable line: 40: {",
                "// Line 41:             get { return typeof (DateTimeOffset); }",
                "// vulnerable line: 42: }",
                "// Line 43: ",
                "// Line 44:         public override System.Type PrimitiveClass",
                "// vulnerable line: 45: {",
                "// Line 46:             get { return typeof (DateTimeOffset); }",
                "// vulnerable line: 47: }",
                "// Line 48: ",
                "// Line 49:         public override object DefaultValue",
                "// vulnerable line: 50: {",
                "// Line 51:             get { return BaseDateValue; }",
                "// vulnerable line: 52: }",
                "// Line 53: ",
                "// Line 54:         public IComparer Comparator",
                "// vulnerable line: 55: {",
                "// Line 56:             get { return Comparer<DateTimeOffset>.Default; }",
                "// vulnerable line: 57: }",
                "// Line 58: ",
                "// Line 59:         public override void Set(DbCommand st, object value, int index, ISessionImplementor session)",
                "// vulnerable line: 60: {",
                "// Line 61:             st.Parameters[index].Value = value;",
                "// vulnerable line: 62: }",
                "// Line 63: ",
                "// Line 64:         public override object Get(DbDataReader rs, int index, ISessionImplementor session)",
                "// vulnerable line: 65: {",
                "// Line 66:             try",
                "// vulnerable line: 67: {",
                "// Line 68:                 return (DateTimeOffset) rs[index];",
                "// vulnerable line: 69: }",
                "// Line 70:             catch (Exception ex)",
                "// vulnerable line: 71: {",
                "// Line 72:                 throw new FormatException(string.Format(\"Input '{0}' was not in the correct format.\", rs[index]), ex);",
                "// vulnerable line: 73: }",
                "// vulnerable line: 74: }",
                "// Line 75: ",
                "// Line 76:         public override object Get(DbDataReader rs, string name, ISessionImplementor session)",
                "// vulnerable line: 77: {",
                "// Line 78:             return Get(rs, rs.GetOrdinal(name), session);",
                "// vulnerable line: 79: }",
                "// Line 80: ",
                "// Line 81:         public object Next(object current, ISessionImplementor session)",
                "// vulnerable line: 82: {",
                "// Line 83:             return Seed(session);",
                "// vulnerable line: 84: }",
                "// Line 85: ",
                "// Line 86:         /// <summary>",
                "// Line 87:         /// Truncate a <see cref=\"DateTimeOffset\"/> according to specified resolution.",
                "// Line 88:         /// </summary>",
                "// Line 89:         /// <param name=\"value\">The value to round.</param>",
                "// Line 90:         /// <param name=\"resolution\">The resolution in ticks (100ns).</param>",
                "// Line 91:         /// <returns>A rounded <see cref=\"DateTimeOffset\"/>.</returns>",
                "// Line 92:         public static DateTimeOffset Round(DateTimeOffset value, long resolution) =>",
                "// Line 93:             value.AddTicks(-(value.Ticks % resolution));",
                "// Line 94: ",
                "// Line 95:         /// <inheritdoc />",
                "// Line 96:         public virtual object Seed(ISessionImplementor session) =>",
                "// Line 97:             session == null ? DateTimeOffset.Now : Round(DateTimeOffset.Now, session.Factory.Dialect.TimestampResolutionInTicks);",
                "// Line 98: ",
                "// Line 99:         public override bool IsEqual(object x, object y)",
                "// vulnerable line: 100: {",
                "// Line 101:             if (x == y)",
                "// vulnerable line: 102: {",
                "// Line 103:                 return true;",
                "// vulnerable line: 104: }",
                "// Line 105: ",
                "// Line 106:             if (x == null || y == null)",
                "// vulnerable line: 107: {",
                "// Line 108:                 return false;",
                "// vulnerable line: 109: }",
                "// Line 110: ",
                "// Line 111:             var date1 = (DateTimeOffset) x;",
                "// Line 112:             var date2 = (DateTimeOffset) y;",
                "// Line 113: ",
                "// Line 114:             return date1.Equals(date2);",
                "// vulnerable line: 115: }",
                "// Line 116: ",
                "// Line 117:         // 6.0 TODO: rename \"xml\" parameter as \"value\": it is not a xml string. The fact it generally comes from a xml",
                "// Line 118:         // attribute value is irrelevant to the method behavior.",
                "// Line 119:         /// <inheritdoc />",
                "// Line 120:         public object StringToObject(string xml)",
                "// vulnerable line: 121: {",
                "// Line 122:             return string.IsNullOrEmpty(xml) ? null :",
                "// Line 123:                 // 6.0 TODO: remove warning disable/restore",
                "// Line 124: #pragma warning disable 618",
                "// Line 125:                 FromStringValue(xml);",
                "// Line 126: #pragma warning restore 618",
                "// vulnerable line: 127: }",
                "// Line 128: ",
                "// Line 129:         /// <inheritdoc />",
                "// Line 130:         public override string ToLoggableString(object value, ISessionFactoryImplementor factory)",
                "// vulnerable line: 131: {",
                "// Line 132:             return (value == null) ? null :",
                "// Line 133:                 // 6.0 TODO: inline this call.",
                "// Line 134: #pragma warning disable 618",
                "// Line 135:                 ToString(value);",
                "// Line 136: #pragma warning restore 618",
                "// vulnerable line: 137: }",
                "// Line 138: ",
                "// Line 139:         // Since 5.2",
                "// Line 140:         [Obsolete(\"This method has no more usages and will be removed in a future version. Override ToLoggableString instead.\")]",
                "// Line 141:         public override string ToString(object val)",
                "// vulnerable line: 142: {",
                "// Line 143:             return ((DateTimeOffset) val).ToString();",
                "// vulnerable line: 144: }",
                "// Line 145: ",
                "// Line 146:         // 6.0 TODO: rename \"xml\" parameter as \"value\": it is not a xml string. The fact it generally comes from a xml",
                "// Line 147:         // attribute value is irrelevant to the method behavior. Replace override keyword by virtual after having",
                "// Line 148:         // removed the obsoleted base.",
                "// Line 149:         /// <inheritdoc cref=\"IVersionType.FromStringValue\"/>",
                "// Line 150: #pragma warning disable 672",
                "// Line 151:         public override object FromStringValue(string xml)",
                "// Line 152: #pragma warning restore 672",
                "// vulnerable line: 153: {",
                "// Line 154:             return DateTimeOffset.Parse(xml);",
                "// vulnerable line: 155: }",
                "// Line 156: ",
                "// Line 157:         public override string ObjectToSQLString(object value, Dialect.Dialect dialect)",
                "// vulnerable line: 158: {",
                "// vulnerable line: 159: return \"'\" + ((DateTimeOffset) value) + \"'\";",
                "// vulnerable line: 160: }",
                "// vulnerable line: 161: }",
                "// vulnerable line: 162: }"
            ]
        },
        {
            "filename_of_changes": "DateType.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 86:         /// <inheritdoc />",
                "// Line 87:         // Since 5.2",
                "// Line 88:         [Obsolete(\"This method has no more usages and will be removed in a future version. Override ToLoggableString instead.\")]",
                "// Line 89:         public override string ToString(object val) =>",
                "// Line 90:             ((DateTime) val).ToShortDateString();",
                "// Line 91: ",
                "// Line 92:         /// <inheritdoc />",
                "// Line 93:         public override object DefaultValue => customBaseDate;",
                "// Line 94: ",
                "// Line 95:         /// <inheritdoc />",
                "// vulnerable line: 96: public override string ObjectToSQLString(object value, Dialect.Dialect dialect) =>",
                "// Line 97:             \"'\" + ((DateTime)value).ToShortDateString() + \"'\";",
                "// Line 98: ",
                "// Line 99:         // Since v5",
                "// Line 100:         [Obsolete(\"Its only parameter, BaseValue, is obsolete.\")]",
                "// Line 101:         public void SetParameterValues(IDictionary<string, string> parameters)",
                "// Line 102:         {",
                "// Line 103:             if(parameters == null)",
                "// Line 104:             {",
                "// Line 105:                 return;",
                "// Line 106:             }"
            ]
        },
        {
            "filename_of_changes": "DecimalType.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 59: ",
                "// Line 60:         // Since 5.2",
                "// Line 61:         [Obsolete(\"This method has no more usages and will be removed in a future version.\")]",
                "// Line 62:         public override object FromStringValue(string xml)",
                "// Line 63:         {",
                "// Line 64:             return Decimal.Parse(xml);",
                "// Line 65:         }",
                "// Line 66: ",
                "// Line 67:         public override string ObjectToSQLString(object value, Dialect.Dialect dialect)",
                "// Line 68:         {",
                "// vulnerable line: 69: return value.ToString();",
                "// Line 70:         }",
                "// Line 71: ",
                "// Line 72:         // 6.0 TODO: rename \"xml\" parameter as \"value\": it is not a xml string. The fact it generally comes from a xml",
                "// Line 73:         // attribute value is irrelevant to the method behavior.",
                "// Line 74:         /// <inheritdoc />",
                "// Line 75:         public object StringToObject(string xml)",
                "// Line 76:         {",
                "// Line 77:             // 6.0 TODO: inline the call.",
                "// Line 78: #pragma warning disable 618",
                "// Line 79:             return FromStringValue(xml);"
            ]
        },
        {
            "filename_of_changes": "DoubleType.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 59:             get { return typeof(double); }",
                "// Line 60:         }",
                "// Line 61: ",
                "// Line 62:         public override object DefaultValue",
                "// Line 63:         {",
                "// Line 64:             get { return 0D; }",
                "// Line 65:         }",
                "// Line 66: ",
                "// Line 67:         public override string ObjectToSQLString(object value, Dialect.Dialect dialect)",
                "// Line 68:         {",
                "// vulnerable line: 69: return value.ToString();",
                "// Line 70:         }",
                "// Line 71:     }",
                "// Line 72: }"
            ]
        },
        {
            "filename_of_changes": "EnumCharType.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: using System;",
                "// Line 2: using System.Data.Common;",
                "// Line 3: using NHibernate.Engine;",
                "// Line 4: using NHibernate.SqlTypes;",
                "// Line 5: ",
                "// Line 6: namespace NHibernate.Type",
                "// vulnerable line: 7: {",
                "// Line 8:     [Serializable]",
                "// Line 9:     public partial class EnumCharType<T> : AbstractEnumType",
                "// vulnerable line: 10: {",
                "// Line 11:         public EnumCharType() : base(new StringFixedLengthSqlType(1),typeof(T))",
                "// vulnerable line: 12: {",
                "// vulnerable line: 13: }",
                "// Line 14: ",
                "// Line 15:         public virtual object GetInstance(object code)",
                "// vulnerable line: 16: {",
                "// Line 17:             if (code is String)",
                "// vulnerable line: 18: {",
                "// Line 19:                 return GetInstanceFromString((String) code);",
                "// vulnerable line: 20: }",
                "// Line 21:             else if (code is Char)",
                "// vulnerable line: 22: {",
                "// Line 23:                 return GetInstanceFromChar((Char) code);",
                "// vulnerable line: 24: }",
                "// Line 25:             else",
                "// vulnerable line: 26: {",
                "// Line 27:                 throw new HibernateException(string.Format(\"Can't Parse {0} as {1}\", code, ReturnedClass.Name));",
                "// vulnerable line: 28: }",
                "// vulnerable line: 29: }",
                "// Line 30: ",
                "// Line 31:         private object GetInstanceFromString(String s)",
                "// vulnerable line: 32: {",
                "// Line 33:             if (s.Length == 0) throw new HibernateException(string.Format(\"Can't Parse empty string as {0}\", this.ReturnedClass.Name));",
                "// Line 34: ",
                "// Line 35:             if (s.Length == 1)",
                "// vulnerable line: 36: {",
                "// Line 37:                 //String representation of underlying char value e.g. \"R\"",
                "// Line 38:                 return GetInstanceFromChar(s[0]);",
                "// vulnerable line: 39: }",
                "// Line 40:             else",
                "// vulnerable line: 41: {",
                "// Line 42:                 //Name of enum value e.g. \"Red\"",
                "// Line 43:                 try",
                "// vulnerable line: 44: {",
                "// Line 45:                     return Enum.Parse(this.ReturnedClass, s, false);",
                "// vulnerable line: 46: }",
                "// Line 47:                 catch (ArgumentException)",
                "// vulnerable line: 48: {",
                "// Line 49:                     try",
                "// vulnerable line: 50: {",
                "// Line 51:                         return Enum.Parse(this.ReturnedClass, s, true);",
                "// vulnerable line: 52: }",
                "// Line 53:                     catch (ArgumentException ae)",
                "// vulnerable line: 54: {",
                "// Line 55:                         throw new HibernateException(string.Format(\"Can't Parse {0} as {1}\", s, this.ReturnedClass.Name), ae);",
                "// vulnerable line: 56: }",
                "// vulnerable line: 57: }",
                "// vulnerable line: 58: }",
                "// vulnerable line: 59: }",
                "// Line 60: ",
                "// Line 61:         private object GetInstanceFromChar(Char c)",
                "// vulnerable line: 62: {",
                "// Line 63:             Object instance;",
                "// Line 64: ",
                "// Line 65:             instance = Enum.ToObject(this.ReturnedClass, c);",
                "// Line 66:             if (Enum.IsDefined(this.ReturnedClass, instance)) return instance;",
                "// Line 67: ",
                "// Line 68:             instance = Enum.ToObject(this.ReturnedClass, Alternate(c));",
                "// Line 69:             if (Enum.IsDefined(this.ReturnedClass, instance)) return instance;",
                "// Line 70: ",
                "// Line 71:             throw new HibernateException(string.Format(\"Can't Parse {0} as {1}\", c, this.ReturnedClass.Name));",
                "// vulnerable line: 72: }",
                "// Line 73: ",
                "// Line 74:         private Char Alternate(Char c)",
                "// vulnerable line: 75: {",
                "// Line 76:             return Char.IsUpper(c) ? Char.ToLower(c) : Char.ToUpper(c);",
                "// vulnerable line: 77: }",
                "// Line 78: ",
                "// Line 79:         /// <summary>",
                "// Line 80:         /// Converts the given enum instance into a basic type.",
                "// Line 81:         /// </summary>",
                "// Line 82:         /// <param name=\"instance\"></param>",
                "// Line 83:         /// <returns></returns>",
                "// Line 84:         public virtual object GetValue(object instance)",
                "// vulnerable line: 85: {",
                "// Line 86:             if (instance == null)",
                "// vulnerable line: 87: {",
                "// Line 88:                 return null;",
                "// vulnerable line: 89: }",
                "// Line 90:             else",
                "// vulnerable line: 91: {",
                "// Line 92:                 return (Char) (Int32) instance;",
                "// vulnerable line: 93: }",
                "// vulnerable line: 94: }",
                "// Line 95: ",
                "// Line 96:         public override void Set(DbCommand cmd, object value, int index, ISessionImplementor session)",
                "// vulnerable line: 97: {",
                "// Line 98:             var par = cmd.Parameters[index];",
                "// Line 99:             if (value == null)",
                "// vulnerable line: 100: {",
                "// Line 101:                 par.Value = DBNull.Value;",
                "// vulnerable line: 102: }",
                "// Line 103:             else",
                "// vulnerable line: 104: {",
                "// Line 105:                 par.Value = GetValue(value).ToString();",
                "// vulnerable line: 106: }",
                "// vulnerable line: 107: }",
                "// Line 108: ",
                "// Line 109:         public override object Get(DbDataReader rs, int index, ISessionImplementor session)",
                "// vulnerable line: 110: {",
                "// Line 111:             object code = rs[index];",
                "// Line 112:             if (code == DBNull.Value || code == null)",
                "// vulnerable line: 113: {",
                "// Line 114:                 return null;",
                "// vulnerable line: 115: }",
                "// Line 116:             else",
                "// vulnerable line: 117: {",
                "// Line 118:                 return GetInstance(code);",
                "// vulnerable line: 119: }",
                "// vulnerable line: 120: }",
                "// Line 121: ",
                "// Line 122:         public override object Get(DbDataReader rs, string name, ISessionImplementor session)",
                "// vulnerable line: 123: {",
                "// Line 124:             return Get(rs, rs.GetOrdinal(name), session);",
                "// vulnerable line: 125: }",
                "// Line 126: ",
                "// Line 127:         public override string Name",
                "// vulnerable line: 128: {",
                "// Line 129:             get { return \"enumchar - \" + this.ReturnedClass.Name; }",
                "// vulnerable line: 130: }",
                "// Line 131: ",
                "// Line 132:         /// <inheritdoc />",
                "// Line 133:         public override string ToLoggableString(object value, ISessionFactoryImplementor factory)",
                "// vulnerable line: 134: {",
                "// Line 135:             return (value == null) ? null :",
                "// Line 136:                 // 6.0 TODO: inline this call.",
                "// Line 137: #pragma warning disable 618",
                "// Line 138:                 ToString(value);",
                "// Line 139: #pragma warning restore 618",
                "// vulnerable line: 140: }",
                "// Line 141: ",
                "// Line 142:         // Since 5.2",
                "// Line 143:         [Obsolete(\"This method has no more usages and will be removed in a future version. Override ToLoggableString instead.\")]",
                "// Line 144:         public override string ToString(object value)",
                "// vulnerable line: 145: {",
                "// Line 146:             return (value == null) ? null : GetValue(value).ToString();",
                "// vulnerable line: 147: }",
                "// Line 148: ",
                "// Line 149:         public override object Assemble(object cached, ISessionImplementor session, object owner)",
                "// vulnerable line: 150: {",
                "// Line 151:             if (cached == null)",
                "// vulnerable line: 152: {",
                "// Line 153:                 return null;",
                "// vulnerable line: 154: }",
                "// Line 155:             else",
                "// vulnerable line: 156: {",
                "// Line 157:                 return GetInstance(cached);",
                "// vulnerable line: 158: }",
                "// vulnerable line: 159: }",
                "// Line 160: ",
                "// Line 161:         public override object Disassemble(object value, ISessionImplementor session, object owner)",
                "// vulnerable line: 162: {",
                "// Line 163:             return (value == null) ? null : GetValue(value);",
                "// vulnerable line: 164: }",
                "// Line 165: ",
                "// Line 166:         // Since 5.2",
                "// Line 167:         [Obsolete(\"This method has no more usages and will be removed in a future version.\")]",
                "// Line 168:         public override object FromStringValue(string xml)",
                "// vulnerable line: 169: {",
                "// Line 170:             return GetInstance(xml);",
                "// vulnerable line: 171: }",
                "// Line 172: ",
                "// Line 173:         public override string ObjectToSQLString(object value, Dialect.Dialect dialect)",
                "// vulnerable line: 174: {",
                "// Line 175:             return ''' + GetValue(value).ToString() + ''';",
                "// vulnerable line: 176: }",
                "// vulnerable line: 177: }",
                "// vulnerable line: 178: }"
            ]
        },
        {
            "filename_of_changes": "Environment.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "6",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "GuidType.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 81:             get { return typeof(Guid); }",
                "// Line 82:         }",
                "// Line 83: ",
                "// Line 84:         public override object DefaultValue",
                "// Line 85:         {",
                "// Line 86:             get { return Guid.Empty; }",
                "// Line 87:         }",
                "// Line 88: ",
                "// Line 89:         public override string ObjectToSQLString(object value, Dialect.Dialect dialect)",
                "// Line 90:         {",
                "// vulnerable line: 91: return \"'\" + value + \"'\";",
                "// Line 92:         }",
                "// Line 93:     }",
                "// Line 94: }"
            ]
        },
        {
            "filename_of_changes": "Hierarchy.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "18",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "IngresDialect.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "5",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "Int16Type.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "3",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 6: //     the code is regenerated.",
                "// Line 7: // </auto-generated>",
                "// Line 8: //------------------------------------------------------------------------------",
                "// Line 9: ",
                "// Line 10: ",
                "// Line 11: using System;",
                "// Line 12: using System.Collections;",
                "// Line 13: using System.Data.Common;",
                "// Line 14: using NHibernate.Engine;",
                "// Line 15: using NHibernate.SqlTypes;",
                "// vulnerable line: 16: using System.Collections.Generic;",
                "// vulnerable line: 17: using System.Data;",
                "// Line 18: ",
                "// Line 19: namespace NHibernate.Type",
                "// Line 20: {",
                "// Line 21:     using System.Threading.Tasks;",
                "// Line 22:     using System.Threading;",
                "// Line 23:     public partial class Int16Type : PrimitiveType, IDiscriminatorType, IVersionType",
                "// Line 24:     {",
                "// Line 25: ",
                "// Line 26:         #region IVersionType Members",
                "// Line 27: "
            ]
        },
        {
            "filename_of_changes": "Int16Type.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "4",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: using System;",
                "// Line 2: using System.Collections;",
                "// Line 3: using System.Data.Common;",
                "// Line 4: using NHibernate.Engine;",
                "// Line 5: using NHibernate.SqlTypes;",
                "// vulnerable line: 6: using System.Collections.Generic;",
                "// vulnerable line: 7: using System.Data;",
                "// Line 8: ",
                "// Line 9: namespace NHibernate.Type",
                "// Line 10: {",
                "// Line 11:     /// <summary>",
                "// Line 12:     /// Maps a <see cref=\"System.Int16\"/> Property ",
                "// Line 13:     /// to a <see cref=\"DbType.Int16\"/> column.",
                "// Line 14:     /// </summary>",
                "// Line 15:     [Serializable]",
                "// Line 16:     public partial class Int16Type : PrimitiveType, IDiscriminatorType, IVersionType",
                "// Line 17:     {",
                "// Line 107:             get { return typeof (Int16); }",
                "// Line 108:         }",
                "// Line 109: ",
                "// Line 110:         public override object DefaultValue",
                "// Line 111:         {",
                "// Line 112:             get { return ZERO; }",
                "// Line 113:         }",
                "// Line 114: ",
                "// Line 115:         public override string ObjectToSQLString(object value, Dialect.Dialect dialect)",
                "// Line 116:         {",
                "// vulnerable line: 117: return value.ToString();",
                "// Line 118:         }",
                "// Line 119:     }",
                "// Line 120: }"
            ]
        },
        {
            "filename_of_changes": "Int32Type.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "3",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 6: //     the code is regenerated.",
                "// Line 7: // </auto-generated>",
                "// Line 8: //------------------------------------------------------------------------------",
                "// Line 9: ",
                "// Line 10: ",
                "// Line 11: using System;",
                "// Line 12: using System.Collections;",
                "// Line 13: using System.Data.Common;",
                "// Line 14: using NHibernate.Engine;",
                "// Line 15: using NHibernate.SqlTypes;",
                "// vulnerable line: 16: using System.Collections.Generic;",
                "// vulnerable line: 17: using System.Data;",
                "// Line 18: ",
                "// Line 19: namespace NHibernate.Type",
                "// Line 20: {",
                "// Line 21:     using System.Threading.Tasks;",
                "// Line 22:     using System.Threading;",
                "// Line 23:     public partial class Int32Type : PrimitiveType, IDiscriminatorType, IVersionType",
                "// Line 24:     {",
                "// Line 25: ",
                "// Line 26:         #region IVersionType Members",
                "// Line 27: "
            ]
        },
        {
            "filename_of_changes": "Int32Type.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "4",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: using System;",
                "// Line 2: using System.Collections;",
                "// Line 3: using System.Data.Common;",
                "// Line 4: using NHibernate.Engine;",
                "// Line 5: using NHibernate.SqlTypes;",
                "// vulnerable line: 6: using System.Collections.Generic;",
                "// vulnerable line: 7: using System.Data;",
                "// Line 8: ",
                "// Line 9: namespace NHibernate.Type",
                "// Line 10: {",
                "// Line 11:     /// <summary>",
                "// Line 12:     /// Maps a <see cref=\"System.Int32\"/> Property ",
                "// Line 13:     /// to a <see cref=\"DbType.Int32\"/> column.",
                "// Line 14:     /// </summary>",
                "// Line 15:     [Serializable]",
                "// Line 16:     public partial class Int32Type : PrimitiveType, IDiscriminatorType, IVersionType",
                "// Line 17:     {",
                "// Line 107:             get { return typeof(Int32); }",
                "// Line 108:         }",
                "// Line 109: ",
                "// Line 110:         public override object DefaultValue",
                "// Line 111:         {",
                "// Line 112:             get { return ZERO; }",
                "// Line 113:         }",
                "// Line 114: ",
                "// Line 115:         public override string ObjectToSQLString(object value, Dialect.Dialect dialect)",
                "// Line 116:         {",
                "// vulnerable line: 117: return value.ToString();",
                "// Line 118:         }",
                "// Line 119:     }",
                "// Line 120: }"
            ]
        },
        {
            "filename_of_changes": "Int64Type.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "Int64Type.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 107:             get { return typeof(Int64); }",
                "// Line 108:         }",
                "// Line 109: ",
                "// Line 110:         public override object DefaultValue",
                "// Line 111:         {",
                "// Line 112:             get { return ZERO; }",
                "// Line 113:         }",
                "// Line 114: ",
                "// Line 115:         public override string ObjectToSQLString(object value, Dialect.Dialect dialect)",
                "// Line 116:         {",
                "// vulnerable line: 117: return value.ToString();",
                "// Line 118:         }",
                "// Line 119:     }",
                "// Line 120: }"
            ]
        },
        {
            "filename_of_changes": "MsSql2000Dialect.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "4",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "MySQLDialect.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "10",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "Oracle10gTestDialect.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "13",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "Oracle8iDialect.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "5",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "SByteType.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 109:             get { return typeof(SByte); }",
                "// Line 110:         }",
                "// Line 111: ",
                "// Line 112:         public override object DefaultValue",
                "// Line 113:         {",
                "// Line 114:             get { return ZERO; }",
                "// Line 115:         }",
                "// Line 116: ",
                "// Line 117:         public override string ObjectToSQLString(object value, Dialect.Dialect dialect)",
                "// Line 118:         {",
                "// vulnerable line: 119: return value.ToString();",
                "// Line 120:         }",
                "// Line 121:     }",
                "// Line 122: }"
            ]
        },
        {
            "filename_of_changes": "SapSQLAnywhere.cfg.xml",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 9:         <property name=\"connection.driver_class\">NHibernate.Driver.SapSQLAnywhere17Driver</property>",
                "// Line 10:         <!-- Sap.Data.SQLAnywhere does not support re-enlisting in the same transaction, wrecking many usages",
                "// Line 11:              with NHibernate when both NHibernate and the connection performs auto-enlistment. Setting",
                "// Line 12:              \"Enlist=false;\" in the connection string solves this.",
                "// Line 13:              It also requires to have the MSDTC service running, even for transaction scopes using a",
                "// Line 14:              single connection. -->",
                "// Line 15:         <property name=\"connection.connection_string\">",
                "// Line 16:             UID=DBA;PWD=sql;Server=localhost;DBN=nhibernate;DBF=c:",
                "// Line 17: hibernate.db;ASTOP=No;Enlist=false;",
                "// Line 18:         </property>",
                "// vulnerable line: 19: <property name=\"dialect\">NHibernate.Dialect.SybaseSQLAnywhere12Dialect</property>",
                "// Line 20:         <property name=\"query.substitutions\">true=1;false=0</property>",
                "// Line 21:     </session-factory>",
                "// Line 22: </hibernate-configuration>"
            ]
        },
        {
            "filename_of_changes": "SapSQLAnywhere17TestDialect.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "15",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 33:         /// SQL Anywhere treats string parameters concatenation as yielding <c>numeric</c> and fails casting",
                "// Line 34:         /// the actual string value if it is not castable to a number. Likewise, in <c>case when</c>",
                "// Line 35:         /// statement, it treats them as yielding <c>integer</c> if all case yields parameter values, whatever",
                "// Line 36:         /// the actual type of the parameters. And in case of <c>numeric</c> computations with a <c>numeric</c>",
                "// Line 37:         /// parameter, the result is treated as a fractional digit lossy <c>double<c> instead of being kept",
                "// Line 38:         /// <c>numeric</c>. See https://stackoverflow.com/q/52558715/1178314.",
                "// Line 39:         /// </remarks>",
                "// Line 40:         public override bool HasBrokenTypeInferenceOnSelectedParameters => true;",
                "// Line 41: ",
                "// Line 42:         /// <summary>",
                "// vulnerable line: 43: /// Does not support SELECT FOR UPDATE ",
                "// Line 44:         /// </summary>",
                "// Line 45:         public override bool SupportsSelectForUpdate => false;",
                "// Line 46:     }",
                "// Line 47: }"
            ]
        },
        {
            "filename_of_changes": "SingleType.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 84:             get { return typeof(Single); }",
                "// Line 85:         }",
                "// Line 86: ",
                "// Line 87:         public override object DefaultValue",
                "// Line 88:         {",
                "// Line 89:             get { return ZERO; }",
                "// Line 90:         }",
                "// Line 91: ",
                "// Line 92:         public override string ObjectToSQLString(object value, Dialect.Dialect dialect)",
                "// Line 93:         {",
                "// vulnerable line: 94: return value.ToString();",
                "// Line 95:         }",
                "// Line 96:     }",
                "// Line 97: }"
            ]
        },
        {
            "filename_of_changes": "SqlInsertBuilderFixture.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 49:         {",
                "// Line 50:             Configuration cfg = new Configuration();",
                "// Line 51:             ISessionFactory factory = cfg.BuildSessionFactory();",
                "// Line 52: ",
                "// Line 53:             ISessionFactoryImplementor factoryImpl = (ISessionFactoryImplementor)factory;",
                "// Line 54:             SqlInsertBuilder insert = new SqlInsertBuilder(factoryImpl);",
                "// Line 55: ",
                "// Line 56:             insert.SetTableName(\"test_insert_builder\");",
                "// Line 57: ",
                "// Line 58: #pragma warning disable CS0618 // Type or member is obsolete",
                "// vulnerable line: 59: insert.AddColumn(\"stringColumn\", \"aSQLValue\", (ILiteralType)NHibernateUtil.String);",
                "// Line 60: #pragma warning restore CS0618 // Type or member is obsolete",
                "// Line 61:             insert.SetComment(\"Test insert\");",
                "// Line 62:             string expectedSql =",
                "// Line 63:     \"/* Test insert */ INSERT INTO test_insert_builder (stringColumn) VALUES ('aSQLValue')\";",
                "// Line 64:             Assert.AreEqual(expectedSql, insert.ToSqlString().ToString(), \"SQL String\");",
                "// Line 65:         }",
                "// Line 66: ",
                "// Line 67:         [Test]",
                "// Line 68:         public void MixingParametersAndValues()",
                "// Line 69:         {"
            ]
        },
        {
            "filename_of_changes": "SybaseASA9Dialect.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "11",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 2: using System.Data.Common;",
                "// Line 3: ",
                "// Line 4: using NHibernate.Cfg;",
                "// Line 5: using NHibernate.Dialect.Function;",
                "// Line 6: using NHibernate.Dialect.Schema;",
                "// Line 7: using NHibernate.SqlCommand;",
                "// Line 8: ",
                "// Line 9: namespace NHibernate.Dialect",
                "// Line 10: {",
                "// Line 11:     /// <summary>",
                "// vulnerable line: 12: /// An SQL dialect for Sybase Adaptive Server Anywhere 9.0",
                "// Line 13:     /// </summary>",
                "// Line 14:     /// <remarks>",
                "// Line 15:     /// <p>",
                "// Line 16:     /// This dialect probably will not work with schema-export.  If anyone out there",
                "// Line 17:     /// can fill in the ctor with DbTypes to Strings that would be helpful.",
                "// Line 18:     /// </p>",
                "// Line 19:     /// The dialect defaults the following configuration properties:",
                "// Line 20:     /// <list type=\"table\">",
                "// Line 21:     ///    <listheader>",
                "// Line 22:     ///        <term>Property</term>"
            ]
        },
        {
            "filename_of_changes": "SybaseSQLAnywhere10Dialect.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "10",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "TestDialect.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 98:         /// <remarks>This property is useful for cases where empty inserts happens only when the entities",
                "// Line 99:         /// generator is <c>native</c> while the dialect uses <c>identity</c> for this generator.</remarks>",
                "// Line 100:         public bool SupportsEmptyInsertsOrHasNonIdentityNativeGenerator",
                "// Line 101:             => SupportsEmptyInserts || !HasIdentityNativeGenerator;",
                "// Line 102: ",
                "// Line 103:         /// <summary>",
                "// Line 104:         /// Supports condition not bound to any data, like \"where @p1 = @p2\".",
                "// Line 105:         /// </summary>",
                "// Line 106:         public virtual bool SupportsNonDataBoundCondition => true;",
                "// Line 107: ",
                "// vulnerable line: 108: public bool SupportsSqlType(SqlType sqlType)",
                "// Line 109:         {",
                "// Line 110:             try",
                "// Line 111:             {",
                "// Line 112:                 _dialect.GetTypeName(sqlType);",
                "// Line 113:                 return true;",
                "// Line 114:             }",
                "// Line 115:             catch",
                "// Line 116:             {",
                "// Line 117:                 return false;",
                "// Line 118:             }"
            ]
        },
        {
            "filename_of_changes": "TicksType.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "TicksType.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "TimeAsTimeSpanType.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "3",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 6: //     the code is regenerated.",
                "// Line 7: // </auto-generated>",
                "// Line 8: //------------------------------------------------------------------------------",
                "// Line 9: ",
                "// Line 10: ",
                "// Line 11: using System;",
                "// Line 12: using System.Collections;",
                "// Line 13: using System.Data.Common;",
                "// Line 14: using NHibernate.Engine;",
                "// Line 15: using NHibernate.SqlTypes;",
                "// vulnerable line: 16: using System.Collections.Generic;",
                "// vulnerable line: 17: using System.Data;",
                "// Line 18: ",
                "// Line 19: namespace NHibernate.Type",
                "// Line 20: {",
                "// Line 21:     using System.Threading.Tasks;",
                "// Line 22:     using System.Threading;",
                "// Line 23:     public partial class TimeAsTimeSpanType : PrimitiveType, IVersionType",
                "// Line 24:     {",
                "// Line 25: ",
                "// Line 26:         #region IVersionType Members",
                "// Line 27: "
            ]
        },
        {
            "filename_of_changes": "TimeAsTimeSpanType.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "4",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: using System;",
                "// Line 2: using System.Collections;",
                "// Line 3: using System.Data.Common;",
                "// Line 4: using NHibernate.Engine;",
                "// Line 5: using NHibernate.SqlTypes;",
                "// vulnerable line: 6: using System.Collections.Generic;",
                "// vulnerable line: 7: using System.Data;",
                "// Line 8: ",
                "// Line 9: namespace NHibernate.Type",
                "// Line 10: {",
                "// Line 11:     /// <summary>",
                "// Line 12:     /// Maps a <see cref=\"System.TimeSpan\" /> Property to an <see cref=\"DbType.Time\" /> column ",
                "// Line 13:     /// This is an extra way to map a <see cref=\"DbType.Time\"/>. You already have <see cref=\"TimeType\"/>",
                "// Line 14:     /// but mapping against a <see cref=\"DateTime\"/>.",
                "// Line 15:     /// </summary>",
                "// Line 16:     [Serializable]",
                "// Line 17:     public partial class TimeAsTimeSpanType : PrimitiveType, IVersionType"
            ]
        },
        {
            "filename_of_changes": "TimeSpanType.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "3",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 6: //     the code is regenerated.",
                "// Line 7: // </auto-generated>",
                "// Line 8: //------------------------------------------------------------------------------",
                "// Line 9: ",
                "// Line 10: ",
                "// Line 11: using System;",
                "// Line 12: using System.Collections;",
                "// Line 13: using System.Data.Common;",
                "// Line 14: using NHibernate.Engine;",
                "// Line 15: using NHibernate.SqlTypes;",
                "// vulnerable line: 16: using System.Collections.Generic;",
                "// vulnerable line: 17: using System.Data;",
                "// Line 18: ",
                "// Line 19: namespace NHibernate.Type",
                "// Line 20: {",
                "// Line 21:     using System.Threading.Tasks;",
                "// Line 22:     using System.Threading;",
                "// Line 23:     public partial class TimeSpanType : PrimitiveType, IVersionType, ILiteralType",
                "// Line 24:     {",
                "// Line 25: ",
                "// Line 26:         #region IVersionType Members",
                "// Line 27: "
            ]
        },
        {
            "filename_of_changes": "TimeSpanType.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "4",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: using System;",
                "// Line 2: using System.Collections;",
                "// Line 3: using System.Data.Common;",
                "// Line 4: using NHibernate.Engine;",
                "// Line 5: using NHibernate.SqlTypes;",
                "// vulnerable line: 6: using System.Collections.Generic;",
                "// vulnerable line: 7: using System.Data;",
                "// Line 8: ",
                "// Line 9: namespace NHibernate.Type",
                "// Line 10: {",
                "// Line 11:     /// <summary>",
                "// Line 12:     /// Maps a <see cref=\"System.TimeSpan\" /> Property to an <see cref=\"DbType.Int64\" /> column ",
                "// Line 13:     /// </summary>",
                "// Line 14:     [Serializable]",
                "// Line 15:     public partial class TimeSpanType : PrimitiveType, IVersionType, ILiteralType",
                "// Line 16:     {",
                "// Line 17:         /// <summary></summary>"
            ]
        },
        {
            "filename_of_changes": "TimeType.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: using System;",
                "// Line 2: using System.Data;",
                "// Line 3: using System.Data.Common;",
                "// Line 4: using NHibernate.Engine;",
                "// Line 5: using NHibernate.SqlTypes;",
                "// Line 6: ",
                "// Line 7: namespace NHibernate.Type",
                "// vulnerable line: 8: {",
                "// Line 9:     /// <summary>",
                "// Line 10:     /// Maps a <see cref=\"System.DateTime\" /> Property to an DateTime column that only stores the ",
                "// Line 11:     /// Hours, Minutes, and Seconds of the DateTime as significant.",
                "// Line 12:     /// Also you have for <see cref=\"DbType.Time\"/> handling, the NHibernate Type <see cref=\"TimeAsTimeSpanType\"/>,",
                "// Line 13:     /// the which maps to a <see cref=\"TimeSpan\"/>.",
                "// Line 14:     /// </summary>",
                "// Line 15:     /// <remarks>",
                "// Line 16:     /// <para>",
                "// Line 17:     /// This defaults the Date to \"1753-01-01\" - that should not matter because",
                "// Line 18:     /// using this Type indicates that you don't care about the Date portion of the DateTime.",
                "// Line 19:     /// </para>",
                "// Line 20:     /// <para>",
                "// Line 21:     /// A more appropriate choice to store the duration/time is the <see cref=\"TimeSpanType\"/>.",
                "// Line 22:     /// The underlying <see cref=\"DbType.Time\"/> tends to be handled differently by different",
                "// Line 23:     /// DataProviders.",
                "// Line 24:     /// </para>",
                "// Line 25:     /// </remarks>",
                "// Line 26:     [Serializable]",
                "// Line 27:     public class TimeType : PrimitiveType, IIdentifierType, ILiteralType",
                "// vulnerable line: 28: {",
                "// Line 29:         private static readonly DateTime BaseDateValue = new DateTime(1753, 01, 01);",
                "// Line 30: ",
                "// Line 31:         /// <summary>",
                "// Line 32:         /// Default constructor.",
                "// Line 33:         /// </summary>",
                "// Line 34:         public TimeType() : base(SqlTypeFactory.Time)",
                "// vulnerable line: 35: {",
                "// vulnerable line: 36: }",
                "// Line 37: ",
                "// Line 38:         /// <summary>",
                "// Line 39:         /// Constructor for specifying a time with a scale. Use <see cref=\"SqlTypeFactory.GetTime\"/>.",
                "// Line 40:         /// </summary>",
                "// Line 41:         /// <param name=\"sqlType\">The sql type to use for the type.</param>",
                "// Line 42:         public TimeType(TimeSqlType sqlType) : base(sqlType)",
                "// vulnerable line: 43: {",
                "// vulnerable line: 44: }",
                "// Line 45: ",
                "// Line 46:         public override string Name",
                "// vulnerable line: 47: {",
                "// Line 48:             get { return \"Time\"; }",
                "// vulnerable line: 49: }",
                "// Line 50: ",
                "// Line 51:         public override object Get(DbDataReader rs, int index, ISessionImplementor session)",
                "// vulnerable line: 52: {",
                "// Line 53:             try",
                "// vulnerable line: 54: {",
                "// Line 55:                 if (rs[index] is TimeSpan time) //For those dialects where DbType.Time means TimeSpan.",
                "// vulnerable line: 56: {",
                "// Line 57:                     return BaseDateValue.AddTicks(time.Ticks);",
                "// vulnerable line: 58: }",
                "// Line 59: ",
                "// Line 60:                 DateTime dbValue = Convert.ToDateTime(rs[index]);",
                "// Line 61:                 return BaseDateValue.Add(dbValue.TimeOfDay);",
                "// vulnerable line: 62: }",
                "// Line 63:             catch (Exception ex)",
                "// vulnerable line: 64: {",
                "// Line 65:                 throw new FormatException(string.Format(\"Input string '{0}' was not in the correct format.\", rs[index]), ex);",
                "// vulnerable line: 66: }",
                "// vulnerable line: 67: }",
                "// Line 68: ",
                "// Line 69:         public override object Get(DbDataReader rs, string name, ISessionImplementor session)",
                "// vulnerable line: 70: {",
                "// Line 71:             return Get(rs, rs.GetOrdinal(name), session);",
                "// vulnerable line: 72: }",
                "// Line 73: ",
                "// Line 74:         public override System.Type ReturnedClass",
                "// vulnerable line: 75: {",
                "// Line 76:             get { return typeof(DateTime); }",
                "// vulnerable line: 77: }",
                "// Line 78: ",
                "// Line 79:         public override void Set(DbCommand st, object value, int index, ISessionImplementor session)",
                "// vulnerable line: 80: {",
                "// Line 81:             var dateTime = (DateTime)value;",
                "// Line 82:             if (dateTime < BaseDateValue)",
                "// vulnerable line: 83: {",
                "// Line 84:                 st.Parameters[index].Value = DBNull.Value;",
                "// Line 85:                 return;",
                "// vulnerable line: 86: }",
                "// Line 87:             if (session.Factory.ConnectionProvider.Driver.RequiresTimeSpanForTime)",
                "// Line 88:                 st.Parameters[index].Value = dateTime.TimeOfDay;",
                "// Line 89:             else",
                "// Line 90:                 st.Parameters[index].Value = dateTime;",
                "// vulnerable line: 91: }",
                "// Line 92: ",
                "// Line 93:         public override bool IsEqual(object x, object y)",
                "// vulnerable line: 94: {",
                "// Line 95:             if (x == y)",
                "// vulnerable line: 96: {",
                "// Line 97:                 return true;",
                "// vulnerable line: 98: }",
                "// Line 99:             if (x == null || y == null)",
                "// vulnerable line: 100: {",
                "// Line 101:                 return false;",
                "// vulnerable line: 102: }",
                "// Line 103: ",
                "// Line 104:             DateTime date1 = (DateTime)x;",
                "// Line 105:             DateTime date2 = (DateTime)y;",
                "// Line 106:             if (date1.Equals(date2))",
                "// Line 107:                 return true;",
                "// Line 108: ",
                "// Line 109:             return date1.Hour == date2.Hour",
                "// Line 110:                 && date1.Minute == date2.Minute",
                "// Line 111:                 && date1.Second == date2.Second;",
                "// vulnerable line: 112: }",
                "// Line 113: ",
                "// Line 114:         public override int GetHashCode(object x)",
                "// vulnerable line: 115: {",
                "// Line 116:             DateTime date = (DateTime)x;",
                "// Line 117:             int hashCode = 1;",
                "// Line 118:             unchecked",
                "// vulnerable line: 119: {",
                "// Line 120:                 hashCode = 31 * hashCode + date.Second;",
                "// Line 121:                 hashCode = 31 * hashCode + date.Minute;",
                "// Line 122:                 hashCode = 31 * hashCode + date.Hour;",
                "// vulnerable line: 123: }",
                "// Line 124:             return hashCode;",
                "// vulnerable line: 125: }",
                "// Line 126: ",
                "// Line 127:         /// <inheritdoc />",
                "// Line 128:         public override string ToLoggableString(object value, ISessionFactoryImplementor factory)",
                "// vulnerable line: 129: {",
                "// Line 130:             return (value == null) ? null :",
                "// Line 131:                 // 6.0 TODO: inline this call.",
                "// Line 132: #pragma warning disable 618",
                "// Line 133:                 ToString(value);",
                "// Line 134: #pragma warning restore 618",
                "// vulnerable line: 135: }",
                "// Line 136: ",
                "// Line 137:         // Since 5.2",
                "// Line 138:         [Obsolete(\"This method has no more usages and will be removed in a future version. Override ToLoggableString instead.\")]",
                "// Line 139:         public override string ToString(object val)",
                "// vulnerable line: 140: {",
                "// Line 141:             return ((DateTime)val).ToString(\"T\");",
                "// vulnerable line: 142: }",
                "// Line 143: ",
                "// Line 144:         // 6.0 TODO: rename \"xml\" parameter as \"value\": it is not a xml string. The fact it generally comes from a xml",
                "// Line 145:         // attribute value is irrelevant to the method behavior.",
                "// Line 146:         /// <inheritdoc />",
                "// Line 147:         public object StringToObject(string xml)",
                "// vulnerable line: 148: {",
                "// Line 149:             return string.IsNullOrEmpty(xml) ? null :",
                "// Line 150:                 // 6.0 TODO: inline the call.",
                "// Line 151: #pragma warning disable 618",
                "// Line 152:                 FromStringValue(xml);",
                "// Line 153: #pragma warning restore 618",
                "// vulnerable line: 154: }",
                "// Line 155: ",
                "// Line 156:         // Since 5.2",
                "// Line 157:         [Obsolete(\"This method has no more usages and will be removed in a future version.\")]",
                "// Line 158:         public override object FromStringValue(string xml)",
                "// vulnerable line: 159: {",
                "// Line 160:             return DateTime.Parse(xml);",
                "// vulnerable line: 161: }",
                "// Line 162: ",
                "// Line 163:         public override System.Type PrimitiveClass",
                "// vulnerable line: 164: {",
                "// Line 165:             get { return typeof(DateTime); }",
                "// vulnerable line: 166: }",
                "// Line 167: ",
                "// Line 168:         public override object DefaultValue",
                "// vulnerable line: 169: {",
                "// Line 170:             get { return BaseDateValue; }",
                "// vulnerable line: 171: }",
                "// Line 172: ",
                "// Line 173:         public override string ObjectToSQLString(object value, Dialect.Dialect dialect)",
                "// vulnerable line: 174: {",
                "// vulnerable line: 175: return \"'\" + ((DateTime)value).ToShortTimeString() + \"'\";",
                "// vulnerable line: 176: }",
                "// vulnerable line: 177: }",
                "// vulnerable line: 178: }"
            ]
        },
        {
            "filename_of_changes": "UInt16Type.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "UInt16Type.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 107:             get { return typeof(UInt16); }",
                "// Line 108:         }",
                "// Line 109: ",
                "// Line 110:         public override object DefaultValue",
                "// Line 111:         {",
                "// Line 112:             get { return ZERO; }",
                "// Line 113:         }",
                "// Line 114: ",
                "// Line 115:         public override string ObjectToSQLString(object value, Dialect.Dialect dialect)",
                "// Line 116:         {",
                "// vulnerable line: 117: return value.ToString();",
                "// Line 118:         }",
                "// Line 119:     }",
                "// Line 120: }"
            ]
        },
        {
            "filename_of_changes": "UInt32Type.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "UInt32Type.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 107:             get { return typeof(UInt32); }",
                "// Line 108:         }",
                "// Line 109: ",
                "// Line 110:         public override object DefaultValue",
                "// Line 111:         {",
                "// Line 112:             get { return ZERO; }",
                "// Line 113:         }",
                "// Line 114: ",
                "// Line 115:         public override string ObjectToSQLString(object value, Dialect.Dialect dialect)",
                "// Line 116:         {",
                "// vulnerable line: 117: return value.ToString();",
                "// Line 118:         }",
                "// Line 119:     }",
                "// Line 120: }"
            ]
        },
        {
            "filename_of_changes": "UInt64Type.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "UInt64Type.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 106:             get { return typeof(UInt64); }",
                "// Line 107:         }",
                "// Line 108: ",
                "// Line 109:         public override object DefaultValue",
                "// Line 110:         {",
                "// Line 111:             get { return ZERO; }",
                "// Line 112:         }",
                "// Line 113: ",
                "// Line 114:         public override string ObjectToSQLString(object value, Dialect.Dialect dialect)",
                "// Line 115:         {",
                "// vulnerable line: 116: return value.ToString();",
                "// Line 117:         }",
                "// Line 118:     }",
                "// Line 119: }"
            ]
        },
        {
            "filename_of_changes": "UriType.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: using System;",
                "// Line 2: using System.Data.Common;",
                "// Line 3: using NHibernate.Engine;",
                "// Line 4: using NHibernate.SqlTypes;",
                "// Line 5: ",
                "// Line 6: namespace NHibernate.Type",
                "// vulnerable line: 7: {",
                "// Line 8:     [Serializable]",
                "// Line 9:     public partial class UriType : ImmutableType, IDiscriminatorType",
                "// vulnerable line: 10: {",
                "// Line 11:         public UriType()",
                "// Line 12:             : base(new StringSqlType())",
                "// vulnerable line: 13: {",
                "// vulnerable line: 14: }",
                "// Line 15: ",
                "// Line 16:         public UriType(SqlType sqlType) : base(sqlType)",
                "// vulnerable line: 17: {",
                "// vulnerable line: 18: }",
                "// Line 19: ",
                "// Line 20:         public override string Name",
                "// vulnerable line: 21: {",
                "// Line 22:             get { return \"Uri\"; }",
                "// vulnerable line: 23: }",
                "// Line 24: ",
                "// Line 25:         public override System.Type ReturnedClass",
                "// vulnerable line: 26: {",
                "// Line 27:             get { return typeof(Uri); }",
                "// vulnerable line: 28: }",
                "// Line 29: ",
                "// Line 30:         // 6.0 TODO: rename \"xml\" parameter as \"value\": it is not a xml string. The fact it generally comes from a xml",
                "// Line 31:         // attribute value is irrelevant to the method behavior.",
                "// Line 32:         /// <inheritdoc />",
                "// Line 33:         public object StringToObject(string xml)",
                "// vulnerable line: 34: {",
                "// Line 35:             return new Uri(xml, UriKind.RelativeOrAbsolute);",
                "// vulnerable line: 36: }",
                "// Line 37: ",
                "// Line 38:         private static string GetStringRepresentation(object value)",
                "// vulnerable line: 39: {",
                "// Line 40:             return ((Uri)value).OriginalString;",
                "// vulnerable line: 41: }",
                "// Line 42: ",
                "// Line 43:         public override void Set(DbCommand cmd, object value, int index, ISessionImplementor session)",
                "// vulnerable line: 44: {",
                "// Line 45:             cmd.Parameters[index].Value =",
                "// Line 46:                 // 6.0 TODO: inline the call.",
                "// Line 47: #pragma warning disable 618",
                "// Line 48:                 ToString(value);",
                "// Line 49: #pragma warning restore 618",
                "// vulnerable line: 50: }",
                "// Line 51: ",
                "// Line 52:         public override object Get(DbDataReader rs, int index, ISessionImplementor session)",
                "// vulnerable line: 53: {",
                "// Line 54:             return StringToObject(Convert.ToString(rs[index]));",
                "// vulnerable line: 55: }",
                "// Line 56: ",
                "// Line 57:         public override object Get(DbDataReader rs, string name, ISessionImplementor session)",
                "// vulnerable line: 58: {",
                "// Line 59:             return StringToObject(Convert.ToString(rs[name]));",
                "// vulnerable line: 60: }",
                "// Line 61: ",
                "// Line 62:         /// <inheritdoc />",
                "// Line 63:         public override string ToLoggableString(object value, ISessionFactoryImplementor factory)",
                "// vulnerable line: 64: {",
                "// Line 65:             return (value == null) ? null :",
                "// Line 66:                 // 6.0 TODO: inline this call.",
                "// Line 67: #pragma warning disable 618",
                "// Line 68:                 ToString(value);",
                "// Line 69: #pragma warning restore 618",
                "// vulnerable line: 70: }",
                "// Line 71: ",
                "// Line 72:         // Since 5.2",
                "// Line 73:         [Obsolete(\"This method has no more usages and will be removed in a future version. Override ToLoggableString instead.\")]",
                "// Line 74:         public override string ToString(object val)",
                "// vulnerable line: 75: {",
                "// Line 76:             return GetStringRepresentation(val);",
                "// vulnerable line: 77: }",
                "// Line 78: ",
                "// Line 79:         // Since 5.2",
                "// Line 80:         [Obsolete(\"This method has no more usages and will be removed in a future version.\")]",
                "// Line 81:         public override object FromStringValue(string xml)",
                "// vulnerable line: 82: {",
                "// Line 83:             return StringToObject(xml);",
                "// vulnerable line: 84: }",
                "// Line 85: ",
                "// Line 86:         public string ObjectToSQLString(object value, Dialect.Dialect dialect)",
                "// vulnerable line: 87: {",
                "// vulnerable line: 88: return \"'\" + ((Uri)value).OriginalString + \"'\";",
                "// vulnerable line: 89: }",
                "// Line 90: ",
                "// Line 91:         /// <inheritdoc />",
                "// Line 92:         public override object Assemble(object cached, ISessionImplementor session, object owner)",
                "// vulnerable line: 93: {",
                "// Line 94:             var str = cached as string;",
                "// Line 95:             return str == null ? null : StringToObject(cached as string);",
                "// vulnerable line: 96: }",
                "// Line 97: ",
                "// Line 98:         /// <inheritdoc />",
                "// Line 99:         public override object Disassemble(object value, ISessionImplementor session, object owner)",
                "// vulnerable line: 100: {",
                "// Line 101:             return value == null ? null : GetStringRepresentation(value);",
                "// vulnerable line: 102: }",
                "// vulnerable line: 103: }",
                "// vulnerable line: 104: }"
            ]
        },
        {
            "filename_of_changes": "configuration.xml",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "14",
            "number_of_lines_deleted_vulnerable_to_cve": "6",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 181:             NHibernate will obtain (and pool) connections using an ADO.NET data provider",
                "// Line 182:             if you set the following properties:",
                "// Line 183:         </para>",
                "// Line 184: ",
                "// Line 185:         <table frame=\"topbot\">",
                "// Line 186:             <title>NHibernate ADO.NET Properties</title>",
                "// Line 187:             <tgroup cols=\"2\">",
                "// Line 188:                 <colspec colname=\"c1\" colwidth=\"1*\"/>",
                "// Line 189:                 <colspec colname=\"c2\" colwidth=\"1*\"/>",
                "// Line 190:                 <thead>",
                "// vulnerable line: 191: <row>",
                "// Line 192:                         <entry>Property name</entry>",
                "// Line 193:                         <entry>Purpose</entry>",
                "// vulnerable line: 194: </row>",
                "// Line 195:                 </thead>",
                "// Line 196:             <tbody>",
                "// vulnerable line: 197: <row>",
                "// vulnerable line: 198: <entry>",
                "// Line 199:                     <literal>connection.provider</literal>",
                "// vulnerable line: 200: </entry>",
                "// vulnerable line: 201: <entry>",
                "// Line 202:                     The type of a custom <literal>IConnectionProvider</literal> implementation.",
                "// Line 203:                     <para>",
                "// Line 204:                         <emphasis role=\"strong\">eg.</emphasis> ",
                "// Line 205:                         <literal>full.classname.of.ConnectionProvider</literal> if the Provider ",
                "// Line 206:                         is built into NHibernate, or <literal>full.classname.of.ConnectionProvider, ",
                "// Line 207:                         assembly</literal> if using an implementation of <literal>IConnectionProvider</literal>",
                "// Line 208:                         not included in NHibernate. The default is ",
                "// Line 209:                         <literal>NHibernate.Connection.DriverConnectionProvider</literal>.",
                "// Line 210:                     </para>",
                "// vulnerable line: 211: </entry>",
                "// vulnerable line: 212: </row>",
                "// vulnerable line: 213: <row>",
                "// vulnerable line: 214: <entry>",
                "// Line 215:                     <literal>connection.driver_class</literal>",
                "// vulnerable line: 216: </entry>",
                "// vulnerable line: 217: <entry>",
                "// Line 218:                     The type of a custom <literal>IDriver</literal>, if using <literal>DriverConnectionProvider</literal>.",
                "// Line 219:                     <para>",
                "// Line 220:                         <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 221:                         <literal>full.classname.of.Driver</literal> if the Driver ",
                "// Line 222:                         is built into NHibernate, or <literal>full.classname.of.Driver, assembly</literal> ",
                "// Line 223:                         if using an implementation of IDriver not included in NHibernate.",
                "// Line 224:                     </para>",
                "// Line 225:                     <para>",
                "// Line 226:                         This is usually not needed, most of the time the <literal>dialect</literal> will",
                "// Line 227:                         take care of setting the <literal>IDriver</literal> using a sensible default.  See the API",
                "// Line 228:                         documentation of the specific dialect for the defaults.",
                "// Line 229:                     </para>",
                "// vulnerable line: 230: </entry>",
                "// vulnerable line: 231: </row>",
                "// vulnerable line: 232: <row>",
                "// vulnerable line: 233: <entry>",
                "// Line 234:                     <literal>connection.connection_string</literal>",
                "// vulnerable line: 235: </entry>",
                "// vulnerable line: 236: <entry>",
                "// Line 237:                     Connection string to use to obtain the connection.",
                "// vulnerable line: 238: </entry>",
                "// vulnerable line: 239: </row>",
                "// vulnerable line: 240: <row>",
                "// vulnerable line: 241: <entry>",
                "// Line 242:                     <literal>connection.connection_string_name</literal>",
                "// vulnerable line: 243: </entry>",
                "// vulnerable line: 244: <entry>",
                "// Line 245:                     The name of the connection string (defined in <literal>&lt;connectionStrings&gt;</literal>",
                "// Line 246:                     configuration file element) to use to obtain the connection.",
                "// vulnerable line: 247: </entry>",
                "// vulnerable line: 248: </row>",
                "// vulnerable line: 249: <row>",
                "// vulnerable line: 250: <entry>",
                "// Line 251:                     <literal>connection.isolation</literal>",
                "// vulnerable line: 252: </entry>",
                "// vulnerable line: 253: <entry>",
                "// Line 254:                     Set the ADO.NET transaction isolation level. Check",
                "// Line 255:                     <literal>System.Data.IsolationLevel</literal> for meaningful values",
                "// Line 256:                     and the database's documentation to ensure that level is supported.",
                "// Line 257:                     <para>",
                "// Line 258:                         <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 259:                         <literal>Chaos</literal> | <literal>ReadCommitted</literal> | <literal>ReadUncommitted</literal> |",
                "// Line 260:                         <literal>RepeatableRead</literal> | <literal>Serializable</literal> | <literal>Unspecified</literal>",
                "// Line 261:                     </para>",
                "// vulnerable line: 262: </entry>",
                "// vulnerable line: 263: </row>",
                "// vulnerable line: 264: <row>",
                "// vulnerable line: 265: <entry>",
                "// Line 266:                     <literal>connection.release_mode</literal>",
                "// vulnerable line: 267: </entry>",
                "// vulnerable line: 268: <entry>",
                "// Line 269:                     Specify when NHibernate should release ADO.NET connections.",
                "// Line 270:                     See <xref linkend=\"transactions-connection-release\" />.",
                "// Line 271:                     <para>",
                "// Line 272:                         <emphasis role=\"strong\">eg.</emphasis> ",
                "// Line 273:                         <literal>auto</literal> (default) | <literal>on_close</literal> |",
                "// Line 274:                         <literal>after_transaction</literal>",
                "// Line 275:                     </para>",
                "// Line 276:                     <para>",
                "// Line 277:                         Note that for <literal>ISession</literal>s obtained through",
                "// Line 278:                         <literal>ISessionFactory.GetCurrentSession</literal>, the",
                "// Line 279:                         <literal>ICurrentSessionContext</literal> implementation configured for use",
                "// Line 280:                         may control the connection release mode for those <literal>ISession</literal>s.",
                "// Line 281:                         See <xref linkend=\"architecture-current-session\"/>.",
                "// Line 282:                     </para>",
                "// vulnerable line: 283: </entry>",
                "// vulnerable line: 284: </row>",
                "// vulnerable line: 285: <row>",
                "// vulnerable line: 286: <entry>",
                "// Line 287:                     <literal>prepare_sql</literal>",
                "// vulnerable line: 288: </entry>",
                "// vulnerable line: 289: <entry>",
                "// Line 290:                     Specify to prepare <literal>DbCommand</literal>s generated by NHibernate.",
                "// Line 291:                     Defaults to <literal>false</literal>.",
                "// Line 292:                     <para>",
                "// Line 293:                         <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 294:                         <literal>true</literal> | <literal>false</literal>",
                "// Line 295:                     </para>",
                "// vulnerable line: 296: </entry>",
                "// vulnerable line: 297: </row>",
                "// vulnerable line: 298: <row>",
                "// vulnerable line: 299: <entry>",
                "// Line 300:                     <literal>command_timeout</literal>",
                "// vulnerable line: 301: </entry>",
                "// vulnerable line: 302: <entry>",
                "// Line 303:                     Specify the default timeout in seconds of <literal>DbCommand</literal>s",
                "// Line 304:                     generated by NHibernate. Negative values disable it.",
                "// Line 305:                     <para>",
                "// Line 306:                         <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 307:                         <literal>30</literal>",
                "// Line 308:                     </para>",
                "// vulnerable line: 309: </entry>",
                "// vulnerable line: 310: </row>",
                "// vulnerable line: 311: <row>",
                "// vulnerable line: 312: <entry>",
                "// Line 313:                     <literal>adonet.batch_size</literal>",
                "// vulnerable line: 314: </entry>",
                "// vulnerable line: 315: <entry>",
                "// Line 316:                     Specify the batch size to use when batching update statements. Setting this to 0",
                "// Line 317:                     (the default) disables the functionality.",
                "// Line 318:                     See <xref linkend=\"performance-batch-updates\" />.",
                "// Line 319:                     <para>",
                "// Line 320:                         <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 321:                         <literal>20</literal>",
                "// Line 322:                     </para>",
                "// vulnerable line: 323: </entry>",
                "// vulnerable line: 324: </row>",
                "// vulnerable line: 325: <row>",
                "// vulnerable line: 326: <entry>",
                "// Line 327:                     <literal>order_inserts</literal>",
                "// vulnerable line: 328: </entry>",
                "// vulnerable line: 329: <entry>",
                "// Line 330:                     Enable ordering of insert statements for the purpose of more efficient batching. Defaults",
                "// Line 331:                     to <literal>true</literal> if batching is enabled, <literal>false</literal> otherwise.",
                "// Line 332:                     <para>",
                "// Line 333:                         <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 334:                         <literal>true</literal> | <literal>false</literal>",
                "// Line 335:                     </para>",
                "// vulnerable line: 336: </entry>",
                "// vulnerable line: 337: </row>",
                "// vulnerable line: 338: <row>",
                "// vulnerable line: 339: <entry>",
                "// Line 340:                     <literal>order_updates</literal>",
                "// vulnerable line: 341: </entry>",
                "// vulnerable line: 342: <entry>",
                "// Line 343:                     Enable ordering of update statements for the purpose of more efficient batching. Defaults",
                "// Line 344:                     to <literal>true</literal> if batching is enabled, <literal>false</literal> otherwise.",
                "// Line 345:                     <para>",
                "// Line 346:                         <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 347:                         <literal>true</literal> | <literal>false</literal>",
                "// Line 348:                     </para>",
                "// vulnerable line: 349: </entry>",
                "// vulnerable line: 350: </row>",
                "// vulnerable line: 351: <row>",
                "// vulnerable line: 352: <entry>",
                "// Line 353:                     <literal>adonet.batch_versioned_data</literal>",
                "// vulnerable line: 354: </entry>",
                "// vulnerable line: 355: <entry>",
                "// Line 356:                     If batching is enabled, specify that versioned data can also be batched. Requires a dialect which",
                "// Line 357:                     batcher correctly returns rows count. Defaults to <literal>false</literal>.",
                "// Line 358:                     <para>",
                "// Line 359:                         <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 360:                         <literal>true</literal> | <literal>false</literal>",
                "// Line 361:                     </para>",
                "// vulnerable line: 362: </entry>",
                "// vulnerable line: 363: </row>",
                "// vulnerable line: 364: <row>",
                "// vulnerable line: 365: <entry>",
                "// Line 366:                     <literal>adonet.factory_class</literal>",
                "// vulnerable line: 367: </entry>",
                "// vulnerable line: 368: <entry>",
                "// Line 369:                     The class name of a <literal>IBatcherFactory</literal> implementation.",
                "// Line 370:                     <para>",
                "// Line 371:                         This is usually not needed, most of the time the <literal>driver</literal> will",
                "// Line 372:                         take care of setting the <literal>IBatcherFactory</literal> using a sensible default",
                "// Line 373:                         according to the database capabilities.",
                "// Line 374:                     </para>",
                "// Line 375:                     <para>",
                "// Line 376:                         <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 377:                         <literal>classname.of.BatcherFactory, assembly</literal>",
                "// Line 378:                     </para>",
                "// vulnerable line: 379: </entry>",
                "// vulnerable line: 380: </row>",
                "// vulnerable line: 381: <row>",
                "// vulnerable line: 382: <entry>",
                "// Line 383:                     <literal>adonet.wrap_result_sets</literal>",
                "// vulnerable line: 384: </entry>",
                "// vulnerable line: 385: <entry>",
                "// Line 386:                     Some database vendor data reader implementation have inefficient columnName-to-columnIndex",
                "// Line 387:                     resolution. Enabling this setting allows to wrap them in a data reader that will cache those",
                "// Line 388:                     resolutions. Defaults to <literal>false</literal>.",
                "// Line 389:                     <para>",
                "// Line 390:                         <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 391:                         <literal>true</literal> | <literal>false</literal>",
                "// Line 392:                     </para>",
                "// vulnerable line: 393: </entry>",
                "// vulnerable line: 394: </row>",
                "// Line 395:             </tbody>",
                "// Line 396:             </tgroup>",
                "// Line 397:         </table>",
                "// Line 398: ",
                "// Line 399:         <para>",
                "// Line 400:             This is an example of how to specify the database connection properties inside a ",
                "// Line 401:             <literal>web.config</literal>:",
                "// Line 402:         </para>",
                "// Line 403: ",
                "// Line 404:         <programlisting id=\"we-config-configuration\" revision=\"1\"><![CDATA[<?xml version=\"1.0\" encoding=\"utf-8\" ?>",
                "// Line 479:             There are a number of other properties that control the behaviour of NHibernate",
                "// Line 480:             at runtime. All are optional and have reasonable default values.",
                "// Line 481:         </para>",
                "// Line 482: ",
                "// Line 483:         <table frame=\"topbot\" id=\"configuration-optional-properties\" revision=\"3\">",
                "// Line 484:             <title>NHibernate Configuration Properties</title>",
                "// Line 485:             <tgroup cols=\"2\">",
                "// Line 486:                 <colspec colname=\"c1\" colwidth=\"1*\"/>",
                "// Line 487:                 <colspec colname=\"c2\" colwidth=\"1*\"/>",
                "// Line 488:                 <thead>",
                "// vulnerable line: 489: <row>",
                "// Line 490:                         <entry>Property name</entry>",
                "// Line 491:                         <entry>Purpose</entry>",
                "// vulnerable line: 492: </row>",
                "// Line 493:                 </thead>",
                "// Line 494:                 <tbody>",
                "// vulnerable line: 495: <row>",
                "// vulnerable line: 496: <entry>",
                "// Line 497:                             <literal>dialect</literal>",
                "// vulnerable line: 498: </entry>",
                "// vulnerable line: 499: <entry>",
                "// Line 500:                             The class name of a NHibernate <literal>Dialect</literal> - enables",
                "// Line 501:                             certain platform dependent features. See <xref linkend=\"configuration-optional-dialects\"/>.",
                "// Line 502:                             <para>",
                "// Line 503:                                 <emphasis role=\"strong\">eg.</emphasis> ",
                "// Line 504:                                 <literal>full.classname.of.Dialect, assembly</literal>",
                "// Line 505:                             </para>",
                "// vulnerable line: 506: </entry>",
                "// vulnerable line: 507: </row>",
                "// vulnerable line: 508: <row>",
                "// vulnerable line: 509: <entry>",
                "// Line 510:                             <literal>default_catalog</literal>",
                "// vulnerable line: 511: </entry>",
                "// vulnerable line: 512: <entry>",
                "// Line 513:                             Qualify unqualified table names with the given catalog name",
                "// Line 514:                             in generated SQL.",
                "// Line 515:                             <para>",
                "// Line 516:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 517:                                 <literal>CATALOG_NAME</literal>",
                "// Line 518:                             </para>",
                "// vulnerable line: 519: </entry>",
                "// vulnerable line: 520: </row>",
                "// vulnerable line: 521: <row>",
                "// vulnerable line: 522: <entry>",
                "// Line 523:                             <literal>default_schema</literal>",
                "// vulnerable line: 524: </entry>",
                "// vulnerable line: 525: <entry>",
                "// Line 526:                             Qualify unqualified table names with the given schema/table-space",
                "// Line 527:                             in generated SQL.",
                "// Line 528:                             <para>",
                "// Line 529:                                 <emphasis role=\"strong\">eg.</emphasis> ",
                "// Line 530:                                 <literal>SCHEMA_NAME</literal>",
                "// Line 531:                             </para>",
                "// vulnerable line: 532: </entry>",
                "// vulnerable line: 533: </row>",
                "// vulnerable line: 534: <row>",
                "// vulnerable line: 535: <entry>",
                "// Line 536:                             <literal>max_fetch_depth</literal>",
                "// vulnerable line: 537: </entry>",
                "// vulnerable line: 538: <entry>",
                "// Line 539:                             Set a maximum \"depth\" for the outer join fetch tree",
                "// Line 540:                             for single-ended associations (one-to-one, many-to-one).",
                "// Line 541:                             A <literal>0</literal> disables default outer join fetching.",
                "// Line 542:                             <para>",
                "// Line 543:                                 <emphasis role=\"strong\">eg.</emphasis> ",
                "// Line 544:                                 recommended values between <literal>0</literal> and <literal>3</literal>",
                "// Line 545:                             </para>",
                "// vulnerable line: 546: </entry>",
                "// vulnerable line: 547: </row>",
                "// vulnerable line: 548: <row>",
                "// vulnerable line: 549: <entry>",
                "// Line 550:                             <literal>cache.use_second_level_cache</literal>",
                "// vulnerable line: 551: </entry>",
                "// vulnerable line: 552: <entry>",
                "// Line 553:                             Enable the second level cache. Requires specifying a <literal>cache.provider_class</literal>.",
                "// Line 554:                             See <xref linkend=\"caches\"/>. Defaults to <literal>false</literal>.",
                "// Line 555:                             <para>",
                "// Line 556:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 557:                                 <literal>true</literal> | <literal>false</literal>",
                "// Line 558:                             </para>",
                "// vulnerable line: 559: </entry>",
                "// vulnerable line: 560: </row>",
                "// vulnerable line: 561: <row>",
                "// vulnerable line: 562: <entry>",
                "// Line 563:                             <literal>cache.provider_class</literal>",
                "// vulnerable line: 564: </entry>",
                "// vulnerable line: 565: <entry>",
                "// Line 566:                             The class name of a <literal>ICacheProvider</literal> implementation.",
                "// Line 567:                             <para>",
                "// Line 568:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 569:                                 <literal>classname.of.CacheProvider, assembly</literal>",
                "// Line 570:                             </para>",
                "// vulnerable line: 571: </entry>",
                "// vulnerable line: 572: </row>",
                "// vulnerable line: 573: <row>",
                "// vulnerable line: 574: <entry>",
                "// Line 575:                             <literal>cache.use_minimal_puts</literal>",
                "// vulnerable line: 576: </entry>",
                "// vulnerable line: 577: <entry>",
                "// Line 578:                             Optimize second-level cache operation to minimize writes, at the",
                "// Line 579:                             cost of more frequent reads (useful for clustered caches).",
                "// Line 580:                             Defaults to <literal>false</literal>.",
                "// Line 581:                             <para>",
                "// Line 582:                                 <emphasis role=\"strong\">eg.</emphasis> ",
                "// Line 583:                                 <literal>true</literal> | <literal>false</literal>",
                "// Line 584:                             </para>",
                "// vulnerable line: 585: </entry>",
                "// vulnerable line: 586: </row>",
                "// vulnerable line: 587: <row>",
                "// vulnerable line: 588: <entry>",
                "// Line 589:                             <literal>cache.use_query_cache</literal>",
                "// vulnerable line: 590: </entry>",
                "// vulnerable line: 591: <entry>",
                "// Line 592:                             Enable the query cache, individual queries still have to be set cacheable.",
                "// Line 593:                             Defaults to <literal>false</literal>.",
                "// Line 594:                             <para>",
                "// Line 595:                                 <emphasis role=\"strong\">eg.</emphasis> ",
                "// Line 596:                                 <literal>true</literal> | <literal>false</literal>",
                "// Line 597:                             </para>",
                "// vulnerable line: 598: </entry>",
                "// vulnerable line: 599: </row>",
                "// vulnerable line: 600: <row>",
                "// vulnerable line: 601: <entry>",
                "// Line 602:                             <literal>cache.query_cache_factory</literal>",
                "// vulnerable line: 603: </entry>",
                "// vulnerable line: 604: <entry>",
                "// Line 605:                             The class name of a custom <literal>IQueryCacheFactory</literal> implementation.",
                "// Line 606:                             Defaults to the built-in <literal>StandardQueryCacheFactory</literal>.",
                "// Line 607:                             <para>",
                "// Line 608:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 609:                                 <literal>classname.of.QueryCacheFactory, assembly</literal>",
                "// Line 610:                             </para>",
                "// vulnerable line: 611: </entry>",
                "// vulnerable line: 612: </row>",
                "// vulnerable line: 613: <row>",
                "// vulnerable line: 614: <entry>",
                "// Line 615:                             <literal>cache.read_write_lock_factory</literal>",
                "// vulnerable line: 616: </entry>",
                "// vulnerable line: 617: <entry>",
                "// Line 618:                             Specify the cache lock factory to use for read-write cache regions.",
                "// Line 619:                             Defaults to the built-in <literal>async</literal> cache lock factory.",
                "// Line 620:                             <para>",
                "// Line 621:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 622:                                 <literal>async</literal>, or <literal>sync</literal>, or <literal>classname.of.CacheLockFactory, assembly</literal> with custom implementation of <literal>ICacheReadWriteLockFactory</literal>",
                "// Line 623:                             </para>",
                "// Line 624:                             <para>",
                "// Line 625:                                 <literal>async</literal> uses a single writer multiple readers locking mechanism supporting asynchronous operations.",
                "// Line 626:                             </para>",
                "// Line 627:                             <para>",
                "// Line 628:                                 <literal>sync</literal> uses a single access locking mechanism which will throw on asynchronous",
                "// Line 629:                                 operations but may have better performances than the <literal>async</literal> provider for applications using the .Net Framework (4.8 and below).",
                "// Line 630:                             </para>",
                "// vulnerable line: 631: </entry>",
                "// vulnerable line: 632: </row>",
                "// vulnerable line: 633: <row>",
                "// vulnerable line: 634: <entry>",
                "// Line 635:                             <literal>cache.region_prefix</literal>",
                "// vulnerable line: 636: </entry>",
                "// vulnerable line: 637: <entry>",
                "// Line 638:                             A prefix to use for second-level cache region names.",
                "// Line 639:                             <para>",
                "// Line 640:                                 <emphasis role=\"strong\">eg.</emphasis> ",
                "// Line 641:                                 <literal>prefix</literal>",
                "// Line 642:                             </para>",
                "// vulnerable line: 643: </entry>",
                "// vulnerable line: 644: </row>",
                "// vulnerable line: 645: <row>",
                "// vulnerable line: 646: <entry>",
                "// Line 647:                             <literal>cache.default_expiration</literal>",
                "// vulnerable line: 648: </entry>",
                "// vulnerable line: 649: <entry>",
                "// Line 650:                             The default expiration delay in seconds for cached entries, for providers supporting",
                "// Line 651:                             this setting.",
                "// Line 652:                             <para>",
                "// Line 653:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 654:                                 <literal>300</literal>",
                "// Line 655:                             </para>",
                "// vulnerable line: 656: </entry>",
                "// vulnerable line: 657: </row>",
                "// vulnerable line: 658: <row>",
                "// vulnerable line: 659: <entry>",
                "// Line 660:                             <literal>query.substitutions</literal>",
                "// vulnerable line: 661: </entry>",
                "// vulnerable line: 662: <entry>",
                "// Line 663:                             Mapping from tokens in NHibernate queries to SQL tokens",
                "// Line 664:                             (tokens might be function or literal names, for example).",
                "// Line 665:                             <para>",
                "// Line 666:                                 <emphasis role=\"strong\">eg.</emphasis> ",
                "// Line 667:                                 <literal>hqlLiteral=SQL_LITERAL, hqlFunction=SQLFUNC</literal>",
                "// Line 668:                             </para>",
                "// vulnerable line: 669: </entry>",
                "// vulnerable line: 670: </row>",
                "// vulnerable line: 671: <row>",
                "// vulnerable line: 672: <entry>",
                "// Line 673:                             <literal>query.default_cast_length</literal>",
                "// vulnerable line: 674: </entry>",
                "// vulnerable line: 675: <entry>",
                "// Line 676:                             Set the default length used in casting when the target type is length bound and",
                "// Line 677:                             does not specify it. Defaults to <literal>4000</literal>, automatically trimmed down",
                "// Line 678:                             according to dialect type registration.",
                "// Line 679:                             <para>",
                "// Line 680:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 681:                                 <literal>255</literal>",
                "// Line 682:                             </para>",
                "// vulnerable line: 683: </entry>",
                "// vulnerable line: 684: </row>",
                "// vulnerable line: 685: <row>",
                "// vulnerable line: 686: <entry>",
                "// Line 687:                             <literal>query.default_cast_precision</literal>",
                "// vulnerable line: 688: </entry>",
                "// vulnerable line: 689: <entry>",
                "// Line 690:                             Set the default precision used in casting when the target type is decimal and",
                "// Line 691:                             does not specify it. Defaults to <literal>28</literal>, automatically trimmed down",
                "// Line 692:                             according to dialect type registration.",
                "// Line 693:                             <para>",
                "// Line 694:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 695:                                 <literal>19</literal>",
                "// Line 696:                             </para>",
                "// vulnerable line: 697: </entry>",
                "// vulnerable line: 698: </row>",
                "// vulnerable line: 699: <row>",
                "// vulnerable line: 700: <entry>",
                "// Line 701:                             <literal>query.default_cast_scale</literal>",
                "// vulnerable line: 702: </entry>",
                "// vulnerable line: 703: <entry>",
                "// Line 704:                             Set the default scale used in casting when the target type is decimal and",
                "// Line 705:                             does not specify it. Defaults to <literal>10</literal>, automatically trimmed down",
                "// Line 706:                             according to dialect type registration.",
                "// Line 707:                             <para>",
                "// Line 708:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 709:                                 <literal>5</literal>",
                "// Line 710:                             </para>",
                "// vulnerable line: 711: </entry>",
                "// vulnerable line: 712: </row>",
                "// vulnerable line: 713: <row>",
                "// vulnerable line: 714: <entry>",
                "// Line 715:                             <literal>query.startup_check</literal>",
                "// vulnerable line: 716: </entry>",
                "// vulnerable line: 717: <entry>",
                "// Line 718:                             Should named queries be checked during startup (the default is enabled).",
                "// Line 719:                             <para>",
                "// Line 720:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 721:                                 <literal>true</literal> | <literal>false</literal>",
                "// Line 722:                             </para>",
                "// vulnerable line: 723: </entry>",
                "// vulnerable line: 724: </row>",
                "// vulnerable line: 725: <row>",
                "// vulnerable line: 726: <entry>",
                "// Line 727:                             <literal>query.throw_never_cached</literal>",
                "// vulnerable line: 728: </entry>",
                "// vulnerable line: 729: <entry>",
                "// Line 730:                             Should queries set as cacheable raise an error if they reference an entity using the cache",
                "// Line 731:                             <xref linkend=\"performance-cache-never\" /> (the default is enabled).",
                "// Line 732:                             <para>",
                "// Line 733:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 734:                                 <literal>true</literal> | <literal>false</literal>",
                "// Line 735:                             </para>",
                "// Line 736:                             <para>",
                "// Line 737:                                 Disabling this setting causes NHibernate to ignore the caching of such queries without",
                "// Line 738:                                 raising an error. Furthermore NHibernate will log a warning on cacheable queries",
                "// Line 739:                                 referencing an entity using the <literal>never</literal> cache strategy.",
                "// Line 740:                             </para>",
                "// vulnerable line: 741: </entry>",
                "// vulnerable line: 742: </row>",
                "// vulnerable line: 743: <row>",
                "// vulnerable line: 744: <entry>",
                "// Line 745:                             <literal>query.factory_class</literal>",
                "// vulnerable line: 746: </entry>",
                "// vulnerable line: 747: <entry>",
                "// Line 748:                             The class name of a custom <literal>IQueryTranslatorFactory</literal> implementation",
                "// Line 749:                             (HQL query parser factory). Defaults to the built-in",
                "// Line 750:                             <literal>ASTQueryTranslatorFactory</literal>.",
                "// Line 751:                             <para>",
                "// Line 752:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 753:                                 <literal>classname.of.QueryTranslatorFactory, assembly</literal>",
                "// Line 754:                             </para>",
                "// vulnerable line: 755: </entry>",
                "// vulnerable line: 756: </row>",
                "// vulnerable line: 757: <row>",
                "// vulnerable line: 758: <entry>",
                "// Line 759:                             <literal>query.linq_provider_class</literal>",
                "// vulnerable line: 760: </entry>",
                "// vulnerable line: 761: <entry>",
                "// Line 762:                             The class name of a custom <literal>INhQueryProvider</literal> implementation",
                "// Line 763:                             (LINQ provider). Defaults to the built-in <literal>DefaultQueryProvider</literal>.",
                "// Line 764:                             <para>",
                "// Line 765:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 766:                                 <literal>classname.of.LinqProvider, assembly</literal>",
                "// Line 767:                             </para>",
                "// vulnerable line: 768: </entry>",
                "// vulnerable line: 769: </row>",
                "// vulnerable line: 770: <row>",
                "// vulnerable line: 771: <entry>",
                "// Line 772:                             <literal>query.query_model_rewriter_factory</literal>",
                "// vulnerable line: 773: </entry>",
                "// vulnerable line: 774: <entry>",
                "// Line 775:                             The class name of a custom <literal>IQueryModelRewriterFactory</literal> implementation",
                "// Line 776:                             (LINQ query model rewriter factory). Defaults to <literal>null</literal> (no rewriter).",
                "// Line 777:                             <para>",
                "// Line 778:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 779:                                 <literal>classname.of.QueryModelRewriterFactory, assembly</literal>",
                "// Line 780:                             </para>",
                "// vulnerable line: 781: </entry>",
                "// vulnerable line: 782: </row>",
                "// vulnerable line: 783: <row>",
                "// vulnerable line: 784: <entry>",
                "// Line 785:                             <literal>query.pre_transformer_registrar</literal>",
                "// vulnerable line: 786: </entry>",
                "// vulnerable line: 787: <entry>",
                "// Line 788:                             The class name of the LINQ query pre-transformer registrar, implementing",
                "// Line 789:                             <literal>IExpressionTransformerRegistrar</literal>. Defaults to <literal>null</literal> (no registrar).",
                "// Line 790:                             <para>",
                "// Line 791:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 792:                                 <literal>classname.of.ExpressionTransformerRegistrar, assembly</literal>",
                "// Line 793:                             </para>",
                "// vulnerable line: 794: </entry>",
                "// vulnerable line: 795: </row>",
                "// vulnerable line: 796: <row>",
                "// vulnerable line: 797: <entry>",
                "// Line 798:                             <literal>linqtohql.generatorsregistry</literal>",
                "// vulnerable line: 799: </entry>",
                "// vulnerable line: 800: <entry>",
                "// Line 801:                             The class name of a custom <literal>ILinqToHqlGeneratorsRegistry</literal> implementation.",
                "// Line 802:                             Defaults to the built-in <literal>DefaultLinqToHqlGeneratorsRegistry</literal>. See",
                "// Line 803:                             <xref linkend=\"querylinq-extending-generator\"/>.",
                "// Line 804:                             <para>",
                "// Line 805:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 806:                                 <literal>classname.of.LinqToHqlGeneratorsRegistry, assembly</literal>",
                "// Line 807:                             </para>",
                "// vulnerable line: 808: </entry>",
                "// vulnerable line: 809: </row>",
                "// vulnerable line: 810: <row>",
                "// vulnerable line: 811: <entry>",
                "// Line 812:                             <literal>linqtohql.legacy_preevaluation</literal>",
                "// vulnerable line: 813: </entry>",
                "// vulnerable line: 814: <entry>",
                "// Line 815:                             Whether to use the legacy pre-evaluation or not in Linq queries. Defaults to <literal>true</literal>.",
                "// Line 816:                             <para>",
                "// Line 817:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 818:                                 <literal>true</literal> | <literal>false</literal>",
                "// Line 819:                             </para>",
                "// Line 820:                             <para>",
                "// Line 821:                                 Legacy pre-evaluation is causing special properties or functions like <literal>DateTime.Now</literal>",
                "// Line 822:                                 or <literal>Guid.NewGuid()</literal> to be always evaluated with the .Net runtime and replaced in the",
                "// Line 823:                                 query by parameter values.",
                "// Line 824:                             </para>",
                "// Line 825:                             <para>",
                "// Line 826:                                 The new pre-evaluation allows them to be converted to HQL function calls which will be run on the db",
                "// Line 827:                                 side. This allows for example to retrieve the server time instead of the client time, or to generate",
                "// Line 828:                                 UUIDs for each row instead of an unique one for all rows.",
                "// Line 829:                             </para>",
                "// Line 830:                             <para>",
                "// Line 831:                                 The new pre-evaluation will likely be enabled by default in the next major version (6.0).",
                "// Line 832:                             </para>",
                "// vulnerable line: 833: </entry>",
                "// vulnerable line: 834: </row>",
                "// vulnerable line: 835: <row>",
                "// vulnerable line: 836: <entry>",
                "// Line 837:                             <literal>linqtohql.fallback_on_preevaluation</literal>",
                "// vulnerable line: 838: </entry>",
                "// vulnerable line: 839: <entry>",
                "// Line 840:                             When the new pre-evaluation is enabled, should methods which translation is not supported by the current",
                "// Line 841:                             dialect fallback to pre-evaluation? Defaults to <literal>false</literal>.",
                "// Line 842:                             <para>",
                "// Line 843:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 844:                                 <literal>true</literal> | <literal>false</literal>",
                "// Line 845:                             </para>",
                "// Line 846:                             <para>",
                "// Line 847:                                 When this fallback option is enabled while legacy pre-evaluation is disabled, properties or functions",
                "// Line 848:                                 like <literal>DateTime.Now</literal> or <literal>Guid.NewGuid()</literal> used in Linq expressions",
                "// Line 849:                                 will not fail when the dialect does not support them, but will instead be pre-evaluated.",
                "// Line 850:                             </para>",
                "// Line 851:                             <para>",
                "// Line 852:                                 When this fallback option is disabled while legacy pre-evaluation is disabled, properties or functions",
                "// Line 853:                                 like <literal>DateTime.Now</literal> or <literal>Guid.NewGuid()</literal> used in Linq expressions",
                "// Line 854:                                 will fail when the dialect does not support them.",
                "// Line 855:                             </para>",
                "// Line 856:                             <para>",
                "// Line 857:                                 This option has no effect if the legacy pre-evaluation is enabled.",
                "// Line 858:                             </para>",
                "// vulnerable line: 859: </entry>",
                "// vulnerable line: 860: </row>",
                "// vulnerable line: 861: <row>",
                "// vulnerable line: 862: <entry>",
                "// Line 863:                             <literal>sql_exception_converter</literal>",
                "// vulnerable line: 864: </entry>",
                "// vulnerable line: 865: <entry>",
                "// Line 866:                             The class name of a custom <literal>ISQLExceptionConverter</literal> implementation.",
                "// Line 867:                             Defaults to <literal>Dialect.BuildSQLExceptionConverter()</literal>.",
                "// Line 868:                             <para>",
                "// Line 869:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 870:                                 <literal>classname.of.SQLExceptionConverter, assembly</literal>",
                "// Line 871:                             </para>",
                "// vulnerable line: 872: </entry>",
                "// vulnerable line: 873: </row>",
                "// vulnerable line: 874: <row>",
                "// vulnerable line: 875: <entry>",
                "// Line 876:                             <literal>show_sql</literal>",
                "// vulnerable line: 877: </entry>",
                "// vulnerable line: 878: <entry>",
                "// Line 879:                             Write all SQL statements to console. Defaults to <literal>false</literal>.",
                "// Line 880:                             <para>",
                "// Line 881:                                 <emphasis role=\"strong\">eg.</emphasis> ",
                "// Line 882:                                 <literal>true</literal> | <literal>false</literal>",
                "// Line 883:                             </para>",
                "// vulnerable line: 884: </entry>",
                "// vulnerable line: 885: </row>",
                "// vulnerable line: 886: <row>",
                "// vulnerable line: 887: <entry>",
                "// Line 888:                             <literal>format_sql</literal>",
                "// vulnerable line: 889: </entry>",
                "// vulnerable line: 890: <entry>",
                "// Line 891:                             Log formatted SQL. Defaults to <literal>false</literal>.",
                "// Line 892:                             <para>",
                "// Line 893:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 894:                                 <literal>true</literal> | <literal>false</literal>",
                "// Line 895:                             </para>",
                "// vulnerable line: 896: </entry>",
                "// vulnerable line: 897: </row>",
                "// vulnerable line: 898: <row>",
                "// vulnerable line: 899: <entry>",
                "// Line 900:                             <literal>use_sql_comments</literal>",
                "// vulnerable line: 901: </entry>",
                "// vulnerable line: 902: <entry>",
                "// Line 903:                             Generate SQL with comments. Defaults to <literal>false</literal>.",
                "// Line 904:                             <para>",
                "// Line 905:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 906:                                 <literal>true</literal> | <literal>false</literal>",
                "// Line 907:                             </para>",
                "// vulnerable line: 908: </entry>",
                "// vulnerable line: 909: </row>",
                "// vulnerable line: 910: <row>",
                "// vulnerable line: 911: <entry>",
                "// Line 912:                             <literal>hbm2ddl.auto</literal>",
                "// vulnerable line: 913: </entry>",
                "// vulnerable line: 914: <entry>",
                "// Line 915:                             Automatically export schema DDL to the database when the",
                "// Line 916:                             <literal>ISessionFactory</literal> is created. With",
                "// Line 917:                             <literal>create-drop</literal>, the database schema",
                "// Line 918:                             will be dropped when the <literal>ISessionFactory</literal>",
                "// Line 919:                             is closed explicitly.",
                "// Line 920:                             <para>",
                "// Line 921:                                 <emphasis role=\"strong\">eg.</emphasis> ",
                "// Line 922:                                 <literal>create</literal> | <literal>create-drop</literal> | <literal>update</literal> | <literal>validate</literal>",
                "// Line 923:                             </para>",
                "// vulnerable line: 924: </entry>",
                "// vulnerable line: 925: </row>",
                "// vulnerable line: 926: <row>",
                "// vulnerable line: 927: <entry>",
                "// Line 928:                             <literal>hbm2ddl.keywords</literal>",
                "// vulnerable line: 929: </entry>",
                "// vulnerable line: 930: <entry>",
                "// Line 931:                             Automatically import <literal>reserved/keywords</literal> from the database when the",
                "// Line 932:                             <literal>ISessionFactory</literal> is created.",
                "// Line 933:                             <para>",
                "// Line 934:                                 <emphasis role=\"strong\">none :</emphasis>",
                "// Line 935:                                 disable any operation regarding RDBMS KeyWords (the default).",
                "// Line 936:                             </para>",
                "// Line 937:                             <para>",
                "// Line 938:                                 <emphasis role=\"strong\">keywords :</emphasis>",
                "// Line 939:                                 imports all RDBMS KeyWords where the <literal>Dialect</literal> can provide the implementation of <literal>IDataBaseSchema</literal>.",
                "// Line 940:                             </para>",
                "// Line 941:                             <para>",
                "// Line 942:                                 <emphasis role=\"strong\">auto-quote :</emphasis>",
                "// Line 943:                                 imports all RDBMS KeyWords and auto-quote all table-names/column-names.",
                "// Line 944:                             </para>",
                "// Line 945:                             <para>",
                "// Line 946:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 947:                                 <literal>none</literal> | <literal>keywords</literal> | <literal>auto-quote</literal>",
                "// Line 948:                             </para>",
                "// vulnerable line: 949: </entry>",
                "// vulnerable line: 950: </row>",
                "// vulnerable line: 951: <row>",
                "// vulnerable line: 952: <entry>",
                "// Line 953:                             <literal>hbm2ddl.throw_on_update</literal>",
                "// vulnerable line: 954: </entry>",
                "// vulnerable line: 955: <entry>",
                "// Line 956:                             When <literal>hbm2ddl.auto</literal> is <literal>update</literal>, whether to throw or not on schema auto-update failures.",
                "// Line 957:                             <!-- 6.0 TODO: should become true by default. -->",
                "// Line 958:                             Disabled by default.",
                "// Line 959:                             <para>",
                "// Line 960:                                 <emphasis role=\"strong\">eg.</emphasis> ",
                "// Line 961:                                 <literal>true</literal> | <literal>false</literal>",
                "// Line 962:                             </para>",
                "// vulnerable line: 963: </entry>",
                "// vulnerable line: 964: </row>",
                "// vulnerable line: 965: <row>",
                "// vulnerable line: 966: <entry>",
                "// Line 967:                             <literal>use_proxy_validator</literal>",
                "// vulnerable line: 968: </entry>",
                "// vulnerable line: 969: <entry>",
                "// Line 970:                             Enables or disables validation of interfaces or classes specified",
                "// Line 971:                             as proxies. Enabled by default.",
                "// Line 972:                             <para>",
                "// Line 973:                                 <emphasis role=\"strong\">eg.</emphasis> ",
                "// Line 974:                                 <literal>true</literal> | <literal>false</literal>",
                "// Line 975:                             </para>",
                "// vulnerable line: 976: </entry>",
                "// vulnerable line: 977: </row>",
                "// vulnerable line: 978: <row>",
                "// vulnerable line: 979: <entry>",
                "// Line 980:                             <literal>proxyfactory.factory_class</literal>",
                "// vulnerable line: 981: </entry>",
                "// vulnerable line: 982: <entry>",
                "// Line 983:                             The class name of a custom <literal>IProxyFactoryFactory</literal> implementation.",
                "// Line 984:                             Defaults to the built-in <literal>StaticProxyFactoryFactory</literal>.",
                "// Line 985:                             <para>",
                "// Line 986:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 987:                                 <literal>classname.of.ProxyFactoryFactory, assembly</literal>",
                "// Line 988:                             </para>",
                "// vulnerable line: 989: </entry>",
                "// vulnerable line: 990: </row>",
                "// vulnerable line: 991: <row>",
                "// vulnerable line: 992: <entry>",
                "// Line 993:                             <literal>collectiontype.factory_class</literal>",
                "// vulnerable line: 994: </entry>",
                "// vulnerable line: 995: <entry>",
                "// Line 996:                             The class name of a custom <literal>ICollectionTypeFactory</literal> implementation.",
                "// Line 997:                             Defaults to the built-in <literal>DefaultCollectionTypeFactory</literal>.",
                "// Line 998:                             <para>",
                "// Line 999:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 1000:                                 <literal>classname.of.CollectionTypeFactory, assembly</literal>",
                "// Line 1001:                             </para>",
                "// vulnerable line: 1002: </entry>",
                "// vulnerable line: 1003: </row>",
                "// vulnerable line: 1004: <row>",
                "// vulnerable line: 1005: <entry>",
                "// Line 1006:                             <literal>transaction.factory_class</literal>",
                "// vulnerable line: 1007: </entry>",
                "// vulnerable line: 1008: <entry>",
                "// Line 1009:                             The class name of a custom <literal>ITransactionFactory</literal> implementation.",
                "// Line 1010:                             Defaults to the built-in <literal>AdoNetWithSystemTransactionFactory</literal>.",
                "// Line 1011:                             <para>",
                "// Line 1012:                                 <emphasis role=\"strong\">eg.</emphasis> ",
                "// Line 1013:                                 <literal>classname.of.TransactionFactory, assembly</literal>",
                "// Line 1014:                             </para>",
                "// vulnerable line: 1015: </entry>",
                "// vulnerable line: 1016: </row>",
                "// vulnerable line: 1017: <row>",
                "// vulnerable line: 1018: <entry>",
                "// Line 1019:                             <literal>transaction.use_connection_on_system_prepare</literal>",
                "// vulnerable line: 1020: </entry>",
                "// vulnerable line: 1021: <entry>",
                "// Line 1022:                             When a system transaction is being prepared, is using connection during this process enabled?",
                "// Line 1023:                             <para>",
                "// Line 1024:                               Default is <literal>true</literal>, for supporting <literal>FlushMode.Commit</literal> with transaction factories",
                "// Line 1025:                               supporting system transactions. But this requires enlisting additional connections, retaining disposed",
                "// Line 1026:                               sessions and their connections until transaction end, and may trigger undesired transaction promotions to",
                "// Line 1027:                               distributed.",
                "// Line 1028:                             </para>",
                "// Line 1029:                             <para>",
                "// Line 1030:                               Set to <literal>false</literal> for disabling using connections from system",
                "// Line 1031:                               transaction preparation, while still benefiting from <literal>FlushMode.Auto</literal> on querying.",
                "// Line 1032:                             </para>",
                "// Line 1033:                             <para>",
                "// Line 1034:                               See <xref linkend=\"transactions-scopes\"/>.",
                "// Line 1035:                             </para>",
                "// Line 1036:                             <para>",
                "// Line 1037:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 1038:                                 <literal>true</literal> | <literal>false</literal>",
                "// Line 1039:                             </para>",
                "// vulnerable line: 1040: </entry>",
                "// vulnerable line: 1041: </row>",
                "// vulnerable line: 1042: <row>",
                "// vulnerable line: 1043: <entry>",
                "// Line 1044:                             <literal>transaction.system_completion_lock_timeout</literal>",
                "// vulnerable line: 1045: </entry>",
                "// vulnerable line: 1046: <entry>",
                "// Line 1047:                             Timeout duration in milliseconds for the system transaction completion lock.",
                "// Line 1048:                             <para>",
                "// Line 1049:                                 When a system transaction completes, it may have its completion events running on concurrent threads,",
                "// Line 1050:                                 after scope disposal. This occurs when the transaction is distributed.",
                "// Line 1051:                                 This notably concerns <literal>ISessionImplementor.AfterTransactionCompletion(bool, ITransaction)</literal>.",
                "// Line 1052:                                 NHibernate protects the session from being concurrently used by the code following the scope disposal",
                "// Line 1053:                                 with a lock. To prevent any application freeze, this lock has a default timeout of five seconds. If the",
                "// Line 1054:                                 application appears to require longer (!) running transaction completion events, this setting allows to",
                "// Line 1055:                                 raise this timeout. <literal>-1</literal> disables the timeout.",
                "// Line 1056:                             </para>",
                "// Line 1057:                             <para>",
                "// Line 1058:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 1059:                                 <literal>10000</literal>",
                "// Line 1060:                             </para>",
                "// vulnerable line: 1061: </entry>",
                "// vulnerable line: 1062: </row>",
                "// vulnerable line: 1063: <row>",
                "// vulnerable line: 1064: <entry>",
                "// Line 1065:                             <literal>transaction.auto_join</literal>",
                "// vulnerable line: 1066: </entry>",
                "// vulnerable line: 1067: <entry>",
                "// Line 1068:                             Should sessions check on every operation whether there is an ongoing system transaction or not, and enlist",
                "// Line 1069:                             into it if any?",
                "// Line 1070:                             <para>",
                "// Line 1071:                                 Default is <literal>true</literal>. It can also be controlled at session opening, with",
                "// Line 1072:                                 <literal>ISessionFactory.WithOptions</literal>. A session can also be instructed to explicitly join the current",
                "// Line 1073:                                 transaction by calling <literal>ISession.JoinTransaction</literal>. This setting has no effect when using a",
                "// Line 1074:                                 transaction factory that is not system transactions aware.",
                "// Line 1075:                             </para>",
                "// Line 1076:                             <para>",
                "// Line 1077:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 1078:                                 <literal>false</literal>",
                "// Line 1079:                             </para>",
                "// vulnerable line: 1080: </entry>",
                "// vulnerable line: 1081: </row>",
                "// vulnerable line: 1082: <row>",
                "// vulnerable line: 1083: <entry>",
                "// Line 1084:                             <literal>default_flush_mode</literal>",
                "// vulnerable line: 1085: </entry>",
                "// vulnerable line: 1086: <entry>",
                "// Line 1087:                             The default <literal>FlushMode</literal>, <literal>Auto</literal> when not specified.",
                "// Line 1088:                             See <xref linkend=\"manipulatingdata-flushing\"/>.",
                "// Line 1089:                             <para>",
                "// Line 1090:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 1091:                                 <literal>Manual</literal> | <literal>Commit</literal> | <literal>Auto</literal> | <literal>Always</literal>",
                "// Line 1092:                             </para>",
                "// vulnerable line: 1093: </entry>",
                "// vulnerable line: 1094: </row>",
                "// vulnerable line: 1095: <row>",
                "// vulnerable line: 1096: <entry>",
                "// Line 1097:                             <literal>default_batch_fetch_size</literal>",
                "// vulnerable line: 1098: </entry>",
                "// vulnerable line: 1099: <entry>",
                "// Line 1100:                             The default batch fetch size to use when lazily loading an entity or collection.",
                "// Line 1101:                             Defaults to <literal>1</literal>. See <xref linkend=\"performance-fetching-batch\"/>.",
                "// Line 1102:                             <para>",
                "// Line 1103:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 1104:                                 <literal>20</literal>",
                "// Line 1105:                             </para>",
                "// vulnerable line: 1106: </entry>",
                "// vulnerable line: 1107: </row>",
                "// vulnerable line: 1108: <row>",
                "// vulnerable line: 1109: <entry>",
                "// Line 1110:                             <literal>current_session_context_class</literal>",
                "// vulnerable line: 1111: </entry>",
                "// vulnerable line: 1112: <entry>",
                "// Line 1113:                             The class name of an <literal>ICurrentSessionContext</literal> implementation.",
                "// Line 1114:                             See <xref linkend=\"architecture-current-session\"/>.",
                "// Line 1115:                             <para>",
                "// Line 1116:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 1117:                                 <literal>classname.of.CurrentSessionContext, assembly</literal>",
                "// Line 1118:                             </para>",
                "// vulnerable line: 1119: </entry>",
                "// vulnerable line: 1120: </row>",
                "// vulnerable line: 1121: <row>",
                "// vulnerable line: 1122: <entry>",
                "// Line 1123:                             <literal>id.optimizer.pooled.prefer_lo</literal>",
                "// vulnerable line: 1124: </entry>",
                "// vulnerable line: 1125: <entry>",
                "// Line 1126:                             When using an enhanced id generator and pooled optimizers (see",
                "// Line 1127:                             <xref linkend=\"mapping-declaration-id-enhanced\"/>), prefer interpreting the database",
                "// Line 1128:                             value as the lower (lo) boundary. The default is to interpret it as the high boundary.",
                "// Line 1129:                             <para>",
                "// Line 1130:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 1131:                                 <literal>true</literal> | <literal>false</literal>",
                "// Line 1132:                             </para>",
                "// vulnerable line: 1133: </entry>",
                "// vulnerable line: 1134: </row>",
                "// vulnerable line: 1135: <row>",
                "// vulnerable line: 1136: <entry>",
                "// Line 1137:                             <literal>generate_statistics</literal>",
                "// vulnerable line: 1138: </entry>",
                "// vulnerable line: 1139: <entry>",
                "// Line 1140:                             Enable statistics collection within <literal>ISessionFactory.Statistics</literal> property.",
                "// Line 1141:                             Defaults to <literal>false</literal>.",
                "// Line 1142:                             <para>",
                "// Line 1143:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 1144:                                 <literal>true</literal> | <literal>false</literal>",
                "// Line 1145:                             </para>",
                "// vulnerable line: 1146: </entry>",
                "// vulnerable line: 1147: </row>",
                "// vulnerable line: 1148: <row>",
                "// vulnerable line: 1149: <entry>",
                "// Line 1150:                             <literal>track_session_id</literal>",
                "// vulnerable line: 1151: </entry>",
                "// vulnerable line: 1152: <entry>",
                "// Line 1153:                             Set whether the session id should be tracked in logs or not. When <literal>true</literal>, each",
                "// Line 1154:                             session will have an unique <literal>Guid</literal> that can be retrieved with",
                "// Line 1155:                             <literal>ISessionImplementor.SessionId</literal>, otherwise <literal>ISessionImplementor.SessionId</literal>",
                "// Line 1156:                             will be <literal>Guid.Empty</literal>.",
                "// Line 1157:                             <para>",
                "// Line 1158:                                 Session id is used for logging purpose and can also be retrieved on the static property",
                "// Line 1159:                                 <literal>NHibernate.Impl.SessionIdLoggingContext.SessionId</literal>, when tracking is enabled.",
                "// Line 1160:                             </para>",
                "// Line 1161:                             <para>",
                "// Line 1162:                                 Disabling tracking by setting <literal>track_session_id</literal> to <literal>false</literal>",
                "// Line 1163:                                 increases performances. Default is <literal>true</literal>.",
                "// Line 1164:                             </para>",
                "// Line 1165:                             <para>",
                "// Line 1166:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 1167:                                 <literal>true</literal> | <literal>false</literal>",
                "// Line 1168:                             </para>",
                "// vulnerable line: 1169: </entry>",
                "// vulnerable line: 1170: </row>",
                "// vulnerable line: 1171: <row>",
                "// vulnerable line: 1172: <entry>",
                "// Line 1173:                             <literal>sql_types.keep_datetime</literal>",
                "// vulnerable line: 1174: </entry>",
                "// vulnerable line: 1175: <entry>",
                "// Line 1176:                             Since NHibernate v5.0 and if the dialect supports it, <literal>DbType.DateTime2</literal>",
                "// Line 1177:                             is used instead of <literal>DbType.DateTime</literal>. This may be disabled by setting",
                "// Line 1178:                             <literal>sql_types.keep_datetime</literal> to <literal>true</literal>.",
                "// Line 1179:                             Defaults to <literal>false</literal>.",
                "// Line 1180:                             <para>",
                "// Line 1181:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 1182:                                 <literal>true</literal> | <literal>false</literal>",
                "// Line 1183:                             </para>",
                "// vulnerable line: 1184: </entry>",
                "// vulnerable line: 1185: </row>",
                "// vulnerable line: 1186: <row>",
                "// vulnerable line: 1187: <entry>",
                "// Line 1188:                             <literal>firebird.disable_parameter_casting</literal>",
                "// vulnerable line: 1189: </entry>",
                "// vulnerable line: 1190: <entry>",
                "// Line 1191:                             <para>",
                "// Line 1192:                                 Firebird with FirebirdSql.Data.FirebirdClient may be unable to determine the type",
                "// Line 1193:                                 of parameters in many circumstances, unless they are explicitly casted in the SQL",
                "// Line 1194:                                 query. To avoid this trouble, the NHibernate <literal>FirebirdClientDriver</literal> parses SQL",
                "// Line 1195:                                 commands for detecting parameters in them and adding an explicit SQL cast around",
                "// Line 1196:                                 parameters which may trigger the issue.",
                "// Line 1197:                             </para>",
                "// Line 1198:                             <para>",
                "// Line 1199:                                 Defaults to <literal>false</literal>.",
                "// Line 1200:                                 For disabling this behavior, set this setting to true.",
                "// Line 1201:                             </para>",
                "// Line 1202:                             <para>",
                "// Line 1203:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 1204:                                 <literal>true</literal> | <literal>false</literal>",
                "// Line 1205:                             </para>",
                "// vulnerable line: 1206: </entry>",
                "// vulnerable line: 1207: </row>",
                "// vulnerable line: 1208: <row>",
                "// vulnerable line: 1209: <entry>",
                "// Line 1210:                             <literal>oracle.use_n_prefixed_types_for_unicode</literal>",
                "// vulnerable line: 1211: </entry>",
                "// vulnerable line: 1212: <entry>",
                "// Line 1213:                             <para>Oracle has a dual Unicode support model.</para>",
                "// Line 1214:                             <para>",
                "// Line 1215:                                 Either the whole database use an Unicode encoding, and then all string types",
                "// Line 1216:                                 will be Unicode. In such case, Unicode strings should be mapped to non <literal>N</literal> prefixed",
                "// Line 1217:                                 types, such as <literal>Varchar2</literal>. This is the default.",
                "// Line 1218:                             </para>",
                "// Line 1219:                             <para>",
                "// Line 1220:                                 Or <literal>N</literal> prefixed types such as <literal>NVarchar2</literal> are to be used for Unicode strings, the",
                "// Line 1221:                                 others type are using a non Unicode encoding. In such case this setting needs to be set to",
                "// Line 1222:                                 <literal>true</literal>.",
                "// Line 1224:                             <para>",
                "// Line 1225:                                 See",
                "// Line 1226:                                 <ulink url=\"https://docs.oracle.com/cd/B19306_01/server.102/b14225/ch6unicode.htm#CACHCAHF\">Implementing",
                "// Line 1227:                                 a Unicode Solution in the Database</ulink>.",
                "// Line 1228:                                 This setting applies only to Oracle dialects and ODP.Net managed or unmanaged driver.",
                "// Line 1229:                             </para>",
                "// Line 1230:                             <para>",
                "// Line 1231:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 1232:                                 <literal>true</literal> | <literal>false</literal>",
                "// Line 1233:                             </para>",
                "// vulnerable line: 1234: </entry>",
                "// vulnerable line: 1235: </row>",
                "// vulnerable line: 1236: <row>",
                "// vulnerable line: 1237: <entry>",
                "// Line 1238:                             <literal>oracle.use_binary_floating_point_types</literal>",
                "// vulnerable line: 1239: </entry>",
                "// vulnerable line: 1240: <entry>",
                "// Line 1241:                             <para>",
                "// Line 1242:                                 Set whether NHibernate should map .Net <literal>double</literal> and <literal>float</literal>",
                "// Line 1243:                                 to Oracle <literal>BINARY_DOUBLE</literal> and <literal>BINARY_FLOAT</literal> types or use",
                "// Line 1244:                                 Oracle <literal>DOUBLE</literal> and <literal>FLOAT</literal> types.",
                "// Line 1245:                             </para>",
                "// Line 1246:                             <para>",
                "// Line 1247:                                 Oracle 10g introduced <literal>BINARY_DOUBLE</literal> and <literal>BINARY_FLOAT</literal>",
                "// Line 1248:                                 types which are compatible with .NET <literal>double</literal> and <literal>float</literal>",
                "// Line 1249:                                 types, while Oracle <literal>DOUBLE</literal> and <literal>FLOAT</literal> are not. Oracle",
                "// Line 1250:                                 <literal>DOUBLE</literal> and <literal>FLOAT</literal> types do not conform to the IEEE",
                "// Line 1254:                             <para>",
                "// Line 1255:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 1256:                                 <literal>true</literal> for using Oracle <literal>BINARY_DOUBLE</literal> and",
                "// Line 1257:                                 <literal>BINARY_FLOAT</literal> types | <literal>false</literal> for using Oracle",
                "// Line 1258:                                 <literal>DOUBLE</literal> and <literal>FLOAT</literal> types.",
                "// Line 1259:                             </para>",
                "// Line 1260:                             <para>",
                "// Line 1261:                                 <literal>false</literal> by default. See",
                "// Line 1262:                                 <ulink url=\"https://docs.oracle.com/database/121/TTSQL/types.htm#TTSQL126\">ANSI SQL data types</ulink>.",
                "// Line 1263:                             </para>",
                "// vulnerable line: 1264: </entry>",
                "// vulnerable line: 1265: </row>",
                "// vulnerable line: 1266: <row>",
                "// vulnerable line: 1267: <entry>",
                "// Line 1268:                             <literal>oracle.suppress_decimal_invalid_cast_exception</literal>",
                "// vulnerable line: 1269: </entry>",
                "// vulnerable line: 1270: <entry>",
                "// Line 1271:                             <para>",
                "// Line 1272:                                 This setting specifies whether to suppress or not the <literal>InvalidCastException</literal>",
                "// Line 1273:                                 and return a rounded-off 28 precision value if the Oracle <literal>NUMBER</literal> value",
                "// Line 1274:                                 has more than a 28 precision.",
                "// Line 1275:                             </para>",
                "// Line 1276:                             <para>",
                "// Line 1277:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 1278:                                 <literal>true</literal> for suppressing the exception | <literal>false</literal> for letting",
                "// Line 1279:                                 the exception be raised.",
                "// Line 1280:                             </para>",
                "// Line 1281:                             <para>",
                "// Line 1282:                                 <literal>false</literal> by default. See",
                "// Line 1283:                                 <ulink url=\"https://docs.oracle.com/en/database/oracle/oracle-data-access-components/19.3/odpnt/DataReaderSuppressGetDecimalInvalidCastException.html\">SuppressGetDecimalInvalidCastException</ulink>.",
                "// Line 1284:                                 This setting works only with ODP.NET 19.10 or newer.",
                "// Line 1285:                             </para>",
                "// vulnerable line: 1286: </entry>",
                "// vulnerable line: 1287: </row>",
                "// vulnerable line: 1288: <row>",
                "// vulnerable line: 1289: <entry>",
                "// Line 1290:                             <literal>odbc.explicit_datetime_scale</literal>",
                "// vulnerable line: 1291: </entry>",
                "// vulnerable line: 1292: <entry>",
                "// Line 1293:                             This may need to be set to <literal>3</literal> if you are using the <literal>OdbcDriver</literal>",
                "// Line 1294:                             with MS SQL Server 2008+.",
                "// Line 1295:                             <para>",
                "// Line 1296:                                 This is intended to work around issues like:",
                "// Line 1297:                                 <programlisting>System.Data.Odbc.OdbcException :",
                "// Line 1298: ERROR [22008]",
                "// Line 1299: [Microsoft][SQL Server Native Client 11.0]",
                "// Line 1300: Datetime field overflow. Fractional second",
                "// Line 1301: precision exceeds the scale specified",
                "// Line 1302: in the parameter binding.</programlisting>",
                "// Line 1303:                             </para>",
                "// Line 1304:                             <para>",
                "// Line 1305:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 1306:                                 <literal>3</literal>",
                "// Line 1307:                             </para>",
                "// vulnerable line: 1308: </entry>",
                "// vulnerable line: 1309: </row>",
                "// vulnerable line: 1310: <row>",
                "// vulnerable line: 1311: <entry>",
                "// Line 1312:                             <literal>sqlite.binaryguid</literal>",
                "// vulnerable line: 1313: </entry>",
                "// vulnerable line: 1314: <entry>",
                "// Line 1315:                             SQLite can store GUIDs in binary or text form, controlled by the BinaryGuid",
                "// Line 1316:                             connection string parameter (default is 'true'). The BinaryGuid setting will affect",
                "// Line 1317:                             how to cast GUID to string in SQL. NHibernate will attempt to detect this",
                "// Line 1318:                             setting automatically from the connection string, but if the connection",
                "// Line 1319:                             or connection string is being handled by the application instead of by NHibernate,",
                "// Line 1320:                             you can use the <literal>sqlite.binaryguid</literal> NHibernate setting to override the behavior.",
                "// Line 1321:                             The value can be <literal>true</literal> or <literal>false</literal>.",
                "// vulnerable line: 1322: </entry>",
                "// vulnerable line: 1323: </row>",
                "// vulnerable line: 1324: <row>",
                "// vulnerable line: 1325: <entry>",
                "// Line 1326:                             <literal>nhibernate-logger</literal>",
                "// vulnerable line: 1327: </entry>",
                "// vulnerable line: 1328: <entry>",
                "// Line 1329:                             The class name of an <literal>ILoggerFactory</literal> implementation. It allows using another",
                "// Line 1330:                             logger than log4net.",
                "// Line 1331:                             <para>",
                "// Line 1332:                                 The default is not defined, which causes NHibernate to search for log4net assembly. If this",
                "// Line 1333:                                 search succeeds, NHibernate will log with log4net. Otherwise, its internal logging will",
                "// Line 1334:                                 be disabled.",
                "// Line 1335:                             </para>",
                "// Line 1336:                             <para>",
                "// Line 1337:                                 This is a very special system-level property. It can only be set through an",
                "// Line 1338:                                 <ulink url=\"https://docs.microsoft.com/en-us/dotnet/framework/configure-apps/file-schema/appsettings/\">appSetting</ulink>",
                "// Line 1343:                                 set in the <literal>hibernate.cfg.xml</literal> configuration file.",
                "// Line 1344:                             </para>",
                "// Line 1345:                             <para>",
                "// Line 1346:                                 Alternatively to using the setting, a logger factory can be programmatically supplied by using",
                "// Line 1347:                                 <literal>NHibernateLogger.SetLoggersFactory</literal>.",
                "// Line 1348:                             </para>",
                "// Line 1349:                             <para>",
                "// Line 1350:                                 <emphasis role=\"strong\">eg.</emphasis>",
                "// Line 1351:                                 <literal>classname.of.LoggerFactory, assembly</literal>",
                "// Line 1352:                             </para>",
                "// vulnerable line: 1353: </entry>",
                "// vulnerable line: 1354: </row>",
                "// Line 1355:                 </tbody>",
                "// Line 1356:             </tgroup>",
                "// Line 1357:         </table>",
                "// Line 1358: ",
                "// Line 1359:         <sect2 id=\"configuration-optional-dialects\">",
                "// Line 1360:             <title>SQL Dialects</title>",
                "// Line 1361: ",
                "// Line 1362:             <para>",
                "// Line 1363:                 You should always set the <literal>dialect</literal> property to the correct",
                "// Line 1364:                 <literal>NHibernate.Dialect.Dialect</literal> subclass for your database. This is not",
                "// Line 1369:                 other properties listed above, saving you the effort of specifying them manually.",
                "// Line 1370:             </para>",
                "// Line 1371: ",
                "// Line 1372:             <table frame=\"topbot\" id=\"sql-dialects\" revision=\"2\">",
                "// Line 1373:                 <title>NHibernate SQL Dialects (<literal>dialect</literal>)</title>",
                "// Line 1374:                 <tgroup cols=\"3\">",
                "// Line 1375:                     <colspec colwidth=\"1*\"/>",
                "// Line 1376:                     <colspec colwidth=\"2.5*\"/>",
                "// Line 1377:                     <colspec colwidth=\"2.5*\"/>",
                "// Line 1378:                     <thead>",
                "// vulnerable line: 1379: <row>",
                "// Line 1380:                             <entry>RDBMS</entry>",
                "// Line 1381:                             <entry>Dialect</entry>",
                "// Line 1382:                             <entry>Remarks</entry>",
                "// vulnerable line: 1383: </row>",
                "// Line 1384:                     </thead>",
                "// Line 1385:                     <tbody>",
                "// vulnerable line: 1386: <row>",
                "// Line 1387:                             <entry>DB2</entry> ",
                "// Line 1388:                             <entry><literal>NHibernate.Dialect.DB2Dialect</literal></entry>",
                "// Line 1389:                             <entry></entry>",
                "// vulnerable line: 1390: </row>",
                "// vulnerable line: 1391: <row>",
                "// Line 1392:                             <entry>DB2 for iSeries (OS/400)</entry> ",
                "// Line 1393:                             <entry><literal>NHibernate.Dialect.DB2400Dialect</literal></entry>",
                "// Line 1394:                             <entry></entry>",
                "// vulnerable line: 1395: </row>",
                "// vulnerable line: 1396: <row>",
                "// Line 1397:                             <entry>Firebird</entry>",
                "// Line 1398:                             <entry><literal>NHibernate.Dialect.FirebirdDialect</literal></entry>",
                "// vulnerable line: 1399: <entry>",
                "// Line 1400:                                 Set <literal>driver_class</literal> to",
                "// Line 1401:                                 <literal>NHibernate.Driver.FirebirdClientDriver</literal>",
                "// Line 1402:                                 for Firebird ADO.NET provider 2.0.",
                "// vulnerable line: 1403: </entry>",
                "// vulnerable line: 1404: </row>",
                "// vulnerable line: 1405: <row>",
                "// Line 1406:                             <entry>Informix</entry>",
                "// Line 1407:                             <entry><literal>NHibernate.Dialect.InformixDialect</literal></entry>",
                "// Line 1408:                             <entry></entry>",
                "// vulnerable line: 1409: </row>",
                "// vulnerable line: 1410: <row>",
                "// Line 1411:                             <entry>Informix 9.40</entry>",
                "// Line 1412:                             <entry><literal>NHibernate.Dialect.InformixDialect0940</literal></entry>",
                "// Line 1413:                             <entry></entry>",
                "// vulnerable line: 1414: </row>",
                "// vulnerable line: 1415: <row>",
                "// Line 1416:                             <entry>Informix 10.00</entry>",
                "// Line 1417:                             <entry><literal>NHibernate.Dialect.InformixDialect1000</literal></entry>",
                "// Line 1418:                             <entry></entry>",
                "// vulnerable line: 1419: </row>",
                "// vulnerable line: 1420: <row>",
                "// Line 1421:                             <entry>Ingres</entry>",
                "// Line 1422:                             <entry><literal>NHibernate.Dialect.IngresDialect</literal></entry>",
                "// Line 1423:                             <entry></entry>",
                "// vulnerable line: 1424: </row>",
                "// vulnerable line: 1425: <row>",
                "// Line 1426:                             <entry>Ingres 9</entry>",
                "// Line 1427:                             <entry><literal>NHibernate.Dialect.Ingres9Dialect</literal></entry>",
                "// Line 1428:                             <entry></entry>",
                "// vulnerable line: 1429: </row>",
                "// vulnerable line: 1430: <row>",
                "// Line 1431:                             <entry>Microsoft SQL Server 7</entry>",
                "// Line 1432:                             <entry><literal>NHibernate.Dialect.MsSql7Dialect</literal></entry>",
                "// Line 1433:                             <entry></entry>",
                "// vulnerable line: 1434: </row>",
                "// vulnerable line: 1435: <row>",
                "// Line 1436:                             <entry>Microsoft SQL Server 2000</entry>",
                "// Line 1437:                             <entry><literal>NHibernate.Dialect.MsSql2000Dialect</literal></entry>",
                "// Line 1438:                             <entry></entry>",
                "// vulnerable line: 1439: </row>",
                "// vulnerable line: 1440: <row>",
                "// Line 1441:                             <entry>Microsoft SQL Server 2005</entry>",
                "// Line 1442:                             <entry><literal>NHibernate.Dialect.MsSql2005Dialect</literal></entry>",
                "// Line 1443:                             <entry></entry>",
                "// vulnerable line: 1444: </row>",
                "// vulnerable line: 1445: <row>",
                "// Line 1446:                             <entry>Microsoft SQL Server 2008</entry>",
                "// Line 1447:                             <entry><literal>NHibernate.Dialect.MsSql2008Dialect</literal></entry>",
                "// Line 1448:                             <entry></entry>",
                "// vulnerable line: 1449: </row>",
                "// vulnerable line: 1450: <row>",
                "// Line 1451:                             <entry>Microsoft SQL Azure Server 2008</entry>",
                "// Line 1452:                             <entry><literal>NHibernate.Dialect.MsSqlAzure2008Dialect</literal></entry>",
                "// Line 1453:                             <entry></entry>",
                "// vulnerable line: 1454: </row>",
                "// vulnerable line: 1455: <row>",
                "// Line 1456:                             <entry>Microsoft SQL Server 2012</entry>",
                "// Line 1457:                             <entry><literal>NHibernate.Dialect.MsSql2012Dialect</literal></entry>",
                "// Line 1458:                             <entry></entry>",
                "// vulnerable line: 1459: </row>",
                "// vulnerable line: 1460: <row>",
                "// Line 1461:                             <entry>Microsoft SQL Server Compact Edition</entry>",
                "// Line 1462:                             <entry><literal>NHibernate.Dialect.MsSqlCeDialect</literal></entry>",
                "// vulnerable line: 1463: </row>",
                "// vulnerable line: 1464: <row>",
                "// Line 1465:                             <entry>Microsoft SQL Server Compact Edition 4.0</entry>",
                "// Line 1466:                             <entry><literal>NHibernate.Dialect.MsSqlCe40Dialect</literal></entry>",
                "// vulnerable line: 1467: </row>",
                "// vulnerable line: 1468: <row>",
                "// Line 1469:                             <entry>MySQL 3 or 4</entry> ",
                "// Line 1470:                             <entry><literal>NHibernate.Dialect.MySQLDialect</literal></entry>",
                "// Line 1471:                             <entry></entry>",
                "// vulnerable line: 1472: </row>",
                "// vulnerable line: 1473: <row>",
                "// Line 1474:                             <entry>MySQL 5</entry>",
                "// Line 1475:                             <entry><literal>NHibernate.Dialect.MySQL5Dialect</literal></entry>",
                "// Line 1476:                             <entry></entry>",
                "// vulnerable line: 1477: </row>",
                "// vulnerable line: 1478: <row>",
                "// Line 1479:                             <entry>MySQL 5 Inno DB</entry>",
                "// Line 1480:                             <entry><literal>NHibernate.Dialect.MySQL5InnoDBDialect</literal></entry>",
                "// Line 1481:                             <entry></entry>",
                "// vulnerable line: 1482: </row>",
                "// vulnerable line: 1483: <row>",
                "// Line 1484:                             <entry>MySQL 5.5</entry>",
                "// Line 1485:                             <entry><literal>NHibernate.Dialect.MySQL55Dialect</literal></entry>",
                "// Line 1486:                             <entry></entry>",
                "// vulnerable line: 1487: </row>",
                "// vulnerable line: 1488: <row>",
                "// Line 1489:                             <entry>MySQL 5.5 Inno DB</entry>",
                "// Line 1490:                             <entry><literal>NHibernate.Dialect.MySQL55InnoDBDialect</literal></entry>",
                "// Line 1491:                             <entry></entry>",
                "// vulnerable line: 1492: </row>",
                "// vulnerable line: 1493: <row>",
                "// Line 1494:                             <entry>Oracle</entry> ",
                "// Line 1495:                             <entry><literal>NHibernate.Dialect.Oracle8iDialect</literal></entry>",
                "// Line 1496:                             <entry></entry>",
                "// vulnerable line: 1497: </row>",
                "// vulnerable line: 1498: <row>",
                "// Line 1499:                             <entry>Oracle 9i</entry> ",
                "// Line 1500:                             <entry><literal>NHibernate.Dialect.Oracle9iDialect</literal></entry>",
                "// Line 1501:                             <entry></entry>",
                "// vulnerable line: 1502: </row>",
                "// vulnerable line: 1503: <row>",
                "// Line 1504:                             <entry>Oracle 10g, Oracle 11g</entry> ",
                "// Line 1505:                             <entry><literal>NHibernate.Dialect.Oracle10gDialect</literal></entry>",
                "// Line 1506:                             <entry></entry>",
                "// vulnerable line: 1507: </row>",
                "// vulnerable line: 1508: <row>",
                "// Line 1509:                             <entry>Oracle 12c</entry> ",
                "// Line 1510:                             <entry><literal>NHibernate.Dialect.Oracle12cDialect</literal></entry>",
                "// Line 1511:                             <entry></entry>",
                "// vulnerable line: 1512: </row>",
                "// vulnerable line: 1513: <row>",
                "// vulnerable line: 1514: <entry>PostgreSQL</entry>",
                "// vulnerable line: 1515: <entry><literal>NHibernate.Dialect.PostgreSQLDialect</literal></entry>",
                "// Line 1516:                             <entry></entry>",
                "// vulnerable line: 1517: </row>",
                "// vulnerable line: 1518: <row>",
                "// vulnerable line: 1519: <entry>PostgreSQL</entry>",
                "// vulnerable line: 1520: <entry><literal>NHibernate.Dialect.PostgreSQLDialect</literal></entry>",
                "// vulnerable line: 1521: <entry>",
                "// vulnerable line: 1522: </entry>",
                "// vulnerable line: 1523: </row>",
                "// vulnerable line: 1524: <row>",
                "// Line 1525:                             <entry>PostgreSQL 8.1</entry>",
                "// Line 1526:                             <entry><literal>NHibernate.Dialect.PostgreSQL81Dialect</literal></entry>",
                "// vulnerable line: 1527: <entry>",
                "// Line 1528:                                 This dialect supports <literal>FOR UPDATE NOWAIT</literal>",
                "// Line 1529:                                 available in PostgreSQL 8.1.",
                "// vulnerable line: 1530: </entry>",
                "// vulnerable line: 1531: </row>",
                "// vulnerable line: 1532: <row>",
                "// Line 1533:                             <entry>PostgreSQL 8.2</entry>",
                "// Line 1534:                             <entry><literal>NHibernate.Dialect.PostgreSQL82Dialect</literal></entry>",
                "// vulnerable line: 1535: <entry>",
                "// Line 1536:                                 This dialect supports <literal>IF EXISTS</literal> keyword in",
                "// Line 1537:                                 <literal>DROP TABLE</literal> and <literal>DROP SEQUENCE</literal>",
                "// Line 1538:                                 available in PostgreSQL 8.2.",
                "// vulnerable line: 1539: </entry>",
                "// vulnerable line: 1540: </row>",
                "// vulnerable line: 1541: <row>",
                "// Line 1542:                             <entry>PostgreSQL 8.3</entry>",
                "// Line 1543:                             <entry><literal>NHibernate.Dialect.PostgreSQL83Dialect</literal></entry>",
                "// vulnerable line: 1544: <entry>",
                "// Line 1545:                                 This dialect supports <literal>XML</literal> type.",
                "// vulnerable line: 1546: </entry>",
                "// vulnerable line: 1547: </row>",
                "// vulnerable line: 1548: <row>",
                "// Line 1549:                             <entry>SQLite</entry>",
                "// Line 1550:                             <entry><literal>NHibernate.Dialect.SQLiteDialect</literal></entry>",
                "// vulnerable line: 1551: <entry>",
                "// Line 1552:                                 Set <literal>driver_class</literal> to",
                "// Line 1553:                                 <literal>NHibernate.Driver.SQLite20Driver</literal>",
                "// Line 1554:                                 for System.Data.SQLite provider for .NET 2.0.",
                "// Line 1555:                                 <para>",
                "// Line 1556:                                     Due to",
                "// Line 1557:                                     <ulink url=\"https://system.data.sqlite.org/index.html/tktview/44a0955ea344a777ffdbcc077831e1adc8b77a36\">the",
                "// Line 1558:                                     behavior of System.Data.SQLite</ulink> with <literal>DateTime</literal>, consider using",
                "// Line 1559:                                     <literal>DateTimeFormatString=yyyy-MM-dd HH:mm:ss.FFFFFFF;</literal> in the SQLite",
                "// Line 1560:                                     connection string for preventing undesired time shifts with its default configuration.",
                "// Line 1561:                                 </para>",
                "// vulnerable line: 1562: </entry>",
                "// vulnerable line: 1563: </row>",
                "// vulnerable line: 1564: <row>",
                "// Line 1565:                             <entry>Sybase Adaptive Server Anywhere 9</entry>",
                "// Line 1566:                             <entry><literal>NHibernate.Dialect.SybaseASA9Dialect</literal></entry>",
                "// Line 1567:                             <entry></entry>",
                "// vulnerable line: 1568: </row>",
                "// vulnerable line: 1569: <row>",
                "// Line 1570:                             <entry>Sybase Adaptive Server Enterprise 15</entry>",
                "// Line 1571:                             <entry><literal>NHibernate.Dialect.SybaseASE15Dialect</literal></entry>",
                "// Line 1572:                             <entry></entry>",
                "// vulnerable line: 1573: </row>",
                "// vulnerable line: 1574: <row>",
                "// Line 1575:                             <entry>Sybase SQL Anywhere 10</entry>",
                "// Line 1576:                             <entry><literal>NHibernate.Dialect.SybaseSQLAnywhere10Dialect</literal></entry>",
                "// Line 1577:                             <entry></entry>",
                "// vulnerable line: 1578: </row>",
                "// vulnerable line: 1579: <row>",
                "// Line 1580:                             <entry>Sybase SQL Anywhere 11</entry>",
                "// Line 1581:                             <entry><literal>NHibernate.Dialect.SybaseSQLAnywhere11Dialect</literal></entry>",
                "// Line 1582:                             <entry></entry>",
                "// vulnerable line: 1583: </row>",
                "// vulnerable line: 1584: <row>",
                "// Line 1585:                             <entry>Sybase SQL Anywhere 12</entry>",
                "// Line 1586:                             <entry><literal>NHibernate.Dialect.SybaseSQLAnywhere12Dialect</literal></entry>",
                "// Line 1587:                             <entry></entry>",
                "// vulnerable line: 1588: </row>",
                "// Line 1589:                     </tbody>",
                "// Line 1590:                 </tgroup>",
                "// Line 1591:             </table>",
                "// Line 1592: ",
                "// Line 1593:             <para>",
                "// Line 1594:                 Additional dialects may be available in the NHibernate.Dialect namespace.",
                "// Line 1595:             </para>",
                "// Line 1596: ",
                "// Line 1597:         </sect2>",
                "// Line 1598: ",
                "// Line 1685:                 <literal>Configuration.SetProperties</literal> or the <literal>hibernate.cfg.xml</literal>",
                "// Line 1686:                 configuration file, nor be set as <literal>&lt;session-factory&gt;</literal> properties.",
                "// Line 1687:             </para>",
                "// Line 1688: ",
                "// Line 1689:             <table frame=\"topbot\" id=\"configuration-systemlevel-properties\">",
                "// Line 1690:                 <title>NHibernate system level properties</title>",
                "// Line 1691:                 <tgroup cols=\"2\">",
                "// Line 1692:                     <colspec colname=\"c1\" colwidth=\"1*\"/>",
                "// Line 1693:                     <colspec colname=\"c2\" colwidth=\"1*\"/>",
                "// Line 1694:                     <thead>",
                "// vulnerable line: 1695: <row>",
                "// Line 1696:                             <entry>Property name</entry>",
                "// Line 1697:                             <entry>Purpose</entry>",
                "// vulnerable line: 1698: </row>",
                "// Line 1699:                     </thead>",
                "// Line 1700:                     <tbody>",
                "// vulnerable line: 1701: <row>",
                "// vulnerable line: 1702: <entry>",
                "// Line 1703:                                 <literal>bytecode-provider</literal>",
                "// vulnerable line: 1704: </entry>",
                "// vulnerable line: 1705: <entry>",
                "// Line 1706:                                 <para>",
                "// Line 1707:                                     Specifies the bytecode provider to use to optimize the use of reflection in NHibernate.",
                "// Line 1708:                                     Use <literal>null</literal> to disable the optimization completely, <literal>lcg</literal>",
                "// Line 1709:                                     to use built-in lightweight code generation, or the assembly qualified class name of a custom",
                "// Line 1710:                                     <literal>IBytecodeProvider</literal> implementation. Defaults to <literal>lcg</literal>.",
                "// Line 1711:                                 </para>",
                "// Line 1712:                                 <programlisting><![CDATA[<bytecode-provider",
                "// Line 1713:     type=\"lcg|null|className\" />]]></programlisting>",
                "// Line 1714:                                 <para>",
                "// Line 1715:                                     You can also set this property by code by setting",
                "// Line 1716:                                     <literal>NHibernate.Cfg.Environment.BytecodeProvider</literal>",
                "// Line 1717:                                     before creating any <literal>NHibernate.Cfg.Configuration</literal> instance.",
                "// Line 1718:                                 </para>",
                "// vulnerable line: 1719: </entry>",
                "// vulnerable line: 1720: </row>",
                "// vulnerable line: 1721: <row>",
                "// vulnerable line: 1722: <entry>",
                "// Line 1723:                                 <literal>objects-factory</literal>",
                "// vulnerable line: 1724: </entry>",
                "// vulnerable line: 1725: <entry>",
                "// Line 1726:                                 <para>",
                "// Line 1727:                                     Specifies a custom objects factory to use for instantiating NHibernate dependencies.",
                "// Line 1728:                                     Use the assembly qualified class name of a custom <literal>IObjectsFactory</literal>",
                "// Line 1729:                                     implementation.",
                "// Line 1730:                                 </para>",
                "// Line 1731:                                 <programlisting><![CDATA[<objects-factory",
                "// Line 1732:     type=\"className\" />]]></programlisting>",
                "// Line 1733:                                 <para>",
                "// Line 1734:                                     You can also set this property by code by setting",
                "// Line 1735:                                     <literal>NHibernate.Cfg.Environment.ObjectsFactory</literal>",
                "// Line 1736:                                     before creating any <literal>NHibernate.Cfg.Configuration</literal> instance.",
                "// Line 1737:                                 </para>",
                "// vulnerable line: 1738: </entry>",
                "// vulnerable line: 1739: </row>",
                "// vulnerable line: 1740: <row>",
                "// vulnerable line: 1741: <entry>",
                "// Line 1742:                                 <literal>reflection-optimizer</literal>",
                "// vulnerable line: 1743: </entry>",
                "// vulnerable line: 1744: <entry>",
                "// Line 1745:                                 <para>",
                "// Line 1746:                                     Enables use of a runtime-generated class to set or get properties of an entity",
                "// Line 1747:                                     or component instead of using runtime reflection. The use of the reflection",
                "// Line 1748:                                     optimizer inflicts a certain startup cost on the application but should lead to",
                "// Line 1749:                                     better performance in the long run. Defaults to <literal>true</literal>.",
                "// Line 1750:                                 </para>",
                "// Line 1751:                                 <programlisting><![CDATA[<reflection-optimizer",
                "// Line 1752:     use=\"true|false\"/>]]></programlisting>",
                "// Line 1753:                                 <para>",
                "// Line 1754:                                     You can also set this property by code by setting",
                "// Line 1755:                                     <literal>NHibernate.Cfg.Environment.UseReflectionOptimizer</literal>",
                "// Line 1756:                                     before creating any <literal>NHibernate.Cfg.Configuration</literal> instance.",
                "// Line 1757:                                 </para>",
                "// vulnerable line: 1758: </entry>",
                "// vulnerable line: 1759: </row>",
                "// Line 1760:                     </tbody>",
                "// Line 1761:                 </tgroup>",
                "// Line 1762:             </table>",
                "// Line 1763: ",
                "// Line 1764:         </sect2>",
                "// Line 1765: ",
                "// Line 1766:     </sect1>",
                "// Line 1767: ",
                "// Line 1768:     <sect1 id=\"configuration-logging\">",
                "// Line 1769:         <title>Logging</title>"
            ]
        }
    ]
}