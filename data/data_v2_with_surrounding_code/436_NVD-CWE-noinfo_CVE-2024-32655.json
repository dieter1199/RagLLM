{
    "cve_id": "CVE-2024-32655",
    "cve_description": "Npgsql is the .NET data provider for PostgreSQL. The `WriteBind()` method in `src/Npgsql/Internal/NpgsqlConnector.FrontendMessages.cs` uses `int` variables to store the message length and the sum of parameter lengths. Both variables overflow when the sum of parameter lengths becomes too large. This causes Npgsql to write a message size that is too small when constructing a Postgres protocol message to send it over the network to the database. When parsing the message, the database will only read a small number of bytes and treat any following bytes as new messages while they belong to the old message. Attackers can abuse this to inject arbitrary Postgres protocol messages into the connection, leading to the execution of arbitrary SQL statements on the application's behalf. This vulnerability is fixed in 4.0.14, 4.1.13, 5.0.18, 6.0.11, 7.0.7, and 8.0.3.",
    "cve_publish_date": "2024-05-14T15:36Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Merge pull request from GHSA-x9vc-6hfv-hg8c",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "NpgsqlTransaction.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "10",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 205:         // have to start a user action. However, we do this for consistency as if we did (for the checks and exceptions)",
                "// Line 206:         using var _ = _connector.StartUserAction();",
                "// Line 207: ",
                "// Line 208:         LogMessages.CreatingSavepoint(_transactionLogger, name, _connector.Id);",
                "// Line 209: ",
                "// Line 210:         if (RequiresQuoting(name))",
                "// Line 211:             name = $\"\"{name.Replace(\"\"\", \"\"\"\")}\"\";",
                "// Line 212: ",
                "// Line 213:         // Note: savepoint names are PostgreSQL identifiers, and so limited by default to 63 characters.",
                "// Line 214:         // Since we are prepending, we assume below that the statement will always fit in the buffer.",
                "// vulnerable line: 215: _connector.WriteBuffer.WriteByte(FrontendMessageCode.Query);",
                "// vulnerable line: 216: _connector.WriteBuffer.WriteInt32(",
                "// vulnerable line: 217: sizeof(int)  +                               // Message length (including self excluding code)",
                "// vulnerable line: 218: _connector.TextEncoding.GetByteCount(\"SAVEPOINT \") +",
                "// vulnerable line: 219: _connector.TextEncoding.GetByteCount(name) +",
                "// vulnerable line: 220: sizeof(byte));                               // Null terminator",
                "// Line 221: ",
                "// vulnerable line: 222: _connector.WriteBuffer.WriteString(\"SAVEPOINT \");",
                "// vulnerable line: 223: _connector.WriteBuffer.WriteString(name);",
                "// vulnerable line: 224: _connector.WriteBuffer.WriteByte(0);",
                "// Line 225: ",
                "// Line 226:         _connector.PendingPrependedResponses += 2;",
                "// Line 227:     }",
                "// Line 228: ",
                "// Line 229:     /// <summary>",
                "// Line 230:     /// Creates a transaction save point.",
                "// Line 231:     /// </summary>",
                "// Line 232:     /// <param name=\"name\">The name of the savepoint.</param>",
                "// Line 233:     /// <param name=\"cancellationToken\">",
                "// Line 234:     /// An optional token to cancel the asynchronous operation. The default value is <see cref=\"CancellationToken.None\"/>."
            ]
        },
        {
            "filename_of_changes": "PgPostmasterMock.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "PgServerMock.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "WriteBufferTests.cs",
            "code_language": "C#",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        }
    ]
}