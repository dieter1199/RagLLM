{
    "cve_id": "CVE-2023-48220",
    "cve_description": "Decidim is a participatory democracy framework. Starting in version 0.4.rc3 and prior to version 2.0.9 of the `devise_invitable` gem, the invites feature allows users to accept the invitation for an unlimited amount of time through the password reset functionality. This issue creates vulnerable dependencies starting in version 0.0.1.alpha3 and prior to versions 0.26.9, 0.27.5, and 0.28.0 of the `decidim,` `decidim-admin`, and `decidim-system` gems. When using the password reset functionality, the `devise_invitable` gem always accepts the pending invitation if the user has been invited. The only check done is if the user has been invited but the code does not ensure that the pending invitation is still valid as defined by the `invite_for` expiry period. Decidim sets this configuration to `2.weeks` so this configuration should be respected. The bug is in the `devise_invitable` gem and should be fixed there and the dependency should be upgraded in Decidim once the fix becomes available. `devise_invitable` to version `2.0.9` and above fix this issue. Versions 0.26.9, 0.27.5, and 0.28.0 of the `decidim,` `decidim-admin`, and `decidim-system` gems contain this fix. As a workaround, invitations can be cancelled directly from the database.",
    "cve_publish_date": "2024-02-20T18:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "clear invitation token when password is reset",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "20100401102949_create_tables.rb",
            "code_language": "Ruby",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: class CreateTables < ActiveRecord::Migration",
                "// Line 2:   def self.up",
                "// Line 3:     create_table :users do |t|",
                "// Line 4:       t.database_authenticatable :null => true",
                "// Line 5:       t.string :username",
                "// Line 6:       t.confirmable",
                "// Line 7:       t.invitable",
                "// vulnerable line: 8: t.encryptable",
                "// Line 9:       ",
                "// Line 10:       t.timestamps",
                "// Line 11:     end",
                "// Line 12:   end",
                "// Line 13: ",
                "// Line 14:   def self.down",
                "// Line 15:     drop_table :users",
                "// Line 16:   end",
                "// Line 17: end"
            ]
        },
        {
            "filename_of_changes": "devise.rb",
            "code_language": "Ruby",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 75:   # config.remember_for = 2.weeks",
                "// Line 76: ",
                "// Line 77:   # If true, a valid remember token can be re-used between multiple browsers.",
                "// Line 78:   # config.remember_across_browsers = true",
                "// Line 79: ",
                "// Line 80:   # If true, extends the user's remember period when remembered via cookie.",
                "// Line 81:   # config.extend_remember_period = false",
                "// Line 82: ",
                "// Line 83:   # If true, uses the password salt as remember token. This should be turned",
                "// Line 84:   # to false if you are not using database authenticatable.",
                "// vulnerable line: 85: config.use_salt_as_remember_token = true",
                "// Line 86: ",
                "// Line 87:   # ==> Configuration for :validatable",
                "// Line 88:   # Range for password length. Default is 6..20.",
                "// Line 89:   # config.password_length = 6..20",
                "// Line 90: ",
                "// Line 91:   # Regex to use to validate the email address",
                "// Line 92:   # config.email_regexp = /^([\\w\\.%\\+\\-]+)@([\\w\\-]+\\.)+([\\w]{2,})$/i",
                "// Line 93: ",
                "// Line 94:   # ==> Configuration for :timeoutable",
                "// Line 95:   # The time you want to timeout the user session without activity. After this"
            ]
        },
        {
            "filename_of_changes": "invitable_test.rb",
            "code_language": "Ruby",
            "number_of_lines_added_for_mitigation": "9",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "model.rb",
            "code_language": "Ruby",
            "number_of_lines_added_for_mitigation": "6",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "models_test.rb",
            "code_language": "Ruby",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 10:     modules.each do |mod|",
                "// Line 11:       assert include_module?(klass, mod), \"#{klass} not include #{mod}\"",
                "// Line 12:     end",
                "// Line 13: ",
                "// Line 14:     (Devise::ALL - modules).each do |mod|",
                "// Line 15:       assert !include_module?(klass, mod), \"#{klass} include #{mod}\"",
                "// Line 16:     end",
                "// Line 17:   end",
                "// Line 18: ",
                "// Line 19:   test 'should include Devise modules' do",
                "// vulnerable line: 20: assert_include_modules User, :database_authenticatable, :registerable, :validatable, :confirmable, :invitable",
                "// Line 21:   end",
                "// Line 22: ",
                "// Line 23:   test 'should have a default value for invite_for' do",
                "// Line 24:     assert_equal 0, User.invite_for",
                "// Line 25:   end",
                "// Line 26: ",
                "// Line 27:   test 'should have a default value for invitation_limit' do",
                "// Line 28:     assert_nil User.invitation_limit",
                "// Line 29:   end",
                "// Line 30: "
            ]
        },
        {
            "filename_of_changes": "user.rb",
            "code_language": "Ruby",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: class User < ActiveRecord::Base",
                "// vulnerable line: 2: devise :database_authenticatable, :registerable, :validatable, :confirmable, :invitable",
                "// Line 3:   ",
                "// Line 4:   attr_accessible :email, :username, :password, :password_confirmation",
                "// Line 5:   ",
                "// Line 6:   validates :username, :length => { :maximum => 20 }",
                "// Line 7: end"
            ]
        },
        {
            "filename_of_changes": "user.rb",
            "code_language": "Ruby",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: class User",
                "// Line 2:   include Mongoid::Document",
                "// Line 3:   include Shim",
                "// Line 4:   ",
                "// Line 5:   field :created_at, :type => DateTime",
                "// Line 6:   field :username,   :type => String",
                "// Line 7:   ",
                "// vulnerable line: 8: devise :database_authenticatable, :registerable, :validatable, :confirmable, :invitable",
                "// Line 9:   ",
                "// Line 10:   validates :username, :length => { :maximum => 20 }",
                "// Line 11: end"
            ]
        }
    ]
}