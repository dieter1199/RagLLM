{
    "cve_id": "CVE-2024-5824",
    "cve_description": "A path traversal vulnerability in the `/set_personality_config` endpoint of parisneo/lollms version 9.4.0 allows an attacker to overwrite the `configs/config.yaml` file. This can lead to remote code execution by changing server configuration properties such as `force_accept_remote_access` and `turn_on_code_validation`.",
    "cve_publish_date": "2024-06-27T19:15Z",
    "cwe_id": "CWE-22",
    "cwe_name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
    "cwe_description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
    "commit_message": "Added sanitize_svg function and forbid_remote_access is used for setting personality settings",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "lollms_personalities_infos.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "16",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 9: \"\"\"",
                "// Line 10: from fastapi import APIRouter, Request",
                "// Line 11: from fastapi import HTTPException",
                "// Line 12: from fastapi.responses import FileResponse",
                "// Line 13: from pydantic import BaseModel, Field",
                "// Line 14: import pkg_resources",
                "// Line 15: from lollms.server.elf_server import LOLLMSElfServer",
                "// Line 16: from lollms.personality import AIPersonality, InstallOption",
                "// Line 17: from ascii_colors import ASCIIColors",
                "// Line 18: from lollms.utilities import load_config, trace_exception, gc, show_yes_no_dialog",
                "// vulnerable line: 19: from lollms.security import check_access",
                "// Line 20: from pathlib import Path",
                "// Line 21: from typing import List, Optional",
                "// Line 22: import psutil",
                "// Line 23: import yaml",
                "// Line 24: from lollms.security import sanitize_path",
                "// Line 25: ",
                "// Line 26: # --------------------- Parameter Classes -------------------------------",
                "// Line 27: ",
                "// Line 28: class PersonalityListingInfos(BaseModel):",
                "// Line 29:     category:str"
            ]
        },
        {
            "filename_of_changes": "security.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "30",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "utilities.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "4",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 30: ",
                "// Line 31: import ctypes",
                "// Line 32: import io",
                "// Line 33: import urllib",
                "// Line 34: import os",
                "// Line 35: import sys",
                "// Line 36: import git",
                "// Line 37: ",
                "// Line 38: import mimetypes",
                "// Line 39: import subprocess",
                "// vulnerable line: 40: from lollms.security import sanitize_shell_code",
                "// Line 41: ",
                "// Line 42: from functools import partial",
                "// Line 43: ",
                "// Line 44: def install_conda_utility():",
                "// Line 45:     import platform",
                "// Line 46:     if platform.system()==\"Windows\":",
                "// Line 47:         conda_path = Path(sys.executable).parent.parent/\"miniconda3\"/\"condabin\"/\"conda\"",
                "// Line 48:     else:",
                "// Line 49:         conda_path = Path(sys.executable).parent.parent.parent/\"miniconda3\"/\"bin\"/\"conda\"",
                "// Line 50:     ASCIIColors.red(\"Conda path:\")"
            ]
        }
    ]
}