{
    "cve_id": "CVE-2024-29022",
    "cve_description": "Xibo is an Open Source Digital Signage platform with a web content management system and Windows display player software. In affected versions some request headers are not correctly sanitised when stored in the session and display tables. These headers can be used to inject a malicious script into the session page to exfiltrate session IDs and User Agents. These session IDs / User Agents can subsequently be used to hijack active sessions. A malicious script can be injected into the display grid to exfiltrate information related to displays. Users should upgrade to version 3.3.10 or 4.0.9 which fix this issue. Customers who host their CMS with the Xibo Signage service have already received an upgrade or patch to resolve this issue regardless of the CMS version that they are running. Upgrading to a fixed version is necessary to remediate. Patches are available for earlier versions of Xibo CMS that are out of security support: 2.3 patch ebeccd000b51f00b9a25f56a2f252d6812ebf850.diff. 1.8 patch a81044e6ccdd92cc967e34c125bd8162432e51bc.diff. There are no known workarounds for this issue.",
    "cve_publish_date": "2024-04-12T21:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Sessions: Add sanitization in getIp() and disable output of session ID in session grid.",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "Session.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "3",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 163:     /**",
                "// Line 164:      * {@inheritdoc}",
                "// Line 165:      */",
                "// Line 166:     function read($key)",
                "// Line 167:     {",
                "// Line 168:         //$this->log->debug('Session read');",
                "// Line 169: ",
                "// Line 170:         $data = '';",
                "// Line 171:         $this->key = $key;",
                "// Line 172: ",
                "// vulnerable line: 173: $userAgent = substr($_SERVER['HTTP_USER_AGENT'], 0, 253);",
                "// Line 174: ",
                "// Line 175:         try {",
                "// Line 176:             $dbh = $this->getDb();",
                "// Line 177: ",
                "// Line 178:             // Start a transaction",
                "// Line 179:             $this->beginTransaction();",
                "// Line 180: ",
                "// Line 181:             // Get this session",
                "// Line 182:             $sth = $dbh->getConnection()->prepare('",
                "// Line 183:                 SELECT `session_data`, `isexpired`, `useragent`, `session_expiration`, `userId` ",
                "// Line 413:             VALUES (:session_id, :session_data, :session_expiration, :lastAccessed, :userId, :expired, :useragent, :remoteaddr)",
                "// Line 414:         ';",
                "// Line 415: ",
                "// Line 416:         $params = [",
                "// Line 417:             'session_id' => $key,",
                "// Line 418:             'session_data' => $data,",
                "// Line 419:             'session_expiration' => $expiry,",
                "// Line 420:             'lastAccessed' => date('Y-m-d H:i:s', $lastAccessed),",
                "// Line 421:             'userId' => $this->userId,",
                "// Line 422:             'expired' => ($this->expired) ? 1 : 0,",
                "// vulnerable line: 423: 'useragent' => substr($_SERVER['HTTP_USER_AGENT'], 0, 253),",
                "// Line 424:             'remoteaddr' => $this->getIp()",
                "// Line 425:         ];",
                "// Line 426: ",
                "// Line 427:         $this->getDb()->update($sql, $params);",
                "// Line 428:     }",
                "// Line 429: ",
                "// Line 430:     /**",
                "// Line 431:      * Update Session",
                "// Line 432:      * @param $key",
                "// Line 433:      * @param $data",
                "// Line 462:     ",
                "// Line 463:     /**",
                "// Line 464:      * Get the Client IP Address",
                "// Line 465:      * @return string",
                "// Line 466:      */",
                "// Line 467:     private function getIp()",
                "// Line 468:     {",
                "// Line 469:         $clientIp = '';",
                "// Line 470:         $keys = array('X_FORWARDED_FOR', 'HTTP_X_FORWARDED_FOR', 'CLIENT_IP', 'REMOTE_ADDR');",
                "// Line 471:         foreach ($keys as $key) {",
                "// vulnerable line: 472: if (isset($_SERVER[$key])) {",
                "// Line 473:                 $clientIp = $_SERVER[$key];",
                "// Line 474:                 break;",
                "// Line 475:             }",
                "// Line 476:         }",
                "// Line 477:         return $clientIp;",
                "// Line 478:     }",
                "// Line 479: ",
                "// Line 480:     /**",
                "// Line 481:      * @param $userId",
                "// Line 482:      */"
            ]
        },
        {
            "filename_of_changes": "SessionFactory.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "8",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 143:         // Paging",
                "// Line 144:         if ($filterBy !== null && $this->getSanitizer()->getInt('start', $filterBy) !== null && $this->getSanitizer()->getInt('length', $filterBy) !== null) {",
                "// Line 145:             $limit = ' LIMIT ' . intval($this->getSanitizer()->getInt('start', $filterBy), 0) . ', ' . $this->getSanitizer()->getInt('length', 10, $filterBy);",
                "// Line 146:         }",
                "// Line 147: ",
                "// Line 148:         $sql = $select . $body . $order . $limit;",
                "// Line 149: ",
                "// Line 150: ",
                "// Line 151: ",
                "// Line 152:         foreach ($this->getStore()->select($sql, $params) as $row) {",
                "// vulnerable line: 153: $entries[] = $this->createEmpty()->hydrate($row, ['stringProperties' => ['sessionId']]);",
                "// Line 154:         }",
                "// Line 155: ",
                "// Line 156:         // Paging",
                "// Line 157:         if ($limit != '' && count($entries) > 0) {",
                "// Line 158:             $results = $this->getStore()->select('SELECT COUNT(*) AS total ' . $body, $params);",
                "// Line 159:             $this->_countLast = intval($results[0]['total']);",
                "// Line 160:         }",
                "// Line 161: ",
                "// Line 162:         return $entries;",
                "// Line 163:     }"
            ]
        },
        {
            "filename_of_changes": "Sessions.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 81:             /* @var \\Xibo\\Entity\\Session $row */",
                "// Line 82: ",
                "// Line 83:             // Normalise the date",
                "// Line 84:             $row->lastAccessed = $this->getDate()->getLocalDate(Date::createFromFormat($this->getDate()->getSystemFormat(), $row->lastAccessed));",
                "// Line 85: ",
                "// Line 86:             if (!$this->isApi() && $this->getUser()->isSuperAdmin()) {",
                "// Line 87: ",
                "// Line 88:                 $row->includeProperty('buttons');",
                "// Line 89: ",
                "// Line 90:                 // Edit",
                "// vulnerable line: 91: $row->buttons[] = array(",
                "// Line 92:                     'id' => 'sessions_button_logout',",
                "// Line 93:                     'url' => $this->urlFor('sessions.confirm.logout.form', ['id' => $row->sessionId]),",
                "// Line 94:                     'text' => __('Logout')",
                "// vulnerable line: 95: );",
                "// Line 96:             }",
                "// Line 97:         }",
                "// Line 98: ",
                "// Line 99:         $this->getState()->template = 'grid';",
                "// Line 100:         $this->getState()->recordsTotal = $this->sessionFactory->countLast();",
                "// Line 101:         $this->getState()->setData($sessions);",
                "// Line 102:     }",
                "// Line 103: ",
                "// Line 104:     /**",
                "// Line 105:      * Confirm Logout Form"
            ]
        },
        {
            "filename_of_changes": "Soap.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1765:     /**",
                "// Line 1766:      * Get the Client IP Address",
                "// Line 1767:      * @return string",
                "// Line 1768:      */",
                "// Line 1769:     protected function getIp()",
                "// Line 1770:     {",
                "// Line 1771:         $clientIp = '';",
                "// Line 1772: ",
                "// Line 1773:         $keys = array('X_FORWARDED_FOR', 'HTTP_X_FORWARDED_FOR', 'CLIENT_IP', 'REMOTE_ADDR');",
                "// Line 1774:         foreach ($keys as $key) {",
                "// vulnerable line: 1775: if (isset($_SERVER[$key])) {",
                "// Line 1776:                 $clientIp = $_SERVER[$key];",
                "// Line 1777:                 break;",
                "// Line 1778:             }",
                "// Line 1779:         }",
                "// Line 1780: ",
                "// Line 1781:         return $clientIp;",
                "// Line 1782:     }",
                "// Line 1783: ",
                "// Line 1784:     /**",
                "// Line 1785:      * Check we haven't exceeded the bandwidth limits"
            ]
        }
    ]
}