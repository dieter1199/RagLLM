{
    "cve_id": "CVE-2024-30246",
    "cve_description": "Tuleap is an Open Source Suite to improve management of software developments and collaboration. A malicious user could exploit this issue on purpose to delete information on the instance or possibly gain access to restricted artifacts. It is however not possible to control exactly which information is deleted. Information from theDate, File, Float, Int, List, OpenList, Text, and Permissions on artifact (this one can lead to the disclosure of restricted information) fields can be impacted.  This vulnerability is fixed in Tuleap Community Edition version 15.7.99.6 and Tuleap Enterprise Edition 15.7-2, 15.6-5, 15.5-6, 15.4-8, 15.3-6, 15.2-5, 15.1-9, 15.0-9, and 14.12-6.",
    "cve_publish_date": "2024-03-29T16:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "fix: request #37545 Deleting or moving an artifact can delete values from unrelated artifacts\n\nIssue has been introduced by git #tuleap/stable/7f2e5e974596196bd96c2146c533353ecbcc592f.\n\nChange-Id: I04ac31d1803abcd5ce46f121e1411825f063247b",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "ArchiveAndDeleteArtifactTaskBuilder.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "0",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 210:                 new Tracker_Artifact_PriorityManager(",
                "// Line 211:                     new Tracker_Artifact_PriorityDao(),",
                "// Line 212:                     new Tracker_Artifact_PriorityHistoryDao(),",
                "// Line 213:                     $user_manager,",
                "// Line 214:                     $tracker_artifact_factory",
                "// Line 215:                 ),",
                "// Line 216:                 $tracker_artifact_dao,",
                "// Line 217:                 new ComputedFieldDaoCache(new ComputedFieldDao()),",
                "// Line 218:                 new RecentlyVisitedDao(),",
                "// Line 219:                 new PendingArtifactRemovalDao(),",
                "// vulnerable line: 220: new ArtifactChangesetValueDeletorDAO(),",
                "// Line 221:                 new PostArtifactMoveReferencesCleaner(",
                "// Line 222:                     $cross_reference_manager,",
                "// Line 223:                     new ReverseLinksRetriever(new ReverseLinksDao(), $tracker_artifact_factory),",
                "// Line 224:                     $artifact_linker,",
                "// Line 225:                     $tracker_artifact_factory",
                "// Line 226:                 ),",
                "// Line 227:                 new PostArtifactDeletionCleaner(",
                "// Line 228:                     $cross_reference_manager,",
                "// Line 229:                     $tracker_artifact_dao",
                "// Line 230:                 ),"
            ]
        },
        {
            "filename_of_changes": "ArtifactDependenciesCleaner.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "0",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 29: ",
                "// Line 30: class ArtifactDependenciesCleaner",
                "// Line 31: {",
                "// Line 32:     public function __construct(",
                "// Line 33:         private readonly PermissionsManager $permissions_manager,",
                "// Line 34:         private readonly Tracker_Artifact_PriorityManager $tracker_artifact_priority_manager,",
                "// Line 35:         private readonly Tracker_ArtifactDao $dao,",
                "// Line 36:         private readonly ComputedFieldDaoCache $computed_dao_cache,",
                "// Line 37:         private readonly RecentlyVisitedDao $recently_visited_dao,",
                "// Line 38:         private readonly PendingArtifactRemovalDao $artifact_removal,",
                "// vulnerable line: 39: private readonly ArtifactChangesetValueDeletorDAO $changeset_value_deletor_DAO,",
                "// Line 40:         private readonly PostArtifactMoveReferencesCleaner $post_artifact_move_references_cleaner,",
                "// Line 41:         private readonly PostArtifactDeletionCleaner $artifact_deletion_cleaner,",
                "// Line 42:     ) {",
                "// Line 43:     }",
                "// Line 44: ",
                "// Line 45:     public function cleanDependencies(Artifact $artifact, DeletionContext $context, \\PFUser $user): void",
                "// Line 46:     {",
                "// Line 47:         $this->permissions_manager->clearPermission(Artifact::PERMISSION_ACCESS, (string) $artifact->getId());",
                "// Line 48: ",
                "// Line 49:         $this->cleanReferences($artifact, $context, $user);",
                "// Line 50: ",
                "// vulnerable line: 51: $this->changeset_value_deletor_DAO->cleanAllChangesetValueInTransaction($artifact);",
                "// Line 52:         $this->dao->deleteUnsubscribeNotificationForArtifact($artifact->getId());",
                "// Line 53:         // We do not keep trace of the history change here because it doesn't have any sense",
                "// Line 54:         $this->tracker_artifact_priority_manager->deletePriority($artifact);",
                "// Line 55:         $this->computed_dao_cache->deleteAllArtifactCacheValues($artifact);",
                "// Line 56:         $this->recently_visited_dao->deleteVisitByArtifactId($artifact->getId());",
                "// Line 57:         $this->artifact_removal->removeArtifact($artifact->getId());",
                "// Line 58:     }",
                "// Line 59: ",
                "// Line 60:     private function cleanReferences(Artifact $artifact, DeletionContext $context, \\PFUser $user): void",
                "// Line 61:     {"
            ]
        },
        {
            "filename_of_changes": "ArtifactDependenciesDeletorTest.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "0",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 45:     private PostArtifactDeletionCleaner|\\PHPUnit\\Framework\\MockObject\\Stub $artifact_deletor;",
                "// Line 46: ",
                "// Line 47:     protected function setUp(): void",
                "// Line 48:     {",
                "// Line 49:         $permissions_manager               = $this->createStub(PermissionsManager::class);",
                "// Line 50:         $tracker_artifact_priority_manager = $this->createStub(Tracker_Artifact_PriorityManager::class);",
                "// Line 51:         $dao                               = $this->createStub(Tracker_ArtifactDao::class);",
                "// Line 52:         $computed_dao_cache                = $this->createStub(ComputedFieldDaoCache::class);",
                "// Line 53:         $recently_visited_dao              = $this->createStub(RecentlyVisitedDao::class);",
                "// Line 54:         $artifact_removal                  = $this->createStub(PendingArtifactRemovalDao::class);",
                "// vulnerable line: 55: $value_deletor                     = $this->createStub(ArtifactChangesetValueDeletorDAO::class);",
                "// Line 56:         $this->post_move_deletor           = $this->createStub(PostArtifactMoveReferencesCleaner::class);",
                "// Line 57:         $this->artifact_deletor            = $this->createStub(PostArtifactDeletionCleaner::class);",
                "// Line 58: ",
                "// Line 59:         $permissions_manager->expects(self::atLeastOnce())->method('clearPermission');",
                "// Line 60:         $dao->expects(self::atLeastOnce())->method('deleteUnsubscribeNotificationForArtifact');",
                "// Line 61:         $tracker_artifact_priority_manager->expects(self::atLeastOnce())->method('deletePriority');",
                "// Line 62:         $computed_dao_cache->expects(self::atLeastOnce())->method('deleteAllArtifactCacheValues');",
                "// Line 63:         $recently_visited_dao->expects(self::atLeastOnce())->method('deleteVisitByArtifactId');",
                "// Line 64:         $artifact_removal->expects(self::atLeastOnce())->method('removeArtifact');",
                "// vulnerable line: 65: $value_deletor->expects(self::atLeastOnce())->method('cleanAllChangesetValueInTransaction');",
                "// Line 66: ",
                "// Line 67:         $this->deletor = new ArtifactDependenciesCleaner(",
                "// Line 68:             $permissions_manager,",
                "// Line 69:             $tracker_artifact_priority_manager,",
                "// Line 70:             $dao,",
                "// Line 71:             $computed_dao_cache,",
                "// Line 72:             $recently_visited_dao,",
                "// Line 73:             $artifact_removal,",
                "// vulnerable line: 74: $value_deletor,",
                "// Line 75:             $this->post_move_deletor,",
                "// Line 76:             $this->artifact_deletor",
                "// Line 77:         );",
                "// Line 78: ",
                "// Line 79:         $this->tracker = TrackerTestBuilder::aTracker()->build();",
                "// Line 80:         $this->user    = UserTestBuilder::anActiveUser()->build();",
                "// Line 81:     }",
                "// Line 82: ",
                "// Line 83:     public function testItCleanDependenciesForRegularDeletion(): void",
                "// Line 84:     {"
            ]
        },
        {
            "filename_of_changes": "PendingArtifactRemovalDao.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "28",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 21: namespace Tuleap\\Tracker\\Artifact\\ArtifactsDeletion;",
                "// Line 22: ",
                "// Line 23: use Tuleap\\DB\\DataAccessObject;",
                "// Line 24: ",
                "// Line 25: class PendingArtifactRemovalDao extends DataAccessObject",
                "// Line 26: {",
                "// Line 27:     public function addArtifactToPendingRemoval($artifact_id)",
                "// Line 28:     {",
                "// Line 29:         $sql = 'INSERT INTO plugin_tracker_artifact_pending_removal",
                "// Line 30:                   SELECT * FROM tracker_artifact",
                "// vulnerable line: 31: WHERE id = ?';",
                "// Line 32: ",
                "// Line 33:         $this->getDB()->run($sql, $artifact_id);",
                "// Line 34:     }",
                "// Line 35: ",
                "// Line 36:     public function getPendingArtifactById($artifact_id)",
                "// Line 37:     {",
                "// Line 38:         $sql = 'SELECT * FROM plugin_tracker_artifact_pending_removal",
                "// vulnerable line: 39: WHERE id = ?';",
                "// Line 40: ",
                "// Line 41:         return $this->getDB()->row($sql, $artifact_id);",
                "// Line 42:     }",
                "// Line 43: ",
                "// vulnerable line: 44: public function removeArtifact($artifact_id)",
                "// Line 45:     {",
                "// vulnerable line: 46: $sql = 'DELETE FROM plugin_tracker_artifact_pending_removal",
                "// vulnerable line: 47: WHERE id = ?';",
                "// Line 48: ",
                "// Line 49:         $this->getDB()->run($sql, $artifact_id);",
                "// Line 50:     }",
                "// Line 51: }"
            ]
        }
    ]
}