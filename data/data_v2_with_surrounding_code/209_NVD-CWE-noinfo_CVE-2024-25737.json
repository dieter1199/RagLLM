{
    "cve_id": "CVE-2024-25737",
    "cve_description": "A Server-Side Request Forgery (SSRF) vulnerability in the /Cover/Show route (showAction in CoverController.php) in Open Library Foundation VuFind 2.4 through 9.1 before 9.1.1 allows remote attackers to access internal HTTP servers and perform Cross-Site Scripting (XSS) attacks by proxying arbitrary URLs via the proxy GET parameter.",
    "cve_publish_date": "2024-05-22T19:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Make cover proxy legal content types configurable. (#3388)",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "CoverController.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "17",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 154:     public function showAction()",
                "// Line 155:     {",
                "// Line 156:         $this->sessionSettings->disableWrite(); // avoid session write timing bug",
                "// Line 157: ",
                "// Line 158:         // Special case: proxy a full URL:",
                "// Line 159:         $url = $this->params()->fromQuery('proxy');",
                "// Line 160:         if (!empty($url) && $this->proxyAllowedForUrl($url)) {",
                "// Line 161:             try {",
                "// Line 162:                 $image = $this->proxy->fetch($url);",
                "// Line 163:                 $contentType = $image?->getHeaders()?->get('content-type')?->getFieldValue() ?? '';",
                "// vulnerable line: 164: if (str_starts_with(strtolower($contentType), 'image/')) {",
                "// Line 165:                     return $this->displayImage(",
                "// Line 166:                         $contentType,",
                "// Line 167:                         $image->getContent()",
                "// Line 168:                     );",
                "// Line 169:                 }",
                "// Line 170:             } catch (\\Exception $e) {",
                "// Line 171:                 // If an exception occurs, drop through to the standard case",
                "// Line 172:                 // to display an image unavailable graphic.",
                "// Line 173:             }",
                "// Line 174:         }"
            ]
        }
    ]
}