{
    "cve_id": "CVE-2024-34351",
    "cve_description": "Next.js is a React framework that can provide building blocks to create web applications. A Server-Side Request Forgery (SSRF) vulnerability was identified in Next.js Server Actions. If the `Host` header is modified, and the below conditions are also met, an attacker may be able to make requests that appear to be originating from the Next.js application server itself. The required conditions are 1) Next.js is running in a self-hosted manner; 2) the Next.js application makes use of Server Actions; and 3) the Server Action performs a redirect to a relative path which starts with a `/`. This vulnerability was fixed in Next.js `14.1.1`.",
    "cve_publish_date": "2024-05-14T15:38Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Improve redirection handling (#62561)\n\nCurrently to redirect to another RSC route of the same app, we initiate\r\nanother request to that route. This PR changes that request to directly\r\nuse the internal hostname of the current server handler, rather than\r\nrelying on other headers.\r\n\r\nCloses NEXT-2614",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "action-handler.ts",
            "code_language": "JavaScript",
            "number_of_lines_added_for_mitigation": "5",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 172:   if (isAppRelativeRedirect) {",
                "// Line 173:     if (!originalHost) {",
                "// Line 174:       throw new Error(",
                "// Line 175:         'Invariant: Missing `host` header from a forwarded Server Actions request.'",
                "// Line 176:       )",
                "// Line 177:     }",
                "// Line 178: ",
                "// Line 179:     const forwardedHeaders = getForwardedHeaders(req, res)",
                "// Line 180:     forwardedHeaders.set(RSC_HEADER, '1')",
                "// Line 181: ",
                "// vulnerable line: 182: const host = originalHost.value",
                "// Line 183:     const proto =",
                "// Line 184:       staticGenerationStore.incrementalCache?.requestProtocol || 'https'",
                "// Line 185:     const fetchUrl = new URL(",
                "// Line 186:       `${proto}://${host}${basePath}${parsedRedirectUrl.pathname}`",
                "// Line 187:     )",
                "// Line 188: ",
                "// Line 189:     if (staticGenerationStore.revalidatedTags) {",
                "// Line 190:       forwardedHeaders.set(",
                "// Line 191:         NEXT_CACHE_REVALIDATED_TAGS_HEADER,",
                "// Line 192:         staticGenerationStore.revalidatedTags.join(',')"
            ]
        }
    ]
}