{
    "cve_id": "CVE-2024-37889",
    "cve_description": "MyFinances is a web application for managing finances. MyFinances has a way to access other customer invoices while signed in as a user. This method allows an actor to access PII and financial information from another account. The vulnerability is fixed in 0.4.6.",
    "cve_publish_date": "2024-06-14T20:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Merge pull request from GHSA-4884-3gvp-3wj2\n\n* security fix: added permission check for the view page of editing an invoice\n\n* Version updated from 0.4.5 to 0.4.6\n\nSigned-off-by: Trey <73353716+TreyWW@users.noreply.github.com>\n\n---------\n\nSigned-off-by: Trey <73353716+TreyWW@users.noreply.github.com>",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "edit.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "9",
            "number_of_lines_deleted_vulnerable_to_cve": "8",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: from datetime import datetime",
                "// Line 2: ",
                "// Line 3: from django.contrib import messages",
                "// Line 4: from django.http import JsonResponse",
                "// vulnerable line: 5: from django.shortcuts import render",
                "// Line 6: from django.views.decorators.http import require_http_methods",
                "// Line 7: ",
                "// Line 8: from backend.models import Invoice, Client, InvoiceItem",
                "// Line 9: from backend.types.htmx import HtmxHttpRequest",
                "// Line 10: ",
                "// Line 11: ",
                "// Line 12: # RELATED PATH FILES : ",
                "// Line 13: rontend    emplates\\pages\\invoices\\dashboard\\_fetch_body.html, \backendrls.py",
                "// Line 14: ",
                "// Line 15: ",
                "// Line 51:         stored_data[\"existing_client\"] = invoice_obj.client_to",
                "// Line 52: ",
                "// Line 53:     return stored_data",
                "// Line 54: ",
                "// Line 55: ",
                "// Line 56: # gets invoice object from invoice id, convert obj to dict, and renders edit.html while passing the stored invoice values to frontend",
                "// Line 57: def invoice_edit_page_get(request, invoice_id):",
                "// Line 58:     try:",
                "// Line 59:         invoice = Invoice.objects.get(id=invoice_id)",
                "// Line 60:     except Invoice.DoesNotExist:",
                "// vulnerable line: 61: return JsonResponse({\"message\": \"Invoice not found\"}, status=404)",
                "// Line 62: ",
                "// Line 63:     # use to populate fields with existing data in edit_from_destination.html AND edit_to_destination.html",
                "// Line 64:     data_to_populate = invoice_get_existing_data(invoice)",
                "// Line 65:     return render(request, \"pages/invoices/edit/edit.html\", data_to_populate)",
                "// Line 66: ",
                "// Line 67: ",
                "// Line 68: # when user changes/modifies any of the fields with new information (during edit invoice)",
                "// Line 69: @require_http_methods([\"POST\"])",
                "// Line 70: def edit_invoice(request: HtmxHttpRequest, invoice_id):",
                "// Line 71:     try:",
                "// Line 72:         invoice = Invoice.objects.get(id=invoice_id)",
                "// Line 73:     except Invoice.DoesNotExist:",
                "// vulnerable line: 74: return JsonResponse({\"message\": \"Invoice not found\"}, status=404)",
                "// Line 75: ",
                "// vulnerable line: 76: if request.user.logged_in_as_team and request.user.logged_in_as_team != invoice.organization:",
                "// vulnerable line: 77: return JsonResponse(",
                "// vulnerable line: 78: {\"message\": \"You do not have permission to edit this invoice\"},",
                "// vulnerable line: 79: status=403,",
                "// vulnerable line: 80: )",
                "// vulnerable line: 81: elif request.user != invoice.user:",
                "// vulnerable line: 82: return JsonResponse(",
                "// vulnerable line: 83: {\"message\": \"You do not have permission to edit this invoice\"},",
                "// vulnerable line: 84: status=403,",
                "// vulnerable line: 85: )",
                "// Line 86: ",
                "// Line 87:     attributes_to_updates = {",
                "// Line 88:         \"date_due\": datetime.strptime(request.POST.get(\"date_due\"), \"%Y-%m-%d\").date(),  # type: ignore[arg-type]",
                "// Line 89:         \"date_issued\": request.POST.get(\"date_issued\"),",
                "// Line 90:         \"self_name\": request.POST.get(\"from_name\"),",
                "// Line 91:         \"self_company\": request.POST.get(\"from_company\"),",
                "// Line 92:         \"self_address\": request.POST.get(\"from_address\"),",
                "// Line 93:         \"self_city\": request.POST.get(\"from_city\"),",
                "// Line 94:         \"self_county\": request.POST.get(\"from_county\"),",
                "// Line 95:         \"self_country\": request.POST.get(\"from_country\"),",
                "// Line 113:     else:",
                "// Line 114:         attributes_to_updates.update(",
                "// Line 115:             {",
                "// Line 116:                 \"client_name\": request.POST.get(\"to_name\"),",
                "// Line 117:                 \"client_company\": request.POST.get(\"to_company\"),",
                "// Line 118:                 \"client_address\": request.POST.get(\"to_address\"),",
                "// Line 119:                 \"client_city\": request.POST.get(\"to_city\"),",
                "// Line 120:                 \"client_county\": request.POST.get(\"to_county\"),",
                "// Line 121:                 \"client_country\": request.POST.get(\"to_country\"),",
                "// Line 122:             }",
                "// vulnerable line: 123: )",
                "// Line 124: ",
                "// Line 125:     for column_name, new_value in attributes_to_updates.items():",
                "// Line 126:         setattr(invoice, column_name, new_value)",
                "// Line 127: ",
                "// Line 128:     invoice_items = [",
                "// Line 129:         InvoiceItem.objects.create(name=row[0], description=row[1], hours=row[2], price_per_hour=row[3])",
                "// Line 130:         for row in zip(",
                "// Line 131:             request.POST.getlist(\"service_name[]\"),",
                "// Line 132:             request.POST.getlist(\"service_description[]\"),",
                "// Line 133:             request.POST.getlist(\"hours[]\"),",
                "// Line 134:             request.POST.getlist(\"price_per_hour[]\"),",
                "// vulnerable line: 135: )",
                "// Line 136:     ]",
                "// Line 137: ",
                "// Line 138:     if invoice_items:",
                "// Line 139:         invoice.items.set(invoice_items)",
                "// Line 140: ",
                "// Line 141:     invoice.save()",
                "// Line 142: ",
                "// Line 143:     messages.success(request, \"Invoice edited\")",
                "// Line 144: ",
                "// Line 145:     if request.htmx:"
            ]
        },
        {
            "filename_of_changes": "pyproject.toml",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: [tool.poetry]",
                "// Line 2: name = \"MyFinances\"",
                "// vulnerable line: 3: version = \"0.4.5\"",
                "// Line 4: description = \"github.com/TreyWW/MyFinances\"",
                "// Line 5: authors = [\"TreyWW\"]",
                "// Line 6: readme = \"README.md\"",
                "// Line 7: ",
                "// Line 8: [tool.poetry.dependencies]",
                "// Line 9: python = \">=3.10,<4.0\"",
                "// Line 10: bleach = \"6.1.0\"",
                "// Line 11: oauthlib = \"3.2.2\"",
                "// Line 12: boto3 = \"1.34.76\"",
                "// Line 13: django-storages = \"1.14.2\"",
                "// Line 87: max_line_length = 110",
                "// Line 88: ",
                "// Line 89: [tool.black]",
                "// Line 90: line-length = 140",
                "// Line 91: ",
                "// Line 92: [build-system]",
                "// Line 93: requires = [\"poetry-core\"]",
                "// Line 94: build-backend = \"poetry.core.masonry.api\"",
                "// Line 95: ",
                "// Line 96: [tool.bumpversion]",
                "// vulnerable line: 97: current_version = \"0.4.5\"",
                "// Line 98: commit = true",
                "// Line 99: commit_args = \"-s\"",
                "// Line 100: tag = true",
                "// Line 101: tag_name = \"v{new_version}\"",
                "// Line 102: sign_tags = true",
                "// Line 103: allow_dirty = true",
                "// Line 104: parse = \"(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(\\.(?P<dev>post)\\d+\\.dev\\d+)?\"",
                "// Line 105: serialize = [",
                "// Line 106:     \"{major}.{minor}.{patch}.{dev}{$PR_NUMBER}.dev{distance_to_latest_tag}\",",
                "// Line 107:     \"{major}.{minor}.{patch}\""
            ]
        }
    ]
}