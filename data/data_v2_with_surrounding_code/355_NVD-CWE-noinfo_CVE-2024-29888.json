{
    "cve_id": "CVE-2024-29888",
    "cve_description": "Saleor is an e-commerce platform that serves high-volume companies. When using `Pickup: Local stock only` click-and-collect as a delivery method in specific conditions the customer could overwrite the warehouse address with its own, which exposes its address as click-and-collect address. This issue has been patched in versions: `3.14.61`, `3.15.37`, `3.16.34`, `3.17.32`, `3.18.28`, `3.19.15`.",
    "cve_publish_date": "2024-03-27T19:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Fix  tax calculation for Click and Collect option. (#15505)",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "checkout_delivery_method_update.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "14",
            "number_of_lines_deleted_vulnerable_to_cve": "7",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 52:         )",
                "// Line 53: ",
                "// Line 54:         delivery_method_id = graphene.ID(",
                "// Line 55:             description=\"Delivery Method ID (`Warehouse` ID or `ShippingMethod` ID).\",",
                "// Line 56:             required=False,",
                "// Line 57:         )",
                "// Line 58: ",
                "// Line 59:     class Meta:",
                "// Line 60:         description = (",
                "// Line 61:             \"Updates the delivery method (shipping method or pick up point) \"",
                "// vulnerable line: 62: \"of the checkout.\" + ADDED_IN_31",
                "// Line 63:         )",
                "// Line 64:         doc_category = DOC_CATEGORY_CHECKOUT",
                "// Line 65:         error_type_class = CheckoutError",
                "// Line 66:         webhook_events_info = [",
                "// Line 67:             WebhookEventInfo(",
                "// Line 68:                 type=WebhookEventSyncType.SHIPPING_LIST_METHODS_FOR_CHECKOUT,",
                "// Line 69:                 description=(",
                "// Line 70:                     \"Triggered when updating the checkout delivery method with \"",
                "// Line 71:                     \"the external one.\"",
                "// Line 72:                 ),",
                "// Line 73:             ),",
                "// Line 74:             WebhookEventInfo(",
                "// Line 75:                 type=WebhookEventAsyncType.CHECKOUT_UPDATED,",
                "// Line 76:                 description=\"A checkout was updated.\",",
                "// Line 77:             ),",
                "// vulnerable line: 78: ]",
                "// Line 79: ",
                "// Line 80:     @classmethod",
                "// Line 81:     def perform_on_shipping_method(",
                "// Line 82:         cls,",
                "// Line 83:         info: ResolveInfo,",
                "// Line 84:         shipping_method_id,",
                "// Line 85:         checkout_info,",
                "// Line 86:         lines,",
                "// Line 87:         checkout,",
                "// Line 88:         manager,",
                "// Line 244:                 checkout=checkout, app_shipping_id=external_shipping_method.id",
                "// Line 245:             )",
                "// Line 246:         else:",
                "// Line 247:             delete_external_shipping_id(checkout=checkout)",
                "// Line 248:         checkout.shipping_method = shipping_method",
                "// Line 249:         checkout.collection_point = collection_point",
                "// Line 250:         invalidate_prices_updated_fields = invalidate_checkout(",
                "// Line 251:             checkout_info, lines, manager, save=False",
                "// Line 252:         )",
                "// Line 253:         checkout.save(",
                "// vulnerable line: 254: update_fields=[",
                "// vulnerable line: 255: \"shipping_method\",",
                "// vulnerable line: 256: \"collection_point\",",
                "// vulnerable line: 257: ]",
                "// vulnerable line: 258: + invalidate_prices_updated_fields",
                "// Line 259:         )",
                "// Line 260:         get_or_create_checkout_metadata(checkout).save()",
                "// Line 261:         cls.call_event(manager.checkout_updated, checkout)",
                "// Line 262: ",
                "// Line 263:     @staticmethod",
                "// Line 264:     def _resolve_delivery_method_type(id_) -> Optional[str]:",
                "// Line 265:         if id_ is None:",
                "// Line 266:             return None",
                "// Line 267: ",
                "// Line 268:         possible_types = (\"Warehouse\", \"ShippingMethod\", APP_ID_PREFIX)"
            ]
        },
        {
            "filename_of_changes": "checkout_shipping_address_update.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "11",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "error_codes.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "schema.graphql",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "3",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 19059: ",
                "// Line 19060:     \"\"\"",
                "// Line 19061:     Checkout token.",
                "// Line 19062:     ",
                "// Line 19063:     DEPRECATED: this field will be removed in Saleor 4.0. Use `id` instead.",
                "// Line 19064:     \"\"\"",
                "// Line 19065:     token: UUID",
                "// Line 19066:   ): CheckoutShippingMethodUpdate @doc(category: \"Checkout\") @webhookEventsInfo(asyncEvents: [CHECKOUT_UPDATED], syncEvents: [SHIPPING_LIST_METHODS_FOR_CHECKOUT]) @deprecated(reason: \"This field will be removed in Saleor 4.0. Use `checkoutDeliveryMethodUpdate` instead.\")",
                "// Line 19067: ",
                "// Line 19068:   \"\"\"",
                "// vulnerable line: 19069: Updates the delivery method (shipping method or pick up point) of the checkout.",
                "// Line 19070:   ",
                "// Line 19071:   Added in Saleor 3.1.",
                "// Line 19072:   ",
                "// Line 19073:   Triggers the following webhook events:",
                "// Line 19074:   - SHIPPING_LIST_METHODS_FOR_CHECKOUT (sync): Triggered when updating the checkout delivery method with the external one.",
                "// Line 19075:   - CHECKOUT_UPDATED (async): A checkout was updated.",
                "// Line 19076:   \"\"\"",
                "// Line 19077:   checkoutDeliveryMethodUpdate(",
                "// Line 19078:     \"\"\"Delivery Method ID (`Warehouse` ID or `ShippingMethod` ID).\"\"\"",
                "// Line 19079:     deliveryMethodId: ID",
                "// Line 29336: - CHECKOUT_UPDATED (async): A checkout was updated.",
                "// Line 29337: \"\"\"",
                "// Line 29338: type CheckoutShippingMethodUpdate @doc(category: \"Checkout\") @webhookEventsInfo(asyncEvents: [CHECKOUT_UPDATED], syncEvents: [SHIPPING_LIST_METHODS_FOR_CHECKOUT]) {",
                "// Line 29339:   \"\"\"An updated checkout.\"\"\"",
                "// Line 29340:   checkout: Checkout",
                "// Line 29341:   checkoutErrors: [CheckoutError!]! @deprecated(reason: \"This field will be removed in Saleor 4.0. Use `errors` field instead.\")",
                "// Line 29342:   errors: [CheckoutError!]!",
                "// Line 29343: }",
                "// Line 29344: ",
                "// Line 29345: \"\"\"",
                "// vulnerable line: 29346: Updates the delivery method (shipping method or pick up point) of the checkout.",
                "// Line 29347: ",
                "// Line 29348: Added in Saleor 3.1.",
                "// Line 29349: ",
                "// Line 29350: Triggers the following webhook events:",
                "// Line 29351: - SHIPPING_LIST_METHODS_FOR_CHECKOUT (sync): Triggered when updating the checkout delivery method with the external one.",
                "// Line 29352: - CHECKOUT_UPDATED (async): A checkout was updated.",
                "// Line 29353: \"\"\"",
                "// Line 29354: type CheckoutDeliveryMethodUpdate @doc(category: \"Checkout\") @webhookEventsInfo(asyncEvents: [CHECKOUT_UPDATED], syncEvents: [SHIPPING_LIST_METHODS_FOR_CHECKOUT]) {",
                "// Line 29355:   \"\"\"An updated checkout.\"\"\"",
                "// Line 29356:   checkout: Checkout"
            ]
        },
        {
            "filename_of_changes": "test_checkout_shipping_address_update.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "26",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "utils.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "4",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        }
    ]
}