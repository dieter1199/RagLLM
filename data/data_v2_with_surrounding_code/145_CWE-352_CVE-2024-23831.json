{
    "cve_id": "CVE-2024-23831",
    "cve_description": "LedgerSMB is a free web-based double-entry accounting system. When a LedgerSMB database administrator has an active session in /setup.pl, an attacker can trick the admin into clicking on a link which automatically submits a request to setup.pl without the admin's consent.  This request can be used to create a new user account with full application (/login.pl) privileges, leading to privilege escalation.  The vulnerability is patched in versions 1.10.30 and 1.11.9.\n",
    "cve_publish_date": "2024-02-02T16:15Z",
    "cwe_id": "CWE-352",
    "cwe_name": "Cross-Site Request Forgery (CSRF)",
    "cwe_description": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
    "commit_message": "Fix missing CSRF mitigation",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "LedgerSMB.pm",
            "code_language": "Perl",
            "number_of_lines_added_for_mitigation": "25",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 239:  #====================================================================",
                "// Line 240: =cut",
                "// Line 241: ",
                "// Line 242: use strict;",
                "// Line 243: use warnings;",
                "// Line 244: ",
                "// Line 245: use Carp;",
                "// Line 246: use DateTime::Format::Duration::ISO8601;",
                "// Line 247: use Encode qw(perlio_ok);",
                "// Line 248: use HTTP::Headers::Fast;",
                "// vulnerable line: 249: use HTTP::Status qw( HTTP_OK );",
                "// Line 250: use List::Util qw( pairgrep );",
                "// Line 251: use Locale::CLDR;",
                "// Line 252: use Locales unicode => 1;",
                "// Line 253: use Log::Any;",
                "// Line 254: use PGObject;",
                "// Line 255: use Plack;",
                "// Line 256: use URI;",
                "// Line 257: use URI::Escape;",
                "// Line 258: ",
                "// Line 259: use LedgerSMB::Company_Config;"
            ]
        },
        {
            "filename_of_changes": "PSGI.pm",
            "code_language": "Perl",
            "number_of_lines_added_for_mitigation": "6",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "SessionStorage.pm",
            "code_language": "Perl",
            "number_of_lines_added_for_mitigation": "4",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 55:         default_duration => 24*60*60*90, # 90 days",
                "// Line 56:         );",
                "// Line 57:     $self->store( $store );",
                "// Line 58: }",
                "// Line 59: ",
                "// Line 60: sub call {",
                "// Line 61:     my $self = shift;",
                "// Line 62:     my ($env) = @_;",
                "// Line 63:     my $req = Plack::Request->new($env);",
                "// Line 64: ",
                "// vulnerable line: 65: my $cookie      = $req->cookies->{$self->cookie};",
                "// vulnerable line: 66: my $session     = $self->store->decode($cookie);",
                "// Line 67: ",
                "// Line 68:     my $secure = defined($env->{HTTPS}) && $env->{HTTPS} eq 'ON';",
                "// Line 69:     my $path =",
                "// Line 70:         $self->cookie_path //",
                "// Line 71:         LedgerSMB::PSGI::Util::cookie_path($env->{SCRIPT_NAME});",
                "// Line 72:     $env->{'lsmb.session'} = $session;",
                "// Line 73:     return Plack::Util::response_cb(",
                "// Line 74:         $self->app->($env), sub {",
                "// Line 75:             my $res = shift;",
                "// Line 76: "
            ]
        },
        {
            "filename_of_changes": "UI.pm",
            "code_language": "Perl",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 128:                               value => 'screen'",
                "// Line 129:                           } )",
                "// Line 130:                     ],",
                "// Line 131:                     SETTINGS => {",
                "// Line 132:                         ($request->{_company_config} // {})->%*,",
                "// Line 133:                         # Reports rendered as UI elements have SETTINGS in $vars",
                "// Line 134:                         ($vars->{SETTINGS} // {})->%*",
                "// Line 135:                     },",
                "// Line 136:                     dojo_theme => (",
                "// Line 137:                         $request->{_company_config}->{dojo_theme} || 'claro'",
                "// vulnerable line: 138: )",
                "// Line 139:                 },",
                "// Line 140:                 sub { return escape_html($_[0]); },",
                "// Line 141:                 $request->formatter_options,",
                "// Line 142:                 )},",
                "// Line 143:           %{$self->{standard_vars}},",
                "// Line 144:           LIST_FORMATS => sub {",
                "// Line 145:               return [",
                "// Line 146:                   map { escape_html($_) }",
                "// Line 147:                   $request->{_wire}->get( 'output_formatter' )->get_formats->@*",
                "// Line 148:                   ];",
                "// Line 159:           # translation of dynamic string content",
                "// Line 160:           maketext => sub {",
                "// Line 161:               if ($locale) {",
                "// Line 162:                   return escape_html($locale->maketext(@_));",
                "// Line 163:               }",
                "// Line 164:               else {",
                "// Line 165:                   return escape_html(shift);",
                "// Line 166:               }",
                "// Line 167:           },",
                "// Line 168:           %{$cvars // {}}",
                "// vulnerable line: 169: )",
                "// Line 170:     };",
                "// Line 171:     if (defined $cleanvars->{form}->{stylesheet}",
                "// Line 172:         and not defined $cleanvars->{stylesheet}) {",
                "// Line 173:         $cleanvars->{stylesheet} = $cleanvars->{form}->{stylesheet};",
                "// Line 174:     }",
                "// Line 175:     if (not defined $cleanvars->{stylesheet}",
                "// Line 176:         or (defined $cleanvars->{stylesheet}",
                "// Line 177:             and not -e ($self->{root} . 'css/' . $cleanvars->{stylesheet}))) {",
                "// Line 178:         $cleanvars->{stylesheet} = $self->{stylesheet};",
                "// Line 179:     }"
            ]
        }
    ]
}