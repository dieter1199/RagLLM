{
    "cve_id": "CVE-2024-38527",
    "cve_description": "ZenUML is JavaScript-based diagramming tool that requires no server, using Markdown-inspired text definitions and a renderer to create and modify sequence diagrams. Markdown-based comments in the ZenUML diagram syntax are susceptible to Cross-site Scripting (XSS). The comment feature allows the user to attach small notes for reference. This feature allows the user to enter in their comment in markdown comment, allowing them to use common markdown features, such as `**` for bolded text. However, the markdown text is currently not sanitized before rendering, allowing an attacker to enter a malicious payload for the comment which leads to XSS. This puts existing applications that use ZenUML unsandboxed at risk of arbitrary JavaScript execution when rendering user-controlled diagrams. This vulnerability was patched in version 3.23.25,",
    "cve_publish_date": "2024-06-26T20:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Fixed an XSS vulnerability.",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "Comment.vue",
            "code_language": "JavaScript",
            "number_of_lines_added_for_mitigation": "5",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 54:   breaks: true,",
                "// Line 55: });",
                "// Line 56: ",
                "// Line 57: marked.use({ renderer });",
                "// Line 58: ",
                "// Line 59: export default {",
                "// Line 60:   name: \"comment\",",
                "// Line 61:   props: [\"comment\", \"commentObj\"],",
                "// Line 62:   computed: {",
                "// Line 63:     markedComment() {",
                "// vulnerable line: 64: return (",
                "// Line 65:         (this.commentObj?.text && marked.parse(this.commentObj?.text)) ||",
                "// vulnerable line: 66: (this.comment && marked.parse(this.comment))",
                "// vulnerable line: 67: );",
                "// Line 68:     },",
                "// Line 69:     commentStyle() {",
                "// Line 70:       return this.commentObj?.commentStyle;",
                "// Line 71:     },",
                "// Line 72:     classNames() {",
                "// Line 73:       return this.commentObj?.commentClassNames;",
                "// Line 74:     },",
                "// Line 75:   },",
                "// Line 76: };",
                "// Line 77: </script>"
            ]
        },
        {
            "filename_of_changes": "package.json",
            "code_language": "JavaScript",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        }
    ]
}