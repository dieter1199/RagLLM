{
    "cve_id": "CVE-2024-37890",
    "cve_description": "ws is an open source WebSocket client and server for Node.js. A request with a number of headers exceeding theserver.maxHeadersCount threshold could be used to crash a ws server. The vulnerability was fixed in ws@8.17.1 (e55e510) and backported to ws@7.5.10 (22c2876), ws@6.2.3 (eeb76d3), and ws@5.2.4 (4abd8f6). In vulnerable versions of ws, the issue can be mitigated in the following ways: 1. Reduce the maximum allowed length of the request headers using the --max-http-header-size=size and/or the maxHeaderSize options so that no more headers than the server.maxHeadersCount limit can be sent. 2. Set server.maxHeadersCount to 0 so that no limit is applied.",
    "cve_publish_date": "2024-06-17T20:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "[security] Fix crash when the Upgrade header cannot be read (#2231)\n\nIt is possible that the Upgrade header is correctly received and handled\n(the `'upgrade'` event is emitted) without its value being returned to\nthe user. This can happen if the number of received headers exceed the\n`server.maxHeadersCount` or `request.maxHeadersCount` threshold. In this\ncase `incomingMessage.headers.upgrade` may not be set.\n\nHandle the case correctly and abort the handshake.\n\nFixes #2230",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "websocket.js",
            "code_language": "JavaScript",
            "number_of_lines_added_for_mitigation": "3",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 921:     websocket.emit('upgrade', res);",
                "// Line 922: ",
                "// Line 923:     //",
                "// Line 924:     // The user may have closed the connection from a listener of the",
                "// Line 925:     // `'upgrade'` event.",
                "// Line 926:     //",
                "// Line 927:     if (websocket.readyState !== WebSocket.CONNECTING) return;",
                "// Line 928: ",
                "// Line 929:     req = websocket._req = null;",
                "// Line 930: ",
                "// vulnerable line: 931: if (res.headers.upgrade.toLowerCase() !== 'websocket') {",
                "// Line 932:       abortHandshake(websocket, socket, 'Invalid Upgrade header');",
                "// Line 933:       return;",
                "// Line 934:     }",
                "// Line 935: ",
                "// Line 936:     const digest = createHash('sha1')",
                "// Line 937:       .update(key + GUID)",
                "// Line 938:       .digest('base64');",
                "// Line 939: ",
                "// Line 940:     if (res.headers['sec-websocket-accept'] !== digest) {",
                "// Line 941:       abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');"
            ]
        }
    ]
}