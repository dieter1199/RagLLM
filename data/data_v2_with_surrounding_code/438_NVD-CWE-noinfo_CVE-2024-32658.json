{
    "cve_id": "CVE-2024-32658",
    "cve_description": "FreeRDP is a free implementation of the Remote Desktop Protocol. FreeRDP based clients prior to version 3.5.1 are vulnerable to out-of-bounds read. Version 3.5.1 contains a patch for the issue. No known workarounds are available.",
    "cve_publish_date": "2024-04-23T18:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "[codec,interleaved] fix offset error",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "interleaved.c",
            "code_language": "C",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 180: {",
                "// Line 181:     UINT runLength = 0;",
                "// Line 182: ",
                "// Line 183:     WINPR_ASSERT(pbOrderHdr);",
                "// Line 184:     WINPR_ASSERT(pbEnd);",
                "// Line 185:     WINPR_ASSERT(advance);",
                "// Line 186: ",
                "// Line 187:     runLength = (*pbOrderHdr) & g_MaskRegularRunLength;",
                "// Line 188:     if (runLength == 0)",
                "// Line 189:     {",
                "// vulnerable line: 190: if (!buffer_within_range(pbOrderHdr, 1, pbEnd))",
                "// Line 191:         {",
                "// Line 192:             *advance = 0;",
                "// Line 193:             return 0;",
                "// Line 194:         }",
                "// Line 195:         runLength = *(pbOrderHdr + 1) + 1;",
                "// Line 196:         (*advance)++;",
                "// Line 197:     }",
                "// Line 198:     else",
                "// Line 199:         runLength = runLength * 8;",
                "// Line 200: ",
                "// Line 205: {",
                "// Line 206:     UINT runLength = 0;",
                "// Line 207: ",
                "// Line 208:     WINPR_ASSERT(pbOrderHdr);",
                "// Line 209:     WINPR_ASSERT(pbEnd);",
                "// Line 210:     WINPR_ASSERT(advance);",
                "// Line 211: ",
                "// Line 212:     runLength = *pbOrderHdr & g_MaskLiteRunLength;",
                "// Line 213:     if (runLength == 0)",
                "// Line 214:     {",
                "// vulnerable line: 215: if (!buffer_within_range(pbOrderHdr, 2, pbEnd))",
                "// Line 216:         {",
                "// Line 217:             *advance = 0;",
                "// Line 218:             return 0;",
                "// Line 219:         }",
                "// Line 220:         runLength = *(pbOrderHdr + 1) + 1;",
                "// Line 221:         (*advance)++;",
                "// Line 222:     }",
                "// Line 223:     else",
                "// Line 224:         runLength = runLength * 8;",
                "// Line 225: ",
                "// Line 230: {",
                "// Line 231:     UINT runLength = 0;",
                "// Line 232: ",
                "// Line 233:     WINPR_ASSERT(pbOrderHdr);",
                "// Line 234:     WINPR_ASSERT(pbEnd);",
                "// Line 235:     WINPR_ASSERT(advance);",
                "// Line 236: ",
                "// Line 237:     runLength = *pbOrderHdr & g_MaskRegularRunLength;",
                "// Line 238:     if (runLength == 0)",
                "// Line 239:     {",
                "// vulnerable line: 240: if (!buffer_within_range(pbOrderHdr, 2, pbEnd))",
                "// Line 241:         {",
                "// Line 242:             *advance = 0;",
                "// Line 243:             return 0;",
                "// Line 244:         }",
                "// Line 245:         runLength = *(pbOrderHdr + 1) + 32;",
                "// Line 246:         (*advance)++;",
                "// Line 247:     }",
                "// Line 248: ",
                "// Line 249:     return runLength;",
                "// Line 250: }",
                "// Line 251: ",
                "// Line 252: static UINT ExtractRunLengthMegaMega(const BYTE* pbOrderHdr, const BYTE* pbEnd, UINT32* advance)",
                "// Line 253: {",
                "// Line 254:     UINT runLength = 0;",
                "// Line 255: ",
                "// Line 256:     WINPR_ASSERT(pbOrderHdr);",
                "// Line 257:     WINPR_ASSERT(pbEnd);",
                "// Line 258:     WINPR_ASSERT(advance);",
                "// Line 259: ",
                "// vulnerable line: 260: if (!buffer_within_range(pbOrderHdr, 2, pbEnd))",
                "// Line 261:     {",
                "// Line 262:         *advance = 0;",
                "// Line 263:         return 0;",
                "// Line 264:     }",
                "// Line 265: ",
                "// Line 266:     runLength = ((UINT16)pbOrderHdr[1]) | (((UINT16)pbOrderHdr[2]) << 8);",
                "// Line 267:     (*advance) += 2;",
                "// Line 268: ",
                "// Line 269:     return runLength;",
                "// Line 270: }",
                "// Line 273: {",
                "// Line 274:     UINT runLength = 0;",
                "// Line 275: ",
                "// Line 276:     WINPR_ASSERT(pbOrderHdr);",
                "// Line 277:     WINPR_ASSERT(pbEnd);",
                "// Line 278:     WINPR_ASSERT(advance);",
                "// Line 279: ",
                "// Line 280:     runLength = *pbOrderHdr & g_MaskLiteRunLength;",
                "// Line 281:     if (runLength == 0)",
                "// Line 282:     {",
                "// vulnerable line: 283: if (!buffer_within_range(pbOrderHdr, 2, pbEnd))",
                "// Line 284:         {",
                "// Line 285:             *advance = 0;",
                "// Line 286:             return 0;",
                "// Line 287:         }",
                "// Line 288:         runLength = *(pbOrderHdr + 1) + 16;",
                "// Line 289:         (*advance)++;",
                "// Line 290:     }",
                "// Line 291:     return runLength;",
                "// Line 292: }",
                "// Line 293: "
            ]
        }
    ]
}