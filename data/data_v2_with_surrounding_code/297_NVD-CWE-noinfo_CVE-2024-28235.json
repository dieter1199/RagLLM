{
    "cve_id": "CVE-2024-28235",
    "cve_description": "Contao is an open source content management system. Starting in version 4.9.0 and prior to versions 4.13.40 and 5.3.4, when checking for broken links on protected pages, Contao sends the cookie header to external urls as well, the passed  options for the http client are used for all requests. Contao versions 4.13.40 and 5.3.4 have a patch for this issue. As a workaround, disable crawling protected pages.",
    "cve_publish_date": "2024-04-09T16:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Merge pull request from GHSA-9jh5-qf84-x6pr\n\n* Ensure confidential headers are not leaked to external URIs when crawling\n\n* CS\n\n---------\n\nCo-authored-by: Leo Feyer <1192057+leofeyer@users.noreply.github.com>",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "ContaoCoreExtension.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 270:         $container",
                "// Line 271:             ->registerForAutoconfiguration(EscargotSubscriberInterface::class)",
                "// Line 272:             ->addTag('contao.escargot_subscriber')",
                "// Line 273:         ;",
                "// Line 274: ",
                "// Line 275:         if (!$container->hasDefinition('contao.crawl.escargot.factory')) {",
                "// Line 276:             return;",
                "// Line 277:         }",
                "// Line 278: ",
                "// Line 279:         $factory = $container->getDefinition('contao.crawl.escargot.factory');",
                "// vulnerable line: 280: $factory->setArgument(2, $config['crawl']['additional_uris']);",
                "// vulnerable line: 281: $factory->setArgument(3, $config['crawl']['default_http_client_options']);",
                "// Line 282:     }",
                "// Line 283: ",
                "// Line 284:     /**",
                "// Line 285:      * Validates and sets the \"contao.image.sizes\" parameter.",
                "// Line 286:      */",
                "// Line 287:     private function setPredefinedImageSizes(array $config, ContainerBuilder $container): void",
                "// Line 288:     {",
                "// Line 289:         if (!isset($config['image']['sizes']) || 0 === \\count($config['image']['sizes'])) {",
                "// Line 290:             return;",
                "// Line 291:         }"
            ]
        },
        {
            "filename_of_changes": "ContaoCoreExtension.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 315:         $container",
                "// Line 316:             ->registerForAutoconfiguration(EscargotSubscriberInterface::class)",
                "// Line 317:             ->addTag('contao.escargot_subscriber')",
                "// Line 318:         ;",
                "// Line 319: ",
                "// Line 320:         if (!$container->hasDefinition('contao.crawl.escargot.factory')) {",
                "// Line 321:             return;",
                "// Line 322:         }",
                "// Line 323: ",
                "// Line 324:         $factory = $container->getDefinition('contao.crawl.escargot.factory');",
                "// vulnerable line: 325: $factory->setArgument(3, $config['crawl']['additional_uris']);",
                "// vulnerable line: 326: $factory->setArgument(4, $config['crawl']['default_http_client_options']);",
                "// Line 327:     }",
                "// Line 328: ",
                "// Line 329:     /**",
                "// Line 330:      * Validates and sets the \"contao.image.sizes\" parameter.",
                "// Line 331:      */",
                "// Line 332:     private function setPredefinedImageSizes(array $config, ContainerBuilder $container): void",
                "// Line 333:     {",
                "// Line 334:         if (!isset($config['image']['sizes']) || 0 === \\count($config['image']['sizes'])) {",
                "// Line 335:             return;",
                "// Line 336:         }"
            ]
        },
        {
            "filename_of_changes": "ContaoCoreExtensionTest.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 331:                             ],",
                "// Line 332:                         ],",
                "// Line 333:                     ],",
                "// Line 334:                 ],",
                "// Line 335:             ],",
                "// Line 336:             $container",
                "// Line 337:         );",
                "// Line 338: ",
                "// Line 339:         $definition = $container->getDefinition('contao.crawl.escargot.factory');",
                "// Line 340: ",
                "// vulnerable line: 341: $this->assertSame(['https://example.com'], $definition->getArgument(2));",
                "// vulnerable line: 342: $this->assertSame(['proxy' => 'http://localhost:7080', 'headers' => ['Foo' => 'Bar']], $definition->getArgument(3));",
                "// Line 343:     }",
                "// Line 344: ",
                "// Line 345:     public function testConfiguresTheBackupManagerCorrectly(): void",
                "// Line 346:     {",
                "// Line 347:         $container = $this->getContainerBuilder();",
                "// Line 348: ",
                "// Line 349:         $extension = new ContaoCoreExtension();",
                "// Line 350:         $extension->load([], $container);",
                "// Line 351: ",
                "// Line 352:         $definition = $container->getDefinition('contao.doctrine.backup_manager');"
            ]
        },
        {
            "filename_of_changes": "ContaoCoreExtensionTest.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 270:                             ],",
                "// Line 271:                         ],",
                "// Line 272:                     ],",
                "// Line 273:                 ],",
                "// Line 274:             ],",
                "// Line 275:             $container,",
                "// Line 276:         );",
                "// Line 277: ",
                "// Line 278:         $definition = $container->getDefinition('contao.crawl.escargot.factory');",
                "// Line 279: ",
                "// vulnerable line: 280: $this->assertSame(['https://example.com'], $definition->getArgument(3));",
                "// vulnerable line: 281: $this->assertSame(['proxy' => 'http://localhost:7080', 'headers' => ['Foo' => 'Bar']], $definition->getArgument(4));",
                "// Line 282:     }",
                "// Line 283: ",
                "// Line 284:     public function testConfiguresTheBackupManagerCorrectly(): void",
                "// Line 285:     {",
                "// Line 286:         $container = $this->getContainerBuilder();",
                "// Line 287: ",
                "// Line 288:         $extension = new ContaoCoreExtension();",
                "// Line 289:         $extension->load([], $container);",
                "// Line 290: ",
                "// Line 291:         $definition = $container->getDefinition('contao.doctrine.backup_manager');"
            ]
        },
        {
            "filename_of_changes": "Crawl.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "4",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 121:             if (!$objAuthenticator->authenticateFrontendUser($objMember->username, false))",
                "// Line 122:             {",
                "// Line 123:                 $objAuthenticator->removeFrontendAuthentication();",
                "// Line 124:                 $clientOptions = array();",
                "// Line 125:             }",
                "// Line 126:             else",
                "// Line 127:             {",
                "// Line 128:                 $session = System::getContainer()->get('session');",
                "// Line 129:                 $clientOptions = array('headers' => array('Cookie' => sprintf('%s=%s', $session->getName(), $session->getId())));",
                "// Line 130: ",
                "// vulnerable line: 131: // Closing the session is necessary here as otherwise we run into our own session lock",
                "// vulnerable line: 132: // TODO: we need a way to authenticate with a token instead of our own cookie",
                "// vulnerable line: 133: $session->save();",
                "// Line 134:             }",
                "// Line 135:         }",
                "// Line 136:         else",
                "// Line 137:         {",
                "// Line 138:             $objAuthenticator->removeFrontendAuthentication();",
                "// Line 139:             $clientOptions = array();",
                "// Line 140:         }",
                "// Line 141: ",
                "// Line 142:         if (!$jobId)",
                "// Line 143:         {"
            ]
        },
        {
            "filename_of_changes": "Crawl.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "4",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 124:             if (!$objAuthenticator->authenticateFrontendUser($objMember->username, false))",
                "// Line 125:             {",
                "// Line 126:                 $objAuthenticator->removeFrontendAuthentication();",
                "// Line 127:                 $clientOptions = array();",
                "// Line 128:             }",
                "// Line 129:             else",
                "// Line 130:             {",
                "// Line 131:                 $session = System::getContainer()->get('request_stack')->getSession();",
                "// Line 132:                 $clientOptions = array('headers' => array('Cookie' => sprintf('%s=%s', $session->getName(), $session->getId())));",
                "// Line 133: ",
                "// vulnerable line: 134: // Closing the session is necessary here as otherwise we run into our own session lock",
                "// vulnerable line: 135: // TODO: we need a way to authenticate with a token instead of our own cookie",
                "// vulnerable line: 136: $session->save();",
                "// Line 137:             }",
                "// Line 138:         }",
                "// Line 139:         else",
                "// Line 140:         {",
                "// Line 141:             $objAuthenticator->removeFrontendAuthentication();",
                "// Line 142:             $clientOptions = array();",
                "// Line 143:         }",
                "// Line 144: ",
                "// Line 145:         if (!$jobId)",
                "// Line 146:         {"
            ]
        }
    ]
}