s{
    "cve_id": "CVE-2024-29896",
    "cve_description": "Astro-Shield is a library to compute the subresource integrity hashes for your JS scripts and CSS stylesheets. When automated CSP headers generation for SSR content is enabled and the web application serves content that can be partially controlled by external users, then it is possible that the CSP headers generation feature might be \"allow-listing\" malicious injected resources like inlined JS, or references to external malicious scripts. The fix is available in version 1.3.0.",
    "cve_publish_date": "2024-03-28T13:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "feat: cross-origin resources allow-lists\n\nSigned-off-by: Andres Correa Casablanca <andreu@kindspells.dev>",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "headers.mjs",
            "code_language": "TypeScript",
            "number_of_lines_added_for_mitigation": "4",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "headers.test.mts",
            "code_language": "TypeScript",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 147:             contentSecurityPolicy: {",
                "// Line 148:                 cspDirectives: {",
                "// Line 149:                     'form-action': \"'self'\",",
                "// Line 150:                     'frame-ancestors': \"'none'\",",
                "// Line 151:                 },",
                "// Line 152:             },",
                "// Line 153:         }",
                "// Line 154: ",
                "// Line 155:         const patchedHeaders = patchHeaders(headers, pageHashes, settings)",
                "// Line 156:         expect(patchedHeaders.get('content-security-policy')).toBe(",
                "// vulnerable line: 157: \"form-action 'self'; frame-ancestors 'none'\",",
                "// Line 158:         )",
                "// Line 159:     })",
                "// Line 160: ",
                "// Line 161:     it('sets csp header based on hashes', () => {",
                "// Line 162:         const headers = new Headers()",
                "// Line 163:         const pageHashes = {",
                "// Line 164:             scripts: new Set<string>(['abc1', 'xyz2']),",
                "// Line 165:             styles: new Set<string>(['dbc1', 'xyz3', 'abc2']),",
                "// Line 166:         }",
                "// Line 167:         const settings: SecurityHeadersOptions = { contentSecurityPolicy: {} }"
            ]
        }
    ]
}