{
    "cve_id": "CVE-2024-31442",
    "cve_description": "Redon Hub is a Roblox Product Delivery Bot, also known as a Hub. In all hubs before version 1.0.2, all commands are capable of being ran by all users, including admin commands. This allows users to receive products for free and delete/create/update products/tags/etc. The only non-affected command is `/products admin clear` as this was already programmed for bot owners only. All users should upgrade to version 1.0.2 to receive a patch.",
    "cve_publish_date": "2024-04-08T16:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "V1.0.2",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "__init__.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "21",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: \"\"\"",
                "// Line 2:     File: /bot/__init__.py",
                "// Line 3:     Usage: The bot's main file.",
                "// Line 4: \"\"\"",
                "// Line 5: ",
                "// vulnerable line: 6: from discord import Object as DiscordObject",
                "// Line 7: from discord.ext.commands import Bot as BotBase",
                "// Line 8: from . import config",
                "// Line 9: from .data import database",
                "// Line 10: from glob import glob",
                "// Line 11: import logging",
                "// Line 12: import os",
                "// Line 13: ",
                "// Line 14: _log = logging.getLogger(__name__)",
                "// vulnerable line: 15: __version__ = \"1.0.0\"",
                "// Line 16: ",
                "// Line 17: ",
                "// Line 18: class Bot(BotBase):",
                "// Line 19:     def __init__(self, *args, **kwargs):",
                "// Line 20:         self.version = kwargs.get(\"version\", \"N/A\")",
                "// Line 21:         self.ready = False",
                "// Line 22:         super().__init__(*args, **kwargs)",
                "// Line 23: ",
                "// Line 24:     async def load_extensions(self):",
                "// Line 25:         # Original code from pycord"
            ]
        },
        {
            "filename_of_changes": "product.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "17",
            "number_of_lines_deleted_vulnerable_to_cve": "12",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: \"\"\"",
                "// Line 2:     File: /bot/cogs/product.py",
                "// Line 3:     Usage: Product related commands",
                "// Line 4: \"\"\"",
                "// Line 5: from discord import (",
                "// Line 6:     app_commands,",
                "// Line 7:     Interaction,",
                "// vulnerable line: 8: Member,",
                "// Line 9:     Embed,",
                "// Line 10:     utils,",
                "// Line 11:     ui,",
                "// Line 12:     TextStyle,",
                "// Line 13:     SelectOption,",
                "// Line 14:     ButtonStyle,",
                "// Line 15:     Role,",
                "// vulnerable line: 16: )",
                "// Line 17: from asyncio import TimeoutError",
                "// Line 18: from discord.ext.commands import Cog",
                "// Line 19: from bot.data import (",
                "// Line 20:     get_users,",
                "// Line 21:     get_products,",
                "// Line 22:     get_product_by_name,",
                "// vulnerable line: 23: get_product,",
                "// Line 24:     create_product,",
                "// Line 25:     delete_product,",
                "// Line 26:     get_tags,",
                "// Line 27:     Product,",
                "// vulnerable line: 28: )",
                "// Line 29: from bot import config",
                "// Line 30: from bot.utils import ConfirmView",
                "// Line 31: from typing import Optional",
                "// Line 32: import logging",
                "// Line 33: import re",
                "// Line 34: ",
                "// Line 35: _log = logging.getLogger(__name__)",
                "// Line 36: ",
                "// Line 37: ",
                "// Line 38: async def promptChooseAttachments(",
                "// Line 39:     self, interaction: Interaction, product: Optional[Product]",
                "// Line 40: ):",
                "// Line 41:     attachments = []",
                "// Line 42:     user_messages = []",
                "// Line 43: ",
                "// Line 44:     # info_message = await interaction.followup.send(",
                "// Line 45:     embed = Embed(",
                "// Line 46:         title=\"Attachments\",",
                "// Line 47:         description=\"Please enter the attachments to send to owners of this product. Please add each link in a new message. Say `done` when you are finished.\",",
                "// vulnerable line: 48: colour=interaction.user.colour,",
                "// vulnerable line: 49: timestamp=utils.utcnow(),",
                "// Line 50:     ).set_footer(",
                "// Line 51:         text=f\"Redon Hub • Say `cancel` to cancel creation • Version {self.bot.version}\"",
                "// vulnerable line: 52: )",
                "// Line 53:     if product:",
                "// Line 54:         embed.add_field(",
                "// Line 55:             name=\"Current Attachments\",",
                "// Line 56:             value=\"",
                "// Line 57: \".join(product.attachments),",
                "// Line 58:             inline=False,",
                "// vulnerable line: 59: )",
                "// Line 60:     info_message = await interaction.edit_original_response(",
                "// Line 61:         embed=embed,",
                "// Line 62:         view=None,",
                "// vulnerable line: 63: )",
                "// Line 64: ",
                "// Line 65:     while True:",
                "// Line 66:         try:",
                "// Line 67:             message = await self.bot.wait_for(",
                "// Line 68:                 \"message\", check=lambda m: m.author == interaction.user, timeout=200.0",
                "// vulnerable line: 69: )",
                "// Line 70:         except TimeoutError:",
                "// Line 71:             await info_message.edit(",
                "// vulnerable line: 72: embed=Embed(",
                "// Line 73:                     title=\"Timed Out\",",
                "// Line 74:                     description=\"You took too long to respond\",",
                "// vulnerable line: 75: colour=interaction.user.colour,",
                "// vulnerable line: 76: timestamp=utils.utcnow(),",
                "// vulnerable line: 77: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// vulnerable line: 78: )",
                "// vulnerable line: 79: return",
                "// Line 80:         except Exception as e:",
                "// Line 81:             _log.error(e)",
                "// Line 82:             await info_message.edit(",
                "// vulnerable line: 83: embed=Embed(",
                "// vulnerable line: 84: title=\"Error\",",
                "// Line 85:                     description=\"An unknown error has occured during creation.\",",
                "// vulnerable line: 86: colour=interaction.user.colour,",
                "// vulnerable line: 87: timestamp=utils.utcnow(),",
                "// vulnerable line: 88: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// vulnerable line: 89: )",
                "// vulnerable line: 90: return",
                "// Line 91: ",
                "// Line 92:         if message.content.lower() == \"cancel\":",
                "// Line 93:             for message in user_messages:",
                "// Line 94:                 await message.delete()",
                "// Line 95: ",
                "// Line 96:             await message.delete()",
                "// Line 97: ",
                "// Line 98:             await info_message.edit(",
                "// vulnerable line: 99: embed=Embed(",
                "// Line 100:                     title=\"Cancelled\",",
                "// Line 101:                     description=f\"Product creation has been cancelled.\",",
                "// vulnerable line: 102: colour=interaction.user.colour,",
                "// vulnerable line: 103: timestamp=utils.utcnow(),",
                "// vulnerable line: 104: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// vulnerable line: 105: )",
                "// vulnerable line: 106: return",
                "// Line 107:         elif message.content.lower() == \"done\":",
                "// Line 108:             user_messages.append(message)",
                "// Line 109: ",
                "// Line 110:             break",
                "// Line 111:         else:",
                "// Line 112:             if re.match(",
                "// Line 113:                 \"http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+\",",
                "// Line 114:                 message.content,",
                "// Line 115:             ):",
                "// Line 116:                 links = re.findall(",
                "// Line 117:                     \"http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+\",",
                "// Line 118:                     message.content,",
                "// vulnerable line: 119: )",
                "// Line 120: ",
                "// Line 121:                 for link in links:",
                "// Line 122:                     attachments.append(link)",
                "// Line 123: ",
                "// Line 124:                 user_messages.append(message)",
                "// Line 125: ",
                "// Line 126:                 embed = Embed(",
                "// Line 127:                     title=\"Attachments\",",
                "// Line 128:                     description=\"Please enter the attachments to send to owners of this product. Please add each link in a new message. Say `done` when you are finished.\",",
                "// vulnerable line: 129: colour=interaction.user.colour,",
                "// vulnerable line: 130: timestamp=utils.utcnow(),",
                "// Line 131:                 ).set_footer(",
                "// Line 132:                     text=f\"Redon Hub • Say `cancel` to cancel creation • Version {self.bot.version}\"",
                "// vulnerable line: 133: )",
                "// Line 134: ",
                "// Line 135:                 if product:",
                "// Line 136:                     embed.add_field(",
                "// Line 137:                         name=\"Current Attachments\",",
                "// Line 138:                         value=\"",
                "// Line 139: \".join(product.attachments),",
                "// Line 140:                         inline=False,",
                "// vulnerable line: 141: )",
                "// Line 142: ",
                "// Line 143:                 embed.add_field(name=\"Attachments\", value=\"",
                "// Line 144: \".join(attachments))",
                "// Line 145: ",
                "// Line 146:                 await info_message.edit(embed=embed)",
                "// Line 147: ",
                "// Line 148:     for message in user_messages:",
                "// Line 149:         await message.delete()",
                "// Line 150: ",
                "// Line 151:     # await info_message.delete()",
                "// Line 162:             tags.append(int(value))",
                "// Line 163: ",
                "// Line 164:         product = await create_product(",
                "// Line 165:             name=self.name.value,",
                "// Line 166:             description=self.description.value,",
                "// Line 167:             imageId=self.imageId.value,",
                "// Line 168:             price=int(self.price.value),",
                "// Line 169:             productId=int(self.productId.value),",
                "// Line 170:             attachments=attachments,",
                "// Line 171:             tags=tags,",
                "// vulnerable line: 172: )",
                "// Line 173:         # await interaction.followup.send(",
                "// Line 174:         await interaction.edit_original_response(",
                "// vulnerable line: 175: embed=Embed(",
                "// Line 176:                 title=\"Product Created\",",
                "// Line 177:                 description=f\"Your product has been created!\",",
                "// vulnerable line: 178: colour=interaction.user.colour,",
                "// vulnerable line: 179: timestamp=utils.utcnow(),",
                "// vulnerable line: 180: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 181:             view=None,",
                "// vulnerable line: 182: )",
                "// Line 183:     except Exception as e:",
                "// Line 184:         _log.error(e)",
                "// Line 185:         # await interaction.followup.send(",
                "// Line 186:         await interaction.edit_original_response(",
                "// vulnerable line: 187: embed=Embed(",
                "// vulnerable line: 188: title=\"Error\",",
                "// Line 189:                 description=\"An unknown error has occured during creation.\",",
                "// vulnerable line: 190: colour=interaction.user.colour,",
                "// vulnerable line: 191: timestamp=utils.utcnow(),",
                "// vulnerable line: 192: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 193:             view=None,",
                "// vulnerable line: 194: )",
                "// Line 195: ",
                "// Line 196: ",
                "// Line 197: async def promptUpdateProductChooseAttachments(",
                "// Line 198:     self, interaction: Interaction, product: Product",
                "// Line 199: ):",
                "// Line 200:     attachments = await promptChooseAttachments(self, interaction, product)",
                "// Line 201: ",
                "// Line 202:     try:",
                "// Line 203:         product.attachments = attachments",
                "// Line 204:         await product.push()",
                "// Line 205:         # await interaction.followup.send(",
                "// Line 206:         await interaction.edit_original_response(",
                "// vulnerable line: 207: embed=Embed(",
                "// Line 208:                 title=\"Product Updated\",",
                "// Line 209:                 description=f\"Your product has been updated!\",",
                "// vulnerable line: 210: colour=interaction.user.colour,",
                "// vulnerable line: 211: timestamp=utils.utcnow(),",
                "// vulnerable line: 212: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 213:             view=None,",
                "// vulnerable line: 214: )",
                "// Line 215: ",
                "// Line 216:         try:",
                "// Line 217:             await sendUpdatedProductFiles(self, self.product)",
                "// Line 218:         except Exception as e:",
                "// Line 219:             _log.error(e)",
                "// Line 220:             await interaction.channel.send(",
                "// vulnerable line: 221: embed=Embed(",
                "// vulnerable line: 222: title=\"Error\",",
                "// Line 223:                     description=\"An unknown error has prevented sending updated files.",
                "// Line 224: **The product was still updated, users just have to manually retrieve the files**\",",
                "// vulnerable line: 225: colour=interaction.user.colour,",
                "// vulnerable line: 226: timestamp=utils.utcnow(),",
                "// vulnerable line: 227: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 228:                 view=None,",
                "// vulnerable line: 229: )",
                "// Line 230:     except Exception as e:",
                "// Line 231:         _log.error(e)",
                "// Line 232:         # await interaction.followup.send(",
                "// Line 233:         await interaction.edit_original_response(",
                "// vulnerable line: 234: embed=Embed(",
                "// vulnerable line: 235: title=\"Error\",",
                "// Line 236:                 description=\"An unknown error has occured while updating.\",",
                "// vulnerable line: 237: colour=interaction.user.colour,",
                "// vulnerable line: 238: timestamp=utils.utcnow(),",
                "// vulnerable line: 239: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 240:             view=None,",
                "// vulnerable line: 241: )",
                "// Line 242: ",
                "// Line 243: ",
                "// Line 244: class createProductSelectTags(ui.Select):",
                "// Line 245:     def __init__(self, tags, **kwargs):",
                "// Line 246:         options = []",
                "// Line 247:         for kwarg in kwargs:",
                "// Line 248:             setattr(self, kwarg, kwargs[kwarg])",
                "// Line 249: ",
                "// Line 250:         for tag in tags:",
                "// Line 251:             options.append(SelectOption(label=tag.name, value=tag.id))",
                "// Line 252: ",
                "// Line 253:         super().__init__(",
                "// Line 254:             placeholder=\"Select tags for your product\",",
                "// Line 255:             min_values=1,",
                "// Line 256:             max_values=len(options),",
                "// Line 257:             options=options,",
                "// vulnerable line: 258: )",
                "// Line 259: ",
                "// Line 260:     async def callback(self, interaction: Interaction):",
                "// Line 261:         await interaction.response.defer()",
                "// Line 262: ",
                "// Line 263:         await promptCreateProductChooseAttachments(self, interaction)",
                "// Line 264: ",
                "// Line 265: ",
                "// Line 266: class createProductSelectTagsNone(ui.Button):",
                "// Line 267:     def __init__(self, **kwargs):",
                "// Line 268:         for kwarg in kwargs:",
                "// Line 280:     def __init__(self, tags, **kwargs):",
                "// Line 281:         super().__init__()",
                "// Line 282:         self.add_item(createProductSelectTags(tags, **kwargs))",
                "// Line 283:         self.add_item(createProductSelectTagsNone(**kwargs))",
                "// Line 284: ",
                "// Line 285: ",
                "// Line 286: class createProduct(ui.Modal, title=\"Create Product\"):",
                "// Line 287:     name = ui.TextInput(label=\"Product Name\")",
                "// Line 288:     description = ui.TextInput(",
                "// Line 289:         label=\"Product Description\", placeholder=\"Optional\", style=TextStyle.paragraph",
                "// vulnerable line: 290: )",
                "// Line 291:     price = ui.TextInput(label=\"Product Price\", placeholder=\"In Robux\")",
                "// Line 292:     productId = ui.TextInput(",
                "// Line 293:         label=\"Developer Product ID\", placeholder=\"Example: 1234567890\"",
                "// vulnerable line: 294: )",
                "// Line 295:     imageId = ui.TextInput(",
                "// Line 296:         label=\"Image ID\",",
                "// Line 297:         placeholder=\"rbxassetid format. Example: rbxassetid://1234567890\",",
                "// vulnerable line: 298: )",
                "// Line 299: ",
                "// Line 300:     def __init__(self, bot, **kwargs):",
                "// Line 301:         self.bot = bot",
                "// Line 302:         super().__init__(**kwargs)",
                "// Line 303: ",
                "// Line 304:     async def on_submit(self, interaction: Interaction) -> None:",
                "// Line 305:         tags = await get_tags()",
                "// Line 306:         if tags and len(tags) > 0:",
                "// vulnerable line: 307: await interaction.response.send_message(",
                "// vulnerable line: 308: embed=Embed(",
                "// Line 309:                     title=\"Select Tags\",",
                "// Line 310:                     description=\"Select the tags for your product\",",
                "// vulnerable line: 311: colour=interaction.user.colour,",
                "// vulnerable line: 312: timestamp=utils.utcnow(),",
                "// vulnerable line: 313: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 314:                 view=createProductSelectTagsView(",
                "// Line 315:                     tags,",
                "// Line 316:                     name=self.name,",
                "// Line 317:                     description=self.description,",
                "// Line 318:                     imageId=self.imageId,",
                "// Line 319:                     price=self.price,",
                "// Line 320:                     productId=self.productId,",
                "// Line 321:                     bot=self.bot,",
                "// Line 322:                 ),",
                "// vulnerable line: 323: )",
                "// Line 324:         else:",
                "// Line 325:             self.values = []",
                "// vulnerable line: 326: await interaction.response.send_message(",
                "// vulnerable line: 327: embed=Embed(",
                "// Line 328:                     title=\"Please Wait\",",
                "// Line 329:                     description=\"Please Wait...\",",
                "// vulnerable line: 330: colour=interaction.user.colour,",
                "// vulnerable line: 331: timestamp=utils.utcnow(),",
                "// vulnerable line: 332: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// vulnerable line: 333: )",
                "// Line 334:             await promptCreateProductChooseAttachments(self, interaction)",
                "// Line 335: ",
                "// Line 336: ",
                "// Line 337: # class deleteProductSelect(ui.Select):",
                "// Line 338: #     def __init__(self, products, **kwargs):",
                "// Line 339: #         options = []",
                "// Line 340: #         for kwarg in kwargs:",
                "// Line 341: #             setattr(self, kwarg, kwargs[kwarg])",
                "// Line 342: ",
                "// Line 343: #         for product in products:",
                "// Line 404: ",
                "// Line 405:     for user in users:",
                "// Line 406:         if product.id in user.purchases:",
                "// Line 407:             try:",
                "// Line 408:                 user = await self.bot.fetch_user(user.discordId)",
                "// Line 409: ",
                "// Line 410:                 if user.dm_channel is None:",
                "// Line 411:                     await user.create_dm()",
                "// Line 412: ",
                "// Line 413:                 await user.dm_channel.send(",
                "// vulnerable line: 414: embed=Embed(",
                "// Line 415:                         title=\"Product Updated\",",
                "// Line 416:                         description=f\"A product you have purchased has been updated! You can find the information link below.\",",
                "// Line 417:                         colour=user.colour,",
                "// vulnerable line: 418: timestamp=utils.utcnow(),",
                "// vulnerable line: 419: )",
                "// Line 420:                     .set_footer(text=f\"Redon Hub • Version {self.bot.version}\")",
                "// Line 421:                     .add_field(name=\"Product\", value=product.name, inline=True)",
                "// Line 422:                     .add_field(",
                "// Line 423:                         name=\"Attachments\",",
                "// Line 424:                         value=\"",
                "// Line 425: \".join(product.attachments) or \"None\",",
                "// Line 426:                         inline=False,",
                "// vulnerable line: 427: )",
                "// vulnerable line: 428: )",
                "// Line 429:             except Exception as e:",
                "// Line 430:                 pass",
                "// Line 431: ",
                "// Line 432: ",
                "// Line 433: async def updateUserRoles(self, previousRole: Optional[Role], product: Product):",
                "// Line 434:     if product.role != None:",
                "// Line 435:         users = await get_users()",
                "// Line 436:         guild = self.bot.get_guild(config.Bot.Guilds[0])",
                "// Line 437:         role = guild.get_role(product.role)",
                "// Line 438: ",
                "// Line 439:         for user in users:",
                "// Line 440:             if product.id in user.purchases and user.discordId != 0:",
                "// Line 441:                 try:",
                "// Line 442:                     member = await guild.fetch_member(user.discordId)",
                "// Line 443: ",
                "// Line 444:                     if previousRole != None and previousRole in member.roles:",
                "// Line 445:                         await member.remove_roles(",
                "// Line 446:                             previousRole, reason=\"Product role updated\"",
                "// vulnerable line: 447: )",
                "// Line 448: ",
                "// Line 449:                     await member.add_roles(role, reason=\"Product role updated\")",
                "// Line 450:                 except Exception as e:",
                "// Line 451:                     pass",
                "// Line 452:     elif previousRole != None:",
                "// Line 453:         users = await get_users()",
                "// Line 454:         guild = self.bot.get_guild(config.Bot.Guilds[0])",
                "// Line 455: ",
                "// Line 456:         for user in users:",
                "// Line 457:             if product.id in user.purchases and user.discordId != 0:",
                "// Line 458:                 try:",
                "// Line 459:                     member = await guild.fetch_member(user.discordId)",
                "// Line 460: ",
                "// Line 461:                     if previousRole in member.roles:",
                "// Line 462:                         await member.remove_roles(",
                "// Line 463:                             previousRole, reason=\"Product role updates\"",
                "// vulnerable line: 464: )",
                "// Line 465:                 except Exception as e:",
                "// Line 466:                     pass",
                "// Line 467: ",
                "// Line 468: ",
                "// Line 469: class updateProductSelectTags(ui.Select):",
                "// Line 470:     def __init__(self, tags, bot, product: Product):",
                "// Line 471:         self.bot = bot",
                "// Line 472:         self.product = product",
                "// Line 473: ",
                "// Line 474:         options = []",
                "// Line 477:             default = False",
                "// Line 478:             if tag.id in product.tags:",
                "// Line 479:                 default = True",
                "// Line 480:             options.append(SelectOption(label=tag.name, value=tag.id, default=default))",
                "// Line 481: ",
                "// Line 482:         super().__init__(",
                "// Line 483:             placeholder=\"Select tags for your product\",",
                "// Line 484:             min_values=1,",
                "// Line 485:             max_values=len(options),",
                "// Line 486:             options=options,",
                "// vulnerable line: 487: )",
                "// Line 488: ",
                "// Line 489:     async def callback(self, interaction: Interaction):",
                "// Line 490:         await interaction.response.defer()",
                "// Line 491: ",
                "// Line 492:         try:",
                "// Line 493:             tags = []",
                "// Line 494:             for value in self.values:",
                "// Line 495:                 tags.append(int(value))",
                "// Line 496: ",
                "// Line 497:             self.product.tags = tags",
                "// Line 498: ",
                "// Line 499:             await self.product.push()",
                "// Line 500: ",
                "// Line 501:             await interaction.edit_original_response(",
                "// vulnerable line: 502: embed=Embed(",
                "// Line 503:                     title=\"Product Updated\",",
                "// Line 504:                     description=f\"Your product has been updated!\",",
                "// vulnerable line: 505: colour=interaction.user.colour,",
                "// vulnerable line: 506: timestamp=utils.utcnow(),",
                "// vulnerable line: 507: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 508:                 view=None,",
                "// vulnerable line: 509: )",
                "// Line 510:         except Exception as e:",
                "// Line 511:             _log.error(e)",
                "// Line 512:             # await interaction.followup.send(",
                "// Line 513:             await interaction.edit_original_response(",
                "// vulnerable line: 514: embed=Embed(",
                "// vulnerable line: 515: title=\"Error\",",
                "// Line 516:                     description=\"An unknown error has occured while updating.\",",
                "// vulnerable line: 517: colour=interaction.user.colour,",
                "// vulnerable line: 518: timestamp=utils.utcnow(),",
                "// vulnerable line: 519: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 520:                 view=None,",
                "// vulnerable line: 521: )",
                "// Line 522: ",
                "// Line 523: ",
                "// Line 524: class updateProductSelectTagsNone(ui.Button):",
                "// Line 525:     def __init__(self, bot, product: Product):",
                "// Line 526:         self.bot = bot",
                "// Line 527:         self.product = product",
                "// Line 528:         super().__init__(label=\"None\", style=ButtonStyle.primary)",
                "// Line 529: ",
                "// Line 530:     async def callback(self, interaction: Interaction):",
                "// Line 531:         await interaction.response.defer()",
                "// Line 532: ",
                "// Line 533:         try:",
                "// Line 534:             self.product.tags = []",
                "// Line 535: ",
                "// Line 536:             await self.product.push()",
                "// Line 537: ",
                "// Line 538:             await interaction.edit_original_response(",
                "// vulnerable line: 539: embed=Embed(",
                "// Line 540:                     title=\"Product Updated\",",
                "// Line 541:                     description=f\"Your product has been updated!\",",
                "// vulnerable line: 542: colour=interaction.user.colour,",
                "// vulnerable line: 543: timestamp=utils.utcnow(),",
                "// vulnerable line: 544: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 545:                 view=None,",
                "// vulnerable line: 546: )",
                "// Line 547:         except Exception as e:",
                "// Line 548:             _log.error(e)",
                "// Line 549:             # await interaction.followup.send(",
                "// Line 550:             await interaction.edit_original_response(",
                "// vulnerable line: 551: embed=Embed(",
                "// vulnerable line: 552: title=\"Error\",",
                "// Line 553:                     description=\"An unknown error has occured while updating.\",",
                "// vulnerable line: 554: colour=interaction.user.colour,",
                "// vulnerable line: 555: timestamp=utils.utcnow(),",
                "// vulnerable line: 556: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 557:                 view=None,",
                "// vulnerable line: 558: )",
                "// Line 559: ",
                "// Line 560: ",
                "// Line 561: class updateProductSelectTagsCancel(ui.Button):",
                "// Line 562:     def __init__(self, bot):",
                "// Line 563:         self.bot = bot",
                "// Line 564:         super().__init__(label=\"Cancel\", style=ButtonStyle.danger)",
                "// Line 565: ",
                "// Line 566:     async def callback(self, interaction: Interaction):",
                "// Line 567:         await interaction.response.defer()",
                "// Line 568: ",
                "// Line 569:         await interaction.edit_original_response(",
                "// vulnerable line: 570: embed=Embed(",
                "// Line 571:                 title=\"Product Update Cancelled\",",
                "// Line 572:                 description=f\"Your product update has been cancelled!\",",
                "// vulnerable line: 573: colour=interaction.user.colour,",
                "// vulnerable line: 574: timestamp=utils.utcnow(),",
                "// vulnerable line: 575: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 576:             view=None,",
                "// vulnerable line: 577: )",
                "// Line 578: ",
                "// Line 579: ",
                "// Line 580: class updateProductSelectTagsView(ui.View):",
                "// Line 581:     def __init__(self, tags, bot, product: Product):",
                "// Line 582:         super().__init__()",
                "// Line 583:         self.add_item(updateProductSelectTags(tags, bot, product))",
                "// Line 584:         self.add_item(updateProductSelectTagsNone(bot, product))",
                "// Line 585:         self.add_item(updateProductSelectTagsCancel(bot))",
                "// Line 586: ",
                "// Line 587: ",
                "// Line 591:         self.product = product",
                "// Line 592:         super().__init__()",
                "// Line 593: ",
                "// Line 594:         self.add_item(ui.TextInput(label=\"Product Name\", default=product.name))",
                "// Line 595:         self.add_item(",
                "// Line 596:             ui.TextInput(",
                "// Line 597:                 label=\"Product Description\",",
                "// Line 598:                 placeholder=\"Optional\",",
                "// Line 599:                 style=TextStyle.paragraph,",
                "// Line 600:                 default=product.description,",
                "// vulnerable line: 601: )",
                "// vulnerable line: 602: )",
                "// Line 603:         self.add_item(",
                "// Line 604:             ui.TextInput(",
                "// Line 605:                 label=\"Product Price\", placeholder=\"In Robux\", default=product.price",
                "// vulnerable line: 606: )",
                "// vulnerable line: 607: )",
                "// Line 608:         self.add_item(ui.TextInput(label=\"Developer Product ID\", default=product.price))",
                "// Line 609:         self.add_item(",
                "// Line 610:             ui.TextInput(",
                "// Line 611:                 label=\"Image ID\",",
                "// Line 612:                 placeholder=\"rbxassetid format. Example: rbxassetid://1234567890\",",
                "// Line 613:                 default=product.imageId,",
                "// vulnerable line: 614: )",
                "// vulnerable line: 615: )",
                "// Line 616: ",
                "// Line 617:     async def on_submit(self, interaction: Interaction) -> None:",
                "// Line 618:         try:",
                "// Line 619:             for item in self.children:",
                "// Line 620:                 if item.label == \"Product Name\":",
                "// Line 621:                     self.product.name = item.value",
                "// Line 622:                 elif item.label == \"Product Description\":",
                "// Line 623:                     self.product.description = item.value",
                "// Line 624:                 elif item.label == \"Product Price\":",
                "// Line 625:                     self.product.price = int(item.value)",
                "// Line 626:                 elif item.label == \"Developer Product ID\":",
                "// Line 627:                     self.product.productId = int(item.value)",
                "// Line 628:                 elif item.label == \"Image ID\":",
                "// Line 629:                     self.product.imageId = item.value",
                "// Line 630: ",
                "// Line 631:             await self.product.push()",
                "// Line 632: ",
                "// Line 633:             await interaction.response.edit_message(",
                "// vulnerable line: 634: embed=Embed(",
                "// Line 635:                     title=\"Product Updated\",",
                "// Line 636:                     description=f\"Your product has been updated!\",",
                "// vulnerable line: 637: colour=interaction.user.colour,",
                "// vulnerable line: 638: timestamp=utils.utcnow(),",
                "// vulnerable line: 639: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 640:                 view=None,",
                "// vulnerable line: 641: )",
                "// Line 642:         except Exception as e:",
                "// Line 643:             _log.error(e)",
                "// Line 644:             # await interaction.followup.send(",
                "// Line 645:             await interaction.response.edit_message(",
                "// vulnerable line: 646: embed=Embed(",
                "// vulnerable line: 647: title=\"Error\",",
                "// Line 648:                     description=\"An unknown error has occured while updating.\",",
                "// vulnerable line: 649: colour=interaction.user.colour,",
                "// vulnerable line: 650: timestamp=utils.utcnow(),",
                "// vulnerable line: 651: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 652:                 view=None,",
                "// vulnerable line: 653: )",
                "// Line 654: ",
                "// Line 655: ",
                "// Line 656: class updateProductStock(ui.Modal, title=\"Update Product\"):",
                "// Line 657:     def __init__(self, bot, product: Product):",
                "// Line 658:         self.bot = bot",
                "// Line 659:         self.product = product",
                "// Line 660:         super().__init__()",
                "// Line 661: ",
                "// Line 662:         self.add_item(",
                "// Line 663:             ui.TextInput(",
                "// Line 664:                 label=\"Stock\",",
                "// Line 665:                 placeholder=\"Leave blank for unlimited\",",
                "// Line 666:                 default=product.stock,",
                "// Line 667:                 required=False,",
                "// vulnerable line: 668: )",
                "// vulnerable line: 669: )",
                "// Line 670: ",
                "// Line 671:     async def on_submit(self, interaction: Interaction) -> None:",
                "// Line 672:         try:",
                "// Line 673:             for item in self.children:",
                "// Line 674:                 if item.label == \"Stock\":",
                "// Line 675:                     try:",
                "// Line 676:                         self.product.stock = int(item.value)",
                "// Line 677:                     except ValueError:",
                "// Line 678:                         self.product.stock = None",
                "// Line 679: ",
                "// Line 680:             await self.product.push()",
                "// Line 681: ",
                "// Line 682:             await interaction.response.edit_message(",
                "// vulnerable line: 683: embed=Embed(",
                "// Line 684:                     title=\"Product Updated\",",
                "// Line 685:                     description=f\"Your product has been updated!\",",
                "// vulnerable line: 686: colour=interaction.user.colour,",
                "// vulnerable line: 687: timestamp=utils.utcnow(),",
                "// vulnerable line: 688: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 689:                 view=None,",
                "// vulnerable line: 690: )",
                "// Line 691:         except Exception as e:",
                "// Line 692:             _log.error(e)",
                "// Line 693:             # await interaction.followup.send(",
                "// Line 694:             await interaction.response.edit_message(",
                "// vulnerable line: 695: embed=Embed(",
                "// vulnerable line: 696: title=\"Error\",",
                "// Line 697:                     description=\"An unknown error has occured while updating.\",",
                "// vulnerable line: 698: colour=interaction.user.colour,",
                "// vulnerable line: 699: timestamp=utils.utcnow(),",
                "// vulnerable line: 700: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 701:                 view=None,",
                "// vulnerable line: 702: )",
                "// Line 703: ",
                "// Line 704: ",
                "// Line 705: class updateProductRole(ui.Modal, title=\"Update Product\"):",
                "// Line 706:     def __init__(self, bot, product: Product):",
                "// Line 707:         self.bot = bot",
                "// Line 708:         self.product = product",
                "// Line 709:         self.currentRole = product.role",
                "// Line 710:         super().__init__()",
                "// Line 711: ",
                "// Line 712:         self.add_item(",
                "// Line 713:             ui.TextInput(",
                "// Line 714:                 label=\"Role ID\",",
                "// Line 715:                 placeholder=\"Leave blank for none\",",
                "// Line 716:                 default=product.role,",
                "// Line 717:                 required=False,",
                "// vulnerable line: 718: )",
                "// vulnerable line: 719: )",
                "// Line 720: ",
                "// Line 721:     async def on_submit(self, interaction: Interaction) -> None:",
                "// Line 722:         try:",
                "// Line 723:             for item in self.children:",
                "// Line 724:                 if item.label == \"Role ID\":",
                "// Line 725:                     try:",
                "// Line 726:                         self.product.role = int(item.value)",
                "// Line 727:                     except ValueError:",
                "// Line 728:                         self.product.role = None",
                "// Line 729: ",
                "// Line 730:             await self.product.push()",
                "// Line 731: ",
                "// Line 732:             await interaction.response.edit_message(",
                "// vulnerable line: 733: embed=Embed(",
                "// Line 734:                     title=\"Product Updated\",",
                "// Line 735:                     description=f\"Your product has been updated!\",",
                "// vulnerable line: 736: colour=interaction.user.colour,",
                "// vulnerable line: 737: timestamp=utils.utcnow(),",
                "// vulnerable line: 738: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 739:                 view=None,",
                "// vulnerable line: 740: )",
                "// Line 741: ",
                "// Line 742:             try:",
                "// Line 743:                 await updateUserRoles(self, self.currentRole, self.product)",
                "// Line 744:             except Exception as e:",
                "// Line 745:                 _log.error(e)",
                "// Line 746: ",
                "// Line 747:                 await interaction.channel.send(",
                "// vulnerable line: 748: embed=Embed(",
                "// vulnerable line: 749: title=\"Error\",",
                "// Line 750:                         description=\"An unknown error has caused members roles to not be updated automatically.",
                "// Line 751: **The product still has been updated properly**\",",
                "// vulnerable line: 752: colour=interaction.user.colour,",
                "// vulnerable line: 753: timestamp=utils.utcnow(),",
                "// vulnerable line: 754: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 755:                     view=None,",
                "// vulnerable line: 756: )",
                "// Line 757:         except Exception as e:",
                "// Line 758:             _log.error(e)",
                "// Line 759:             # await interaction.followup.send(",
                "// Line 760:             await interaction.response.edit_message(",
                "// vulnerable line: 761: embed=Embed(",
                "// vulnerable line: 762: title=\"Error\",",
                "// Line 763:                     description=\"An unknown error has occured while updating.\",",
                "// vulnerable line: 764: colour=interaction.user.colour,",
                "// vulnerable line: 765: timestamp=utils.utcnow(),",
                "// vulnerable line: 766: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 767:                 view=None,",
                "// vulnerable line: 768: )",
                "// Line 769: ",
                "// Line 770: ",
                "// Line 771: class updateProductView(ui.View):",
                "// Line 772:     def __init__(self, product: Product, **kwargs):",
                "// Line 773:         self.product = product",
                "// Line 774:         self.bot = kwargs.get(\"bot\")",
                "// Line 775:         super().__init__()",
                "// Line 776: ",
                "// Line 777:     @ui.button(label=\"Update Other Values\", style=ButtonStyle.success)",
                "// Line 778:     async def update_product(self, interaction: Interaction, _):",
                "// Line 779:         await interaction.response.send_modal(updateProduct(self.bot, self.product))",
                "// Line 780: ",
                "// Line 781:     @ui.button(label=\"Update Stock\", style=ButtonStyle.primary)",
                "// Line 782:     async def update_stock(self, interaction: Interaction, _):",
                "// Line 783:         await interaction.response.send_modal(",
                "// Line 784:             updateProductStock(self.bot, self.product)",
                "// vulnerable line: 785: )",
                "// Line 786: ",
                "// Line 787:     @ui.button(label=\"Update Customer Role\", style=ButtonStyle.primary)",
                "// Line 788:     async def update_customer_role(self, interaction: Interaction, _):",
                "// Line 789:         await interaction.response.send_modal(updateProductRole(self.bot, self.product))",
                "// Line 790: ",
                "// Line 791:     @ui.button(label=\"Update Tags\", style=ButtonStyle.primary)",
                "// Line 792:     async def update_tags(self, interaction: Interaction, _):",
                "// Line 793:         await interaction.response.defer()",
                "// Line 794: ",
                "// Line 795:         await interaction.edit_original_response(",
                "// vulnerable line: 796: embed=Embed(",
                "// Line 797:                 title=\"Select Tags\",",
                "// Line 798:                 description=\"Select the tags for your product\",",
                "// vulnerable line: 799: colour=interaction.user.colour,",
                "// vulnerable line: 800: timestamp=utils.utcnow(),",
                "// vulnerable line: 801: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 802:             view=updateProductSelectTagsView(",
                "// Line 803:                 await get_tags(),",
                "// Line 804:                 self.bot,",
                "// Line 805:                 self.product,",
                "// Line 806:             ),",
                "// vulnerable line: 807: )",
                "// Line 808: ",
                "// Line 809:     @ui.button(label=\"Update Attachments\", style=ButtonStyle.primary)",
                "// Line 810:     async def update_attachments(self, interaction: Interaction, _):",
                "// Line 811:         await interaction.response.defer()",
                "// Line 812: ",
                "// Line 813:         await promptUpdateProductChooseAttachments(self, interaction, self.product)",
                "// Line 814: ",
                "// Line 815: ",
                "// Line 816: class ProductCog(Cog):",
                "// Line 817:     def __init__(self, bot):",
                "// Line 818:         self.bot = bot",
                "// Line 819: ",
                "// Line 820:     product_commands = app_commands.Group(",
                "// Line 821:         name=\"product\", description=\"Product Commands\"",
                "// vulnerable line: 822: )",
                "// Line 823: ",
                "// Line 824:     product_admin = app_commands.Group(",
                "// Line 825:         name=\"admin\",",
                "// Line 826:         description=\"Product Admin Commands\",",
                "// Line 827:         parent=product_commands,",
                "// vulnerable line: 828: default_permissions=None,",
                "// vulnerable line: 829: )",
                "// Line 830: ",
                "// Line 831:     @app_commands.command(",
                "// Line 832:         name=\"products\", description=\"View all the products this server has\"",
                "// vulnerable line: 833: )",
                "// Line 834:     async def get_products_command(self, interaction: Interaction):",
                "// Line 835:         await interaction.response.defer()",
                "// Line 836: ",
                "// Line 837:         products = await get_products()",
                "// Line 838: ",
                "// Line 839:         await interaction.followup.send(",
                "// vulnerable line: 840: embed=Embed(",
                "// Line 841:                 title=\"Products\",",
                "// Line 842:                 description=f\"Here is all the products I was able to find! To get more information on a individual product run `/product (product)`\",",
                "// vulnerable line: 843: colour=interaction.user.colour,",
                "// vulnerable line: 844: timestamp=utils.utcnow(),",
                "// vulnerable line: 845: )",
                "// Line 846:             .set_footer(text=f\"Redon Hub • Version {self.bot.version}\")",
                "// Line 847:             .add_field(",
                "// Line 848:                 name=\"Products\",",
                "// Line 849:                 value=\"",
                "// Line 850: \".join([product.name for product in products]) or \"None\",",
                "// vulnerable line: 851: )",
                "// vulnerable line: 852: )",
                "// Line 853: ",
                "// Line 854:     @product_commands.command(",
                "// Line 855:         name=\"info\", description=\"Get information on a specific product\"",
                "// vulnerable line: 856: )",
                "// Line 857:     async def get_product_info_command(",
                "// Line 858:         self, interaction: Interaction, product_name: str",
                "// Line 859:     ):",
                "// Line 860:         try:",
                "// Line 861:             product = await get_product_by_name(product_name)",
                "// Line 862:         except Exception:",
                "// Line 863:             product = None",
                "// Line 864: ",
                "// Line 865:         if product:",
                "// vulnerable line: 866: await interaction.response.send_message(",
                "// vulnerable line: 867: embed=Embed(",
                "// Line 868:                     title=product.name,",
                "// Line 869:                     description=f\"Here is all the info I was able to get on `{product.name}`!\",",
                "// vulnerable line: 870: colour=interaction.user.colour,",
                "// vulnerable line: 871: timestamp=utils.utcnow(),",
                "// vulnerable line: 872: )",
                "// Line 873:                 .set_footer(text=f\"Redon Hub • Version {self.bot.version}\")",
                "// Line 874:                 .add_field(name=\"Price\", value=product.price, inline=True)",
                "// Line 875:                 .add_field(name=\"Description\", value=product.description, inline=False)",
                "// vulnerable line: 876: )",
                "// Line 877:         else:",
                "// vulnerable line: 878: await interaction.response.send_message(",
                "// vulnerable line: 879: embed=Embed(",
                "// Line 880:                     title=\"Not Found\",",
                "// Line 881:                     description=f\"I was unable to find any information on `{product_name}`.\",",
                "// vulnerable line: 882: colour=interaction.user.colour,",
                "// vulnerable line: 883: timestamp=utils.utcnow(),",
                "// Line 884:                 ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\")",
                "// vulnerable line: 885: )",
                "// Line 886: ",
                "// Line 887:     @get_product_info_command.autocomplete(\"product_name\")",
                "// Line 888:     async def get_product_info_command_autocomplete(",
                "// Line 889:         self, interaction: Interaction, current_product_name: str",
                "// Line 890:     ):",
                "// Line 891:         try:",
                "// Line 892:             products = await get_products()",
                "// Line 893:         except Exception:",
                "// Line 894:             products = []",
                "// Line 895: ",
                "// Line 896:         return [",
                "// Line 897:             app_commands.Choice(name=product.name, value=product.name)",
                "// Line 898:             for product in products",
                "// Line 899:             if current_product_name.lower() in product.name.lower()",
                "// Line 900:         ]",
                "// Line 901: ",
                "// Line 902:     @product_admin.command(",
                "// Line 903:         name=\"stats\", description=\"Get statistics on a specific product\"",
                "// vulnerable line: 904: )",
                "// Line 905:     async def get_product_stats_info_command(",
                "// Line 906:         self, interaction: Interaction, product_name: str",
                "// Line 907:     ):",
                "// Line 908:         try:",
                "// Line 909:             product = await get_product_by_name(product_name)",
                "// Line 910:         except Exception:",
                "// Line 911:             product = None",
                "// Line 912: ",
                "// Line 913:         if product:",
                "// vulnerable line: 914: await interaction.response.send_message(",
                "// vulnerable line: 915: embed=Embed(",
                "// Line 916:                     title=product.name,",
                "// Line 917:                     description=f\"Here is all the statistics I was able to get on `{product.name}`!\",",
                "// vulnerable line: 918: colour=interaction.user.colour,",
                "// vulnerable line: 919: timestamp=utils.utcnow(),",
                "// vulnerable line: 920: )",
                "// Line 921:                 .set_footer(text=f\"Redon Hub • Version {self.bot.version}\")",
                "// Line 922:                 .add_field(name=\"Purchases\", value=product.purchases, inline=True)",
                "// Line 923:                 .add_field(name=\"Owners\", value=product.owners, inline=False)",
                "// vulnerable line: 924: )",
                "// Line 925:         else:",
                "// vulnerable line: 926: await interaction.response.send_message(",
                "// vulnerable line: 927: embed=Embed(",
                "// Line 928:                     title=\"Not Found\",",
                "// Line 929:                     description=f\"I was unable to find any information on `{product_name}`.\",",
                "// vulnerable line: 930: colour=interaction.user.colour,",
                "// vulnerable line: 931: timestamp=utils.utcnow(),",
                "// Line 932:                 ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\")",
                "// vulnerable line: 933: )",
                "// Line 934: ",
                "// Line 935:     @get_product_stats_info_command.autocomplete(\"product_name\")",
                "// Line 936:     async def get_product_stats_info_command_autocomplete(",
                "// Line 937:         self, interaction: Interaction, current_product_name: str",
                "// Line 938:     ):",
                "// Line 939:         try:",
                "// Line 940:             products = await get_products()",
                "// Line 941:         except Exception:",
                "// Line 942:             products = []",
                "// Line 943: ",
                "// Line 953: ",
                "// Line 954:     @product_admin.command(name=\"delete\", description=\"Delete a product\")",
                "// Line 955:     async def delete_product_command(self, interaction: Interaction, product_name: str):",
                "// Line 956:         try:",
                "// Line 957:             product = await get_product_by_name(product_name)",
                "// Line 958:         except Exception:",
                "// Line 959:             product = None",
                "// Line 960: ",
                "// Line 961:         if product:",
                "// Line 962:             view = ConfirmView(interaction.user)",
                "// vulnerable line: 963: await interaction.response.send_message(",
                "// vulnerable line: 964: embed=Embed(",
                "// Line 965:                     title=\"Delete Product\",",
                "// Line 966:                     description=f\"Are you sure you want to delete `{product_name}`?\",",
                "// vulnerable line: 967: colour=interaction.user.colour,",
                "// vulnerable line: 968: timestamp=utils.utcnow(),",
                "// vulnerable line: 969: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 970:                 view=view,",
                "// vulnerable line: 971: )",
                "// Line 972: ",
                "// Line 973:             await view.wait()",
                "// Line 974: ",
                "// Line 975:             if view.value == True:",
                "// Line 976:                 try:",
                "// Line 977:                     await delete_product(product.id)",
                "// Line 978:                     await interaction.edit_original_response(",
                "// vulnerable line: 979: embed=Embed(",
                "// Line 980:                             title=\"Deleted Product\",",
                "// Line 981:                             description=f\"I have deleted `{product_name}`.\",",
                "// vulnerable line: 982: colour=interaction.user.colour,",
                "// vulnerable line: 983: timestamp=utils.utcnow(),",
                "// vulnerable line: 984: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 985:                         view=None,",
                "// vulnerable line: 986: )",
                "// Line 987:                 except Exception as e:",
                "// Line 988:                     await interaction.edit_original_response(",
                "// vulnerable line: 989: embed=Embed(",
                "// vulnerable line: 990: title=\"Error\",",
                "// Line 991:                             description=f\"I was unable to delete `{product_name}`. Error: {e}\",",
                "// vulnerable line: 992: colour=interaction.user.colour,",
                "// vulnerable line: 993: timestamp=utils.utcnow(),",
                "// vulnerable line: 994: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 995:                         view=None,",
                "// vulnerable line: 996: )",
                "// Line 997:             else:",
                "// Line 998:                 await interaction.edit_original_response(",
                "// vulnerable line: 999: embed=Embed(",
                "// Line 1000:                         title=\"Cancelled\",",
                "// Line 1001:                         description=\"I have cancelled the action.\",",
                "// vulnerable line: 1002: colour=interaction.user.colour,",
                "// vulnerable line: 1003: timestamp=utils.utcnow(),",
                "// vulnerable line: 1004: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 1005:                     view=None,",
                "// vulnerable line: 1006: )",
                "// Line 1007:         else:",
                "// vulnerable line: 1008: await interaction.response.send_message(",
                "// vulnerable line: 1009: embed=Embed(",
                "// Line 1010:                     title=\"Not Found\",",
                "// Line 1011:                     description=f\"I was unable to find `{product_name}`.\",",
                "// vulnerable line: 1012: colour=interaction.user.colour,",
                "// vulnerable line: 1013: timestamp=utils.utcnow(),",
                "// Line 1014:                 ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\")",
                "// vulnerable line: 1015: )",
                "// Line 1016: ",
                "// Line 1017:         # products = await get_products()",
                "// Line 1018: ",
                "// Line 1019:         # await interaction.followup.send(",
                "// Line 1020:         #     embed=Embed(",
                "// Line 1021:         #         title=\"Delete Product\",",
                "// Line 1022:         #         description=\"Select the product you want to delete\",",
                "// Line 1023:         #         colour=interaction.user.colour,",
                "// Line 1024:         #         timestamp=utils.utcnow(),",
                "// Line 1025:         #     ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 1037: ",
                "// Line 1038:         return [",
                "// Line 1039:             app_commands.Choice(name=product.name, value=product.name)",
                "// Line 1040:             for product in products",
                "// Line 1041:             if current_product_name.lower() in product.name.lower()",
                "// Line 1042:         ]",
                "// Line 1043: ",
                "// Line 1044:     @product_admin.command(name=\"clear\", description=\"Delete all products\")",
                "// Line 1045:     async def clear_products_command(self, interaction: Interaction):",
                "// Line 1046:         if interaction.user.id not in config.Bot.Owners:",
                "// vulnerable line: 1047: await interaction.response.send_message(",
                "// vulnerable line: 1048: embed=Embed(",
                "// vulnerable line: 1049: title=\"Error\",",
                "// vulnerable line: 1050: description=\"You are not allowed to use this command.\",",
                "// vulnerable line: 1051: colour=interaction.user.colour,",
                "// vulnerable line: 1052: timestamp=utils.utcnow(),",
                "// vulnerable line: 1053: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// vulnerable line: 1054: )",
                "// vulnerable line: 1055: return",
                "// Line 1056: ",
                "// Line 1057:         try:",
                "// Line 1058:             products = await get_products()",
                "// Line 1059:         except Exception:",
                "// Line 1060:             products = []",
                "// Line 1061: ",
                "// Line 1062:         if products:",
                "// Line 1063:             view = ConfirmView(interaction.user)",
                "// vulnerable line: 1064: await interaction.response.send_message(",
                "// vulnerable line: 1065: embed=Embed(",
                "// Line 1066:                     title=\"Clear Products\",",
                "// Line 1067:                     description=f\"Are you sure you want to delete all products?",
                "// Line 1068: ",
                "// Line 1069: **Warning:** This action is irreversible.\",",
                "// vulnerable line: 1070: colour=interaction.user.colour,",
                "// vulnerable line: 1071: timestamp=utils.utcnow(),",
                "// vulnerable line: 1072: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 1073:                 view=view,",
                "// vulnerable line: 1074: )",
                "// Line 1075: ",
                "// Line 1076:             await view.wait()",
                "// Line 1077: ",
                "// Line 1078:             await interaction.edit_original_response(",
                "// vulnerable line: 1079: embed=Embed(",
                "// Line 1080:                     title=\"Clearing Products\",",
                "// Line 1081:                     description=f\"Please wait...\",",
                "// vulnerable line: 1082: colour=interaction.user.colour,",
                "// vulnerable line: 1083: timestamp=utils.utcnow(),",
                "// vulnerable line: 1084: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 1085:                 view=None,",
                "// vulnerable line: 1086: )",
                "// Line 1087: ",
                "// Line 1088:             if view.value == True:",
                "// Line 1089:                 for product in products:",
                "// Line 1090:                     try:",
                "// Line 1091:                         await delete_product(product.id)",
                "// Line 1092:                     except Exception as e:",
                "// Line 1093:                         _log.error(e)",
                "// Line 1094:                         await interaction.channel.send(",
                "// Line 1095:                             f\"I was unable to delete `{product.name}`\"",
                "// vulnerable line: 1096: )",
                "// Line 1097: ",
                "// Line 1098:                 await interaction.edit_original_response(",
                "// vulnerable line: 1099: embed=Embed(",
                "// Line 1100:                         title=\"Cleared Products\",",
                "// Line 1101:                         description=f\"I have deleted all products.\",",
                "// vulnerable line: 1102: colour=interaction.user.colour,",
                "// vulnerable line: 1103: timestamp=utils.utcnow(),",
                "// vulnerable line: 1104: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 1105:                     view=None,",
                "// vulnerable line: 1106: )",
                "// Line 1107:             else:",
                "// Line 1108:                 await interaction.edit_original_response(",
                "// vulnerable line: 1109: embed=Embed(",
                "// Line 1110:                         title=\"Cancelled\",",
                "// Line 1111:                         description=\"I have cancelled the action.\",",
                "// vulnerable line: 1112: colour=interaction.user.colour,",
                "// vulnerable line: 1113: timestamp=utils.utcnow(),",
                "// vulnerable line: 1114: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 1115:                     view=None,",
                "// vulnerable line: 1116: )",
                "// Line 1117:         else:",
                "// vulnerable line: 1118: await interaction.response.send_message(",
                "// vulnerable line: 1119: embed=Embed(",
                "// Line 1120:                     title=\"Not Found\",",
                "// Line 1121:                     description=f\"I was unable to find any products.\",",
                "// vulnerable line: 1122: colour=interaction.user.colour,",
                "// vulnerable line: 1123: timestamp=utils.utcnow(),",
                "// Line 1124:                 ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\")",
                "// vulnerable line: 1125: )",
                "// Line 1126: ",
                "// Line 1127:     @product_admin.command(name=\"update\", description=\"Update a product\")",
                "// Line 1128:     async def update_product_command(self, interaction: Interaction, product_name: str):",
                "// Line 1129:         await interaction.response.defer()",
                "// Line 1130: ",
                "// Line 1131:         try:",
                "// Line 1132:             product = await get_product_by_name(product_name)",
                "// Line 1133:         except Exception:",
                "// Line 1134:             product = None",
                "// Line 1135: ",
                "// Line 1136:         if product:",
                "// Line 1137:             await interaction.followup.send(",
                "// vulnerable line: 1138: embed=Embed(",
                "// Line 1139:                     title=product.name,",
                "// Line 1140:                     description=f\"Please select what you want to update for `{product.name}`!\",",
                "// vulnerable line: 1141: colour=interaction.user.colour,",
                "// vulnerable line: 1142: timestamp=utils.utcnow(),",
                "// vulnerable line: 1143: ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\"),",
                "// Line 1144:                 view=updateProductView(product, bot=self.bot),",
                "// vulnerable line: 1145: )",
                "// Line 1146:         else:",
                "// Line 1147:             await interaction.followup.send(",
                "// vulnerable line: 1148: embed=Embed(",
                "// Line 1149:                     title=\"Not Found\",",
                "// Line 1150:                     description=f\"I was unable to find any product to update with the name `{product_name}`.\",",
                "// vulnerable line: 1151: colour=interaction.user.colour,",
                "// vulnerable line: 1152: timestamp=utils.utcnow(),",
                "// Line 1153:                 ).set_footer(text=f\"Redon Hub • Version {self.bot.version}\")",
                "// vulnerable line: 1154: )",
                "// Line 1155: ",
                "// Line 1156:     @update_product_command.autocomplete(\"product_name\")",
                "// Line 1157:     async def update_product_command_autocomplete(",
                "// Line 1158:         self, interaction: Interaction, current_product_name: str",
                "// Line 1159:     ):",
                "// Line 1160:         try:",
                "// Line 1161:             products = await get_products()",
                "// Line 1162:         except Exception:",
                "// Line 1163:             products = []",
                "// Line 1164: "
            ]
        },
        {
            "filename_of_changes": "tag.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "4",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: \"\"\"",
                "// Line 2:     File: /bot/cogs/tags.py",
                "// Line 3:     Usage: Tag related commands",
                "// Line 4: \"\"\"",
                "// Line 5: from discord import (",
                "// Line 6:     app_commands,",
                "// Line 7:     Interaction,",
                "// Line 8:     Embed,",
                "// Line 9:     utils,",
                "// Line 10:     ui,",
                "// vulnerable line: 11: TextStyle,",
                "// Line 12:     SelectOption,",
                "// vulnerable line: 13: ButtonStyle,",
                "// Line 14: )",
                "// Line 15: from discord.ext.commands import Cog",
                "// Line 16: from bot.data import get_tag, get_tag_by_name, get_tags, create_tag, delete_tag, Tag",
                "// Line 17: from PIL import ImageColor",
                "// Line 18: import logging",
                "// Line 19: ",
                "// Line 20: _log = logging.getLogger(__name__)",
                "// Line 21: ",
                "// Line 22: ",
                "// Line 23: class createTag(ui.Modal, title=\"Create Tag\"):",
                "// Line 187: ",
                "// Line 188: class TagCog(Cog):",
                "// Line 189:     def __init__(self, bot):",
                "// Line 190:         self.bot = bot",
                "// Line 191: ",
                "// Line 192:     tag_commands = app_commands.Group(name=\"tag\", description=\"Tag Commands\")",
                "// Line 193:     tag_admin = app_commands.Group(",
                "// Line 194:         name=\"admin\",",
                "// Line 195:         description=\"Tag Admin Commands\",",
                "// Line 196:         parent=tag_commands,",
                "// vulnerable line: 197: default_permissions=None,",
                "// Line 198:     )",
                "// Line 199: ",
                "// Line 200:     @app_commands.command(name=\"tags\", description=\"View all the tags this server has\")",
                "// Line 201:     async def get_tags_command(self, interaction: Interaction):",
                "// Line 202:         await interaction.response.defer()",
                "// Line 203: ",
                "// Line 204:         tags = await get_tags()",
                "// Line 205: ",
                "// Line 206:         await interaction.followup.send(",
                "// Line 207:             embed=Embed("
            ]
        },
        {
            "filename_of_changes": "user.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "13",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: \"\"\"",
                "// Line 2:     File: /bot/cogs/user.py",
                "// Line 3:     Usage: User related commands",
                "// Line 4: \"\"\"",
                "// vulnerable line: 5: from discord import app_commands, Interaction, Member, Embed, utils, Forbidden",
                "// Line 6: from discord.ext.commands import Cog",
                "// Line 7: from bot.data import (",
                "// Line 8:     get_user_by_discord_id,",
                "// Line 9:     get_product,",
                "// Line 10:     get_product_by_name,",
                "// Line 11:     get_products,",
                "// Line 12: )",
                "// Line 13: from bot.utils import ConfirmView, JumpToMessageView, handlePurchase, handleRevoke",
                "// Line 14: from typing import Optional",
                "// Line 15: import logging",
                "// Line 20: class User(Cog):",
                "// Line 21:     def __init__(self, bot):",
                "// Line 22:         self.bot = bot",
                "// Line 23: ",
                "// Line 24:     user_commands = app_commands.Group(name=\"user\", description=\"User Commands\")",
                "// Line 25: ",
                "// Line 26:     user_admin = app_commands.Group(",
                "// Line 27:         name=\"admin\",",
                "// Line 28:         description=\"User Admin Commands\",",
                "// Line 29:         parent=user_commands,",
                "// vulnerable line: 30: default_permissions=None,",
                "// Line 31:     )",
                "// Line 32: ",
                "// Line 33:     @app_commands.command(name=\"profile\", description=\"View a user's profile\")",
                "// Line 34:     async def user_profile(self, interaction: Interaction, member: Optional[Member]):",
                "// Line 35:         member = member or interaction.user",
                "// Line 36:         try:",
                "// Line 37:             user = await get_user_by_discord_id(member.id)",
                "// Line 38:         except Exception as e:",
                "// Line 39:             _log.error(e)",
                "// Line 40:             user = None"
            ]
        }
    ]
}