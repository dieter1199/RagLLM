{
    "cve_id": "CVE-2024-27302",
    "cve_description": "go-zero is a web and rpc framework. Go-zero allows user to specify a CORS Filter with a configurable allows param - which is an array of domains allowed in CORS policy. However, the `isOriginAllowed` uses `strings.HasSuffix` to check the origin, which leads to bypass via a malicious domain. This vulnerability is capable of breaking CORS policy and thus allowing any page to make requests and/or retrieve data on behalf of other users. Version 1.4.4 fixes this issue.\n",
    "cve_publish_date": "2024-03-06T19:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Merge pull request from GHSA-fgxv-gw55-r5fq\n\n* fix: Authorization Bypass Through User-Controlled Key\n\n* chore: add not safe domain test",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "handlers.go",
            "code_language": "Go",
            "number_of_lines_added_for_mitigation": "9",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 70:         return",
                "// Line 71:     }",
                "// Line 72: ",
                "// Line 73:     origin := r.Header.Get(originHeader)",
                "// Line 74:     if isOriginAllowed(origins, origin) {",
                "// Line 75:         setHeader(w, origin)",
                "// Line 76:     }",
                "// Line 77: }",
                "// Line 78: ",
                "// Line 79: func isOriginAllowed(allows []string, origin string) bool {",
                "// vulnerable line: 80: for _, o := range allows {",
                "// vulnerable line: 81: if o == allOrigins {",
                "// Line 82:             return true",
                "// Line 83:         }",
                "// Line 84: ",
                "// vulnerable line: 85: if strings.HasSuffix(origin, o) {",
                "// Line 86:             return true",
                "// Line 87:         }",
                "// Line 88:     }",
                "// Line 89: ",
                "// Line 90:     return false",
                "// Line 91: }",
                "// Line 92: ",
                "// Line 93: func setHeader(w http.ResponseWriter, origin string) {",
                "// Line 94:     header := w.Header()",
                "// Line 95:     header.Set(allowOrigin, origin)"
            ]
        },
        {
            "filename_of_changes": "handlers_test.go",
            "code_language": "Go",
            "number_of_lines_added_for_mitigation": "5",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        }
    ]
}