{
    "cve_id": "CVE-2024-39909",
    "cve_description": "KubeClarity is a tool for detection and management of Software Bill Of Materials (SBOM) and vulnerabilities of container images and filesystems. A time/boolean SQL Injection is present in the following resource `/api/applicationResources` via the following parameter `packageID`. As it can be seen in backend/pkg/database/id_view.go, while building the SQL Query the `fmt.Sprintf` function is used to build the query string without the input having first been subjected to any validation. This vulnerability is fixed in 2.23.1.",
    "cve_publish_date": "2024-07-12T15:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Merge pull request from GHSA-5248-h45p-9pgw",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "id_view.go",
            "code_language": "Go",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 69:     // we will use Session(&gorm.Session{}) here so every call to the handler will start from scratch",
                "// Line 70:     tx := i.IDsView.",
                "// Line 71:         Session(&gorm.Session{}).",
                "// Line 72:         Select(\"distinct \" + lookupIDColumnName)",
                "// Line 73: ",
                "// Line 74:     filterIDColumnName := getIDViewColumnNameByIDType(params.FilterIDType)",
                "// Line 75: ",
                "// Line 76:     if idsShouldMatch {",
                "// Line 77:         for _, id := range params.FilterIDs {",
                "// Line 78:             // for each OR filter we need to verify that lookup id column is not null to avoid failing during Find",
                "// vulnerable line: 79: tx.Or(fmt.Sprintf(\"%s = '%s' AND %s is not null\", filterIDColumnName, id,",
                "// vulnerable line: 80: lookupIDColumnName))",
                "// Line 81:         }",
                "// Line 82:     } else {",
                "// Line 83:         for _, id := range params.FilterIDs {",
                "// Line 84:             tx.Not(filterIDColumnName+\" = ?\", id)",
                "// Line 85:         }",
                "// Line 86:         // after we filter out all ids need to verify that lookup id column is not null to avoid failing during Find",
                "// Line 87:         tx.Where(lookupIDColumnName + \" is not null\")",
                "// Line 88:     }",
                "// Line 89: ",
                "// Line 90:     // Verify that query will return at least one result."
            ]
        }
    ]
}