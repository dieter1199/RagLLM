{
    "cve_id": "CVE-2024-34061",
    "cve_description": "changedetection.io is a free open source web page change detection, website watcher, restock monitor and notification service. In affected versions Input in parameter notification_urls is not processed resulting in javascript execution in the application. A reflected XSS vulnerability happens when the user input from a URL or POST data is reflected on the page without being stored, thus allowing the attacker to inject malicious content. This issue has been addressed in version 0.45.22. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "cve_publish_date": "2024-05-02T14:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Merge pull request from GHSA-pwgc-w4x9-gw67\n\n* Auto-escape was not enabled GHSA-pwgc-w4x9-gw67\n\n* Auto-escape was not enabled because the filenames were not something jinja2 enables it for.",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "test_security.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "25",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: from flask import url_for",
                "// Line 2: from .util import set_original_response, set_modified_response, live_server_setup, wait_for_all_checks",
                "// Line 3: import time",
                "// Line 4: ",
                "// Line 5: ",
                "// Line 6: def test_bad_access(client, live_server):",
                "// vulnerable line: 7: live_server_setup(live_server)",
                "// Line 8:     res = client.post(",
                "// Line 9:         url_for(\"import_page\"),",
                "// Line 10:         data={\"urls\": 'https://localhost'},",
                "// Line 11:         follow_redirects=True",
                "// Line 12:     )",
                "// Line 13: ",
                "// Line 14:     assert b\"1 Imported\" in res.data",
                "// Line 15:     wait_for_all_checks(client)",
                "// Line 16: ",
                "// Line 17:     # Attempt to add a body with a GET method",
                "// Line 56:     # file:// is permitted by default, but it will be caught by ALLOW_FILE_URI",
                "// Line 57: ",
                "// Line 58:     client.post(",
                "// Line 59:         url_for(\"form_quick_watch_add\"),",
                "// Line 60:         data={\"url\": 'file:///tasty/disk/drive', \"tags\": ''},",
                "// Line 61:         follow_redirects=True",
                "// Line 62:     )",
                "// Line 63:     wait_for_all_checks(client)",
                "// Line 64:     res = client.get(url_for(\"index\"))",
                "// Line 65: ",
                "// vulnerable line: 66: assert b'file:// type access is denied for security reasons.' in res.data"
            ]
        }
    ]
}