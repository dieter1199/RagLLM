{
    "cve_id": "CVE-2024-32030",
    "cve_description": "Kafka UI is an Open-Source Web UI for Apache Kafka Management. Kafka UI API allows users to connect to different Kafka brokers by specifying their network address and port. As a separate feature, it also provides the ability to monitor the performance of Kafka brokers by connecting to their JMX ports. JMX is based on the RMI protocol, so it is inherently susceptible to deserialization attacks. A potential attacker can exploit this feature by connecting Kafka UI backend to its own malicious broker. This vulnerability affects the deployments where one of the following occurs: 1. dynamic.config.enabled property is set in settings. It's not enabled by default, but it's suggested to be enabled in many tutorials for Kafka UI, including its own README.md. OR  2. an attacker has access to the Kafka cluster that is being connected to Kafka UI. In this scenario the attacker can exploit this vulnerability to expand their access and execute code on Kafka UI as well. Instead of setting up a legitimate JMX port, an attacker can create an RMI listener that returns a malicious serialized object for any RMI call. In the worst case it could lead to remote code execution as Kafka UI has the required gadget chains in its classpath. This issue may lead to post-auth remote code execution. This is particularly dangerous as Kafka-UI does not have authentication enabled by default. This issue has been addressed in version 0.7.2. All users are advised to upgrade. There are no known workarounds for this vulnerability. These issues were discovered and reported by the GitHub Security lab and is also tracked as GHSL-2023-230.",
    "cve_publish_date": "2024-06-19T17:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "added commons-collections4 library instead of commons-collections (#4427)\n\nCo-authored-by: Narekmat <47845266+Narekmat@users.noreply.github.com>",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "AccessControlService.java",
            "code_language": "Java",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 26: import java.util.Collections;",
                "// Line 27: import java.util.List;",
                "// Line 28: import java.util.Objects;",
                "// Line 29: import java.util.Set;",
                "// Line 30: import java.util.function.Predicate;",
                "// Line 31: import java.util.regex.Pattern;",
                "// Line 32: import java.util.stream.Collectors;",
                "// Line 33: import javax.annotation.Nullable;",
                "// Line 34: import lombok.RequiredArgsConstructor;",
                "// Line 35: import lombok.extern.slf4j.Slf4j;",
                "// vulnerable line: 36: import org.apache.commons.collections.CollectionUtils;",
                "// Line 37: import org.apache.commons.lang3.StringUtils;",
                "// Line 38: import org.springframework.boot.context.properties.EnableConfigurationProperties;",
                "// Line 39: import org.springframework.core.env.Environment;",
                "// Line 40: import org.springframework.security.access.AccessDeniedException;",
                "// Line 41: import org.springframework.security.core.context.ReactiveSecurityContextHolder;",
                "// Line 42: import org.springframework.security.core.context.SecurityContext;",
                "// Line 43: import org.springframework.security.oauth2.client.registration.InMemoryReactiveClientRegistrationRepository;",
                "// Line 44: import org.springframework.stereotype.Service;",
                "// Line 45: import org.springframework.util.Assert;",
                "// Line 46: import reactor.core.publisher.Mono;"
            ]
        },
        {
            "filename_of_changes": "ConnectorInfo.java",
            "code_language": "Java",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: package com.provectus.kafka.ui.service.integration.odd;",
                "// Line 2: ",
                "// Line 3: import com.provectus.kafka.ui.model.ConnectorTypeDTO;",
                "// Line 4: import java.util.ArrayList;",
                "// Line 5: import java.util.List;",
                "// Line 6: import java.util.Map;",
                "// Line 7: import java.util.Objects;",
                "// Line 8: import java.util.function.Function;",
                "// Line 9: import java.util.stream.Stream;",
                "// Line 10: import javax.annotation.Nullable;",
                "// vulnerable line: 11: import org.apache.commons.collections.CollectionUtils;",
                "// Line 12: import org.opendatadiscovery.oddrn.JdbcUrlParser;",
                "// Line 13: import org.opendatadiscovery.oddrn.model.HivePath;",
                "// Line 14: import org.opendatadiscovery.oddrn.model.MysqlPath;",
                "// Line 15: import org.opendatadiscovery.oddrn.model.PostgreSqlPath;",
                "// Line 16: import org.opendatadiscovery.oddrn.model.SnowflakePath;",
                "// Line 17: ",
                "// Line 18: record ConnectorInfo(List<String> inputs,",
                "// Line 19:                      List<String> outputs) {",
                "// Line 20: ",
                "// Line 21:   static ConnectorInfo extract(String className,"
            ]
        },
        {
            "filename_of_changes": "Permission.java",
            "code_language": "Java",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 16: import com.provectus.kafka.ui.model.rbac.permission.SchemaAction;",
                "// Line 17: import com.provectus.kafka.ui.model.rbac.permission.TopicAction;",
                "// Line 18: import java.util.Arrays;",
                "// Line 19: import java.util.Collections;",
                "// Line 20: import java.util.List;",
                "// Line 21: import java.util.regex.Pattern;",
                "// Line 22: import javax.annotation.Nullable;",
                "// Line 23: import lombok.EqualsAndHashCode;",
                "// Line 24: import lombok.Getter;",
                "// Line 25: import lombok.ToString;",
                "// vulnerable line: 26: import org.apache.commons.collections.CollectionUtils;",
                "// Line 27: import org.springframework.util.Assert;",
                "// Line 28: ",
                "// Line 29: @Getter",
                "// Line 30: @ToString",
                "// Line 31: @EqualsAndHashCode",
                "// Line 32: public class Permission {",
                "// Line 33: ",
                "// Line 34:   private static final List<Resource> RBAC_ACTION_EXEMPT_LIST =",
                "// Line 35:       List.of(KSQL, CLUSTERCONFIG, APPLICATIONCONFIG, ACL, AUDIT);",
                "// Line 36: "
            ]
        }
    ]
}