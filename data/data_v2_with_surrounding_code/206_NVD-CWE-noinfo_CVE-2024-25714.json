{
    "cve_id": "CVE-2024-25714",
    "cve_description": "In Rhonabwy through 1.1.13, HMAC signature verification uses a strcmp function that is vulnerable to side-channel attacks, because it stops the comparison when the first difference is spotted in the two signatures. (The fix uses gnutls_memcmp, which has constant-time execution.)",
    "cve_publish_date": "2024-02-11T03:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Mitigate HMAC signature side-channel attack\n\nThanks to Erwan Legrand",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "jws.c",
            "code_language": "C",
            "number_of_lines_added_for_mitigation": "4",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 472:   (void)(jwk);",
                "// Line 473:   return NULL;",
                "// Line 474: #endif",
                "// Line 475: }",
                "// Line 476: #endif",
                "// Line 477: ",
                "// Line 478: static int r_jws_verify_sig_hmac(jws_t * jws, jwk_t * jwk) {",
                "// Line 479:   unsigned char * sig = r_jws_sign_hmac(jws, jwk);",
                "// Line 480:   int ret;",
                "// Line 481: ",
                "// vulnerable line: 482: if (sig != NULL && 0 == o_strcmp((const char *)jws->signature_b64url, (const char *)sig)) {",
                "// Line 483:     ret = RHN_OK;",
                "// Line 484:   } else {",
                "// Line 485:     ret = RHN_ERROR_INVALID;",
                "// Line 486:   }",
                "// Line 487:   o_free(sig);",
                "// Line 488:   return ret;",
                "// Line 489: }",
                "// Line 490: ",
                "// Line 491: static int r_jws_verify_sig_rsa(jws_t * jws, jwk_t * jwk, int x5u_flags) {",
                "// Line 492:   int alg = GNUTLS_DIG_NULL, ret = RHN_OK;"
            ]
        }
    ]
}