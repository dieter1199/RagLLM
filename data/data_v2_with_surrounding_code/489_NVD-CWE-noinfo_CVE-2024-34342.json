{
    "cve_id": "CVE-2024-34342",
    "cve_description": "react-pdf displays PDFs in React apps. If PDF.js is used to load a malicious PDF, and PDF.js is configured with `isEvalSupported` set to `true` (which is the default value), unrestricted attacker-controlled JavaScript will be executed in the context of the hosting domain. This vulnerability is fixed in 7.7.3 and 8.0.2.",
    "cve_publish_date": "2024-05-07T15:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Force isEvalSupported to false\n\nFixes [GHSA-wgrm-67xf-hhpq](https://github.com/mozilla/pdf.js/security/advisories/GHSA-wgrm-67xf-hhpq)",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "Document.tsx",
            "code_language": "TypeScript",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 498:     pdfDispatch({ type: 'RESET' });",
                "// Line 499:   }",
                "// Line 500: ",
                "// Line 501:   useEffect(resetDocument, [pdfDispatch, source]);",
                "// Line 502: ",
                "// Line 503:   function loadDocument() {",
                "// Line 504:     if (!source) {",
                "// Line 505:       return;",
                "// Line 506:     }",
                "// Line 507: ",
                "// vulnerable line: 508: const optionsWithModifiedIsEvalSupported: Options = { ...options, isEvalSupported: true };",
                "// Line 509: ",
                "// Line 510:     const documentInitParams: Source = {",
                "// Line 511:       ...source,",
                "// Line 512:       ...optionsWithModifiedIsEvalSupported,",
                "// Line 513:     };",
                "// Line 514: ",
                "// Line 515:     const destroyable = pdfjs.getDocument(documentInitParams);",
                "// Line 516:     if (onLoadProgress) {",
                "// Line 517:       destroyable.onProgress = onLoadProgress;",
                "// Line 518:     }"
            ]
        }
    ]
}