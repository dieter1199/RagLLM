{
    "cve_id": "CVE-2024-34701",
    "cve_description": "CreateWiki is Miraheze's MediaWiki extension for requesting & creating wikis. It is possible for users to be considered as the requester of a specific wiki request if their local user ID on any wiki in a wiki farm matches the local ID of the requester at the wiki where the wiki request was made. This allows them to go to that request entry's on Special:RequestWikiQueue on the wiki where their local user ID matches and take any actions that the wiki requester is allowed to take from there.\n\nCommit 02e0f298f8d35155c39aa74193cb7b867432c5b8 fixes the issue. Important note about the fix: This vulnerability has been fixed by disabling access to the REST API and special pages outside of the wiki configured as the \"global wiki\" in `$wgCreateWikiGlobalWiki` in a user's MediaWiki settings.\n\nAs a workaround, it is possible to disable the special pages outside of one's own global wiki by doing something similar to `miraheze/mw-config` commit e5664995fbb8644f9a80b450b4326194f20f9ddc that is adapted to one's own setup. As for the REST API, before the fix, there wasn't any REST endpoint that allowed one to make writes. Regardless, it is possible to also disable it outside of the global wiki by using `$wgCreateWikiDisableRESTAPI` and `$wgConf` in the configuration for one's own wiki farm..",
    "cve_publish_date": "2024-05-14T15:39Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "T12011: Disable the special pages and API outside of the global wiki (#519)\n\nhttps://issue-tracker.miraheze.org/T12011",
    "type_of_change": "Addition",
    "changes": [
        {
            "filename_of_changes": "EntryPointUtils.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "17",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "RestUtils.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "24",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "RestWikiRequest.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 31:      * @param UserFactory $userFactory",
                "// Line 32:      */",
                "// Line 33:     public function __construct(",
                "// Line 34:         ConfigFactory $configFactory,",
                "// Line 35:         ILBFactory $dbLoadBalancerFactory,",
                "// Line 36:         UserFactory $userFactory",
                "// Line 37:     ) {",
                "// Line 38:         $this->config = $configFactory->makeConfig( 'CreateWiki' );",
                "// Line 39:         $this->dbLoadBalancerFactory = $dbLoadBalancerFactory;",
                "// Line 40:         $this->userFactory = $userFactory;",
                "// vulnerable line: 41: }",
                "// Line 42: ",
                "// Line 43:     public function run( $requestID ) {",
                "// vulnerable line: 44: if ( $this->config->get( 'CreateWikiDisableRESTAPI' ) ) {",
                "// vulnerable line: 45: return $this->getResponseFactory()->createLocalizedHttpError( 403, new MessageValue( 'createwiki-rest-disabled' ) );",
                "// vulnerable line: 46: }",
                "// Line 47:         // Should be kept in sync with RequestWikiRequestViewer's $visibilityConds",
                "// Line 48:         $visibilityConds = [",
                "// Line 49:             0 => 'public',",
                "// Line 50:             1 => 'createwiki-deleterequest',",
                "// Line 51:             2 => 'createwiki-suppressrequest',",
                "// Line 52:         ];",
                "// Line 53:         $dbr = $this->dbLoadBalancerFactory->getMainLB( $this->config->get( 'CreateWikiGlobalWiki' ) )",
                "// Line 54:             ->getMaintenanceConnectionRef( DB_REPLICA, [], $this->config->get( 'CreateWikiGlobalWiki' ) );",
                "// Line 55:         $wikiRequest = $dbr->selectRow(",
                "// Line 56:             'cw_requests',",
                "// Line 57:             '*',",
                "// Line 58:             [",
                "// Line 59:                 'cw_id' => $requestID,",
                "// Line 60:             ],",
                "// Line 61:             __METHOD__",
                "// Line 62:         );",
                "// Line 63:         if ( $wikiRequest ) {",
                "// Line 64:             // T12010: 3 is a legacy suppression level, treat is as a suppressed wiki request",
                "// Line 65:             if ( $wikiRequest->cw_visibility >= 3 ) {",
                "// Line 66:                 return $this->getResponseFactory()->createLocalizedHttpError( 404, new MessageValue( 'requestwiki-unknown' ) );",
                "// vulnerable line: 67: }",
                "// Line 68: ",
                "// Line 69:             $wikiRequestVisibility = $visibilityConds[$wikiRequest->cw_visibility];",
                "// Line 70: ",
                "// Line 71:             if ( $wikiRequestVisibility !== 'public' ) {",
                "// Line 72:                 if ( !$this->getAuthority()->isAllowed( $wikiRequestVisibility ) ) {",
                "// Line 73:                     // User does not have permission to view this request",
                "// Line 74:                     return $this->getResponseFactory()->createLocalizedHttpError( 404, new MessageValue( 'requestwiki-unknown' ) );",
                "// vulnerable line: 75: }",
                "// vulnerable line: 76: }",
                "// Line 77: ",
                "// Line 78:             $response = [",
                "// Line 79:                 'comment' => $wikiRequest->cw_comment,",
                "// Line 80:                 'dbname' => $wikiRequest->cw_dbname,",
                "// Line 81:                 'language' => $wikiRequest->cw_language,",
                "// Line 82:                 'sitename' => $wikiRequest->cw_sitename,",
                "// Line 83:                 'status' => $wikiRequest->cw_status,",
                "// Line 84:                 'timestamp' => wfTimestamp( TS_ISO_8601, $wikiRequest->cw_timestamp ),",
                "// Line 85:                 'url' => $wikiRequest->cw_url,",
                "// Line 86:                 'requester' => $this->userFactory->newFromId( $wikiRequest->cw_user )->getName(),",
                "// Line 99:                     'cw_comment_timestamp DESC',",
                "// Line 100:                 ]",
                "// Line 101:             );",
                "// Line 102:             $wikiRequestComments = [];",
                "// Line 103:             foreach ( $wikiRequestCwComments as $comment ) {",
                "// Line 104:                 $wikiRequestComments[] = [",
                "// Line 105:                     'comment' => $comment->cw_comment,",
                "// Line 106:                     'timestamp' => wfTimestamp( TS_ISO_8601, $comment->cw_comment_timestamp ),",
                "// Line 107:                     'user' => $this->userFactory->newFromId( $comment->cw_comment_user )->getName(),",
                "// Line 108:                 ];",
                "// vulnerable line: 109: }",
                "// Line 110:             // We now have all the data we need, add the comments to $response and return",
                "// Line 111:             $response['comments'] = $wikiRequestComments;",
                "// Line 112:             return $this->getResponseFactory()->createJson( $response );",
                "// vulnerable line: 113: }",
                "// Line 114:         // Request does not exist",
                "// Line 115:         return $this->getResponseFactory()->createLocalizedHttpError( 404, new MessageValue( 'requestwiki-unknown' ) );",
                "// vulnerable line: 116: }",
                "// Line 117: ",
                "// Line 118:     public function needsWriteAccess() {",
                "// Line 119:         return false;",
                "// vulnerable line: 120: }",
                "// Line 121: ",
                "// Line 122:     public function getParamSettings() {",
                "// Line 123:         return [",
                "// Line 124:             'id' => [",
                "// Line 125:                 self::PARAM_SOURCE => 'path',",
                "// Line 126:                 ParamValidator::PARAM_TYPE => 'integer',",
                "// Line 127:                 ParamValidator::PARAM_REQUIRED => true,",
                "// Line 128:             ],",
                "// Line 129:         ];",
                "// vulnerable line: 130: }",
                "// vulnerable line: 131: }"
            ]
        },
        {
            "filename_of_changes": "RestWikiRequestsByUser.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 31:      * @param UserFactory $userFactory",
                "// Line 32:      */",
                "// Line 33:     public function __construct(",
                "// Line 34:         ConfigFactory $configFactory,",
                "// Line 35:         ILBFactory $dbLoadBalancerFactory,",
                "// Line 36:         UserFactory $userFactory",
                "// Line 37:     ) {",
                "// Line 38:         $this->config = $configFactory->makeConfig( 'CreateWiki' );",
                "// Line 39:         $this->dbLoadBalancerFactory = $dbLoadBalancerFactory;",
                "// Line 40:         $this->userFactory = $userFactory;",
                "// vulnerable line: 41: }",
                "// Line 42: ",
                "// Line 43:     public function run( $userName ) {",
                "// vulnerable line: 44: if ( $this->config->get( 'CreateWikiDisableRESTAPI' ) ) {",
                "// vulnerable line: 45: return $this->getResponseFactory()->createLocalizedHttpError( 403, new MessageValue( 'createwiki-rest-disabled' ) );",
                "// vulnerable line: 46: }",
                "// Line 47:         // Should be kept in sync with RequestWikiRequestViewer's $visibilityConds",
                "// Line 48:         $visibilityConds = [",
                "// Line 49:             0 => 'public',",
                "// Line 50:             1 => 'createwiki-deleterequest',",
                "// Line 51:             2 => 'createwiki-suppressrequest',",
                "// Line 52:         ];",
                "// Line 53:         $dbr = $this->dbLoadBalancerFactory->getMainLB( $this->config->get( 'CreateWikiGlobalWiki' ) )",
                "// Line 54:             ->getMaintenanceConnectionRef( DB_REPLICA, [], $this->config->get( 'CreateWikiGlobalWiki' ) );",
                "// Line 55:         $wikiRequestsArray = [];",
                "// Line 56:         $userID = $this->userFactory->newFromName( $userName )->getId();",
                "// Line 63:             [",
                "// Line 64:                 'cw_user' => $userID,",
                "// Line 65:             ],",
                "// Line 66:             __METHOD__",
                "// Line 67:         );",
                "// Line 68:         if ( $wikiRequests ) {",
                "// Line 69:             foreach ( $wikiRequests as $wikiRequest ) {",
                "// Line 70:                 // T12010: 3 is a legacy suppression level, treat is as a suppressed wiki request",
                "// Line 71:                 if ( $wikiRequest->cw_visibility >= 3 ) {",
                "// Line 72:                     continue;",
                "// vulnerable line: 73: }",
                "// Line 74: ",
                "// Line 75:                 $wikiRequestVisibility = $visibilityConds[$wikiRequest->cw_visibility];",
                "// Line 76: ",
                "// Line 77:                 if ( $wikiRequestVisibility !== 'public' ) {",
                "// Line 78:                     if ( !$this->getAuthority()->isAllowed( $wikiRequestVisibility ) ) {",
                "// Line 79:                         // User does not have permission to view this request",
                "// Line 80:                         continue;",
                "// vulnerable line: 81: }",
                "// vulnerable line: 82: }",
                "// Line 83: ",
                "// Line 84:                 $wikiRequestsArray[] = ['id' => (int)$wikiRequest->cw_id, 'visibility' => $wikiRequestVisibility];",
                "// vulnerable line: 85: }",
                "// Line 86: ",
                "// Line 87:             if ( count( $wikiRequestsArray ) === 0 ) {",
                "// Line 88:                 // This user _has_ made wiki requests, but these are suppressed wiki requests and the user making this request doesn't have permission to view them",
                "// Line 89:                 return $this->getResponseFactory()->createLocalizedHttpError( 404, new MessageValue( 'createwiki-rest-usernowikirequests' ) );",
                "// vulnerable line: 90: }",
                "// Line 91:             return $this->getResponseFactory()->createJson( $wikiRequestsArray );",
                "// vulnerable line: 92: }",
                "// Line 93:         // This user has never made a wiki request",
                "// Line 94:         return $this->getResponseFactory()->createLocalizedHttpError( 404, new MessageValue( 'createwiki-rest-usernowikirequests' ) );",
                "// vulnerable line: 95: }",
                "// Line 96: ",
                "// Line 97:     public function needsWriteAccess() {",
                "// Line 98:         return false;",
                "// vulnerable line: 99: }",
                "// Line 100: ",
                "// Line 101:     public function getParamSettings() {",
                "// Line 102:         return [",
                "// Line 103:             'username' => [",
                "// Line 104:                 self::PARAM_SOURCE => 'path',",
                "// Line 105:                 ParamValidator::PARAM_TYPE => 'string',",
                "// Line 106:                 ParamValidator::PARAM_REQUIRED => true,",
                "// Line 107:             ],",
                "// Line 108:         ];",
                "// vulnerable line: 109: }",
                "// vulnerable line: 110: }"
            ]
        },
        {
            "filename_of_changes": "SpecialCreateWiki.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "11",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "SpecialRequestWiki.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "7",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "SpecialRequestWikiQueue.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "8",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "SpecialRequestWikiTest.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "3",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        }
    ]
}