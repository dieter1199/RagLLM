{
    "cve_id": "CVE-2024-31585",
    "cve_description": "FFmpeg version n5.1 to n6.1 was discovered to contain an Off-by-one Error vulnerability in libavfilter/avf_showspectrum.c. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted input.",
    "cve_publish_date": "2024-04-17T19:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "avfilter/avf_showspectrum: fix off by 1 error\n\nFixes: out of array access\nFixes: tickets/10749/poc15ffmpeg\n\nRegression since: 81df787b53eb5c6433731f6eaaf7f2a94d8a8c80\n\nFound-by: Zeng Yunxiang\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "avf_showspectrum.c",
            "code_language": "C",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1782:         spb = (s->samples / (spf * sz)) * spf;",
                "// Line 1783: ",
                "// Line 1784:         fin = ff_get_audio_buffer(inlink, spf);",
                "// Line 1785:         if (!fin)",
                "// Line 1786:             return AVERROR(ENOMEM);",
                "// Line 1787: ",
                "// Line 1788:         while (x < sz) {",
                "// Line 1789:             int acc_samples = 0;",
                "// Line 1790:             int dst_offset = 0;",
                "// Line 1791: ",
                "// vulnerable line: 1792: while (nb_frame <= s->nb_frames) {",
                "// Line 1793:                 AVFrame *cur_frame = s->frames[nb_frame];",
                "// Line 1794:                 int cur_frame_samples = cur_frame->nb_samples;",
                "// Line 1795:                 int nb_samples = 0;",
                "// Line 1796: ",
                "// Line 1797:                 if (acc_samples < spf) {",
                "// Line 1798:                     nb_samples = FFMIN(spf - acc_samples, cur_frame_samples - src_offset);",
                "// Line 1799:                     acc_samples += nb_samples;",
                "// Line 1800:                     av_samples_copy(fin->extended_data, cur_frame->extended_data,",
                "// Line 1801:                                     dst_offset, src_offset, nb_samples,",
                "// Line 1802:                                     cur_frame->ch_layout.nb_channels, AV_SAMPLE_FMT_FLTP);"
            ]
        }
    ]
}