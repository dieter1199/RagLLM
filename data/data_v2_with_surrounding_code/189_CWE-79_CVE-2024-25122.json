{
    "cve_id": "CVE-2024-25122",
    "cve_description": "sidekiq-unique-jobs is an open source project which prevents simultaneous Sidekiq jobs with the same unique arguments to run. Specially crafted GET request parameters handled by any of the following endpoints of sidekiq-unique-jobs' \"admin\" web UI, allow a super-user attacker, or an unwitting, but authorized, victim, who has received a disguised / crafted link, to successfully execute malicious code, which could potentially steal cookies, session data, or local storage data from the app the sidekiq-unique-jobs web UI is mounted in. 1. `/changelogs`, 2. `/locks` or 3. `/expiring_locks`. This issue has been addressed in versions 7.1.33 and 8.0.7. Users are advised to upgrade. There are no known workarounds for this vulnerability.\n",
    "cve_publish_date": "2024-02-13T19:15Z",
    "cwe_id": "CWE-79",
    "cwe_name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "cwe_description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
    "commit_message": "fix(xss): sanitize parameters (#829)",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "web.rb",
            "code_language": "Ruby",
            "number_of_lines_added_for_mitigation": "16",
            "number_of_lines_deleted_vulnerable_to_cve": "16",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 6:   # Utility module to help manage unique keys in redis.",
                "// Line 7:   # Useful for deleting keys that for whatever reason wasn't deleted",
                "// Line 8:   # @author Mikael Henriksson <mikael@mhenrixon.com>",
                "// Line 9:   module Web",
                "// Line 10:     def self.registered(app) # rubocop:disable Metrics/MethodLength, Metrics/AbcSize, Metrics/CyclomaticComplexity, Metrics/PerceivedComplexity",
                "// Line 11:       app.helpers do",
                "// Line 12:         include Web::Helpers",
                "// Line 13:       end",
                "// Line 14: ",
                "// Line 15:       app.get \"/changelogs\" do",
                "// vulnerable line: 16: @filter         = params[:filter] || \"*\"",
                "// Line 17:         @filter         = \"*\" if @filter == \"\"",
                "// vulnerable line: 18: @count          = (params[:count] || 100).to_i",
                "// vulnerable line: 19: @current_cursor = params[:cursor].to_i",
                "// vulnerable line: 20: @prev_cursor    = params[:prev_cursor].to_i",
                "// Line 21:         @total_size, @next_cursor, @changelogs = changelog.page(",
                "// Line 22:           cursor: @current_cursor,",
                "// Line 23:           pattern: @filter,",
                "// Line 24:           page_size: @count,",
                "// Line 25:         )",
                "// Line 26: ",
                "// Line 27:         erb(unique_template(:changelogs))",
                "// Line 28:       end",
                "// Line 29: ",
                "// Line 30:       app.get \"/changelogs/delete_all\" do",
                "// Line 31:         changelog.clear",
                "// Line 32:         redirect_to :changelogs",
                "// Line 33:       end",
                "// Line 34: ",
                "// Line 35:       app.get \"/locks\" do",
                "// vulnerable line: 36: @filter         = params[:filter] || \"*\"",
                "// Line 37:         @filter         = \"*\" if @filter == \"\"",
                "// vulnerable line: 38: @count          = (params[:count] || 100).to_i",
                "// vulnerable line: 39: @current_cursor = params[:cursor].to_i",
                "// vulnerable line: 40: @prev_cursor    = params[:prev_cursor].to_i",
                "// Line 41: ",
                "// Line 42:         @total_size, @next_cursor, @locks = digests.page(",
                "// Line 43:           cursor: @current_cursor,",
                "// Line 44:           pattern: @filter,",
                "// Line 45:           page_size: @count,",
                "// Line 46:         )",
                "// Line 47: ",
                "// Line 48:         erb(unique_template(:locks))",
                "// Line 49:       end",
                "// Line 50: ",
                "// Line 51:       app.get \"/expiring_locks\" do",
                "// vulnerable line: 52: @filter         = params[:filter] || \"*\"",
                "// Line 53:         @filter         = \"*\" if @filter == \"\"",
                "// vulnerable line: 54: @count          = (params[:count] || 100).to_i",
                "// vulnerable line: 55: @current_cursor = params[:cursor].to_i",
                "// vulnerable line: 56: @prev_cursor    = params[:prev_cursor].to_i",
                "// Line 57: ",
                "// Line 58:         @total_size, @next_cursor, @locks = expiring_digests.page(",
                "// Line 59:           cursor: @current_cursor,",
                "// Line 60:           pattern: @filter,",
                "// Line 61:           page_size: @count,",
                "// Line 62:         )",
                "// Line 63: ",
                "// Line 64:         erb(unique_template(:locks))",
                "// Line 65:       end",
                "// Line 66: ",
                "// Line 67:       app.get \"/locks/delete_all\" do",
                "// Line 68:         digests.delete_by_pattern(\"*\", count: digests.count)",
                "// Line 69:         expiring_digests.delete_by_pattern(\"*\", count: digests.count)",
                "// Line 70:         redirect_to :locks",
                "// Line 71:       end",
                "// Line 72: ",
                "// Line 73:       app.get \"/locks/:digest\" do",
                "// vulnerable line: 74: @digest = params[:digest]",
                "// Line 75:         @lock   = SidekiqUniqueJobs::Lock.new(@digest)",
                "// Line 76: ",
                "// Line 77:         erb(unique_template(:lock))",
                "// Line 78:       end",
                "// Line 79: ",
                "// Line 80:       app.get \"/locks/:digest/delete\" do",
                "// vulnerable line: 81: digests.delete_by_digest(params[:digest])",
                "// vulnerable line: 82: expiring_digests.delete_by_digest(params[:digest])",
                "// Line 83:         redirect_to :locks",
                "// Line 84:       end",
                "// Line 85: ",
                "// Line 86:       app.get \"/locks/:digest/jobs/:job_id/delete\" do",
                "// vulnerable line: 87: @digest = params[:digest]",
                "// Line 88:         @lock   = SidekiqUniqueJobs::Lock.new(@digest)",
                "// Line 89:         @lock.unlock(params[:job_id])",
                "// Line 90: ",
                "// Line 91:         redirect_to \"locks/#{@lock.key}\"",
                "// Line 92:       end",
                "// Line 93:     end",
                "// Line 94:   end",
                "// Line 95: end",
                "// Line 96: ",
                "// Line 97: begin"
            ]
        }
    ]
}