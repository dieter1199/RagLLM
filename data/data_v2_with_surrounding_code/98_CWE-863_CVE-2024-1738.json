{
    "cve_id": "CVE-2024-1738",
    "cve_description": "An incorrect authorization vulnerability exists in the lunary-ai/lunary repository, specifically within the evaluations.get route in the evaluations API endpoint. This vulnerability allows unauthorized users to retrieve the results of any organization's evaluation by simply knowing the evaluation ID, due to the lack of project ID verification in the SQL query. As a result, attackers can gain access to potentially private data contained within the evaluation results.",
    "cve_publish_date": "2024-04-16T00:15Z",
    "cwe_id": "CWE-863",
    "cwe_name": "Incorrect Authorization",
    "cwe_description": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check. This allows attackers to bypass intended access restrictions.",
    "commit_message": "fix: get evaluation result (#181)",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "index.ts",
            "code_language": "TypeScript",
            "number_of_lines_added_for_mitigation": "13",
            "number_of_lines_deleted_vulnerable_to_cve": "9",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 119:   },",
                "// Line 120: )",
                "// Line 121: ",
                "// Line 122: evaluations.get(",
                "// Line 123:   \"/result/:evaluationId\",",
                "// Line 124:   checkAccess(\"evaluations\", \"read\"),",
                "// Line 125:   async (ctx: Context) => {",
                "// Line 126:     const { evaluationId } = ctx.params",
                "// Line 127: ",
                "// Line 128:     const results = await sql`",
                "// vulnerable line: 129: select ",
                "// vulnerable line: 130: *,",
                "// vulnerable line: 131: p.id as prompt_id",
                "// vulnerable line: 132: from ",
                "// vulnerable line: 133: evaluation_result er ",
                "// vulnerable line: 134: left join dataset_prompt p on p.id = er.prompt_id",
                "// vulnerable line: 135: left join dataset_prompt_variation pv on pv.id = er.variation_id",
                "// vulnerable line: 136: where ",
                "// vulnerable line: 137: er.evaluation_id = ${evaluationId}`",
                "// Line 138: ",
                "// Line 139:     ctx.body = results",
                "// Line 140:   },",
                "// Line 141: )",
                "// Line 142: ",
                "// Line 143: evaluations.get(",
                "// Line 144:   \"/\",",
                "// Line 145:   checkAccess(\"evaluations\", \"list\"),",
                "// Line 146:   async (ctx: Context) => {",
                "// Line 147:     const { projectId } = ctx.state"
            ]
        }
    ]
}