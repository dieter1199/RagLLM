{
    "cve_id": "CVE-2024-34077",
    "cve_description": "MantisBT (Mantis Bug Tracker) is an open source issue tracker. Insufficient access control in the registration and password reset process allows an attacker to reset another user's password and takeover their account, if the victim has an incomplete request pending. The exploit is only possible while the verification token is valid, i.e for 5 minutes after the confirmation URL sent by e-mail has been opened, and the user did not complete the process by updating their password. A brute-force attack calling account_update.php with increasing user IDs is possible. A successful takeover would grant the attacker full access to the compromised account, including sensitive information and functionalities associated with the account, the extent of which depends on its privileges and the data it has access to. Version 2.26.2 contains a patch for the issue. As a workaround, one may mitigate the risk by reducing the verification token's validity (change the value of the `TOKEN_EXPIRY_AUTHENTICATED` constant in `constants_inc.php`).",
    "cve_publish_date": "2024-05-14T15:38Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Validate confirm hash when updating account\n\nThis prevents an attacker from resetting another user's password if they\nhave an incomplete account validation or password reset request pending.\n\nFixes #34433, CVE-2024-xxxxx",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "account_update.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "19",
            "number_of_lines_deleted_vulnerable_to_cve": "8",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 53: require_api( 'gpc_api.php' );",
                "// Line 54: require_api( 'html_api.php' );",
                "// Line 55: require_api( 'lang_api.php' );",
                "// Line 56: require_api( 'print_api.php' );",
                "// Line 57: require_api( 'string_api.php' );",
                "// Line 58: require_api( 'user_api.php' );",
                "// Line 59: require_api( 'utility_api.php' );",
                "// Line 60: ",
                "// Line 61: form_security_validate( 'account_update' );",
                "// Line 62: ",
                "// vulnerable line: 63: # If token is set, it's a password reset request from verify.php, and if",
                "// vulnerable line: 64: # not we need to reauthenticate the user",
                "// vulnerable line: 65: $t_verify_user_id = gpc_get( 'verify_user_id', false );",
                "// vulnerable line: 66: $t_account_verification = $t_verify_user_id ? token_get_value( TOKEN_ACCOUNT_VERIFY, $t_verify_user_id ) : false;",
                "// vulnerable line: 67: if( !$t_account_verification ) {",
                "// vulnerable line: 68: auth_reauthenticate();",
                "// vulnerable line: 69: $t_user_id = auth_get_current_user_id();",
                "// vulnerable line: 70: } else {",
                "// Line 71:     # set a temporary cookie so the login information is passed between pages.",
                "// Line 72:     auth_set_cookies( $t_verify_user_id );",
                "// Line 73:     # fake login so the user can set their password",
                "// Line 74:     auth_attempt_script_login( user_get_username( $t_verify_user_id ) );",
                "// Line 75:     $t_user_id = $t_verify_user_id;",
                "// Line 76: }",
                "// Line 77: ",
                "// Line 78: auth_ensure_user_authenticated();",
                "// Line 79: current_user_ensure_unprotected();",
                "// Line 80: ",
                "// Line 119: ",
                "// Line 120: # Update password if the two match and are not empty",
                "// Line 121: if( !is_blank( $f_password ) ) {",
                "// Line 122:     if( $f_password != $f_password_confirm ) {",
                "// Line 123:         if( $t_account_verification ) {",
                "// Line 124:             # log out of the temporary login used by verification",
                "// Line 125:             auth_clear_cookies();",
                "// Line 126:             auth_logout();",
                "// Line 127:         }",
                "// Line 128:         trigger_error( ERROR_USER_CREATE_PASSWORD_MISMATCH, ERROR );",
                "// vulnerable line: 129: } else {",
                "// Line 130:         if( !$t_account_verification && !auth_does_password_match( $t_user_id, $f_password_current ) ) {",
                "// Line 131:             trigger_error( ERROR_USER_CURRENT_PASSWORD_MISMATCH, ERROR );",
                "// Line 132:         }",
                "// Line 133: ",
                "// Line 134:         if( !auth_does_password_match( $t_user_id, $f_password ) ) {",
                "// Line 135:             $t_update_password = true;",
                "// Line 136:         }",
                "// Line 137:     }",
                "// Line 138: }",
                "// Line 139: "
            ]
        },
        {
            "filename_of_changes": "verify.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        }
    ]
}