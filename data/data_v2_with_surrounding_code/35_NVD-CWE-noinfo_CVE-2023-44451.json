{
    "cve_id": "CVE-2023-44451",
    "cve_description": "Linux Mint Xreader EPUB File Parsing Directory Traversal Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Linux Mint Xreader. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file.\n\nThe specific flaw exists within the parsing of EPUB files. The issue results from the lack of proper validation of a user-supplied path prior to using it in file operations. An attacker can leverage this vulnerability to execute code in the context of the current user. Was ZDI-CAN-21897.",
    "cve_publish_date": "2024-05-03T03:16Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "epub: Prevent path traversal when extracting files [CVE-2023-44451]\n\nTest each file's resolved path against the temporary directory\nbefore extracting.\n\nFixes:\nCVE-2023-44451 - Linux Mint Xreader EPUB File Parsing Directory\nTraversal Remote Code Execution Vulnerability.\n\nThis vulnerability was discovered by:\nFebin Mon Saji working with Trend Micro Zero Day Initiative",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "epub-document.c",
            "code_language": "C",
            "number_of_lines_added_for_mitigation": "21",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 658:         g_set_error_literal (error,",
                "// Line 659:                      EV_DOCUMENT_ERROR,",
                "// Line 660:                      EV_DOCUMENT_ERROR_INVALID,",
                "// Line 661:                      _(\"Not an ePub document\"));",
                "// Line 662: ",
                "// Line 663:         return FALSE;",
                "// Line 664:     }",
                "// Line 665: }",
                "// Line 666: ",
                "// Line 667: static gboolean",
                "// vulnerable line: 668: extract_one_file(EpubDocument* epub_document,GError ** error)",
                "// Line 669: {",
                "// Line 670:     GFile * outfile ;",
                "// Line 671:     gsize writesize = 0;",
                "// Line 672:     GString * gfilepath ;",
                "// Line 673:     unz_file_info64 info ;",
                "// Line 674:     gchar* directory;",
                "// Line 675:     GString* dir_create;",
                "// Line 676:     GFileOutputStream * outstream ;",
                "// Line 677: ",
                "// Line 678:     if ( unzOpenCurrentFile(epub_document->epubDocument) != UNZ_OK )",
                "// Line 716:         (*createdirnametemp) = '\u0000';",
                "// Line 717: ",
                "// Line 718:         dir_create = g_string_new(epub_document->tmp_archive_dir);",
                "// Line 719:         g_string_append_printf(dir_create,\"/%s\",createdirname);",
                "// Line 720:         g_free(createdirname);",
                "// Line 721: ",
                "// Line 722:         g_mkdir_with_parents(dir_create->str,0777);",
                "// Line 723:         g_string_free(dir_create,TRUE);",
                "// Line 724:     }",
                "// Line 725: ",
                "// vulnerable line: 726: outfile = g_file_new_for_path(gfilepath->str);",
                "// Line 727:     outstream = g_file_create(outfile,G_FILE_CREATE_PRIVATE,NULL,error);",
                "// Line 728:     gpointer buffer = g_malloc0(512);",
                "// Line 729:     while ( (writesize = unzReadCurrentFile(epub_document->epubDocument,buffer,512) ) != 0 )",
                "// Line 730:     {",
                "// Line 731:         if ( g_output_stream_write((GOutputStream*)outstream,buffer,writesize,NULL,error) == -1 )",
                "// Line 732:         {",
                "// Line 733:             result = FALSE;",
                "// Line 734:             break;",
                "// Line 735:         }",
                "// Line 736:     }",
                "// Line 807:             g_set_error_literal (error,",
                "// Line 808:                          EV_DOCUMENT_ERROR,",
                "// Line 809:                          EV_DOCUMENT_ERROR_INVALID,",
                "// Line 810:                          _(\"could not extract archive\"));",
                "// Line 811:         }",
                "// Line 812:         goto out;",
                "// Line 813:     }",
                "// Line 814: ",
                "// Line 815:     while ( TRUE )",
                "// Line 816:     {",
                "// vulnerable line: 817: if ( extract_one_file(epub_document,&err) == FALSE )",
                "// Line 818:         {",
                "// Line 819:             if (err) {",
                "// Line 820:                 g_propagate_error (error, err);",
                "// Line 821:             }",
                "// Line 822:             else    {",
                "// Line 823:                 g_set_error_literal (error,",
                "// Line 824:                              EV_DOCUMENT_ERROR,",
                "// Line 825:                              EV_DOCUMENT_ERROR_INVALID,",
                "// Line 826:                              _(\"could not extract archive\"));",
                "// Line 827:             }"
            ]
        }
    ]
}