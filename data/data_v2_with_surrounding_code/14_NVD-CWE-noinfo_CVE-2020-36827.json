{
    "cve_id": "CVE-2020-36827",
    "cve_description": "The XAO::Web module before 1.84 for Perl mishandles < and > characters in JSON output during use of json-embed in Web::Action.",
    "cve_publish_date": "2024-03-24T01:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "1.84 Security fix for json-embed in Web::Action\n\nEncoding <> characters in json output",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "Action.pm",
            "code_language": "Perl",
            "number_of_lines_added_for_mitigation": "10",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 309: ",
                "// Line 310:         $self->finaltextout($self->json->encode($data));",
                "// Line 311:     }",
                "// Line 312:     elsif($format eq 'js' || $format eq 'json-embed') {",
                "// Line 313: ",
                "// Line 314:         # The trick with embedded JSON is that it is printed as",
                "// Line 315:         # part of a larger page and as such has to be in characters that",
                "// Line 316:         # are then encoded into bytes of the page final encoding.",
                "// Line 317:         # JSON's to_json() call is exactly that, character output.",
                "// Line 318:         #",
                "// vulnerable line: 319: $self->textout(to_json($data));",
                "// Line 320:     }",
                "// Line 321:     elsif($format eq 'xml' || $format eq 'xml-embed') {",
                "// Line 322:         my $xml_sub=$self->get_mode_sub('xml',$args->{'xmlmode'} || $args->{'mode'},$args->{'mode'});",
                "// Line 323: ",
                "// Line 324:         my $xml=$xml_sub->($self,$args,{",
                "// Line 325:             data    => $data,",
                "// Line 326:         });",
                "// Line 327: ",
                "// Line 328:         if($format eq 'xml') {",
                "// Line 329:             $self->object(objname => 'Web::Header')->expand("
            ]
        },
        {
            "filename_of_changes": "Makefile.PL",
            "code_language": "Perl",
            "number_of_lines_added_for_mitigation": "3",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 86: use XAO::Base qw($homedir);",
                "// Line 87: ",
                "// Line 88: WriteMakefile(",
                "// Line 89:     'ABSTRACT'          => 'XAO Web Framework',",
                "// Line 90:     'AUTHOR'            => 'Andrew Maltsev, https://ejelta.com/xao/',",
                "// Line 91:     'NAME'              => 'XAO::Web',",
                "// Line 92:     'VERSION_FROM'      => 'Web.pm',",
                "// Line 93:     'MIN_PERL_VERSION'  => '5.10.1',",
                "// Line 94:     'LICENSE'           => 'artistic',",
                "// Line 95:     'CONFIGURE_REQUIRES'=> {",
                "// vulnerable line: 96: 'XAO::Base'                 => 1.27,",
                "// Line 97:         'ExtUtils::MakeMaker'       => 6.64,",
                "// Line 98:     },",
                "// Line 99:     'TEST_REQUIRES'     => {",
                "// vulnerable line: 100: 'XAO::Base'                 => 1.27,",
                "// Line 101:     },",
                "// Line 102:     'PREREQ_PM'     => {",
                "// Line 103:         'Authen::SASL::SASLprep'    => 1.1,",
                "// Line 104:         'CGI'                       => 4.50,",
                "// Line 105:         'CGI::Cookie'               => 4.50,",
                "// Line 106:         'CGI::PSGI'                 => 0.15,",
                "// Line 107:         'Crypt::Rijndael'           => 1.13,",
                "// Line 108:         'Data::Entropy::Algorithms' => 0.007,",
                "// Line 109:         'Digest::Bcrypt'            => 1.203,",
                "// Line 110:         'Digest::MD5'               => 2.13,",
                "// Line 115:         'Error'                     => 0.15,",
                "// Line 116:         'HTML::Entities'            => 3.69,",
                "// Line 117:         'HTTP::Response'            => 6.04,",
                "// Line 118:         'JSON'                      => 2.26,",
                "// Line 119:         'MIME::Base64'              => 3.14,",
                "// Line 120:         'MIME::Lite'                => 2.117,",
                "// Line 121:         'POSIX'                     => 1.16,",
                "// Line 122:         'Text::FormatTable'         => 0.01,",
                "// Line 123:         'Time::HiRes'               => 1.9719,",
                "// Line 124:         'Unicode::Normalize'        => 1.18,",
                "// vulnerable line: 125: 'XAO::Base'                 => 1.27,",
                "// Line 126:         'XAO::FS'                   => 1.21,",
                "// Line 127:     },",
                "// Line 128:     META_MERGE => {",
                "// Line 129:         'meta-spec' => { version => 2 },",
                "// Line 130:         resources => {",
                "// Line 131:             repository => {",
                "// Line 132:                 type    => 'git',",
                "// Line 133:                 url     => 'git://github.com/amaltsev/XAO-Web.git',",
                "// Line 134:                 web     => 'https://github.com/amaltsev/XAO-Web',",
                "// Line 135:             },"
            ]
        },
        {
            "filename_of_changes": "Page.pm",
            "code_language": "Perl",
            "number_of_lines_added_for_mitigation": "13",
            "number_of_lines_deleted_vulnerable_to_cve": "6",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 9: use Error qw(:try);",
                "// Line 10: use XAO::Errors qw(XAO::DO::Web::Page XAO::DO::Web::MyPage);",
                "// Line 11: ",
                "// Line 12: use base qw(XAO::testcases::Web::base);",
                "// Line 13: ",
                "// Line 14: ###############################################################################",
                "// Line 15: ",
                "// Line 16: sub test_expand_with_throw {",
                "// Line 17:     my $self=shift;",
                "// Line 18: ",
                "// vulnerable line: 19: my $page=XAO::Objects->new(objname => 'Web::Page');",
                "// Line 20:     $self->assert(ref($page),",
                "// Line 21:                   \"Can't load Page object\");",
                "// Line 22: ",
                "// Line 23:     my $exp1='[TextBefore]';",
                "// Line 24:     my $got1=$page->expand(template => $exp1);",
                "// Line 25: ",
                "// Line 26:     my $exp2='[A][Prefix][Error:Test Error][Suffix][D]';",
                "// Line 27:     my $got2=$page->expand(",
                "// Line 28:         'template'  => q([A]<%MyAction mode='catch-error' template='[B]<%MyAction mode=\"throw-error\" text=\"Test Error\"%>[C]'%>[D]),",
                "// Line 29:     );",
                "// Line 39: ",
                "// Line 40:     $self->assert($got3 eq $exp3,",
                "// Line 41:         \"Expected text #3 to be '$exp3' got '$got3'\");",
                "// Line 42: }",
                "// Line 43: ",
                "// Line 44: ###############################################################################",
                "// Line 45: ",
                "// Line 46: sub test_render_cache {",
                "// Line 47:     my $self=shift;",
                "// Line 48: ",
                "// vulnerable line: 49: my $page=XAO::Objects->new(objname => 'Web::Page');",
                "// Line 50:     $self->assert(ref($page),",
                "// Line 51:                   \"Can't load Page object\");",
                "// Line 52: ",
                "// Line 53:     my $have_memcached;",
                "// Line 54:     eval {",
                "// Line 55:         require Memcached::Client;",
                "// Line 56:         $have_memcached=1;",
                "// Line 57:     };",
                "// Line 58:     if($@) {",
                "// Line 59:         eval {",
                "// Line 137:         $self->assert($text1 eq $text3,",
                "// Line 138:             \"Expected to get identical text, got '$text1' != '$text3'\");",
                "// Line 139:     }",
                "// Line 140: }",
                "// Line 141: ",
                "// Line 142: ###############################################################################",
                "// Line 143: ",
                "// Line 144: sub test_params_digest {",
                "// Line 145:     my $self=shift;",
                "// Line 146: ",
                "// vulnerable line: 147: my $page=XAO::Objects->new(objname => 'Web::Page');",
                "// Line 148:     $self->assert(ref($page),",
                "// Line 149:                   \"Can't load Page object\");",
                "// Line 150: ",
                "// Line 151:     # Checking how parameters are processed",
                "// Line 152:     #",
                "// Line 153:     my @ptests=(",
                "// Line 154:         {   setup       => {",
                "// Line 155:                 param       => { foo => 'bar', path => '/bits/foo' },",
                "// Line 156:             },",
                "// Line 157:             spec        => '1',",
                "// Line 284: Have: '$params_json'",
                "// Line 285: \");",
                "// Line 286:     }",
                "// Line 287: }",
                "// Line 288: ",
                "// Line 289: ###############################################################################",
                "// Line 290: ",
                "// Line 291: sub test_cgi_param_charsets {",
                "// Line 292:     my $self=shift;",
                "// Line 293: ",
                "// vulnerable line: 294: my $page=XAO::Objects->new(objname => 'Web::Page');",
                "// Line 295:     $self->assert(ref($page),",
                "// Line 296:                   \"Can't load Page object\");",
                "// Line 297: ",
                "// Line 298:     my $cgi=$page->cgi;",
                "// Line 299:     $self->assert(ref($cgi),",
                "// Line 300:                   \"Can't get page->cgi\");",
                "// Line 301: ",
                "// Line 302:     $self->assert($cgi->isa('XAO::DO::CGI'),",
                "// Line 303:                   \"Expected CGI to be XAO::DO::CGI, got \".ref($cgi));",
                "// Line 304: ",
                "// Line 452:         $self->assert($got eq \"Test {2122}\",",
                "// Line 453:             \"Expected PSGI CGI param('ucode') to be 'Test {2122}', got '\".($got//'<undef>').\"'\");",
                "// Line 454:     }",
                "// Line 455: }",
                "// Line 456: ",
                "// Line 457: ###############################################################################",
                "// Line 458: ",
                "// Line 459: sub test_pass {",
                "// Line 460:     my $self=shift;",
                "// Line 461: ",
                "// vulnerable line: 462: my $page=XAO::Objects->new(objname => 'Web::Page');",
                "// Line 463:     $self->assert(ref($page),",
                "// Line 464:                   \"Can't load Page object\");",
                "// Line 465: ",
                "// Line 466:     my $template_simple=<<'EOT';",
                "// Line 467: <%Page",
                "// Line 468:   template={'<%SetArg name='FOO' value='IN'%><$FOO$>'}",
                "// Line 469:   pass",
                "// Line 470: %><%End%>",
                "// Line 471: EOT",
                "// Line 472: ",
                "// Line 846:             template    => qq(<%UniHex a={a<%Page template={b<%Page template=''%>}%>}%>),",
                "// Line 847:             expect      => '(a|6162e284a2|1)',",
                "// Line 848:         },",
                "// Line 849:         c15a => {",
                "// Line 850:             charmode    => 1,",
                "// Line 851:             template    => qq(<%Page template='&#8482;'%>),",
                "// Line 852:             expect      => '™',",
                "// Line 853:         },",
                "// Line 854:         c15b => {",
                "// Line 855:             template    => qq(<%Page template='&#8482;'%>),",
                "// vulnerable line: 856: expect      => Encode::encode_utf8('™'),",
                "// Line 857:         },",
                "// Line 858:         c15c => {",
                "// Line 859:             template    => qq(<%Page template='&#8482;'%>),",
                "// vulnerable line: 860: expect      => Encode::encode_utf8('™'),",
                "// Line 861:         },",
                "// Line 862:         #",
                "// Line 863:         d1a => {",
                "// Line 864:             template    => qq(<script><%MyAction datamode='test-alt' arg='Foo{2122}' format='json-embed'%></script>),",
                "// Line 865:             expect      => qr/Foo{2122}/,",
                "// Line 866:         },",
                "// Line 867:         d1b => {",
                "// Line 868:             charmode    => 1,",
                "// Line 869:             template    => qq(<script><%MyAction datamode='test-alt' arg='Foo{2122}' format='json-embed'%></script>),",
                "// Line 870:             expect      => qr/Foo{2122}/,",
                "// Line 924:             expect      => Encode::encode('utf8',\"Foo{2122}\"),",
                "// Line 925:             expect_bytes=> 1,",
                "// Line 926:         },",
                "// Line 927:     );",
                "// Line 928: ",
                "// Line 929:     while(my ($tname,$test)=each %tests) {",
                "// Line 930:         $self->siteconfig->cleanup();",
                "// Line 931: ",
                "// Line 932:         $self->siteconfig->put('/xao/page/character_mode' => $test->{'charmode'});",
                "// Line 933: ",
                "// vulnerable line: 934: my $page=XAO::Objects->new(objname => 'Web::Page');",
                "// Line 935: ",
                "// Line 936:         my $template=$test->{'template'};",
                "// Line 937:         my $got=$page->expand({template => $template},$test->{'args'});",
                "// Line 938:         my $expect=$test->{'expect'};",
                "// Line 939: ",
                "// Line 940:         ### if(defined $template) {",
                "// Line 941:         ###     dprint \"$tname: template=$template length=\".length($template).\" utf8=\".Encode::is_utf8($template);",
                "// Line 942:         ### }",
                "// Line 943:         ### dprint \"$tname:      got=$got length=\".length($got).\" utf8=\".Encode::is_utf8($got);",
                "// Line 944:         ### dprint \"$tname:   expect=$expect length=\".length($expect).\" utf8=\".Encode::is_utf8($expect);",
                "// Line 946:         if($test->{'expect_bytes'} || !$test->{'charmode'} || $test->{'args'}->{'unparsed'}) {",
                "// Line 947:             $self->assert(!Encode::is_utf8($got),",
                "// Line 948:                 \"Test $tname - expected bytes, got characters\");",
                "// Line 949:         }",
                "// Line 950:         else {",
                "// Line 951:             $self->assert(Encode::is_utf8($got),                    # will fail if tests include plain ascii",
                "// Line 952:                 \"Test $tname - expected characters, got bytes\");",
                "// Line 953:         }",
                "// Line 954: ",
                "// Line 955:         if(ref $expect eq 'Regexp') {",
                "// vulnerable line: 956: $self->assert($got =~ $expect,",
                "// Line 957:                 \"Test $tname - expected to match '$expect', got '$got'\");",
                "// Line 958:         }",
                "// Line 959:         else {",
                "// Line 960:             $self->assert($got eq $expect,",
                "// Line 961:                 \"Test $tname - expected '$expect', got '$got'\");",
                "// Line 962:         }",
                "// Line 963:     }",
                "// Line 964: }",
                "// Line 965: ",
                "// Line 966: ###############################################################################",
                "// Line 967: ",
                "// Line 968: sub test_expand {",
                "// Line 969:     my $self=shift;",
                "// Line 970: ",
                "// vulnerable line: 971: my $page=XAO::Objects->new(objname => 'Web::Page');",
                "// Line 972:     $self->assert(ref($page),",
                "// Line 973:                   \"Can't load Page object\");",
                "// Line 974: ",
                "// Line 975:     my $str=''\"!@#$%^&*()_-=[]\\<>? ';",
                "// Line 976:     my %ttt=(",
                "// Line 977:         '<$TEST$>'      => $str,",
                "// Line 978:         '<$TEST/h$>'    => ''\"!@#$%^&amp;*()_-=[]\\&lt;&gt;? ',",
                "// Line 979:         '<$TEST/f$>'    => ''&quot;!@#$%^&amp;*()_-=[]\\&lt;&gt;? ',",
                "// Line 980:         '<$TEST/q$>'    => ''%22!@%23$%25^%26*()_-%3d[]\\%3c%3e%3f%20',",
                "// Line 981:         '<$TEST/u$>'    => ''%22!@%23$%25^%26*()_-%3d[]\\%3c%3e%3f%20',",
                "// Line 1018:         $self->assert($got eq $expect,",
                "// Line 1019:                       \"Expected '$expect', got '$got'\");",
                "// Line 1020:     }",
                "// Line 1021: }",
                "// Line 1022: ",
                "// Line 1023: ###############################################################################",
                "// Line 1024: ",
                "// Line 1025: sub test_db_fs {",
                "// Line 1026:     my $self=shift;",
                "// Line 1027: ",
                "// vulnerable line: 1028: my $page=XAO::Objects->new(objname => 'Web::Page');",
                "// Line 1029:     $self->assert(ref($page),",
                "// Line 1030:                   \"Can't load Page object\");",
                "// Line 1031: ",
                "// Line 1032:     my $odb=$page->odb;",
                "// Line 1033:     $self->assert(ref($odb),",
                "// Line 1034:                   \"Can't get database reference from Page\");",
                "// Line 1035: }",
                "// Line 1036: ",
                "// Line 1037: ###############################################################################",
                "// Line 1038: ",
                "// Line 1039: sub test_web {",
                "// Line 1040:     my $self=shift;",
                "// Line 1041: ",
                "// vulnerable line: 1042: my $page=XAO::Objects->new(objname => 'Web::Page');",
                "// Line 1043:     $self->assert(ref($page),",
                "// Line 1044:                   \"Can't load Page object\");",
                "// Line 1045: ",
                "// Line 1046:     my $cgi=$page->cgi;",
                "// Line 1047:     $self->assert(ref($cgi),",
                "// Line 1048:                   \"Can't get CGI reference from Page\");",
                "// Line 1049: }",
                "// Line 1050: ",
                "// Line 1051: ###############################################################################",
                "// Line 1052: ",
                "// Line 1053: sub test_end {",
                "// Line 1054:     my $self=shift;",
                "// Line 1055: ",
                "// vulnerable line: 1056: my $page=XAO::Objects->new(objname => 'Web::Page');",
                "// Line 1057:     $self->assert(ref($page),",
                "// Line 1058:                   \"Can't load Page object\");",
                "// Line 1059: ",
                "// Line 1060:     my $got=$page->expand(template => 'AAA<%End%>BBB');",
                "// Line 1061:     my $expect='AAA';",
                "// Line 1062:     $self->assert($got eq $expect,",
                "// Line 1063:                   \"<%End%> does not work, got '$got' instead of '$expect'\");",
                "// Line 1064: }",
                "// Line 1065: ",
                "// Line 1066: ###############################################################################"
            ]
        },
        {
            "filename_of_changes": "Web.pm",
            "code_language": "Perl",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 8: use XAO::Objects;",
                "// Line 9: use XAO::SimpleHash;",
                "// Line 10: use XAO::PageSupport;",
                "// Line 11: use XAO::Templates;",
                "// Line 12: use XAO::Errors qw(XAO::Web);",
                "// Line 13: ",
                "// Line 14: ###############################################################################",
                "// Line 15: # XAO::Web version number. Hand changed with every release!",
                "// Line 16: #",
                "// Line 17: use vars qw($VERSION);",
                "// vulnerable line: 18: $VERSION='1.83';",
                "// Line 19: ",
                "// Line 20: ###############################################################################",
                "// Line 21: ",
                "// Line 22: =head1 NAME",
                "// Line 23: ",
                "// Line 24: XAO::Web - XAO Web Developer, dynamic content building suite",
                "// Line 25: ",
                "// Line 26: =head1 SYNOPSIS",
                "// Line 27: ",
                "// Line 28:  use XAO::Web;"
            ]
        }
    ]
}