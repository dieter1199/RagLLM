{
    "cve_id": "CVE-2024-24267",
    "cve_description": "gpac v2.2.1 was discovered to contain a memory leak via the gfio_blob variable in the gf_fileio_from_blob function.",
    "cve_publish_date": "2024-02-05T18:15Z",
    "cwe_id": "CWE-401",
    "cwe_name": "Missing Release of Memory after Effective Lifetime",
    "cwe_description": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.",
    "commit_message": "fix #2571",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "os_file.c",
            "code_language": "C",
            "number_of_lines_added_for_mitigation": "6",
            "number_of_lines_deleted_vulnerable_to_cve": "4",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1456:     if (flags) {",
                "// Line 1457:         GF_LOG(GF_LOG_ERROR, GF_LOG_CORE, (\"[Core] Attempt at creating a GFIO object on blob corrupted or in transfer, not supported !\"));",
                "// Line 1458:         return NULL;",
                "// Line 1459:     }",
                "// Line 1460: ",
                "// Line 1461:     GF_SAFEALLOC(gfio_blob, GF_FileIOBlob);",
                "// Line 1462:     if (!gfio_blob) return NULL;",
                "// Line 1463:     gfio_blob->data = blob_data;",
                "// Line 1464:     gfio_blob->size = blob_size;",
                "// Line 1465:     GF_FileIO *res = gf_fileio_new((char *) file_name, gfio_blob, gfio_blob_open, gfio_blob_seek, gfio_blob_read, NULL, gfio_blob_tell, gfio_blob_eof, NULL);",
                "// vulnerable line: 1466: if (!res) return NULL;",
                "// Line 1467:     res->gets = gfio_blob_gets;",
                "// Line 1468:     if (file_name)",
                "// Line 1469:         gfio_blob->url_crc = gf_crc_32(file_name, (u32) strlen(file_name) );",
                "// Line 1470:     return res;",
                "// Line 1471: }",
                "// Line 1472: ",
                "// Line 1473: GF_FileIO *gf_fileio_from_mem(const char *URL, const u8 *data, u32 size)",
                "// Line 1474: {",
                "// Line 1475:     GF_FileIOBlob *gfio_blob;",
                "// Line 1476:     GF_SAFEALLOC(gfio_blob, GF_FileIOBlob);",
                "// Line 1477:     if (!gfio_blob) return NULL;",
                "// Line 1478:     gfio_blob->data = (u8 *) data;",
                "// Line 1479:     gfio_blob->size = size;",
                "// Line 1480:     GF_FileIO *res = gf_fileio_new((char *) URL, gfio_blob, gfio_blob_open, gfio_blob_seek, gfio_blob_read, NULL, gfio_blob_tell, gfio_blob_eof, NULL);",
                "// vulnerable line: 1481: if (!res) return NULL;",
                "// Line 1482:     res->gets = gfio_blob_gets;",
                "// Line 1483:     if (URL)",
                "// Line 1484:         gfio_blob->url_crc = gf_crc_32(URL, (u32) strlen(URL) );",
                "// Line 1485:     gf_fopen(gf_fileio_url(res), \"r\");",
                "// Line 1486:     return res;",
                "// Line 1487: }",
                "// Line 1488: ",
                "// Line 1489: ",
                "// Line 1490: #ifdef GPAC_CONFIG_EMSCRIPTEN",
                "// Line 1491: static u32 mainloop_th_id = 0;"
            ]
        }
    ]
}