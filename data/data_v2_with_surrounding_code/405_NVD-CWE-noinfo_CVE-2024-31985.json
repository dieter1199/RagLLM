{
    "cve_id": "CVE-2024-31985",
    "cve_description": "XWiki Platform is a generic wiki platform. Starting in version 3.1 and prior to versions 4.10.20, 15.5.4, and 15.10-rc-1, it is possible to schedule/trigger/unschedule existing jobs by having an admin visit the Job Scheduler page through a predictable URL, for example by embedding such an URL in any content as an image. The vulnerability has been fixed in XWiki 14.10.19, 15.5.5, and 15.9. As a workaround, manually apply the patch by modifying the `Scheduler.WebHome` page.",
    "cve_publish_date": "2024-04-10T21:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "XWIKI-20851: Validate CSRF token before running job scheduling actions\n\n* Add a mandatory CSRF token for job management\n* Add a page test for Scheduler.WebHome that checks for the proper use of the CSRF token\n* Refactor scheduling actions URL generation\n* Refactor Scheduler.WebHome to improve escaping",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "SchedulerIT.java",
            "code_language": "Java",
            "number_of_lines_added_for_mitigation": "3",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 63:     @Test",
                "// Line 64:     @Order(1)",
                "// Line 65:     void verifyScheduler(TestUtils setup)",
                "// Line 66:     {",
                "// Line 67:         setup.loginAsSuperAdmin();",
                "// Line 68: ",
                "// Line 69:         // Make sure the job doesn't exist. Note that we don't delete the job after the test is executed (@After)",
                "// Line 70:         // because we want to remain on the same page in case of a test failure so that our TestDebugger rule can",
                "// Line 71:         // collect accurate information about the failure. It's not a problem if the job remains scheduled because it",
                "// Line 72:         // does nothing. Other tests should not rely on the number of scheduler jobs though.",
                "// vulnerable line: 73: setup.deletePage(\"Scheduler\", \"SchedulerTestJob\");",
                "// Line 74: ",
                "// Line 75:         // Create Job",
                "// Line 76:         SchedulerHomePage schedulerHomePage = SchedulerHomePage.gotoPage();",
                "// vulnerable line: 77: schedulerHomePage.setJobName(\"SchedulerTestJob\");",
                "// Line 78:         SchedulerEditPage schedulerEdit = schedulerHomePage.clickAdd();",
                "// Line 79: ",
                "// Line 80:         String jobName = \"Tester problem\";",
                "// Line 81:         schedulerEdit.setJobName(jobName);",
                "// Line 82:         schedulerEdit.setJobDescription(jobName);",
                "// Line 83:         schedulerEdit.setCron(\"0 15 10 ? * MON-FRI\");",
                "// Line 84:         SchedulerPage schedulerPage = schedulerEdit.clickSaveAndView();",
                "// Line 85:         schedulerHomePage = schedulerPage.backToHome();",
                "// Line 86: ",
                "// Line 87:         // View Job",
                "// Line 100:         schedulerEdit.setCron(\"0 0/5 14 * * ?\");",
                "// Line 101:         schedulerPage = schedulerEdit.clickSaveAndView();",
                "// Line 102:         schedulerHomePage = schedulerPage.backToHome();",
                "// Line 103: ",
                "// Line 104:         // Delete and Restore Job",
                "// Line 105:         schedulerHomePage.clickJobActionDelete(jobName).clickYes();",
                "// Line 106:         schedulerHomePage = SchedulerHomePage.gotoPage();",
                "// Line 107:         assertFalse(setup.getDriver().hasElementWithoutWaiting(By.linkText(jobName)));",
                "// Line 108:         // Note: since the page doesn't exist, we need to disable the space redirect feature so that we end up on the",
                "// Line 109:         // terminal page that was removed.",
                "// vulnerable line: 110: setup.gotoPage(\"Scheduler\", \"SchedulerTestJob\", \"view\", \"spaceRedirect=false\");",
                "// Line 111:         setup.getDriver().findElement(By.linkText(\"Restore\")).click();",
                "// Line 112:         schedulerPage = new SchedulerPage();",
                "// Line 113:         schedulerPage.backToHome();",
                "// Line 114: ",
                "// Line 115:         // Schedule Job",
                "// Line 116:         schedulerHomePage.clickJobActionSchedule(jobName);",
                "// Line 117:         if (schedulerHomePage.hasError()) {",
                "// Line 118:             fail(\"Failed to schedule job. Error [\" + schedulerHomePage.getErrorMessage() + \"]\");",
                "// Line 119:         }",
                "// Line 120: ",
                "// Line 142:             fail(\"Failed to unschedule job.  Error [\" + schedulerHomePage.getErrorMessage() + \"]\");",
                "// Line 143:         }",
                "// Line 144:     }",
                "// Line 145: ",
                "// Line 146:     @Test",
                "// Line 147:     @Order(2)",
                "// Line 148:     void verifyEscaping(TestUtils setup)",
                "// Line 149:     {",
                "// Line 150:         setup.loginAsSuperAdmin();",
                "// Line 151: ",
                "// vulnerable line: 152: setup.deletePage(\"Scheduler\", \"SchedulerTestJob\");",
                "// Line 153: ",
                "// Line 154:         // Create Job",
                "// Line 155:         SchedulerHomePage schedulerHomePage = SchedulerHomePage.gotoPage();",
                "// vulnerable line: 156: schedulerHomePage.setJobName(\"SchedulerTestJob\");",
                "// Line 157:         SchedulerEditPage schedulerEdit = schedulerHomePage.clickAdd();",
                "// Line 158: ",
                "// Line 159:         schedulerEdit.setScript(\"{{/code}}\");",
                "// Line 160:         SchedulerPage schedulerPage = schedulerEdit.clickSaveAndView();",
                "// Line 161: ",
                "// Line 162:         assertEquals(\"{{/code}}\", schedulerPage.getScript());",
                "// Line 163:     }",
                "// Line 164: }"
            ]
        }
    ]
}