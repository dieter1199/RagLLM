{
    "cve_id": "CVE-2024-29023",
    "cve_description": "Xibo is an Open Source Digital Signage platform with a web content management system and Windows display player software. Session tokens are exposed in the return of session search API call on the sessions page. Subsequently they can be exfiltrated and used to hijack a session. Users must be granted access to the session page, or be a super admin. Users should upgrade to version 3.3.10 or 4.0.9 which fix this issue. Customers who host their CMS with the Xibo Signage service have already received an upgrade or patch to resolve this issue regardless of the CMS version that they are running. Patches are available for earlier versions of Xibo CMS that are out of security support: 2.3 patch ebeccd000b51f00b9a25f56a2f252d6812ebf850.diff. 1.8 patch a81044e6ccdd92cc967e34c125bd8162432e51bc.diff. There are no known workarounds for this vulnerability.",
    "cve_publish_date": "2024-04-12T21:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Improvements to filtering IP and sessions (#2433)\n\n* Sessions: Add sanitization in getIp() and disable output of session ID in session grid. xibosignage/xibo#3375\r\n* Bump to 4.0.9",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "Environment.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 23: ",
                "// Line 24: use Phinx\\Console\\PhinxApplication;",
                "// Line 25: use Phinx\\Wrapper\\TextWrapper;",
                "// Line 26: ",
                "// Line 27: /**",
                "// Line 28:  * Class Environment",
                "// Line 29:  * @package Xibo\\Helper",
                "// Line 30:  */",
                "// Line 31: class Environment",
                "// Line 32: {",
                "// vulnerable line: 33: public static $WEBSITE_VERSION_NAME = '4.0.8';",
                "// Line 34:     public static $XMDS_VERSION = '7';",
                "// Line 35:     public static $XLF_VERSION = 4;",
                "// Line 36:     public static $VERSION_REQUIRED = '8.1.0';",
                "// Line 37:     public static $VERSION_UNSUPPORTED = '9.0';",
                "// Line 38:     public static $PLAYER_SUPPORT = 300;",
                "// Line 39: ",
                "// Line 40:     /** @var null cache migration status for the whole request */",
                "// Line 41:     private static $migrationStatus = null;",
                "// Line 42: ",
                "// Line 43:     /** @var string the git commit ref */"
            ]
        },
        {
            "filename_of_changes": "Session.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "4",
            "number_of_lines_deleted_vulnerable_to_cve": "4",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: <?php",
                "// Line 2: /*",
                "// vulnerable line: 3: * Copyright (C) 2023 Xibo Signage Ltd",
                "// Line 4:  *",
                "// Line 5:  * Xibo - Digital Signage - https://xibosignage.com",
                "// Line 6:  *",
                "// Line 7:  * This file is part of Xibo.",
                "// Line 8:  *",
                "// Line 9:  * Xibo is free software: you can redistribute it and/or modify",
                "// Line 10:  * it under the terms of the GNU Affero General Public License as published by",
                "// Line 11:  * the Free Software Foundation, either version 3 of the License, or",
                "// Line 12:  * any later version.",
                "// Line 13:  *",
                "// Line 165:     /**",
                "// Line 166:      * {@inheritdoc}",
                "// Line 167:      */",
                "// Line 168:     public function read($key): false|string",
                "// Line 169:     {",
                "// Line 170:         //$this->log->debug('Session read');",
                "// Line 171: ",
                "// Line 172:         $data = '';",
                "// Line 173:         $this->key = $key;",
                "// Line 174: ",
                "// vulnerable line: 175: $userAgent = substr($_SERVER['HTTP_USER_AGENT'], 0, 253);",
                "// Line 176: ",
                "// Line 177:         try {",
                "// Line 178:             $dbh = $this->getDb();",
                "// Line 179: ",
                "// Line 180:             // Start a transaction",
                "// Line 181:             $this->beginTransaction();",
                "// Line 182: ",
                "// Line 183:             // Get this session",
                "// Line 184:             $sth = $dbh->getConnection()->prepare('",
                "// Line 185:                 SELECT `session_data`, `isexpired`, `useragent`, `session_expiration`, `userId` ",
                "// Line 415:             VALUES (:session_id, :session_data, :session_expiration, :lastAccessed, :userId, :expired, :useragent, :remoteaddr)",
                "// Line 416:         ';",
                "// Line 417: ",
                "// Line 418:         $params = [",
                "// Line 419:             'session_id' => $key,",
                "// Line 420:             'session_data' => $data,",
                "// Line 421:             'session_expiration' => $expiry,",
                "// Line 422:             'lastAccessed' => Carbon::createFromTimestamp($lastAccessed)->format(DateFormatHelper::getSystemFormat()),",
                "// Line 423:             'userId' => $this->userId,",
                "// Line 424:             'expired' => ($this->expired) ? 1 : 0,",
                "// vulnerable line: 425: 'useragent' => substr($_SERVER['HTTP_USER_AGENT'], 0, 253),",
                "// Line 426:             'remoteaddr' => $this->getIp()",
                "// Line 427:         ];",
                "// Line 428: ",
                "// Line 429:         $this->getDb()->update($sql, $params);",
                "// Line 430:     }",
                "// Line 431: ",
                "// Line 432:     /**",
                "// Line 433:      * Update Session",
                "// Line 434:      * @param $key",
                "// Line 435:      * @param $data",
                "// Line 464: ",
                "// Line 465:     /**",
                "// Line 466:      * Get the Client IP Address",
                "// Line 467:      * @return string",
                "// Line 468:      */",
                "// Line 469:     private function getIp()",
                "// Line 470:     {",
                "// Line 471:         $clientIp = '';",
                "// Line 472:         $keys = array('X_FORWARDED_FOR', 'HTTP_X_FORWARDED_FOR', 'CLIENT_IP', 'REMOTE_ADDR');",
                "// Line 473:         foreach ($keys as $key) {",
                "// vulnerable line: 474: if (isset($_SERVER[$key])) {",
                "// Line 475:                 $clientIp = $_SERVER[$key];",
                "// Line 476:                 break;",
                "// Line 477:             }",
                "// Line 478:         }",
                "// Line 479:         return $clientIp;",
                "// Line 480:     }",
                "// Line 481: ",
                "// Line 482:     /**",
                "// Line 483:      * @param $userId",
                "// Line 484:      */"
            ]
        },
        {
            "filename_of_changes": "SessionFactory.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "16",
            "number_of_lines_deleted_vulnerable_to_cve": "14",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: <?php",
                "// Line 2: /*",
                "// vulnerable line: 3: * Copyright (c) 2022 Xibo Signage Ltd",
                "// Line 4:  *",
                "// vulnerable line: 5: * Xibo - Digital Signage - http://www.xibo.org.uk",
                "// Line 6:  *",
                "// Line 7:  * This file is part of Xibo.",
                "// Line 8:  *",
                "// Line 9:  * Xibo is free software: you can redistribute it and/or modify",
                "// Line 10:  * it under the terms of the GNU Affero General Public License as published by",
                "// Line 11:  * the Free Software Foundation, either version 3 of the License, or",
                "// Line 12:  * any later version.",
                "// Line 13:  *",
                "// Line 14:  * Xibo is distributed in the hope that it will be useful,",
                "// Line 15:  * but WITHOUT ANY WARRANTY; without even the implied warranty of",
                "// Line 28: use Xibo\\Helper\\DateFormatHelper;",
                "// Line 29: use Xibo\\Support\\ExceptionotFoundException;",
                "// Line 30: ",
                "// Line 31: /**",
                "// Line 32:  * Class SessionFactory",
                "// Line 33:  * @package Xibo\\Factory",
                "// Line 34:  */",
                "// Line 35: class SessionFactory extends BaseFactory",
                "// Line 36: {",
                "// Line 37:     /**",
                "// vulnerable line: 38: * @return Session",
                "// Line 39:      */",
                "// Line 40:     public function createEmpty()",
                "// Line 41:     {",
                "// Line 42:         return new Session($this->getStore(), $this->getLog(), $this->getDispatcher());",
                "// Line 43:     }",
                "// Line 44: ",
                "// Line 45:     /**",
                "// vulnerable line: 46: * @param $sessionId",
                "// vulnerable line: 47: * @return Session",
                "// vulnerable line: 48: * @throws NotFoundException",
                "// Line 49:      */",
                "// vulnerable line: 50: public function getById($sessionId)",
                "// Line 51:     {",
                "// vulnerable line: 52: $session = $this->query(null, ['sessionId' => $sessionId]);",
                "// Line 53: ",
                "// vulnerable line: 54: if (count($session) <= 0)",
                "// vulnerable line: 55: throw new NotFoundException();",
                "// Line 56: ",
                "// vulnerable line: 57: return $session[0];",
                "// Line 58:     }",
                "// Line 59: ",
                "// Line 60:     /**",
                "// Line 61:      * @param int $userId",
                "// Line 62:      * @return int loggedIn",
                "// Line 63:      */",
                "// Line 64:     public function getActiveSessionsForUser($userId)",
                "// Line 65:     {",
                "// Line 66:         $userSession = $this->query(null, ['userId' => $userId, 'type' => 'active']);",
                "// Line 67: ",
                "// Line 136:         // Paging",
                "// Line 137:         if ($filterBy !== null && $sanitizedFilter->getInt('start') !== null && $sanitizedFilter->getInt('length') !== null) {",
                "// Line 138:             $limit = ' LIMIT ' . $sanitizedFilter->getInt('start', ['default' => 0]) . ', ' . $sanitizedFilter->getInt('length', ['default' => 10]);",
                "// Line 139:         }",
                "// Line 140: ",
                "// Line 141:         $sql = $select . $body . $order . $limit;",
                "// Line 142: ",
                "// Line 143: ",
                "// Line 144: ",
                "// Line 145:         foreach ($this->getStore()->select($sql, $params) as $row) {",
                "// vulnerable line: 146: $entries[] = $this->createEmpty()->hydrate($row, ['stringProperties' => ['sessionId']]);",
                "// Line 147:         }",
                "// Line 148: ",
                "// Line 149:         // Paging",
                "// Line 150:         if ($limit != '' && count($entries) > 0) {",
                "// Line 151:             $results = $this->getStore()->select('SELECT COUNT(*) AS total ' . $body, $params);",
                "// Line 152:             $this->_countLast = intval($results[0]['total']);",
                "// Line 153:         }",
                "// Line 154: ",
                "// Line 155:         return $entries;",
                "// Line 156:     }"
            ]
        },
        {
            "filename_of_changes": "Sessions.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "12",
            "number_of_lines_deleted_vulnerable_to_cve": "18",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 47: ",
                "// Line 48:     /**",
                "// Line 49:      * Set common dependencies.",
                "// Line 50:      * @param StorageServiceInterface $store",
                "// Line 51:      * @param SessionFactory $sessionFactory",
                "// Line 52:      */",
                "// Line 53:     public function __construct($store, $sessionFactory)",
                "// Line 54:     {",
                "// Line 55:         $this->store = $store;",
                "// Line 56:         $this->sessionFactory = $sessionFactory;",
                "// vulnerable line: 57: }",
                "// Line 58: ",
                "// Line 59:     /**",
                "// Line 60:      * @param Request $request",
                "// Line 61:      * @param Response $response",
                "// Line 62:      * @return \\Psr\\Http\\Message\\ResponseInterface|Response",
                "// Line 63:      * @throws \\Xibo\\Support\\Exception\\ControllerNotImplemented",
                "// Line 64:      * @throws \\Xibo\\Support\\Exception\\GeneralException",
                "// Line 65:      */",
                "// Line 66:     function displayPage(Request $request, Response $response)",
                "// Line 67:     {",
                "// Line 68:         $this->getState()->template = 'sessions-page';",
                "// Line 69: ",
                "// Line 70:         return $this->render($request, $response);",
                "// vulnerable line: 71: }",
                "// Line 72: ",
                "// Line 73:     /**",
                "// Line 74:      * @param Request $request",
                "// Line 75:      * @param Response $response",
                "// Line 76:      * @return \\Psr\\Http\\Message\\ResponseInterface|Response",
                "// Line 77:      * @throws \\Xibo\\Support\\Exception\\ControllerNotImplemented",
                "// Line 78:      * @throws \\Xibo\\Support\\Exception\\GeneralException",
                "// Line 79:      */",
                "// Line 80:     public function grid(Request $request, Response $response): Response|\\Psr\\Http\\Message\\ResponseInterface",
                "// Line 81:     {",
                "// Line 92:             // Normalise the date",
                "// Line 93:             $row->lastAccessed =",
                "// Line 94:                 Carbon::createFromTimeString($row->lastAccessed)?->format(DateFormatHelper::getSystemFormat());",
                "// Line 95: ",
                "// Line 96:             if (!$this->isApi($request) && $this->getUser()->isSuperAdmin()) {",
                "// Line 97:                 $row->includeProperty('buttons');",
                "// Line 98: ",
                "// Line 99:                 // logout, current user/session",
                "// Line 100:                 if ($row->userId === $this->getUser()->userId && session_id() === $row->sessionId) {",
                "// Line 101:                     $url = $this->urlFor($request, 'logout');",
                "// vulnerable line: 102: } else {",
                "// Line 103:                     // logout, different user/session",
                "// Line 104:                     $url = $this->urlFor(",
                "// Line 105:                         $request,",
                "// Line 106:                         'sessions.confirm.logout.form',",
                "// vulnerable line: 107: ['id' => $row->sessionId]",
                "// vulnerable line: 108: );",
                "// vulnerable line: 109: }",
                "// Line 110: ",
                "// Line 111:                 $row->buttons[] = [",
                "// Line 112:                     'id' => 'sessions_button_logout',",
                "// Line 113:                     'url' => $url,",
                "// Line 114:                     'text' => __('Logout')",
                "// Line 115:                 ];",
                "// vulnerable line: 116: }",
                "// vulnerable line: 117: }",
                "// Line 118: ",
                "// Line 119:         $this->getState()->template = 'grid';",
                "// Line 120:         $this->getState()->recordsTotal = $this->sessionFactory->countLast();",
                "// Line 121:         $this->getState()->setData($sessions);",
                "// Line 122: ",
                "// Line 123:         return $this->render($request, $response);",
                "// vulnerable line: 124: }",
                "// Line 125: ",
                "// Line 126:     /**",
                "// Line 127:      * Confirm Logout Form",
                "// Line 128:      * @param Request $request",
                "// Line 129:      * @param Response $response",
                "// vulnerable line: 130: * @param $id",
                "// Line 131:      * @return \\Psr\\Http\\Message\\ResponseInterface|Response",
                "// Line 132:      * @throws AccessDeniedException",
                "// Line 133:      * @throws \\Xibo\\Support\\Exception\\ControllerNotImplemented",
                "// Line 134:      * @throws \\Xibo\\Support\\Exception\\GeneralException",
                "// Line 135:      */",
                "// vulnerable line: 136: function confirmLogoutForm(Request $request, Response $response, $id)",
                "// Line 137:     {",
                "// Line 138:         if ($this->getUser()->userTypeId != 1) {",
                "// Line 139:             throw new AccessDeniedException();",
                "// vulnerable line: 140: }",
                "// Line 141: ",
                "// Line 142:         $this->getState()->template = 'sessions-form-confirm-logout';",
                "// Line 143:         $this->getState()->setData([",
                "// vulnerable line: 144: 'sessionId' => $id,",
                "// Line 145:         ]);",
                "// Line 146: ",
                "// Line 147:         return $this->render($request, $response);",
                "// vulnerable line: 148: }",
                "// Line 149: ",
                "// Line 150:     /**",
                "// Line 151:      * Logout",
                "// Line 152:      * @param Request $request",
                "// Line 153:      * @param Response $response",
                "// vulnerable line: 154: * @param $id",
                "// Line 155:      * @return \\Psr\\Http\\Message\\ResponseInterface|Response",
                "// Line 156:      * @throws AccessDeniedException",
                "// Line 157:      * @throws \\Xibo\\Support\\Exception\\ControllerNotImplemented",
                "// Line 158:      * @throws \\Xibo\\Support\\Exception\\GeneralException",
                "// Line 159:      * @throws \\Xibo\\Support\\ExceptionotFoundException",
                "// Line 160:      */",
                "// vulnerable line: 161: function logout(Request $request, Response $response, $id)",
                "// Line 162:     {",
                "// Line 163:         if ($this->getUser()->userTypeId != 1) {",
                "// Line 164:             throw new AccessDeniedException();",
                "// vulnerable line: 165: }",
                "// Line 166: ",
                "// vulnerable line: 167: $session = $this->sessionFactory->getById($id);",
                "// Line 168: ",
                "// vulnerable line: 169: if ($session->userId != 0) {",
                "// vulnerable line: 170: $this->store->update(",
                "// vulnerable line: 171: 'UPDATE `session` SET IsExpired = 1 WHERE userID = :userId ',",
                "// vulnerable line: 172: ['userId' => $session->userId]",
                "// vulnerable line: 173: );",
                "// vulnerable line: 174: } else {",
                "// vulnerable line: 175: $this->store->update(",
                "// vulnerable line: 176: 'UPDATE `session` SET IsExpired = 1 WHERE session_id = :session_id ',",
                "// vulnerable line: 177: ['session_id' => $id]",
                "// vulnerable line: 178: );",
                "// vulnerable line: 179: }",
                "// Line 180: ",
                "// Line 181:         // Return",
                "// Line 182:         $this->getState()->hydrate([",
                "// Line 183:             'message' => __('User Logged Out.')",
                "// Line 184:         ]);",
                "// Line 185: ",
                "// Line 186:         return $this->render($request, $response);",
                "// vulnerable line: 187: }",
                "// vulnerable line: 188: }"
            ]
        },
        {
            "filename_of_changes": "Soap.php",
            "code_language": "PHP",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 2633:     /**",
                "// Line 2634:      * Get the Client IP Address",
                "// Line 2635:      * @return string",
                "// Line 2636:      */",
                "// Line 2637:     protected function getIp()",
                "// Line 2638:     {",
                "// Line 2639:         $clientIp = '';",
                "// Line 2640: ",
                "// Line 2641:         $keys = array('X_FORWARDED_FOR', 'HTTP_X_FORWARDED_FOR', 'CLIENT_IP', 'REMOTE_ADDR');",
                "// Line 2642:         foreach ($keys as $key) {",
                "// vulnerable line: 2643: if (isset($_SERVER[$key])) {",
                "// Line 2644:                 $clientIp = $_SERVER[$key];",
                "// Line 2645:                 break;",
                "// Line 2646:             }",
                "// Line 2647:         }",
                "// Line 2648: ",
                "// Line 2649:         return $clientIp;",
                "// Line 2650:     }",
                "// Line 2651: ",
                "// Line 2652:     /**",
                "// Line 2653:      * Check we haven't exceeded the bandwidth limits"
            ]
        }
    ]
}