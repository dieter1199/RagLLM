{
    "cve_id": "CVE-2024-32983",
    "cve_description": "Misskey is an open source, decentralized microblogging platform. Misskey doesn't perform proper normalization on the JSON structures of incoming signed ActivityPub activity objects before processing them, allowing threat actors to spoof the contents of signed activities and impersonate the authors of the original activities. This vulnerability is fixed in 2024.5.0.",
    "cve_publish_date": "2024-06-03T16:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Merge pull request from GHSA-2vxv-pv3m-3wvj\n\n* fix: normalize incoming signed activities\n\n* Tweak style\n\n* Update CHANGELOG.md\n\n* Log compacted activity as well\n\n---------\n\nCo-authored-by: syuilo <4439005+syuilo@users.noreply.github.com>",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "CoreModule.ts",
            "code_language": "TypeScript",
            "number_of_lines_added_for_mitigation": "6",
            "number_of_lines_deleted_vulnerable_to_cve": "6",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 120: ",
                "// Line 121: import { ApAudienceService } from './activitypub/ApAudienceService.js';",
                "// Line 122: import { ApDbResolverService } from './activitypub/ApDbResolverService.js';",
                "// Line 123: import { ApDeliverManagerService } from './activitypub/ApDeliverManagerService.js';",
                "// Line 124: import { ApInboxService } from './activitypub/ApInboxService.js';",
                "// Line 125: import { ApLoggerService } from './activitypub/ApLoggerService.js';",
                "// Line 126: import { ApMfmService } from './activitypub/ApMfmService.js';",
                "// Line 127: import { ApRendererService } from './activitypub/ApRendererService.js';",
                "// Line 128: import { ApRequestService } from './activitypub/ApRequestService.js';",
                "// Line 129: import { ApResolverService } from './activitypub/ApResolverService.js';",
                "// vulnerable line: 130: import { LdSignatureService } from './activitypub/LdSignatureService.js';",
                "// Line 131: import { RemoteLoggerService } from './RemoteLoggerService.js';",
                "// Line 132: import { RemoteUserResolveService } from './RemoteUserResolveService.js';",
                "// Line 133: import { WebfingerService } from './WebfingerService.js';",
                "// Line 134: import { ApImageService } from './activitypub/models/ApImageService.js';",
                "// Line 135: import { ApMentionService } from './activitypub/models/ApMentionService.js';",
                "// Line 136: import { ApNoteService } from './activitypub/models/ApNoteService.js';",
                "// Line 137: import { ApPersonService } from './activitypub/models/ApPersonService.js';",
                "// Line 138: import { ApQuestionService } from './activitypub/models/ApQuestionService.js';",
                "// Line 139: import { QueueModule } from './QueueModule.js';",
                "// Line 140: import { QueueService } from './QueueService.js';",
                "// Line 259: ",
                "// Line 260: const $ApAudienceService: Provider = { provide: 'ApAudienceService', useExisting: ApAudienceService };",
                "// Line 261: const $ApDbResolverService: Provider = { provide: 'ApDbResolverService', useExisting: ApDbResolverService };",
                "// Line 262: const $ApDeliverManagerService: Provider = { provide: 'ApDeliverManagerService', useExisting: ApDeliverManagerService };",
                "// Line 263: const $ApInboxService: Provider = { provide: 'ApInboxService', useExisting: ApInboxService };",
                "// Line 264: const $ApLoggerService: Provider = { provide: 'ApLoggerService', useExisting: ApLoggerService };",
                "// Line 265: const $ApMfmService: Provider = { provide: 'ApMfmService', useExisting: ApMfmService };",
                "// Line 266: const $ApRendererService: Provider = { provide: 'ApRendererService', useExisting: ApRendererService };",
                "// Line 267: const $ApRequestService: Provider = { provide: 'ApRequestService', useExisting: ApRequestService };",
                "// Line 268: const $ApResolverService: Provider = { provide: 'ApResolverService', useExisting: ApResolverService };",
                "// vulnerable line: 269: const $LdSignatureService: Provider = { provide: 'LdSignatureService', useExisting: LdSignatureService };",
                "// Line 270: const $RemoteLoggerService: Provider = { provide: 'RemoteLoggerService', useExisting: RemoteLoggerService };",
                "// Line 271: const $RemoteUserResolveService: Provider = { provide: 'RemoteUserResolveService', useExisting: RemoteUserResolveService };",
                "// Line 272: const $WebfingerService: Provider = { provide: 'WebfingerService', useExisting: WebfingerService };",
                "// Line 273: const $ApImageService: Provider = { provide: 'ApImageService', useExisting: ApImageService };",
                "// Line 274: const $ApMentionService: Provider = { provide: 'ApMentionService', useExisting: ApMentionService };",
                "// Line 275: const $ApNoteService: Provider = { provide: 'ApNoteService', useExisting: ApNoteService };",
                "// Line 276: const $ApPersonService: Provider = { provide: 'ApPersonService', useExisting: ApPersonService };",
                "// Line 277: const $ApQuestionService: Provider = { provide: 'ApQuestionService', useExisting: ApQuestionService };",
                "// Line 278: //#endregion",
                "// Line 279: ",
                "// Line 399: ",
                "// Line 400:         ApAudienceService,",
                "// Line 401:         ApDbResolverService,",
                "// Line 402:         ApDeliverManagerService,",
                "// Line 403:         ApInboxService,",
                "// Line 404:         ApLoggerService,",
                "// Line 405:         ApMfmService,",
                "// Line 406:         ApRendererService,",
                "// Line 407:         ApRequestService,",
                "// Line 408:         ApResolverService,",
                "// vulnerable line: 409: LdSignatureService,",
                "// Line 410:         RemoteLoggerService,",
                "// Line 411:         RemoteUserResolveService,",
                "// Line 412:         WebfingerService,",
                "// Line 413:         ApImageService,",
                "// Line 414:         ApMentionService,",
                "// Line 415:         ApNoteService,",
                "// Line 416:         ApPersonService,",
                "// Line 417:         ApQuestionService,",
                "// Line 418:         QueueService,",
                "// Line 419: ",
                "// Line 535: ",
                "// Line 536:         $ApAudienceService,",
                "// Line 537:         $ApDbResolverService,",
                "// Line 538:         $ApDeliverManagerService,",
                "// Line 539:         $ApInboxService,",
                "// Line 540:         $ApLoggerService,",
                "// Line 541:         $ApMfmService,",
                "// Line 542:         $ApRendererService,",
                "// Line 543:         $ApRequestService,",
                "// Line 544:         $ApResolverService,",
                "// vulnerable line: 545: $LdSignatureService,",
                "// Line 546:         $RemoteLoggerService,",
                "// Line 547:         $RemoteUserResolveService,",
                "// Line 548:         $WebfingerService,",
                "// Line 549:         $ApImageService,",
                "// Line 550:         $ApMentionService,",
                "// Line 551:         $ApNoteService,",
                "// Line 552:         $ApPersonService,",
                "// Line 553:         $ApQuestionService,",
                "// Line 554:         //#endregion",
                "// Line 555:     ],",
                "// Line 671: ",
                "// Line 672:         ApAudienceService,",
                "// Line 673:         ApDbResolverService,",
                "// Line 674:         ApDeliverManagerService,",
                "// Line 675:         ApInboxService,",
                "// Line 676:         ApLoggerService,",
                "// Line 677:         ApMfmService,",
                "// Line 678:         ApRendererService,",
                "// Line 679:         ApRequestService,",
                "// Line 680:         ApResolverService,",
                "// vulnerable line: 681: LdSignatureService,",
                "// Line 682:         RemoteLoggerService,",
                "// Line 683:         RemoteUserResolveService,",
                "// Line 684:         WebfingerService,",
                "// Line 685:         ApImageService,",
                "// Line 686:         ApMentionService,",
                "// Line 687:         ApNoteService,",
                "// Line 688:         ApPersonService,",
                "// Line 689:         ApQuestionService,",
                "// Line 690:         QueueService,",
                "// Line 691: ",
                "// Line 806: ",
                "// Line 807:         $ApAudienceService,",
                "// Line 808:         $ApDbResolverService,",
                "// Line 809:         $ApDeliverManagerService,",
                "// Line 810:         $ApInboxService,",
                "// Line 811:         $ApLoggerService,",
                "// Line 812:         $ApMfmService,",
                "// Line 813:         $ApRendererService,",
                "// Line 814:         $ApRequestService,",
                "// Line 815:         $ApResolverService,",
                "// vulnerable line: 816: $LdSignatureService,",
                "// Line 817:         $RemoteLoggerService,",
                "// Line 818:         $RemoteUserResolveService,",
                "// Line 819:         $WebfingerService,",
                "// Line 820:         $ApImageService,",
                "// Line 821:         $ApMentionService,",
                "// Line 822:         $ApNoteService,",
                "// Line 823:         $ApPersonService,",
                "// Line 824:         $ApQuestionService,",
                "// Line 825:         //#endregion",
                "// Line 826:     ],"
            ]
        },
        {
            "filename_of_changes": "JsonLdService.ts",
            "code_language": "TypeScript",
            "number_of_lines_added_for_mitigation": "20",
            "number_of_lines_deleted_vulnerable_to_cve": "12",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: /*",
                "// Line 2:  * SPDX-FileCopyrightText: syuilo and misskey-project",
                "// Line 3:  * SPDX-License-Identifier: AGPL-3.0-only",
                "// Line 4:  */",
                "// Line 5: ",
                "// Line 6: import * as crypto from 'node:crypto';",
                "// Line 7: import { Injectable } from '@nestjs/common';",
                "// Line 8: import { HttpRequestService } from '@/core/HttpRequestService.js';",
                "// Line 9: import { bindThis } from '@/decorators.js';",
                "// vulnerable line: 10: import { CONTEXTS } from './misc/contexts.js';",
                "// Line 11: import { validateContentTypeSetAsJsonLD } from './misc/validator.js';",
                "// Line 12: import type { JsonLdDocument } from 'jsonld';",
                "// vulnerable line: 13: import type { JsonLd, RemoteDocument } from 'jsonld/jsonld-spec.js';",
                "// Line 14: ",
                "// vulnerable line: 15: // RsaSignature2017 based from https://github.com/transmute-industries/RsaSignature2017",
                "// Line 16: ",
                "// vulnerable line: 17: class LdSignature {",
                "// Line 18:     public debug = false;",
                "// Line 19:     public preLoad = true;",
                "// Line 20:     public loderTimeout = 5000;",
                "// Line 21: ",
                "// Line 22:     constructor(",
                "// Line 23:         private httpRequestService: HttpRequestService,",
                "// Line 24:     ) {",
                "// Line 25:     }",
                "// Line 26: ",
                "// Line 27:     @bindThis",
                "// Line 82:         const transformedData = { ...data };",
                "// Line 83:         delete transformedData['signature'];",
                "// Line 84:         const cannonidedData = await this.normalize(transformedData);",
                "// Line 85:         if (this.debug) console.debug(`cannonidedData: ${cannonidedData}`);",
                "// Line 86:         const documentHash = this.sha256(cannonidedData.toString());",
                "// Line 87:         const verifyData = `${optionsHash}${documentHash}`;",
                "// Line 88:         return verifyData;",
                "// Line 89:     }",
                "// Line 90: ",
                "// Line 91:     @bindThis",
                "// vulnerable line: 92: public async normalize(data: JsonLdDocument): Promise<string> {",
                "// Line 93:         const customLoader = this.getLoader();",
                "// Line 94:         // XXX: Importing jsonld dynamically since Jest frequently fails to import it statically",
                "// Line 95:         // https://github.com/misskey-dev/misskey/pull/9894#discussion_r1103753595",
                "// Line 96:         return (await import('jsonld')).default.normalize(data, {",
                "// Line 97:             documentLoader: customLoader,",
                "// Line 98:         });",
                "// Line 99:     }",
                "// Line 100: ",
                "// Line 101:     @bindThis",
                "// Line 102:     private getLoader() {",
                "// Line 103:         return async (url: string): Promise<RemoteDocument> => {",
                "// Line 104:             if (!/^https?:\\/\\//.test(url)) throw new Error(`Invalid URL ${url}`);",
                "// Line 105: ",
                "// Line 106:             if (this.preLoad) {",
                "// vulnerable line: 107: if (url in CONTEXTS) {",
                "// Line 108:                     if (this.debug) console.debug(`HIT: ${url}`);",
                "// Line 109:                     return {",
                "// Line 110:                         contextUrl: undefined,",
                "// vulnerable line: 111: document: CONTEXTS[url],",
                "// Line 112:                         documentUrl: url,",
                "// Line 113:                     };",
                "// Line 114:                 }",
                "// Line 115:             }",
                "// Line 116: ",
                "// Line 117:             if (this.debug) console.debug(`MISS: ${url}`);",
                "// Line 118:             const document = await this.fetchDocument(url);",
                "// Line 119:             return {",
                "// Line 120:                 contextUrl: undefined,",
                "// Line 121:                 document: document,",
                "// Line 122:                 documentUrl: url,",
                "// Line 123:             };",
                "// Line 124:         };",
                "// Line 125:     }",
                "// Line 126: ",
                "// Line 127:     @bindThis",
                "// vulnerable line: 128: private async fetchDocument(url: string): Promise<JsonLd> {",
                "// Line 129:         const json = await this.httpRequestService.send(",
                "// Line 130:             url,",
                "// Line 131:             {",
                "// Line 132:                 headers: {",
                "// Line 133:                     Accept: 'application/ld+json, application/json',",
                "// Line 134:                 },",
                "// Line 135:                 timeout: this.loderTimeout,",
                "// Line 136:             },",
                "// Line 137:             {",
                "// Line 138:                 throwErrorWhenResponseNotOk: false,",
                "// Line 139:                 validators: [validateContentTypeSetAsJsonLD],",
                "// Line 140:             },",
                "// Line 141:         ).then(res => {",
                "// Line 142:             if (!res.ok) {",
                "// Line 143:                 throw new Error(`${res.status} ${res.statusText}`);",
                "// Line 144:             } else {",
                "// Line 145:                 return res.json();",
                "// Line 146:             }",
                "// Line 147:         });",
                "// Line 148: ",
                "// vulnerable line: 149: return json as JsonLd;",
                "// Line 150:     }",
                "// Line 151: ",
                "// Line 152:     @bindThis",
                "// Line 153:     public sha256(data: string): string {",
                "// Line 154:         const hash = crypto.createHash('sha256');",
                "// Line 155:         hash.update(data);",
                "// Line 156:         return hash.digest('hex');",
                "// Line 157:     }",
                "// Line 158: }",
                "// Line 159: ",
                "// Line 160: @Injectable()",
                "// vulnerable line: 161: export class LdSignatureService {",
                "// Line 162:     constructor(",
                "// Line 163:         private httpRequestService: HttpRequestService,",
                "// Line 164:     ) {",
                "// Line 165:     }",
                "// Line 166: ",
                "// Line 167:     @bindThis",
                "// vulnerable line: 168: public use(): LdSignature {",
                "// vulnerable line: 169: return new LdSignature(this.httpRequestService);",
                "// Line 170:     }",
                "// Line 171: }"
            ]
        }
    ]
}