{
    "cve_id": "CVE-2022-4966",
    "cve_description": "A vulnerability was found in sequentech admin-console up to 6.1.7 and classified as problematic. Affected by this issue is some unknown functionality of the component Election Description Handler. The manipulation leads to cross site scripting. The attack may be launched remotely. Upgrading to version 7.0.0-beta.1 is able to address this issue. The patch is identified as 0043a6b1e6e0f5abc9557e73f9ffc524fc5d609d. It is recommended to upgrade the affected component. VDB-258782 is the identifier assigned to this vulnerability.",
    "cve_publish_date": "2024-04-01T12:15Z",
    "cwe_id": "CWE-79",
    "cwe_name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "cwe_description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
    "commit_message": "Fix some XSS (#292) (#293)\n\nThere was an issue with election description. During election creation,\r\nwe relied in ng-bind-html to sanitize the visualization of election\r\ndescription before being sanitized by the backend (because it has not\r\nyet been sent to the backend), but apparently it doesn't work for some\r\nxss. The same issue happened in election list when showing the\r\ndescription of the drafti election.\r\n\r\nWith this change, we always show the election description as plain text\r\nso that we don't need to sanitize it. Also see related issue with\r\nhtmlToText in common-ui: https://github.com/sequentech/common-ui/pull/221\r\nbecause sometimes we also called to our own htmlToText angular filter,\r\nand sanitization was also needed to happen there.\r\n\r\nAnother fix is to use $sanitize more pervasively in the election\r\ncreation screen, so that any reply from the server is also not trusted\r\nand properly sanitized.",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "create.js",
            "code_language": "JavaScript",
            "number_of_lines_added_for_mitigation": "5",
            "number_of_lines_deleted_vulnerable_to_cve": "4",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 62:         scope.allowEditElectionJson = ConfigService.allowEditElectionJson;",
                "// Line 63: ",
                "// Line 64:         if (ElectionsApi.currentElections.length === 0 && !!ElectionsApi.currentElection) {",
                "// Line 65:           scope.elections = [ElectionsApi.currentElection];",
                "// Line 66:         } else {",
                "// Line 67:           scope.elections = ElectionsApi.currentElections;",
                "// Line 68:           ElectionsApi.currentElections = [];",
                "// Line 69:         }",
                "// Line 70: ",
                "// Line 71:         function logInfo(text) {",
                "// vulnerable line: 72: scope.log += \"<p>\" + text + \"</p>\";",
                "// Line 73:         }",
                "// Line 74: ",
                "// Line 75:         function logError(text) {",
                "// Line 76:           scope.log += \"<p class=\"text-brand-danger\">\" + text + \"</p>\";",
                "// Line 77:         }",
                "// Line 78:         function validateEmail(email) {",
                "// Line 79:           var re = /^[^\\s@]+@[^\\s@.]+\\.[^\\s@.]+$/;",
                "// Line 80:           return re.test(email);",
                "// Line 81:         }",
                "// Line 82: ",
                "// Line 979:           }",
                "// Line 980:         ];",
                "// Line 981: ",
                "// Line 982:         Plugins.hook('election-create-add-checks', {'checks': checks, 'elections': scope.elections});",
                "// Line 983:         scope.errors = [];",
                "// Line 984:         CheckerService({",
                "// Line 985:           checks: checks,",
                "// Line 986:           data: scope.elections,",
                "// Line 987:           onError: function (errorKey, errorData) {",
                "// Line 988:             scope.errors.push({",
                "// vulnerable line: 989: data: errorData,",
                "// Line 990:               key: errorKey",
                "// Line 991:             });",
                "// Line 992:           }",
                "// Line 993:         });",
                "// Line 994: ",
                "// Line 995:         function createAuthEvent(el) {",
                "// Line 996:             console.log(\"creating auth event for election \" + el.title);",
                "// Line 997:             var deferred = $q.defer();",
                "// Line 998:             // Creating the authentication",
                "// Line 999:             logInfo($i18next('avAdmin.create.creating', {title: el.title}));",
                "// Line 1071:             console.log(\"adding census for election \" + el.title);",
                "// Line 1072:             var deferred = $q.defer();",
                "// Line 1073: ",
                "// Line 1074:             // Adding the census",
                "// Line 1075:             logInfo($i18next('avAdmin.create.census', {title: el.title, id: el.id}));",
                "// Line 1076: ",
                "// Line 1077:             var data = {",
                "// Line 1078:               election: el,",
                "// Line 1079:               error: function (errorMsg) {",
                "// Line 1080:                   scope.errors.push({",
                "// vulnerable line: 1081: data: {message: errorMsg},",
                "// Line 1082:                     key: \"election-census-createel-unknown\"",
                "// Line 1083:                   });",
                "// Line 1084:                 },",
                "// Line 1085:               disableOk: false,",
                "// Line 1086:               cancel: function (error) {",
                "// Line 1087:                 Plugins.hook('census-csv-load-error', error);",
                "// Line 1088:               },",
                "// Line 1089:               close: function () {}",
                "// Line 1090:             };",
                "// Line 1091:             CsvLoad.uploadUponElCreation(data)",
                "// Line 1309:               function (data)",
                "// Line 1310:               {",
                "// Line 1311:                 scope.elections = angular.fromJson(data.electionJson);",
                "// Line 1312: ",
                "// Line 1313:                 scope.errors = [];",
                "// Line 1314:                 CheckerService({",
                "// Line 1315:                   checks: checks,",
                "// Line 1316:                   data: scope.elections,",
                "// Line 1317:                   onError: function (errorKey, errorData) {",
                "// Line 1318:                     scope.errors.push({",
                "// vulnerable line: 1319: data: errorData,",
                "// Line 1320:                       key: errorKey",
                "// Line 1321:                     });",
                "// Line 1322:                   }",
                "// Line 1323:                 });",
                "// Line 1324:               }",
                "// Line 1325:             );",
                "// Line 1326:         };",
                "// Line 1327: ",
                "// Line 1328:         function createElections() {",
                "// Line 1329:             var deferred = $q.defer();"
            ]
        }
    ]
}