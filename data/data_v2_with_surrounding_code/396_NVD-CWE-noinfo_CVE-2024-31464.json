{
    "cve_id": "CVE-2024-31464",
    "cve_description": "XWiki Platform is a generic wiki platform. Starting in version 5.0-rc-1 and prior to versions 14.10.19, 15.5.4, and 15.9-rc-1, it is possible to access the hash of a password by using the diff feature of the history whenever the object storing the password is deleted. Using that vulnerability it's possible for an attacker to have access to the hash password of a user if they have rights to edit the users' page.  With the default right scheme in XWiki this vulnerability is normally prevented on user profiles, except by users with Admin rights. Note that this vulnerability also impacts any extensions that might use passwords stored in xobjects: for those usecases it depends on the right of those pages. There is currently no way to be 100% sure that this vulnerability has been exploited, as an attacker with enough privilege could have deleted the revision where the xobject was deleted after rolling-back the deletion. But again, this operation requires high privileges on the target page (Admin right). A page with a user password xobject which have in its history a revision where the object has been deleted should be considered at risk and the password should be changed there. a diff, to ensure it's not coming from a password field. As another mitigation, admins should ensure that the user pages are properly protected: the edit right shouldn't be allowed for other users than Admin and owner of the profile (which is the default right). There is not much workaround possible for a privileged user other than upgrading XWiki.",
    "cve_publish_date": "2024-04-10T19:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "XWIKI-19948: Bad diff information when xobject is deleted (#2439)\n\n  * Ensure to retrieve the xclass even when the xobject has been deleted\r\n  * Ensure the BaseObject contains an XClass reference when creating it\r\n    in XWikiDocument#getObjectDiff",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "BaseObject.java",
            "code_language": "Java",
            "number_of_lines_added_for_mitigation": "6",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "XWikiDocument.java",
            "code_language": "Java",
            "number_of_lines_added_for_mitigation": "4",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 7140:         // First, iterate over the old objects.",
                "// Line 7141:         for (List<BaseObject> objects : fromDoc.getXObjects().values()) {",
                "// Line 7142:             for (BaseObject originalObj : objects) {",
                "// Line 7143:                 // This happens when objects are deleted, and the document is still in the cache",
                "// Line 7144:                 // storage.",
                "// Line 7145:                 if (originalObj != null) {",
                "// Line 7146:                     BaseObject newObj = toDoc.getXObject(originalObj.getXClassReference(), originalObj.getNumber());",
                "// Line 7147:                     List<ObjectDiff> dlist;",
                "// Line 7148:                     if (newObj == null) {",
                "// Line 7149:                         // The object was deleted.",
                "// vulnerable line: 7150: dlist = new BaseObject().getDiff(originalObj, context);",
                "// Line 7151:                         ObjectDiff deleteMarker =",
                "// Line 7152:                             new ObjectDiff(originalObj.getXClassReference(), originalObj.getNumber(),",
                "// Line 7153:                                 originalObj.getGuid(), ObjectDiff.ACTION_OBJECTREMOVED, \"\", \"\", \"\", \"\");",
                "// Line 7154:                         dlist.add(0, deleteMarker);",
                "// Line 7155:                     } else {",
                "// Line 7156:                         // The object exists in both versions, but might have been changed.",
                "// Line 7157:                         dlist = newObj.getDiff(originalObj, context);",
                "// Line 7158:                     }",
                "// Line 7159:                     if (!dlist.isEmpty()) {",
                "// Line 7160:                         difflist.add(dlist);"
            ]
        }
    ]
}