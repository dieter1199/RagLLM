{
    "cve_id": "CVE-2020-36826",
    "cve_description": "A vulnerability was found in AwesomestCode LiveBot. It has been classified as problematic. Affected is the function parseSend of the file js/parseMessage.js. The manipulation leads to cross site scripting. It is possible to launch the attack remotely. This product is using a rolling release to provide continious delivery. Therefore, no version details for affected nor updated releases are available. Upgrading to version 0.1 is able to address this issue. The name of the patch is 57505527f838d1e46e8f93d567ba552a30185bfa. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-257784.",
    "cve_publish_date": "2024-03-25T07:15Z",
    "cwe_id": "CWE-79",
    "cwe_name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "cwe_description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
    "commit_message": "Fixed a serious vulnerability\n\nThere was a serious remote code execution vulnerability that allowed anybody to execute commands on the machine of everybody they came into contact with, who was using Livebot. The 'hacker' would not have to use livebot to run this attack.\n\nThe exact vulnerabilty will not be spread to anybody for the time being",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "parseMessage.js",
            "code_language": "JavaScript",
            "number_of_lines_added_for_mitigation": "5",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 7: ",
                "// Line 8:         let shortcut = shortcuts.find(s => s.face === a);",
                "// Line 9:         if (shortcut) return idToUni[shortcut.id];",
                "// Line 10:         return a;",
                "// Line 11:     });",
                "// Line 12: ",
                "// Line 13:     return text;",
                "// Line 14: }",
                "// Line 15: ",
                "// Line 16: let parseMessage = (text, msg = null, embed = false) => {",
                "// vulnerable line: 17: // Remove html in the message",
                "// vulnerable line: 18: let textContent = text.replace(/(<)([^>]+)(>)/gm, '&lt;$2&gt;');",
                "// Line 19: ",
                "// Line 20:     // General message parsing",
                "// Line 21:     textContent = textContent.replace(/https?:\\/\\/.+?(\\/(.+?(\\?.+?((?= )|$)))|(?= )|$)/mg, '<a href=\"$&\" rel=\"noreferrer noopener\" title=\"$&\" target=\"_blank\">$&</a>');",
                "// Line 22: ",
                "// Line 23:     // Add html tags for markup",
                "// Line 24:     textContent = textContent.replace(/\\*\\*(.*?)\\*\\*/gm, '<strong>$1</strong>');",
                "// Line 25:     textContent = textContent.replace(/__(.*?)__/gm, '<u>$1</u>');",
                "// Line 26:     textContent = textContent.replace(/\\*(.*?)\\*/gm, '<i>$1</i>');",
                "// Line 27:     textContent = textContent.replace(/```([^",
                "// Line 28: ]+)"
            ]
        }
    ]
}