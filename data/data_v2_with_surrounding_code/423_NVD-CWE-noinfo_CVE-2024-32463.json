{
    "cve_id": "CVE-2024-32463",
    "cve_description": "phlex is an open source framework for building object-oriented views in Ruby. There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data. The filter to detect and prevent the use of the `javascript:` URL scheme in the `href` attribute of an `<a>` tag could be bypassed with tab `    ` or newline `\\n` characters between the characters of the protocol, e.g. `java    script:`. This vulnerability is fixed in 1.10.1, 1.9.2, 1.8.3, 1.7.2, 1.6.3, 1.5.3, and 1.4.2. Configuring a Content Security Policy that does not allow `unsafe-inline` would effectively prevent this vulnerability from being exploited.",
    "cve_publish_date": "2024-04-17T16:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Fix XSS",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "sgml.rb",
            "code_language": "Ruby",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 375:             attributes.each do |k, v|",
                "// Line 376:                 next unless v",
                "// Line 377: ",
                "// Line 378:                 name = case k",
                "// Line 379:                     when String then k",
                "// Line 380:                     when Symbol then k.name.tr(\"_\", \"-\")",
                "// Line 381:                     else raise ArgumentError, \"Attribute keys should be Strings or Symbols.\"",
                "// Line 382:                 end",
                "// Line 383: ",
                "// Line 384:                 lower_name = name.downcase",
                "// vulnerable line: 385: next if lower_name == \"href\" && v.start_with?(/\\s*javascript:/i)",
                "// Line 386: ",
                "// Line 387:                 # Detect unsafe attribute names. Attribute names are considered unsafe if they match an event attribute or include unsafe characters.",
                "// Line 388:                 if HTML::EVENT_ATTRIBUTES.include?(lower_name) || name.match?(/[<>&\"']/)",
                "// Line 389:                     raise ArgumentError, \"Unsafe attribute name detected: #{k}.\"",
                "// Line 390:                 end",
                "// Line 391: ",
                "// Line 392:                 case v",
                "// Line 393:                 when true",
                "// Line 394:                     buffer << \" \" << name",
                "// Line 395:                 when String"
            ]
        }
    ]
}