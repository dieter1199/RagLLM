{
    "cve_id": "CVE-2024-32962",
    "cve_description": "xml-crypto is an xml digital signature and encryption library for Node.js. In affected versions the default configuration does not check authorization of the signer, it only checks the validity of the signature per section 3.2.2 of the w3 xmldsig-core-20080610 spec. As such, without additional validation steps, the default configuration allows a malicious actor to re-sign an XML document, place the certificate in a `<KeyInfo />` element, and pass `xml-crypto` default validation checks. As a result `xml-crypto` trusts by default any certificate provided via digitally signed XML document's `<KeyInfo />`. `xml-crypto` prefers to use any certificate provided via digitally signed XML document's `<KeyInfo />` even if library was configured to use specific certificate (`publicCert`) for signature verification purposes.  An attacker can spoof signature verification by modifying XML document and replacing existing signature with signature generated with malicious private key (created by attacker) and by attaching that private key's certificate to `<KeyInfo />` element. This vulnerability is combination of changes introduced to `4.0.0` on pull request 301 / commit `c2b83f98` and has been addressed in version 6.0.0 with pull request 445 / commit `21201723d`. Users are advised to upgrade. Users unable to upgrade may either check the certificate extracted via `getCertFromKeyInfo` against trusted certificates before accepting the results of the validation or set `xml-crypto's getCertFromKeyInfo` to `() => undefined` forcing `xml-crypto` to use an explicitly configured `publicCert` or `privateKey` for signature verification.",
    "cve_publish_date": "2024-05-02T07:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Add support for <X509Certificate /> in <KeyInfo />; remove `KeyInfoProvider` (#301)\n\n* Replace `KeyInfoProvider` with plugable methods\r\n\r\nCo-authored-by: Ivan <admin@clab.hr>\r\nCo-authored-by: shunkica <ivannovak90@gmail.com>",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "document-test.js",
            "code_language": "TypeScript",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 10:     const doc = new xmldom.DOMParser().parseFromString(xml);",
                "// Line 11:     const signature = new xmldom.DOMParser().parseFromString(",
                "// Line 12:       xpath",
                "// Line 13:         .select(",
                "// Line 14:           \"/*/*[local-name(.)='Signature' and namespace-uri(.)='http://www.w3.org/2000/09/xmldsig#']\",",
                "// Line 15:           doc",
                "// Line 16:         )[0]",
                "// Line 17:         .toString()",
                "// Line 18:     );",
                "// Line 19:     const sig = new crypto.SignedXml();",
                "// vulnerable line: 20: sig.keyInfoProvider = new crypto.FileKeyInfo(\"./test/static/feide_public.pem\");",
                "// Line 21:     sig.loadSignature(signature);",
                "// Line 22:     const result = sig.checkSignature(xml);",
                "// Line 23: ",
                "// Line 24:     expect(result).to.be.true;",
                "// Line 25:   });",
                "// Line 26: ",
                "// Line 27:   it(\"test with a document (using StringKeyInfo)\", function () {",
                "// Line 28:     const xml = fs.readFileSync(\"./test/static/valid_saml.xml\", \"utf-8\");",
                "// Line 29:     const doc = new xmldom.DOMParser().parseFromString(xml);",
                "// Line 30:     const signature = new xmldom.DOMParser().parseFromString(",
                "// Line 31:       xpath",
                "// Line 32:         .select(",
                "// Line 33:           \"/*/*[local-name(.)='Signature' and namespace-uri(.)='http://www.w3.org/2000/09/xmldsig#']\",",
                "// Line 34:           doc",
                "// Line 35:         )[0]",
                "// Line 36:         .toString()",
                "// Line 37:     );",
                "// Line 38:     const sig = new crypto.SignedXml();",
                "// Line 39:     const feidePublicCert = fs.readFileSync(\"./test/static/feide_public.pem\");",
                "// vulnerable line: 40: sig.keyInfoProvider = new crypto.StringKeyInfo(feidePublicCert);",
                "// Line 41:     sig.loadSignature(signature);",
                "// Line 42:     const result = sig.checkSignature(xml);",
                "// Line 43: ",
                "// Line 44:     expect(result).to.be.true;",
                "// Line 45:   });",
                "// Line 46: });"
            ]
        },
        {
            "filename_of_changes": "utils-tests.js",
            "code_language": "TypeScript",
            "number_of_lines_added_for_mitigation": "29",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        }
    ]
}