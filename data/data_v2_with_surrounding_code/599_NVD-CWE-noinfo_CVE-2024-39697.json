{
    "cve_id": "CVE-2024-39697",
    "cve_description": "phonenumber is a library for parsing, formatting and validating international phone numbers. Since 0.3.4, the phonenumber parsing code may panic due to a panic-guarded out-of-bounds access on the phonenumber string. In a typical deployment of rust-phonenumber, this may get triggered by feeding a maliciously crafted phonenumber, e.g. over the network, specifically strings of the form `+dwPAA;phone-context=AA`, where the \"number\" part potentially parses as a number larger than 2^56. This vulnerability is fixed in 0.3.6.",
    "cve_publish_date": "2024-07-09T15:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Fit NationalNumber in 64 bits",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "mod.rs",
            "code_language": "Rust",
            "number_of_lines_added_for_mitigation": "10",
            "number_of_lines_deleted_vulnerable_to_cve": "28",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 75:     }",
                "// Line 76: ",
                "// Line 77:     if number.national.len() > consts::MAX_LENGTH_FOR_NSN {",
                "// Line 78:         return Err(error::Parse::TooLong);",
                "// Line 79:     }",
                "// Line 80: ",
                "// Line 81:     Ok(PhoneNumber {",
                "// Line 82:         code: country::Code {",
                "// Line 83:             value: number.prefix.map(|p| p.parse()).unwrap_or(Ok(0))?,",
                "// Line 84:             source: number.country,",
                "// vulnerable line: 85: },",
                "// Line 86: ",
                "// vulnerable line: 87: national: NationalNumber {",
                "// vulnerable line: 88: value: number.national.parse()?,",
                "// vulnerable line: 89: zeros: number.national.chars().take_while(|&c| c == '0').count() as u8,",
                "// vulnerable line: 90: },",
                "// Line 91: ",
                "// Line 92:         extension: number.extension.map(|s| Extension(s.into_owned())),",
                "// Line 93:         carrier: number.carrier.map(|s| Carrier(s.into_owned())),",
                "// Line 94:     })",
                "// Line 95: }",
                "// Line 96: ",
                "// Line 97: #[cfg(test)]",
                "// Line 98: mod test {",
                "// Line 99:     use crate::country;",
                "// Line 100:     use crate::national_number::NationalNumber;",
                "// Line 101:     use crate::parser;",
                "// Line 102:     use crate::phone_number::PhoneNumber;",
                "// Line 103: ",
                "// Line 104:     #[test]",
                "// Line 105:     fn parse() {",
                "// Line 106:         let mut number = PhoneNumber {",
                "// Line 107:             code: country::Code {",
                "// Line 108:                 value: 64,",
                "// Line 109:                 source: country::Source::Default,",
                "// vulnerable line: 110: },",
                "// Line 111: ",
                "// vulnerable line: 112: national: NationalNumber {",
                "// vulnerable line: 113: value: 33316005,",
                "// vulnerable line: 114: zeros: 0,",
                "// vulnerable line: 115: },",
                "// Line 116: ",
                "// Line 117:             extension: None,",
                "// Line 118:             carrier: None,",
                "// Line 119:         };",
                "// Line 120: ",
                "// Line 121:         number.code.source = country::Source::Default;",
                "// Line 122:         assert_eq!(",
                "// Line 123:             number,",
                "// Line 124:             parser::parse(Some(country::NZ), \"033316005\").unwrap()",
                "// Line 125:         );",
                "// Line 191:         );",
                "// Line 192:         assert_eq!(",
                "// Line 193:             number,",
                "// Line 194:             parser::parse(Some(country::NZ), \"+ 00 64 3 331 6005\").unwrap()",
                "// Line 195:         );",
                "// Line 196: ",
                "// Line 197:         let number = PhoneNumber {",
                "// Line 198:             code: country::Code {",
                "// Line 199:                 value: 64,",
                "// Line 200:                 source: country::Source::Number,",
                "// vulnerable line: 201: },",
                "// Line 202: ",
                "// vulnerable line: 203: national: NationalNumber {",
                "// vulnerable line: 204: value: 64123456,",
                "// vulnerable line: 205: zeros: 0,",
                "// vulnerable line: 206: },",
                "// Line 207: ",
                "// Line 208:             extension: None,",
                "// Line 209:             carrier: None,",
                "// Line 210:         };",
                "// Line 211: ",
                "// Line 212:         assert_eq!(",
                "// Line 213:             number,",
                "// Line 214:             parser::parse(Some(country::NZ), \"64(0)64123456\").unwrap()",
                "// Line 215:         );",
                "// Line 216: ",
                "// Line 217:         assert_eq!(",
                "// Line 218:             PhoneNumber {",
                "// Line 219:                 code: country::Code {",
                "// Line 220:                     value: 49,",
                "// Line 221:                     source: country::Source::Default,",
                "// vulnerable line: 222: },",
                "// Line 223: ",
                "// vulnerable line: 224: national: NationalNumber {",
                "// vulnerable line: 225: value: 30123456,",
                "// vulnerable line: 226: zeros: 0,",
                "// vulnerable line: 227: },",
                "// Line 228: ",
                "// Line 229:                 extension: None,",
                "// Line 230:                 carrier: None,",
                "// vulnerable line: 231: },",
                "// Line 232:             parser::parse(Some(country::DE), \"301/23456\").unwrap()",
                "// Line 233:         );",
                "// Line 234: ",
                "// Line 235:         assert_eq!(",
                "// Line 236:             PhoneNumber {",
                "// Line 237:                 code: country::Code {",
                "// Line 238:                     value: 81,",
                "// Line 239:                     source: country::Source::Plus,",
                "// vulnerable line: 240: },",
                "// Line 241: ",
                "// vulnerable line: 242: national: NationalNumber {",
                "// vulnerable line: 243: value: 2345,",
                "// vulnerable line: 244: zeros: 0,",
                "// vulnerable line: 245: },",
                "// Line 246: ",
                "// Line 247:                 extension: None,",
                "// Line 248:                 carrier: None,",
                "// vulnerable line: 249: },",
                "// Line 250:             parser::parse(Some(country::JP), \"+81 *2345\").unwrap()",
                "// Line 251:         );",
                "// Line 252: ",
                "// Line 253:         assert_eq!(",
                "// Line 254:             PhoneNumber {",
                "// Line 255:                 code: country::Code {",
                "// Line 256:                     value: 64,",
                "// Line 257:                     source: country::Source::Default,",
                "// vulnerable line: 258: },",
                "// Line 259: ",
                "// vulnerable line: 260: national: NationalNumber {",
                "// vulnerable line: 261: value: 12,",
                "// vulnerable line: 262: zeros: 0,",
                "// vulnerable line: 263: },",
                "// Line 264: ",
                "// Line 265:                 extension: None,",
                "// Line 266:                 carrier: None,",
                "// vulnerable line: 267: },",
                "// Line 268:             parser::parse(Some(country::NZ), \"12\").unwrap()",
                "// Line 269:         );",
                "// Line 270: ",
                "// Line 271:         assert_eq!(",
                "// Line 272:             PhoneNumber {",
                "// Line 273:                 code: country::Code {",
                "// Line 274:                     value: 55,",
                "// Line 275:                     source: country::Source::Default,",
                "// vulnerable line: 276: },",
                "// Line 277: ",
                "// vulnerable line: 278: national: NationalNumber {",
                "// vulnerable line: 279: value: 3121286979,",
                "// vulnerable line: 280: zeros: 0,",
                "// vulnerable line: 281: },",
                "// Line 282: ",
                "// Line 283:                 extension: None,",
                "// Line 284:                 carrier: Some(\"12\".into()),",
                "// vulnerable line: 285: },",
                "// Line 286:             parser::parse(Some(country::BR), \"012 3121286979\").unwrap()",
                "// Line 287:         );",
                "// Line 288:     }",
                "// Line 289: ",
                "// Line 290:     #[test]",
                "// Line 291:     fn issue_43() {",
                "// Line 292:         let res = parser::parse(None, \" 2 22#:\");",
                "// Line 293:         assert!(res.is_err());",
                "// Line 294:     }",
                "// Line 295: "
            ]
        },
        {
            "filename_of_changes": "national_number.rs",
            "code_language": "Rust",
            "number_of_lines_added_for_mitigation": "21",
            "number_of_lines_deleted_vulnerable_to_cve": "13",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 29:     /// http://en.wikipedia.org/wiki/%2B39 for more details.",
                "// Line 30:     ///",
                "// Line 31:     /// These fields can be safely ignored (there is no need to set them) for",
                "// Line 32:     /// most countries. Some limited number of countries behave like Italy - for",
                "// Line 33:     /// these cases, if the leading zero(s) of a number would be retained even",
                "// Line 34:     /// when dialling internationally, set this flag to true, and also set the",
                "// Line 35:     /// number of leading zeros.",
                "// Line 36:     ///",
                "// Line 37:     /// Clients who use the parsing or conversion functionality of the i18n phone",
                "// Line 38:     /// number libraries will have these fields set if necessary automatically.",
                "// vulnerable line: 39: pub(crate) zeros: u8,",
                "// vulnerable line: 40: }",
                "// Line 41: ",
                "// vulnerable line: 42: impl NationalNumber {",
                "// vulnerable line: 43: /// The number without any leading zeroes.",
                "// vulnerable line: 44: pub fn value(&self) -> u64 {",
                "// vulnerable line: 45: self.value",
                "// vulnerable line: 46: }",
                "// Line 47: ",
                "// vulnerable line: 48: /// The number of leading zeroes.",
                "// Line 49:     pub fn zeros(&self) -> u8 {",
                "// vulnerable line: 50: self.zeros",
                "// vulnerable line: 51: }",
                "// vulnerable line: 52: }",
                "// Line 53: ",
                "// Line 54: impl From<NationalNumber> for u64 {",
                "// Line 55:     fn from(n: NationalNumber) -> u64 {",
                "// Line 56:         n.value",
                "// vulnerable line: 57: }",
                "// vulnerable line: 58: }",
                "// Line 59: ",
                "// Line 60: impl fmt::Display for NationalNumber {",
                "// Line 61:     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {",
                "// vulnerable line: 62: for _ in 0..self.zeros {",
                "// Line 63:             write!(f, \"0\")?;",
                "// vulnerable line: 64: }",
                "// Line 65: ",
                "// vulnerable line: 66: write!(f, \"{}\", self.value)",
                "// vulnerable line: 67: }",
                "// vulnerable line: 68: }"
            ]
        }
    ]
}