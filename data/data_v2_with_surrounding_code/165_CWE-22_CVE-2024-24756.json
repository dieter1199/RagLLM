{
    "cve_id": "CVE-2024-24756",
    "cve_description": "Crafatar serves Minecraft avatars based on the skin for use in external applications. Files outside of the `lib/public/` directory can be requested from the server. Instances running behind Cloudflare (including crafatar.com) are not affected. Instances using the Docker container as shown in the README are affected, but only files within the container can be read. By default, all of the files within the container can also be found in this repository and are not confidential. This vulnerability is patched in 2.1.5.",
    "cve_publish_date": "2024-02-01T23:15Z",
    "cwe_id": "CWE-22",
    "cwe_name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
    "cwe_description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
    "commit_message": "improve URL parsing\n\nuses `new URL()` and `decodeURI()` instead of `url.parse()`\nalso checks that the requested file is in a subdirectory of `public/` before serving the file\n\nfixes path traversal vulnerability GHSA-5cxq-25mp-q5f2",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "avatars.js",
            "code_language": "JavaScript",
            "number_of_lines_added_for_mitigation": "7",
            "number_of_lines_deleted_vulnerable_to_cve": "9",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 7: ",
                "// Line 8: // handle the appropriate 'default=' response",
                "// Line 9: // uses either mhf_steve or mhf_alex (based on +userId+) if no +def+ given",
                "// Line 10: // callback: response object",
                "// Line 11: function handle_default(img_status, userId, size, def, req, err, callback) {",
                "// Line 12:   def = def || skins.default_skin(userId);",
                "// Line 13:   var defname = def.toLowerCase();",
                "// Line 14:   if (defname !== \"steve\" && defname !== \"mhf_steve\" && defname !== \"alex\" && defname !== \"mhf_alex\") {",
                "// Line 15:     if (helpers.id_valid(def)) {",
                "// Line 16:       // clean up the old URL to match new image",
                "// vulnerable line: 17: var parsed = req.url;",
                "// vulnerable line: 18: delete parsed.query.default;",
                "// vulnerable line: 19: delete parsed.search;",
                "// vulnerable line: 20: parsed.path_list[1] = def;",
                "// vulnerable line: 21: parsed.pathname = \"/\" + parsed.path_list.join(\"/\");",
                "// vulnerable line: 22: var newUrl = url.format(parsed);",
                "// Line 23:       callback({",
                "// Line 24:         status: img_status,",
                "// Line 25:         redirect: newUrl,",
                "// Line 26:         err: err,",
                "// Line 27:       });",
                "// Line 28:     } else {",
                "// Line 29:       callback({",
                "// Line 30:         status: img_status,",
                "// Line 31:         redirect: def,",
                "// Line 32:         err: err,",
                "// Line 46:         hash: def,",
                "// Line 47:         err: resize_err || err,",
                "// Line 48:       });",
                "// Line 49:     });",
                "// Line 50:   }",
                "// Line 51: }",
                "// Line 52: ",
                "// Line 53: // GET avatar request",
                "// Line 54: module.exports = function(req, callback) {",
                "// Line 55:   var userId = (req.url.path_list[1] || \"\").split(\".\")[0];",
                "// vulnerable line: 56: var size = parseInt(req.url.query.size) || config.avatars.default_size;",
                "// vulnerable line: 57: var def = req.url.query.default;",
                "// vulnerable line: 58: var overlay = Object.prototype.hasOwnProperty.call(req.url.query, \"overlay\") || Object.prototype.hasOwnProperty.call(req.url.query, \"helm\");",
                "// Line 59: ",
                "// Line 60:   // check for extra paths",
                "// Line 61:   if (req.url.path_list.length > 2) {",
                "// Line 62:     callback({",
                "// Line 63:       status: -2,",
                "// Line 64:       body: \"Invalid Path\",",
                "// Line 65:       code: 404,",
                "// Line 66:     });",
                "// Line 67:     return;",
                "// Line 68:   }"
            ]
        },
        {
            "filename_of_changes": "capes.js",
            "code_language": "JavaScript",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: var helpers = require(\"../helpers\");",
                "// Line 2: var cache = require(\"../cache\");",
                "// Line 3: ",
                "// Line 4: // GET cape request",
                "// Line 5: module.exports = function(req, callback) {",
                "// Line 6:   var userId = (req.url.path_list[1] || \"\").split(\".\")[0];",
                "// vulnerable line: 7: var def = req.url.query.default;",
                "// Line 8:   var rid = req.id;",
                "// Line 9: ",
                "// Line 10:   // check for extra paths",
                "// Line 11:   if (req.url.path_list.length > 2) {",
                "// Line 12:     callback({",
                "// Line 13:       status: -2,",
                "// Line 14:       body: \"Invalid Path\",",
                "// Line 15:       code: 404",
                "// Line 16:     });",
                "// Line 17:     return;"
            ]
        },
        {
            "filename_of_changes": "renders.js",
            "code_language": "JavaScript",
            "number_of_lines_added_for_mitigation": "7",
            "number_of_lines_deleted_vulnerable_to_cve": "9",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 10: ",
                "// Line 11: // handle the appropriate 'default=' response",
                "// Line 12: // uses either mhf_steve or mhf_alex (based on +userId+) if no +def+ given",
                "// Line 13: // callback: response object",
                "// Line 14: function handle_default(rid, scale, overlay, body, img_status, userId, size, def, req, err, callback) {",
                "// Line 15:   def = def || skins.default_skin(userId);",
                "// Line 16:   var defname = def.toLowerCase();",
                "// Line 17:   if (defname !== \"steve\" && defname !== \"mhf_steve\" && defname !== \"alex\" && defname !== \"mhf_alex\") {",
                "// Line 18:     if (helpers.id_valid(def)) {",
                "// Line 19:       // clean up the old URL to match new image",
                "// vulnerable line: 20: var parsed = req.url;",
                "// vulnerable line: 21: delete parsed.query.default;",
                "// vulnerable line: 22: delete parsed.search;",
                "// vulnerable line: 23: parsed.path_list[2] = def;",
                "// vulnerable line: 24: parsed.pathname = \"/\" + parsed.path_list.join(\"/\");",
                "// vulnerable line: 25: var newUrl = url.format(parsed);",
                "// Line 26:       callback({",
                "// Line 27:         status: img_status,",
                "// Line 28:         redirect: newUrl,",
                "// Line 29:         err: err",
                "// Line 30:       });",
                "// Line 31:     } else {",
                "// Line 32:       callback({",
                "// Line 33:         status: img_status,",
                "// Line 34:         redirect: def,",
                "// Line 35:         err: err",
                "// Line 55:     });",
                "// Line 56:   }",
                "// Line 57: }",
                "// Line 58: ",
                "// Line 59: // GET render request",
                "// Line 60: module.exports = function(req, callback) {",
                "// Line 61:   var raw_type = req.url.path_list[1] || \"\";",
                "// Line 62:   var rid = req.id;",
                "// Line 63:   var body = raw_type === \"body\";",
                "// Line 64:   var userId = (req.url.path_list[2] || \"\").split(\".\")[0];",
                "// vulnerable line: 65: var def = req.url.query.default;",
                "// vulnerable line: 66: var scale = parseInt(req.url.query.scale) || config.renders.default_scale;",
                "// vulnerable line: 67: var overlay = Object.prototype.hasOwnProperty.call(req.url.query, \"overlay\") || Object.prototype.hasOwnProperty.call(req.url.query, \"helm\");",
                "// Line 68: ",
                "// Line 69:   // check for extra paths",
                "// Line 70:   if (req.url.path_list.length > 3) {",
                "// Line 71:     callback({",
                "// Line 72:       status: -2,",
                "// Line 73:       body: \"Invalid Path\",",
                "// Line 74:       code: 404",
                "// Line 75:     });",
                "// Line 76:     return;",
                "// Line 77:   }"
            ]
        },
        {
            "filename_of_changes": "server.js",
            "code_language": "JavaScript",
            "number_of_lines_added_for_mitigation": "28",
            "number_of_lines_deleted_vulnerable_to_cve": "27",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 15: var routes = {",
                "// Line 16:   index: require(\"./routes/index\"),",
                "// Line 17:   avatars: require(\"./routes/avatars\"),",
                "// Line 18:   skins: require(\"./routes/skins\"),",
                "// Line 19:   renders: require(\"./routes/renders\"),",
                "// Line 20:   capes: require(\"./routes/capes\"),",
                "// Line 21: };",
                "// Line 22: ",
                "// Line 23: // serves assets from lib/public",
                "// Line 24: function asset_request(req, callback) {",
                "// vulnerable line: 25: var filename = path.join(__dirname, \"public\", req.url.path_list.join(\"/\"));",
                "// vulnerable line: 26: fs.access(filename, function(fs_err) {",
                "// vulnerable line: 27: if (!fs_err) {",
                "// vulnerable line: 28: fs.readFile(filename, function(err, data) {",
                "// vulnerable line: 29: callback({",
                "// vulnerable line: 30: body: data,",
                "// vulnerable line: 31: type: mime.getType(filename),",
                "// vulnerable line: 32: err: err,",
                "// vulnerable line: 33: });",
                "// vulnerable line: 34: });",
                "// vulnerable line: 35: } else {",
                "// vulnerable line: 36: callback({",
                "// vulnerable line: 37: body: \"Not found\",",
                "// vulnerable line: 38: status: -2,",
                "// vulnerable line: 39: code: 404,",
                "// vulnerable line: 40: });",
                "// vulnerable line: 41: }",
                "// vulnerable line: 42: });",
                "// vulnerable line: 43: }",
                "// Line 44: ",
                "// Line 45: // generates a 12 character random string",
                "// Line 46: function request_id() {",
                "// Line 47:   return Math.random().toString(36).substring(2, 14);",
                "// vulnerable line: 48: }",
                "// Line 49: ",
                "// vulnerable line: 50: // splits a URL path into an Array",
                "// vulnerable line: 51: // the path is resolved and decoded",
                "// Line 52: function path_list(pathname) {",
                "// vulnerable line: 53: // remove double and trailing slashes",
                "// vulnerable line: 54: pathname = pathname.replace(/\\/\\/+/g, \"/\").replace(/(.)\\/$/, \"$1\");",
                "// Line 55:   var list = pathname.split(\"/\");",
                "// Line 56:   list.shift();",
                "// vulnerable line: 57: for (var i = 0; i < list.length; i++) {",
                "// vulnerable line: 58: // URL decode",
                "// vulnerable line: 59: list[i] = querystring.unescape(list[i]);",
                "// vulnerable line: 60: }",
                "// Line 61:   return list;",
                "// vulnerable line: 62: }",
                "// Line 63: ",
                "// Line 64: // handles the +req+ by routing to the request to the appropriate module",
                "// Line 65: function requestHandler(req, res) {",
                "// vulnerable line: 66: req.url = url.parse(req.url, true);",
                "// vulnerable line: 67: req.url.query = req.url.query || {};",
                "// Line 68:   req.url.path_list = path_list(req.url.pathname);",
                "// Line 69: ",
                "// Line 70:   req.id = request_id();",
                "// Line 71:   req.start = Date.now();",
                "// Line 72: ",
                "// Line 73:   var local_path = req.url.path_list[0];",
                "// Line 74:   logging.debug(req.id, req.method, req.url.href);",
                "// Line 75: ",
                "// Line 76:   toobusy.maxLag(200);",
                "// Line 77:   if (toobusy() && !process.env.TRAVIS) {",
                "// Line 78:     response(req, res, {",
                "// Line 79:       status: -1,",
                "// Line 80:       body: \"Server is over capacity :/\",",
                "// Line 81:       err: \"Too busy\",",
                "// Line 82:       code: 503,",
                "// vulnerable line: 83: });",
                "// Line 84:     return;",
                "// vulnerable line: 85: }",
                "// Line 86: ",
                "// Line 87:   if (req.method === \"GET\" || req.method === \"HEAD\") {",
                "// Line 88:     try {",
                "// Line 89:       switch (local_path) {",
                "// Line 90:       case \"\":",
                "// Line 91:         routes.index(req, function(result) {",
                "// Line 92:           response(req, res, result);",
                "// vulnerable line: 93: });",
                "// Line 94:         break;",
                "// Line 95:       case \"avatars\":",
                "// Line 96:         routes.avatars(req, function(result) {",
                "// Line 97:           response(req, res, result);",
                "// vulnerable line: 98: });",
                "// Line 99:         break;",
                "// Line 100:       case \"skins\":",
                "// Line 101:         routes.skins(req, function(result) {",
                "// Line 102:           response(req, res, result);",
                "// vulnerable line: 103: });",
                "// Line 104:         break;",
                "// Line 105:       case \"renders\":",
                "// Line 106:         routes.renders(req, function(result) {",
                "// Line 107:           response(req, res, result);",
                "// vulnerable line: 108: });",
                "// Line 109:         break;",
                "// Line 110:       case \"capes\":",
                "// Line 111:         routes.capes(req, function(result) {",
                "// Line 112:           response(req, res, result);",
                "// vulnerable line: 113: });",
                "// Line 114:         break;",
                "// Line 115:       default:",
                "// Line 116:         asset_request(req, function(result) {",
                "// Line 117:           response(req, res, result);",
                "// vulnerable line: 118: });",
                "// vulnerable line: 119: }",
                "// Line 120:     } catch(e) {",
                "// Line 121:       var error = JSON.stringify(req.headers) + \"",
                "// Line 122: \" + e.stack;",
                "// Line 123:       response(req, res, {",
                "// Line 124:         status: -1,",
                "// Line 125:         body: config.server.debug_enabled ? error : \"Internal Server Error\",",
                "// Line 126:         err: error,",
                "// vulnerable line: 127: });",
                "// vulnerable line: 128: }",
                "// vulnerable line: 129: } else {",
                "// Line 130:     response(req, res, {",
                "// vulnerable line: 131: status: -2,",
                "// Line 132:       body: \"Method Not Allowed\",",
                "// Line 133:       code: 405,",
                "// vulnerable line: 134: });",
                "// vulnerable line: 135: }",
                "// vulnerable line: 136: }",
                "// Line 137: ",
                "// Line 138: var exp = {};",
                "// Line 139: ",
                "// Line 140: // Start the server",
                "// Line 141: exp.boot = function(callback) {",
                "// Line 142:   var port = config.server.port;",
                "// Line 143:   var bind_ip = config.server.bind;",
                "// Line 144:   server = http.createServer(requestHandler).listen(port, bind_ip, function() {",
                "// Line 145:     logging.log(\"Server running on http://\" + bind_ip + \":\" + port + \"/\");",
                "// Line 146:     if (callback) {",
                "// Line 147:       callback();",
                "// vulnerable line: 148: }",
                "// vulnerable line: 149: });",
                "// Line 150: ",
                "// Line 151:   // stop accepting new connections,",
                "// Line 152:   // wait for established connections to finish (30s max),",
                "// Line 153:   // then exit",
                "// Line 154:   process.on(\"SIGTERM\", function() {",
                "// Line 155:     logging.warn(\"Got SIGTERM, no longer accepting new connections!\");",
                "// Line 156: ",
                "// Line 157:     setTimeout(function() {",
                "// Line 158:       logging.error(\"Dropping connections after 30s. Force quit.\");",
                "// Line 159:       process.exit(1);",
                "// Line 160:     }, 30000);",
                "// Line 161: ",
                "// Line 162:     server.close(function() {",
                "// Line 163:       logging.log(\"All connections closed, shutting down.\");",
                "// Line 164:       process.exit();",
                "// vulnerable line: 165: });",
                "// vulnerable line: 166: });",
                "// Line 167: };",
                "// Line 168: ",
                "// Line 169: // Close the server",
                "// Line 170: exp.close = function(callback) {",
                "// Line 171:   helpers.stoplog();",
                "// Line 172:   server.close(callback);",
                "// Line 173: };",
                "// Line 174: ",
                "// Line 175: module.exports = exp;",
                "// Line 176: ",
                "// Line 177: if (require.main === module) {",
                "// Line 178:   logging.error(\"Please use 'npm start' or 'www.js'\");",
                "// Line 179:   process.exit(1);",
                "// vulnerable line: 180: }"
            ]
        },
        {
            "filename_of_changes": "skins.js",
            "code_language": "JavaScript",
            "number_of_lines_added_for_mitigation": "5",
            "number_of_lines_deleted_vulnerable_to_cve": "7",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 7: ",
                "// Line 8: // handle the appropriate 'default=' response",
                "// Line 9: // uses either mhf_steve or mhf_alex (based on +userId+) if no +def+ given",
                "// Line 10: // callback: response object",
                "// Line 11: function handle_default(img_status, userId, def, req, err, callback) {",
                "// Line 12:   def = def || skins.default_skin(userId);",
                "// Line 13:   var defname = def.toLowerCase();",
                "// Line 14:   if (defname !== \"steve\" && defname !== \"mhf_steve\" && defname !== \"alex\" && defname !== \"mhf_alex\") {",
                "// Line 15:     if (helpers.id_valid(def)) {",
                "// Line 16:       // clean up the old URL to match new image",
                "// vulnerable line: 17: var parsed = req.url;",
                "// vulnerable line: 18: delete parsed.query.default;",
                "// vulnerable line: 19: delete parsed.search;",
                "// vulnerable line: 20: parsed.path_list[1] = def;",
                "// vulnerable line: 21: parsed.pathname = \"/\" + parsed.path_list.join(\"/\");",
                "// vulnerable line: 22: var newUrl = url.format(parsed);",
                "// Line 23:       callback({",
                "// Line 24:         status: img_status,",
                "// Line 25:         redirect: newUrl,",
                "// Line 26:         err: err",
                "// Line 27:       });",
                "// Line 28:     } else {",
                "// Line 29:       callback({",
                "// Line 30:         status: img_status,",
                "// Line 31:         redirect: def,",
                "// Line 32:         err: err",
                "// Line 55:           err: lwip_err || err",
                "// Line 56:         });",
                "// Line 57:       }",
                "// Line 58:     });",
                "// Line 59:   }",
                "// Line 60: }",
                "// Line 61: ",
                "// Line 62: // GET skin request",
                "// Line 63: module.exports = function(req, callback) {",
                "// Line 64:   var userId = (req.url.path_list[1] || \"\").split(\".\")[0];",
                "// vulnerable line: 65: var def = req.url.query.default;",
                "// Line 66:   var rid = req.id;",
                "// Line 67: ",
                "// Line 68:   // check for extra paths",
                "// Line 69:   if (req.url.path_list.length > 2) {",
                "// Line 70:     callback({",
                "// Line 71:       status: -2,",
                "// Line 72:       body: \"Invalid Path\",",
                "// Line 73:       code: 404",
                "// Line 74:     });",
                "// Line 75:     return;"
            ]
        },
        {
            "filename_of_changes": "test.js",
            "code_language": "JavaScript",
            "number_of_lines_added_for_mitigation": "30",
            "number_of_lines_deleted_vulnerable_to_cve": "6",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 310:         url: \"http://localhost:3000/avatars/00000000000000000000000000000000?size=16\",",
                "// Line 311:         crc32: [3348154329],",
                "// Line 312:       },",
                "// Line 313:       \"avatar with non-existent uuid defaulting to mhf_alex\": {",
                "// Line 314:         url: \"http://localhost:3000/avatars/00000000000000000000000000000000?size=16&default=mhf_alex\",",
                "// Line 315:         crc32: [73899130],",
                "// Line 316:       },",
                "// Line 317:       \"avatar with non-existent uuid defaulting to uuid\": {",
                "// Line 318:         url: \"http://localhost:3000/avatars/00000000000000000000000000000000?size=16&default=853c80ef3c3749fdaa49938b674adae6\",",
                "// Line 319:         crc32: [0],",
                "// vulnerable line: 320: redirect: \"/avatars/853c80ef3c3749fdaa49938b674adae6?size=16\",",
                "// Line 321:       },",
                "// Line 322:       \"avatar with non-existent uuid defaulting to url\": {",
                "// Line 323:         url: \"http://localhost:3000/avatars/00000000000000000000000000000000?size=16&default=http%3A%2F%2Fexample.com%2FCaseSensitive\",",
                "// Line 324:         crc32: [0],",
                "// Line 325:         redirect: \"http://example.com/CaseSensitive\",",
                "// Line 326:       },",
                "// Line 327:       \"overlay avatar with existing uuid\": {",
                "// Line 328:         url: \"http://localhost:3000/avatars/853c80ef3c3749fdaa49938b674adae6?size=16&overlay\",",
                "// Line 329:         crc32: [575355728],",
                "// Line 330:       },",
                "// Line 332:         url: \"http://localhost:3000/avatars/00000000000000000000000000000000?size=16&overlay\",",
                "// Line 333:         crc32: [3348154329],",
                "// Line 334:       },",
                "// Line 335:       \"overlay avatar with non-existent uuid defaulting to mhf_alex\": {",
                "// Line 336:         url: \"http://localhost:3000/avatars/00000000000000000000000000000000?size=16&overlay&default=mhf_alex\",",
                "// Line 337:         crc32: [73899130],",
                "// Line 338:       },",
                "// Line 339:       \"overlay avatar with non-existent uuid defaulting to uuid\": {",
                "// Line 340:         url: \"http://localhost:3000/avatars/00000000000000000000000000000000?size=16&default=853c80ef3c3749fdaa49938b674adae6\",",
                "// Line 341:         crc32: [0],",
                "// vulnerable line: 342: redirect: \"/avatars/853c80ef3c3749fdaa49938b674adae6?size=16\",",
                "// Line 343:       },",
                "// Line 344:       \"overlay avatar with non-existent uuid defaulting to url\": {",
                "// Line 345:         url: \"http://localhost:3000/avatars/00000000000000000000000000000000?size=16&overlay&default=http%3A%2F%2Fexample.com%2FCaseSensitive\",",
                "// Line 346:         crc32: [0],",
                "// Line 347:         redirect: \"http://example.com/CaseSensitive\",",
                "// Line 348:       },",
                "// Line 349:       \"cape with existing uuid\": {",
                "// Line 350:         url: \"http://localhost:3000/capes/853c80ef3c3749fdaa49938b674adae6\",",
                "// Line 351:         crc32: [985789174],",
                "// Line 352:       },",
                "// Line 367:         url: \"http://localhost:3000/skins/00000000000000000000000000000000\",",
                "// Line 368:         crc32: [1853029228],",
                "// Line 369:       },",
                "// Line 370:       \"skin with non-existent uuid defaulting to mhf_alex\": {",
                "// Line 371:         url: \"http://localhost:3000/skins/00000000000000000000000000000000?default=mhf_alex\",",
                "// Line 372:         crc32: [427506205],",
                "// Line 373:       },",
                "// Line 374:       \"skin with non-existent uuid defaulting to uuid\": {",
                "// Line 375:         url: \"http://localhost:3000/skins/00000000000000000000000000000000?size=16&default=853c80ef3c3749fdaa49938b674adae6\",",
                "// Line 376:         crc32: [0],",
                "// vulnerable line: 377: redirect: \"/skins/853c80ef3c3749fdaa49938b674adae6?size=16\",",
                "// Line 378:       },",
                "// Line 379:       \"skin with non-existent uuid defaulting to url\": {",
                "// Line 380:         url: \"http://localhost:3000/skins/00000000000000000000000000000000?default=http%3A%2F%2Fexample.com%2FCaseSensitive\",",
                "// Line 381:         crc32: [0],",
                "// Line 382:         redirect: \"http://example.com/CaseSensitive\",",
                "// Line 383:       },",
                "// Line 384:       \"head render with existing uuid\": {",
                "// Line 385:         url: \"http://localhost:3000/renders/head/853c80ef3c3749fdaa49938b674adae6?scale=2\",",
                "// Line 386:         crc32: [1168786201],",
                "// Line 387:       },",
                "// Line 389:         url: \"http://localhost:3000/renders/head/00000000000000000000000000000000?scale=2\",",
                "// Line 390:         crc32: [3800926063],",
                "// Line 391:       },",
                "// Line 392:       \"head render with non-existent uuid defaulting to mhf_alex\": {",
                "// Line 393:         url: \"http://localhost:3000/renders/head/00000000000000000000000000000000?scale=2&default=mhf_alex\",",
                "// Line 394:         crc32: [4027858557],",
                "// Line 395:       },",
                "// Line 396:       \"head render with non-existent uuid defaulting to uuid\": {",
                "// Line 397:         url: \"http://localhost:3000/renders/head/00000000000000000000000000000000?scale=2&default=853c80ef3c3749fdaa49938b674adae6\",",
                "// Line 398:         crc32: [0],",
                "// vulnerable line: 399: redirect: \"/renders/head/853c80ef3c3749fdaa49938b674adae6?scale=2\",",
                "// Line 400:       },",
                "// Line 401:       \"head render with non-existent uuid defaulting to url\": {",
                "// Line 402:         url: \"http://localhost:3000/renders/head/00000000000000000000000000000000?scale=2&default=http%3A%2F%2Fexample.com%2FCaseSensitive\",",
                "// Line 403:         crc32: [0],",
                "// Line 404:         redirect: \"http://example.com/CaseSensitive\",",
                "// Line 405:       },",
                "// Line 406:       \"overlay head render with existing uuid\": {",
                "// Line 407:         url: \"http://localhost:3000/renders/head/853c80ef3c3749fdaa49938b674adae6?scale=2&overlay\",",
                "// Line 408:         crc32: [2880579826],",
                "// Line 409:       },",
                "// Line 411:         url: \"http://localhost:3000/renders/head/00000000000000000000000000000000?scale=2&overlay\",",
                "// Line 412:         crc32: [3800926063],",
                "// Line 413:       },",
                "// Line 414:       \"overlay head render with non-existent uuid defaulting to mhf_alex\": {",
                "// Line 415:         url: \"http://localhost:3000/renders/head/00000000000000000000000000000000?scale=2&overlay&default=mhf_alex\",",
                "// Line 416:         crc32: [4027858557],",
                "// Line 417:       },",
                "// Line 418:       \"overlay head with non-existent uuid defaulting to uuid\": {",
                "// Line 419:         url: \"http://localhost:3000/renders/head/00000000000000000000000000000000?scale=2&overlay&default=853c80ef3c3749fdaa49938b674adae6\",",
                "// Line 420:         crc32: [0],",
                "// vulnerable line: 421: redirect: \"/renders/head/853c80ef3c3749fdaa49938b674adae6?scale=2&overlay=\",",
                "// Line 422:       },",
                "// Line 423:       \"overlay head render with non-existent uuid defaulting to url\": {",
                "// Line 424:         url: \"http://localhost:3000/renders/head/00000000000000000000000000000000?scale=2&overlay&default=http%3A%2F%2Fexample.com%2FCaseSensitive\",",
                "// Line 425:         crc32: [0],",
                "// Line 426:         redirect: \"http://example.com/CaseSensitive\",",
                "// Line 427:       },",
                "// Line 428:       \"body render with existing uuid\": {",
                "// Line 429:         url: \"http://localhost:3000/renders/body/853c80ef3c3749fdaa49938b674adae6?scale=2\",",
                "// Line 430:         crc32: [1144887125],",
                "// Line 431:       },",
                "// Line 433:         url: \"http://localhost:3000/renders/body/00000000000000000000000000000000?scale=2\",",
                "// Line 434:         crc32: [996962526],",
                "// Line 435:       },",
                "// Line 436:       \"body render with non-existent uuid defaulting to mhf_alex\": {",
                "// Line 437:         url: \"http://localhost:3000/renders/body/00000000000000000000000000000000?scale=2&default=mhf_alex\",",
                "// Line 438:         crc32: [4280894468],",
                "// Line 439:       },",
                "// Line 440:       \"body render with non-existent uuid defaulting to uuid\": {",
                "// Line 441:         url: \"http://localhost:3000/renders/body/00000000000000000000000000000000?scale=2&default=853c80ef3c3749fdaa49938b674adae6\",",
                "// Line 442:         crc32: [0],",
                "// vulnerable line: 443: redirect: \"/renders/body/853c80ef3c3749fdaa49938b674adae6?scale=2\",",
                "// Line 444:       },",
                "// Line 445:       \"body render with non-existent uuid defaulting to url\": {",
                "// Line 446:         url: \"http://localhost:3000/renders/body/00000000000000000000000000000000?scale=2&default=http%3A%2F%2Fexample.com%2FCaseSensitive\",",
                "// Line 447:         crc32: [0],",
                "// Line 448:         redirect: \"http://example.com/CaseSensitive\",",
                "// Line 449:       },",
                "// Line 450:       \"overlay body render with existing uuid\": {",
                "// Line 451:         url: \"http://localhost:3000/renders/body/853c80ef3c3749fdaa49938b674adae6?scale=2&overlay\",",
                "// Line 452:         crc32: [1107696668],",
                "// Line 453:       },"
            ]
        }
    ]
}