{
    "cve_id": "CVE-2024-30251",
    "cve_description": "aiohttp is an asynchronous HTTP client/server framework for asyncio and Python. In affected versions an attacker can send a specially crafted POST (multipart/form-data) request. When the aiohttp server processes it, the server will enter an infinite loop and be unable to process any further requests. An attacker can stop the application from serving requests after sending a single request. This issue has been addressed in version 3.9.4. Users are advised to upgrade. Users unable to upgrade may manually apply a patch to their systems. Please see the linked GHSA for instructions.",
    "cve_publish_date": "2024-05-02T14:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "[PR #8332/482e6cdf backport][3.9] Add set_content_disposition test (#8333)\n\n**This is a backport of PR #8332 as merged into master\r\n(482e6cdf6516607360666a48c5828d3dbe959fbd).**\r\n\r\nCo-authored-by: Oleg A <t0rr@mail.ru>",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "multipart.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "5",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 846:             else:",
                "// Line 847:                 return self.append_payload(payload)",
                "// Line 848: ",
                "// Line 849:     def append_payload(self, payload: Payload) -> Payload:",
                "// Line 850:         \"\"\"Adds a new body part to multipart writer.\"\"\"",
                "// Line 851:         encoding: Optional[str] = None",
                "// Line 852:         te_encoding: Optional[str] = None",
                "// Line 853:         if self._is_form_data:",
                "// Line 854:             # https://datatracker.ietf.org/doc/html/rfc7578#section-4.7",
                "// Line 855:             # https://datatracker.ietf.org/doc/html/rfc7578#section-4.8",
                "// vulnerable line: 856: assert CONTENT_DISPOSITION in payload.headers",
                "// vulnerable line: 857: assert \"name=\" in payload.headers[CONTENT_DISPOSITION]",
                "// Line 858:             assert (",
                "// Line 859:                 not {CONTENT_ENCODING, CONTENT_LENGTH, CONTENT_TRANSFER_ENCODING}",
                "// Line 860:                 & payload.headers.keys()",
                "// Line 861:             )",
                "// Line 862:         else:",
                "// Line 863:             # compression",
                "// Line 864:             encoding = payload.headers.get(CONTENT_ENCODING, \"\").lower()",
                "// Line 865:             if encoding and encoding not in (\"deflate\", \"gzip\", \"identity\"):",
                "// Line 866:                 raise RuntimeError(f\"unknown content encoding: {encoding}\")",
                "// Line 867:             if encoding == \"identity\":"
            ]
        },
        {
            "filename_of_changes": "test_multipart.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "7",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        }
    ]
}