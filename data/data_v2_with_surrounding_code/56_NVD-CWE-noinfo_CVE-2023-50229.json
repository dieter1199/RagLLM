{
    "cve_id": "CVE-2023-50229",
    "cve_description": "BlueZ Phone Book Access Profile Heap-based Buffer Overflow Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of BlueZ. User interaction is required to exploit this vulnerability in that the target must connect to a malicious Bluetooth device.\n\nThe specific flaw exists within the handling of the Phone Book Access profile. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length heap-based buffer. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-20936.",
    "cve_publish_date": "2024-05-03T03:16Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "pbap: Fix not checking Primary/Secundary Counter length\n\nPrimary/Secundary Counters are supposed to be 16 bytes values, if the\nserver has implemented them incorrectly it may lead to the following\ncrash:\n\n=================================================================\n==31860==ERROR: AddressSanitizer: heap-buffer-overflow on address\n0x607000001878 at pc 0x7f95a1575638 bp 0x7fff58c6bb80 sp 0x7fff58c6b328\n\n READ of size 48 at 0x607000001878 thread T0\n     #0 0x7f95a1575637 in MemcmpInterceptorCommon(void*, int (*)(void const*, void const*, unsigned long), void const*, void const*, unsigned long) ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:860\n     #1 0x7f95a1575ba6 in __interceptor_memcmp ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:892\n     #2 0x7f95a1575ba6 in __interceptor_memcmp ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:887\n     #3 0x564df69c77a0 in read_version obexd/client/pbap.c:288\n     #4 0x564df69c77a0 in read_return_apparam obexd/client/pbap.c:352\n     #5 0x564df69c77a0 in phonebook_size_callback obexd/client/pbap.c:374\n     #6 0x564df69bea3c in session_terminate_transfer obexd/client/session.c:921\n     #7 0x564df69d56b0 in get_xfer_progress_first obexd/client/transfer.c:729\n     #8 0x564df698b9ee in handle_response gobex/gobex.c:1140\n     #9 0x564df698cdea in incoming_data gobex/gobex.c:1385\n     #10 0x7f95a12fdc43 in g_main_context_dispatch (/lib/x86_64-linux-gnu/libglib-2.0.so.0+0x55c43)\n     #11 0x7f95a13526c7  (/lib/x86_64-linux-gnu/libglib-2.0.so.0+0xaa6c7)\n     #12 0x7f95a12fd2b2 in g_main_loop_run (/lib/x86_64-linux-gnu/libglib-2.0.so.0+0x552b2)\n     #13 0x564df6977d41 in main obexd/src/main.c:307\n     #14 0x7f95a10a7d8f in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\n     #15 0x7f95a10a7e3f in __libc_start_main_impl ../csu/libc-start.c:392\n     #16 0x564df6978704 in _start (/usr/local/libexec/bluetooth/obexd+0x8b704)\n 0x607000001878 is located 0 bytes to the right of 72-byte region [0x607000001830,0x607000001878)\n\n allocated by thread T0 here:\n     #0 0x7f95a1595a37 in __interceptor_calloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:154\n     #1 0x564df69c8b6a in pbap_probe obexd/client/pbap.c:1259",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "pbap.c",
            "code_language": "C",
            "number_of_lines_added_for_mitigation": "3",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 278:     if (!(pbap->supported_features & FOLDER_VERSION_FEATURE))",
                "// Line 279:         return;",
                "// Line 280: ",
                "// Line 281:     if (!g_obex_apparam_get_bytes(apparam, PRIMARY_COUNTER_TAG, &data,",
                "// Line 282:                                 &len)) {",
                "// Line 283:         len = sizeof(value);",
                "// Line 284:         memset(value, 0, len);",
                "// Line 285:         data = value;",
                "// Line 286:     }",
                "// Line 287: ",
                "// vulnerable line: 288: if (memcmp(pbap->primary, data, len)) {",
                "// Line 289:         memcpy(pbap->primary, data, len);",
                "// Line 290:         g_dbus_emit_property_changed(conn,",
                "// Line 291:                     obc_session_get_path(pbap->session),",
                "// Line 292:                     PBAP_INTERFACE, \"PrimaryCounter\");",
                "// Line 293:     }",
                "// Line 294: ",
                "// Line 295:     if (!g_obex_apparam_get_bytes(apparam, SECONDARY_COUNTER_TAG, &data,",
                "// Line 296:                                 &len)) {",
                "// Line 297:         len = sizeof(value);",
                "// Line 298:         memset(value, 0, len);",
                "// Line 299:         data = value;",
                "// Line 300:     }",
                "// Line 301: ",
                "// vulnerable line: 302: if (memcmp(pbap->secondary, data, len)) {",
                "// Line 303:         memcpy(pbap->secondary, data, len);",
                "// Line 304:         g_dbus_emit_property_changed(conn,",
                "// Line 305:                     obc_session_get_path(pbap->session),",
                "// Line 306:                     PBAP_INTERFACE, \"SecondaryCounter\");",
                "// Line 307:     }",
                "// Line 308: }",
                "// Line 309: ",
                "// Line 310: static void read_databaseid(struct pbap_data *pbap, GObexApparam *apparam)",
                "// Line 311: {",
                "// Line 312:     const guint8 *data;"
            ]
        }
    ]
}