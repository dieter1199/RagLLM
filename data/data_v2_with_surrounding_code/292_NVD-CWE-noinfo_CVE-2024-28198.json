{
    "cve_id": "CVE-2024-28198",
    "cve_description": "OpenOlat is an open source web-based e-learning platform for teaching, learning, assessment and communication. By manually manipulating http requests when using the draw.io integration it is possible to read arbitrary files as the configured system user and SSRF. The problem is fixed in version 18.1.6 and 18.2.2. It is advised to upgrade to the latest version of 18.1.x or 18.2.x. Users unable to upgrade may work around this issue by disabling the Draw.io module or the entire REST API which will secure the system.",
    "cve_publish_date": "2024-03-11T20:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "OO-7553: Extract XML from SVG with secure settings",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "DrawioServiceImpl.java",
            "code_language": "Java",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 132:         return new byte[0];",
                "// Line 133:     }",
                "// Line 134:     ",
                "// Line 135:     @Override",
                "// Line 136:     public String getXmlContent(VFSLeaf vfsLeaf) {",
                "// Line 137:         String xml = null;",
                "// Line 138: ",
                "// Line 139:         String suffix = FileUtils.getFileSuffix(vfsLeaf.getName());",
                "// Line 140:         if (\"svg\".equalsIgnoreCase(suffix)) {",
                "// Line 141:             try {",
                "// vulnerable line: 142: DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();",
                "// Line 143:                 DocumentBuilder builder = factory.newDocumentBuilder();",
                "// Line 144:                 Document document = builder.parse(vfsLeaf.getInputStream());",
                "// Line 145:                 String xpathExpression = \"//svg/@content\";",
                "// Line 146:                 XPathFactory xpf = XPathFactory.newInstance();",
                "// Line 147:                 XPath xpath = xpf.newXPath();",
                "// Line 148:                 XPathExpression expression = xpath.compile(xpathExpression);",
                "// Line 149:                 NodeList svgPaths = (NodeList)expression.evaluate(document, XPathConstants.NODESET);",
                "// Line 150:                 xml = svgPaths.item(0).getNodeValue();",
                "// Line 151:             } catch (Exception e) {",
                "// Line 152:                 log.warn(\"Cannot extract xml from svg file {}\", vfsLeaf.getRelPath());"
            ]
        }
    ]
}