{
    "cve_id": "CVE-2024-30258",
    "cve_description": "FastDDS is a C++ implementation of the DDS (Data Distribution Service) standard of the OMG (Object Management Group). Prior to versions 2.14.1, 2.13.5, 2.10.4, and 2.6.8, when a publisher serves a malformed `RTPS` packet, the subscriber crashes when creating `pthread`. This can remotely crash any Fast-DDS process, potentially leading to a DOS attack. Versions 2.14.1, 2.13.5, 2.10.4, and 2.6.8 contain a patch for the issue.\n",
    "cve_publish_date": "2024-05-14T15:22Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Merge pull request from GHSA-53xw-465j-rxfh\n\nSigned-off-by: Mario Dominguez <mariodominguez@eprosima.com>",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "BlackboxTestsTransportUDP.cpp",
            "code_language": "C++",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "CDRMessage.h",
            "code_language": "C++",
            "number_of_lines_added_for_mitigation": "6",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 133: inline bool readProperty(",
                "// Line 134:         CDRMessage_t* msg,",
                "// Line 135:         Property& property);",
                "// Line 136: ",
                "// Line 137: inline bool readBinaryProperty(",
                "// Line 138:         CDRMessage_t* msg,",
                "// Line 139:         BinaryProperty& binary_property);",
                "// Line 140: ",
                "// Line 141: inline bool readPropertySeq(",
                "// Line 142:         CDRMessage_t* msg,",
                "// vulnerable line: 143: PropertySeq& properties);",
                "// Line 144: ",
                "// Line 145: inline bool readBinaryPropertySeq(",
                "// Line 146:         CDRMessage_t* msg,",
                "// vulnerable line: 147: BinaryPropertySeq& binary_properties);",
                "// Line 148: ",
                "// Line 149: inline bool readDataHolder(",
                "// Line 150:         CDRMessage_t* msg,",
                "// vulnerable line: 151: DataHolder& data_holder);",
                "// Line 152: ",
                "// Line 153: inline bool readDataHolderSeq(",
                "// Line 154:         CDRMessage_t* msg,",
                "// Line 155:         DataHolderSeq& data_holders);",
                "// Line 156: ",
                "// Line 157: inline bool readMessageIdentity(",
                "// Line 158:         CDRMessage_t* msg,",
                "// Line 159:         security::MessageIdentity& message_identity);",
                "// Line 160: ",
                "// Line 161: inline bool readParticipantGenericMessage("
            ]
        },
        {
            "filename_of_changes": "ParameterSerializer.hpp",
            "code_language": "C++",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1032: ",
                "// Line 1033: template<>",
                "// Line 1034: inline bool ParameterSerializer<ParameterToken_t>::read_content_from_cdr_message(",
                "// Line 1035:         ParameterToken_t& parameter,",
                "// Line 1036:         fastrtps::rtps::CDRMessage_t* cdr_message,",
                "// Line 1037:         const uint16_t parameter_length)",
                "// Line 1038: {",
                "// Line 1039: ",
                "// Line 1040:     parameter.length = parameter_length;",
                "// Line 1041:     uint32_t pos_ref = cdr_message->pos;",
                "// vulnerable line: 1042: bool valid =  fastrtps::rtps::CDRMessage::readDataHolder(cdr_message, parameter.token);",
                "// Line 1043:     uint32_t length_diff = cdr_message->pos - pos_ref;",
                "// Line 1044:     valid &= (parameter_length == length_diff);",
                "// Line 1045:     return valid;",
                "// Line 1046: }",
                "// Line 1047: ",
                "// Line 1048: template<>",
                "// Line 1049: inline bool ParameterSerializer<ParameterParticipantSecurityInfo_t>::add_content_to_cdr_message(",
                "// Line 1050:         const ParameterParticipantSecurityInfo_t& parameter,",
                "// Line 1051:         fastrtps::rtps::CDRMessage_t* cdr_message)",
                "// Line 1052: {"
            ]
        }
    ]
}