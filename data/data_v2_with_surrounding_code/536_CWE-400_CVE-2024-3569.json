{
    "cve_id": "CVE-2024-3569",
    "cve_description": "A Denial of Service (DoS) vulnerability exists in the mintplex-labs/anything-llm repository when the application is running in 'just me' mode with a password. An attacker can exploit this vulnerability by making a request to the endpoint using the [validatedRequest] middleware with a specially crafted 'Authorization:' header. This vulnerability leads to uncontrolled resource consumption, causing a DoS condition.",
    "cve_publish_date": "2024-04-10T17:15Z",
    "cwe_id": "CWE-400",
    "cwe_name": "Uncontrolled Resource Consumption",
    "cwe_description": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
    "commit_message": "handle expired token being null and prevent constant rerender (#956)\n\n* handle expired token being null and prevent constant rerender\r\n\r\n* reset defaults",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "index.jsx",
            "code_language": "JavaScript",
            "number_of_lines_added_for_mitigation": "6",
            "number_of_lines_deleted_vulnerable_to_cve": "4",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 27:       />",
                "// Line 28: ",
                "// Line 29:       <div className=\"flex flex-col items-center justify-center h-full w-full z-50\">",
                "// Line 30:         <img src={_initLogo} className=\"mb-20 w-80 opacity-80\" alt=\"logo\" />",
                "// Line 31:         {mode === \"single\" ? <SingleUserAuth /> : <MultiUserAuth />}",
                "// Line 32:       </div>",
                "// Line 33:     </div>",
                "// Line 34:   );",
                "// Line 35: }",
                "// Line 36: ",
                "// vulnerable line: 37: export function usePasswordModal() {",
                "// Line 38:   const [auth, setAuth] = useState({",
                "// Line 39:     loading: true,",
                "// Line 40:     requiresAuth: false,",
                "// Line 41:     mode: \"single\",",
                "// Line 42:   });",
                "// Line 43: ",
                "// Line 44:   useEffect(() => {",
                "// Line 45:     async function checkAuthReq() {",
                "// Line 46:       if (!window) return;",
                "// Line 47: ",
                "// Line 48:       // If the last validity check is still valid",
                "// Line 49:       // we can skip the loading.",
                "// vulnerable line: 50: if (!System.needsAuthCheck()) {",
                "// Line 51:         setAuth({",
                "// Line 52:           loading: false,",
                "// Line 53:           requiresAuth: false,",
                "// Line 54:           mode: \"multi\",",
                "// Line 55:         });",
                "// Line 56:         return;",
                "// Line 57:       }",
                "// Line 58: ",
                "// Line 59:       const settings = await System.keys();",
                "// Line 60:       if (settings?.MultiUserMode) {",
                "// Line 61:         const currentToken = window.localStorage.getItem(AUTH_TOKEN);",
                "// Line 62:         if (!!currentToken) {",
                "// vulnerable line: 63: const valid = await System.checkAuth(currentToken);",
                "// Line 64:           if (!valid) {",
                "// Line 65:             setAuth({",
                "// Line 66:               loading: false,",
                "// Line 67:               requiresAuth: true,",
                "// Line 68:               mode: \"multi\",",
                "// Line 69:             });",
                "// Line 70:             window.localStorage.removeItem(AUTH_USER);",
                "// Line 71:             window.localStorage.removeItem(AUTH_TOKEN);",
                "// Line 72:             window.localStorage.removeItem(AUTH_TIMESTAMP);",
                "// Line 73:             return;",
                "// Line 95:           setAuth({",
                "// Line 96:             loading: false,",
                "// Line 97:             requiresAuth: false,",
                "// Line 98:             mode: \"single\",",
                "// Line 99:           });",
                "// Line 100:           return;",
                "// Line 101:         }",
                "// Line 102: ",
                "// Line 103:         const currentToken = window.localStorage.getItem(AUTH_TOKEN);",
                "// Line 104:         if (!!currentToken) {",
                "// vulnerable line: 105: const valid = await System.checkAuth(currentToken);",
                "// Line 106:           if (!valid) {",
                "// Line 107:             setAuth({",
                "// Line 108:               loading: false,",
                "// Line 109:               requiresAuth: true,",
                "// Line 110:               mode: \"single\",",
                "// Line 111:             });",
                "// Line 112:             window.localStorage.removeItem(AUTH_TOKEN);",
                "// Line 113:             return;",
                "// Line 114:           } else {",
                "// Line 115:             setAuth({"
            ]
        },
        {
            "filename_of_changes": "validatedRequest.js",
            "code_language": "JavaScript",
            "number_of_lines_added_for_mitigation": "9",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 33:     response.status(401).json({",
                "// Line 34:       error: \"No auth token found.\",",
                "// Line 35:     });",
                "// Line 36:     return;",
                "// Line 37:   }",
                "// Line 38: ",
                "// Line 39:   const bcrypt = require(\"bcrypt\");",
                "// Line 40:   const { p } = decodeJWT(token);",
                "// Line 41:   if (!bcrypt.compareSync(p, bcrypt.hashSync(process.env.AUTH_TOKEN, 10))) {",
                "// Line 42:     response.status(401).json({",
                "// vulnerable line: 43: error: \"Invalid auth token found.\",",
                "// Line 44:     });",
                "// Line 45:     return;",
                "// Line 46:   }",
                "// Line 47: ",
                "// Line 48:   next();",
                "// Line 49: }",
                "// Line 50: ",
                "// Line 51: async function validateMultiUserRequest(request, response, next) {",
                "// Line 52:   const auth = request.header(\"Authorization\");",
                "// Line 53:   const token = auth ? auth.split(\" \")[1] : null;"
            ]
        }
    ]
}