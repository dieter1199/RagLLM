{
    "cve_id": "CVE-2024-40630",
    "cve_description": "OpenImageIO is a toolset for reading, writing, and manipulating image files of any image file format relevant to VFX / animation via a format-agnostic API with a feature set, scalability, and robustness needed for feature film production. In affected versions there is a bug in the heif input functionality of OpenImageIO. Specifically, in `HeifInput::seek_subimage()`.  In the worst case, this can lead to an information disclosure vulnerability, particularly for programs that directly use the `ImageInput` APIs. This bug has been addressed in commit `0a2dcb4c` which is included in the 2.5.13.1 release. Users are advised to upgrade. There are no known workarounds for this issue.",
    "cve_publish_date": "2024-07-15T20:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "fix(heic): Correctly set imagespec size for heif images\n\nSigned-off-by: Gerrard Tai <42868323+flyyee@users.noreply.github.com>",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "heifinput.cpp",
            "code_language": "C++",
            "number_of_lines_added_for_mitigation": "3",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 242:     if (img_tmp)",
                "// Line 243:         m_himage = heif::Image(img_tmp);",
                "// Line 244:     if (herr.code != heif_error_Ok || !img_tmp) {",
                "// Line 245:         errorfmt(\"Could not decode image ({})\", herr.message);",
                "// Line 246:         m_ctx.reset();",
                "// Line 247:         return false;",
                "// Line 248:     }",
                "// Line 249: #endif",
                "// Line 250: ",
                "// Line 251:     int bits = m_himage.get_bits_per_pixel(heif_channel_interleaved);",
                "// vulnerable line: 252: m_spec = ImageSpec(m_ihandle.get_width(), m_ihandle.get_height(), bits / 8,",
                "// vulnerable line: 253: TypeUInt8);",
                "// Line 254: ",
                "// Line 255:     m_spec.attribute(\"oiio:ColorSpace\", \"sRGB\");",
                "// Line 256: ",
                "// Line 257: #if LIBHEIF_HAVE_VERSION(1, 12, 0)",
                "// Line 258:     // Libheif >= 1.12 added API call to find out if the image is associated",
                "// Line 259:     // alpha (i.e. colors are premultiplied).",
                "// Line 260:     m_associated_alpha = m_himage.is_premultiplied_alpha();",
                "// Line 261:     m_do_associate     = (!m_associated_alpha && m_spec.alpha_channel >= 0",
                "// Line 262:                       && !m_keep_unassociated_alpha);",
                "// Line 263:     if (!m_associated_alpha && m_spec.nchannels >= 4) {"
            ]
        }
    ]
}