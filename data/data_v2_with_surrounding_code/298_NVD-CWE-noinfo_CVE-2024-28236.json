{
    "cve_id": "CVE-2024-28236",
    "cve_description": "Vela is a Pipeline Automation (CI/CD) framework built on Linux container technology written in Golang. Vela pipelines can use variable substitution combined with insensitive fields like `parameters`, `image` and `entrypoint` to inject secrets into a plugin/image and — by using common substitution string manipulation — can bypass log masking and expose secrets without the use of the commands block. This unexpected behavior primarily impacts secrets restricted by the \"no commands\" option. This can lead to unintended use of the secret value, and increased risk of exposing the secret during image execution bypassing log masking. **To exploit this** the pipeline author must be supplying the secrets to a plugin that is designed in such a way that will print those parameters in logs. Plugin parameters are not designed for sensitive values and are often intentionally printed throughout execution for informational/debugging purposes. Parameters should therefore be treated as insensitive. While Vela provides secrets masking, secrets exposure is not entirely solved by the masking process. A docker image (plugin) can easily expose secrets if they are not handled properly, or altered in some way. There is a responsibility on the end-user to understand how values injected into a plugin are used. This is a risk that exists for many CICD systems (like GitHub Actions) that handle sensitive runtime variables. Rather, the greater risk is that users who restrict a secret to the \"no commands\" option and use image restriction can still have their secret value exposed via substitution tinkering, which turns the image and command restrictions into a false sense of security. This issue has been addressed in version 0.23.2. Users are advised to upgrade. Users unable to upgrade should not provide sensitive values to plugins that can potentially expose them, especially in `parameters` that are not intended to be used for sensitive values, ensure plugins (especially those that utilize shared secrets) follow best practices to avoid logging parameters that are expected to be sensitive, minimize secrets with `pull_request` events enabled, as this allows users to change pipeline configurations and pull in secrets to steps not typically part of the CI process, make use of the build approval setting, restricting builds from untrusted users, and limit use of shared secrets, as they are less restrictive to access by nature.",
    "cve_publish_date": "2024-03-12T21:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Merge pull request from GHSA-pwx5-6wxg-px5h\n\n* fix(secrets): split env injection based on allow_substitution value\n\n* upgrade sdk server and types",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "build.go",
            "code_language": "Go",
            "number_of_lines_added_for_mitigation": "20",
            "number_of_lines_deleted_vulnerable_to_cve": "4",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 202: ",
                "// Line 203:         sRaw, err := json.MarshalIndent(s.Sanitize(), \"\", \" \")",
                "// Line 204:         if err != nil {",
                "// Line 205:             c.err = err",
                "// Line 206:             return fmt.Errorf(\"unable to decode secret: %w\", err)",
                "// Line 207:         }",
                "// Line 208: ",
                "// Line 209:         _log.AppendData(append(sRaw, \"",
                "// Line 210: \"...))",
                "// Line 211: ",
                "// vulnerable line: 212: // add secret to the map",
                "// vulnerable line: 213: c.Secrets[secret.Name] = s",
                "// Line 214:     }",
                "// Line 215: ",
                "// Line 216:     // escape newlines in secrets loaded on build_start",
                "// Line 217:     escapeNewlineSecrets(c.Secrets)",
                "// Line 218: ",
                "// Line 219:     return nil",
                "// Line 220: }",
                "// Line 221: ",
                "// Line 222: // AssembleBuild prepares the containers within a build for execution.",
                "// Line 223: //",
                "// Line 812:             }",
                "// Line 813: ",
                "// Line 814:             _log.AppendData(append(sRaw, \"",
                "// Line 815: \"...))",
                "// Line 816: ",
                "// Line 817:             _, err = c.Vela.Log.UpdateStep(c.repo.GetOrg(), c.repo.GetName(), c.build.GetNumber(), _step.Number, _log)",
                "// Line 818:             if err != nil {",
                "// Line 819:                 return err",
                "// Line 820:             }",
                "// Line 821: ",
                "// vulnerable line: 822: // add secret to the temp map",
                "// vulnerable line: 823: lazySecrets[secret.Name] = s",
                "// Line 824:         }",
                "// Line 825:     }",
                "// Line 826: ",
                "// Line 827:     // if we had lazy secrets, get them into the container",
                "// Line 828:     if len(lazySecrets) > 0 {",
                "// Line 829:         // create a copy of the current step/container",
                "// Line 830:         tmpStep := new(pipeline.Container)",
                "// Line 831:         *tmpStep = *_step",
                "// Line 832: ",
                "// Line 833:         c.Logger.Debug(\"clearing environment in temp step/container\")"
            ]
        },
        {
            "filename_of_changes": "go.mod",
            "code_language": "Go",
            "number_of_lines_added_for_mitigation": "3",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 1: module github.com/go-vela/worker",
                "// Line 2: ",
                "// Line 3: go 1.21",
                "// Line 4: ",
                "// Line 5: require (",
                "// Line 6:     github.com/Masterminds/semver/v3 v3.2.1",
                "// Line 7:     github.com/distribution/reference v0.5.0",
                "// Line 8:     github.com/docker/docker v24.0.9+incompatible",
                "// Line 9:     github.com/docker/go-units v0.5.0",
                "// Line 10:     github.com/gin-gonic/gin v1.9.1",
                "// vulnerable line: 11: github.com/go-vela/sdk-go v0.23.1",
                "// vulnerable line: 12: github.com/go-vela/server v0.23.1",
                "// vulnerable line: 13: github.com/go-vela/types v0.23.1",
                "// Line 14:     github.com/golang-jwt/jwt/v5 v5.2.0",
                "// Line 15:     github.com/google/go-cmp v0.6.0",
                "// Line 16:     github.com/joho/godotenv v1.5.1",
                "// Line 17:     github.com/opencontainers/image-spec v1.1.0",
                "// Line 18:     github.com/prometheus/client_golang v1.18.0",
                "// Line 19:     github.com/sirupsen/logrus v1.9.3",
                "// Line 20:     github.com/urfave/cli/v2 v2.27.1",
                "// Line 21:     golang.org/x/sync v0.6.0",
                "// Line 22:     gotest.tools/v3 v3.5.1",
                "// Line 23:     k8s.io/api v0.29.2"
            ]
        },
        {
            "filename_of_changes": "go.sum",
            "code_language": "Go",
            "number_of_lines_added_for_mitigation": "6",
            "number_of_lines_deleted_vulnerable_to_cve": "6",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 87: github.com/go-playground/assert/v2 v2.2.0 h1:JvknZsQTYeFEAhQwI4qEt9cyV5ONwRHC+lYKSsYSR8s=",
                "// Line 88: github.com/go-playground/assert/v2 v2.2.0/go.mod h1:VDjEfimB/XKnb+ZQfWdccd7VUvScMdVu0Titje2rxJ4=",
                "// Line 89: github.com/go-playground/locales v0.14.1 h1:EWaQ/wswjilfKLTECiXz7Rh+3BjFhfDFKv/oXslEjJA=",
                "// Line 90: github.com/go-playground/locales v0.14.1/go.mod h1:hxrqLVvrK65+Rwrd5Fc6F2O76J/NuW9t0sjnWqG1slY=",
                "// Line 91: github.com/go-playground/universal-translator v0.18.1 h1:Bcnm0ZwsGyWbCzImXv+pAJnYK9S473LQFuzCbDbfSFY=",
                "// Line 92: github.com/go-playground/universal-translator v0.18.1/go.mod h1:xekY+UJKNuX9WP91TpwSH2VMlDf28Uj24BCp08ZFTUY=",
                "// Line 93: github.com/go-playground/validator/v10 v10.14.0 h1:vgvQWe3XCz3gIeFDm/HnTIbj6UGmg/+t63MyGU2n5js=",
                "// Line 94: github.com/go-playground/validator/v10 v10.14.0/go.mod h1:9iXMNT7sEkjXb0I+enO7QXmzG6QCsPWY4zveKFVRSyU=",
                "// Line 95: github.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572 h1:tfuBGBXKqDEevZMzYi5KSi8KkcZtzBcTgAUUtapy0OI=",
                "// Line 96: github.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572/go.mod h1:9Pwr4B2jHnOSGXyyzV8ROjYa2ojvAY6HCGYYfMoC3Ls=",
                "// vulnerable line: 97: github.com/go-vela/sdk-go v0.23.1 h1:4KxfAF1vR8DvtRraBoWQDIm8f8zxXP806lJR3MmTlC8=",
                "// vulnerable line: 98: github.com/go-vela/sdk-go v0.23.1/go.mod h1:zDsZIePtBdpCZwmwAWqGWuIch/oGliX1zd51PARTHBk=",
                "// vulnerable line: 99: github.com/go-vela/server v0.23.1 h1:Y+mGfB79RjIgQ3IEkPjGB6IneB2So3ZXE4XKY+Z02xc=",
                "// vulnerable line: 100: github.com/go-vela/server v0.23.1/go.mod h1:B+A5lRPOlAVYyXBMGCAJKhPQOlfJuWl3qaRcvhsUqSA=",
                "// vulnerable line: 101: github.com/go-vela/types v0.23.1 h1:st4BeDcYVyaaFqblU1YroztNvmYLBgmfZpWq0En0Sg0=",
                "// vulnerable line: 102: github.com/go-vela/types v0.23.1/go.mod h1:AAqgxIw1aRBgPkE/5juGuiwh/JZuOtL8fcPaEkjFWwQ=",
                "// Line 103: github.com/goccy/go-json v0.10.2 h1:CrxCmQqYDkv1z7lO7Wbh2HN93uovUHgrECaO5ZrCXAU=",
                "// Line 104: github.com/goccy/go-json v0.10.2/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=",
                "// Line 105: github.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=",
                "// Line 106: github.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=",
                "// Line 107: github.com/golang-jwt/jwt/v5 v5.2.0 h1:d/ix8ftRUorsN+5eMIlF4T6J8CAt9rch3My2winC1Jw=",
                "// Line 108: github.com/golang-jwt/jwt/v5 v5.2.0/go.mod h1:pqrtFR0X4osieyHYxtmOUWsAWrfe1Q5UVIyoH402zdk=",
                "// Line 109: github.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=",
                "// Line 110: github.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=",
                "// Line 111: github.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=",
                "// Line 112: github.com/golang/protobuf v1.5.3 h1:KhyjKVUg7Usr/dYsdSqoFveMYd5ko72D+zANwlG1mmg="
            ]
        },
        {
            "filename_of_changes": "linux.go",
            "code_language": "Go",
            "number_of_lines_added_for_mitigation": "11",
            "number_of_lines_deleted_vulnerable_to_cve": "6",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 12:     \"github.com/go-vela/types/pipeline\"",
                "// Line 13:     \"github.com/go-vela/worker/internal/message\"",
                "// Line 14:     \"github.com/go-vela/worker/runtime\"",
                "// Line 15:     \"github.com/sirupsen/logrus\"",
                "// Line 16: )",
                "// Line 17: ",
                "// Line 18: type (",
                "// Line 19:     // client manages communication with the pipeline resources.",
                "// Line 20:     client struct {",
                "// Line 21:         // https://pkg.go.dev/github.com/sirupsen/logrus#Entry",
                "// vulnerable line: 22: Logger   *logrus.Entry",
                "// vulnerable line: 23: Vela     *vela.Client",
                "// vulnerable line: 24: Runtime  runtime.Engine",
                "// vulnerable line: 25: Secrets  map[string]*library.Secret",
                "// vulnerable line: 26: Hostname string",
                "// vulnerable line: 27: Version  string",
                "// Line 28: ",
                "// Line 29:         // clients for build actions",
                "// Line 30:         secret *secretSvc",
                "// Line 31: ",
                "// Line 32:         // private fields",
                "// Line 33:         init                *pipeline.Container",
                "// Line 34:         maxLogSize          uint",
                "// Line 35:         logStreamingTimeout time.Duration",
                "// Line 36:         privilegedImages    []string",
                "// Line 37:         enforceTrustedRepos bool"
            ]
        },
        {
            "filename_of_changes": "secret.go",
            "code_language": "Go",
            "number_of_lines_added_for_mitigation": "7",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "service.go",
            "code_language": "Go",
            "number_of_lines_added_for_mitigation": "7",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "step.go",
            "code_language": "Go",
            "number_of_lines_added_for_mitigation": "7",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        }
    ]
}