{
    "cve_id": "CVE-2024-35175",
    "cve_description": "sshpiper is a reverse proxy for sshd. Starting in version 1.0.50 and prior to version 1.3.0, the way the proxy protocol listener is implemented in sshpiper can allow an attacker to forge their connecting address. Commit 2ddd69876a1e1119059debc59fe869cb4e754430 added the proxy protocol listener as the only listener in sshpiper, with no option to toggle this functionality off. This means that any connection that sshpiper is directly (or in some cases indirectly) exposed to can use proxy protocol to forge its source address. Any users of sshpiper who need logs from it for whitelisting/rate limiting/security investigations could have them become much less useful if an attacker is sending a spoofed source address. Version 1.3.0 contains a patch for the issue.",
    "cve_publish_date": "2024-05-14T22:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Merge pull request from GHSA-4w53-6jvp-gg52\n\n* feat: Add support for allowed proxy addresses\n\nThis commit adds support for allowed proxy addresses, which allows only connections from these IP ranges to send a proxy header based on the PROXY protocol. If the allowed proxy addresses are empty, the PROXY protocol support is disabled.\n\n* Update cmd/sshpiperd/main.go\n\nCo-authored-by: Peter G <97112726+pgibson1-godaddy@users.noreply.github.com>\n\n---------\n\nCo-authored-by: Peter G <97112726+pgibson1-godaddy@users.noreply.github.com>",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "main.go",
            "code_language": "Go",
            "number_of_lines_added_for_mitigation": "16",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 179:             }",
                "// Line 180: ",
                "// Line 181:             log.Info(\"starting sshpiperd version: \", version())",
                "// Line 182:             d, err := newDaemon(ctx)",
                "// Line 183: ",
                "// Line 184:             if err != nil {",
                "// Line 185:                 return err",
                "// Line 186:             }",
                "// Line 187: ",
                "// Line 188:             quit := make(chan error)",
                "// vulnerable line: 189: d.lis = &proxyproto.Listener{Listener: d.lis}",
                "// Line 190: ",
                "// Line 191:             var plugins []*plugin.GrpcPlugin",
                "// Line 192: ",
                "// Line 193:             args := ctx.Args().Slice()",
                "// Line 194:             remain := args",
                "// Line 195: ",
                "// Line 196:             for {",
                "// Line 197:                 if len(remain) <= 0 {",
                "// Line 198:                     break",
                "// Line 199:                 }"
            ]
        }
    ]
}