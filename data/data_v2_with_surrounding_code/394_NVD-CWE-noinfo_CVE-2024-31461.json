{
    "cve_id": "CVE-2024-31461",
    "cve_description": "Plane, an open-source project management tool, has a Server-Side Request Forgery (SSRF) vulnerability in versions prior to 0.17-dev. This issue may allow an attacker to send arbitrary requests from the server hosting the application, potentially leading to unauthorized access to internal systems. The impact of this vulnerability includes, but is not limited to, unauthorized access to internal services accessible from the server, potential leakage of sensitive information from internal services, manipulation of internal systems by interacting with internal APIs. Version 0.17-dev contains a patch for this issue. Those who are unable to update immediately may mitigate the issue by restricting outgoing network connections from servers hosting the application to essential services only and/or implementing strict input validation on URLs or parameters that are used to generate server-side requests.",
    "cve_publish_date": "2024-04-10T18:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "fix: jira importer validations (#3323)\n\n* fix: jira importer validations\r\n\r\n* dev: update validation for cloud hostname\r\n\r\n* dev: update the function to be used externally\r\n\r\n* dev: update codeql workflow\r\n\r\n* dev: update repository selection api",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "project.service.ts",
            "code_language": "TypeScript",
            "number_of_lines_added_for_mitigation": "5",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 79:     }",
                "// Line 80:   ): Promise<any> {",
                "// Line 81:     await this.post(`/api/workspaces/${workspaceSlug}/projects/${projectId}/project-views/`, data)",
                "// Line 82:       .then((response) => response?.data)",
                "// Line 83:       .catch((error) => {",
                "// Line 84:         throw error?.response?.data;",
                "// Line 85:       });",
                "// Line 86:   }",
                "// Line 87: ",
                "// Line 88:   async getGithubRepositories(url: string): Promise<GithubRepositoriesResponse> {",
                "// vulnerable line: 89: return this.request(url)",
                "// Line 90:       .then((response) => response?.data)",
                "// Line 91:       .catch((error) => {",
                "// Line 92:         throw error?.response?.data;",
                "// Line 93:       });",
                "// Line 94:   }",
                "// Line 95: ",
                "// Line 96:   async syncGithubRepository(",
                "// Line 97:     workspaceSlug: string,",
                "// Line 98:     projectId: string,",
                "// Line 99:     workspaceIntegrationId: string,"
            ]
        },
        {
            "filename_of_changes": "single-integration-card.tsx",
            "code_language": "TypeScript",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 132:         isInstalled ? (",
                "// Line 133:           <Tooltip",
                "// Line 134:             disabled={isUserAdmin}",
                "// Line 135:             tooltipContent={!isUserAdmin ? \"You don't have permission to perform this\" : null}",
                "// Line 136:           >",
                "// Line 137:             <Button",
                "// Line 138:               className={`${!isUserAdmin ? \"hover:cursor-not-allowed\" : \"\"}`}",
                "// Line 139:               variant=\"danger\"",
                "// Line 140:               onClick={() => {",
                "// Line 141:                 if (!isUserAdmin) return;",
                "// vulnerable line: 142: handleRemoveIntegration;",
                "// Line 143:               }}",
                "// Line 144:               disabled={!isUserAdmin}",
                "// Line 145:               loading={deletingIntegration}",
                "// Line 146:             >",
                "// Line 147:               {deletingIntegration ? \"Uninstalling...\" : \"Uninstall\"}",
                "// Line 148:             </Button>",
                "// Line 149:           </Tooltip>",
                "// Line 150:         ) : (",
                "// Line 151:           <Tooltip",
                "// Line 152:             disabled={isUserAdmin}"
            ]
        }
    ]
}