{
    "cve_id": "CVE-2024-38367",
    "cve_description": "trunk.cocoapods.org is the authentication server for the CoacoaPods dependency manager. Prior to commit d4fa66f49cedab449af9a56a21ab40697b9f7b97, the trunk sessions verification step could be manipulated for owner session hijacking Compromising a victimâ€™s session will result in a full takeover of the CocoaPods trunk account. The threat actor could manipulate their pod specifications, disrupt the distribution of legitimate libraries, or cause widespread disruption within the CocoaPods ecosystem. This was patched server-side with commit d4fa66f49cedab449af9a56a21ab40697b9f7b97 in October 2023.",
    "cve_publish_date": "2024-07-01T21:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Hardcode the trunk URL for prod sessions",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "sessions_controller.rb",
            "code_language": "Ruby",
            "number_of_lines_added_for_mitigation": "1",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 11:         owner_params = JSON.parse(request.body.read)",
                "// Line 12:         authorized = @owner.present?",
                "// Line 13: ",
                "// Line 14:         DB.test_safe_transaction do",
                "// Line 15:           owner_email, owner_name, session_description = owner_params.values_at('email', 'name', 'description')",
                "// Line 16:           owner = Owner.find_or_initialize_by_email_and_name(owner_email, owner_name).tap do |o|",
                "// Line 17:             o.name = owner_name if authorized && owner_name.present?",
                "// Line 18:             o.save",
                "// Line 19:           end",
                "// Line 20: ",
                "// vulnerable line: 21: url_template = \"#{request.scheme}://#{request.host_with_port}/sessions/verify/%s\"",
                "// Line 22:           session = owner.create_session!(request.ip, url_template, session_description)",
                "// Line 23:           session_attributes = session.public_attributes",
                "// Line 24:           session_attributes['token'] = session.token",
                "// Line 25: ",
                "// Line 26:           json_message(201, session_attributes)",
                "// Line 27:         end",
                "// Line 28:       end",
                "// Line 29: ",
                "// Line 30:       get '/verify/:token', :requires_owner => false do",
                "// Line 31:         if session = Session.with_verification_token(params[:token])"
            ]
        }
    ]
}