{
    "cve_id": "CVE-2024-28184",
    "cve_description": "WeasyPrint helps web developers to create PDF documents. Since version 61.0, there's a vulnerability which allows attaching content of arbitrary files and URLs to a generated PDF document, even if `url_fetcher` is configured to prevent access to files and URLs. This vulnerability has been patched in version 61.2.\n",
    "cve_publish_date": "2024-03-09T01:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Use documentâ€™s url_fetcher for attachments\n\nAlso force HTML attachments to be detected as URLs so that url_fetcher is\nalways used.",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "__init__.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 242:             key = ''.join(char for char in key if char.isalnum())",
                "// Line 243:             key = key.encode('ascii', errors='ignore').decode()",
                "// Line 244:             if key:",
                "// Line 245:                 pdf.info[key] = pydyf.String(value)",
                "// Line 246: ",
                "// Line 247:     # Embedded files",
                "// Line 248:     attachments = metadata.attachments.copy()",
                "// Line 249:     if options['attachments']:",
                "// Line 250:         for attachment in options['attachments']:",
                "// Line 251:             if not isinstance(attachment, Attachment):",
                "// vulnerable line: 252: attachment = Attachment(attachment)",
                "// Line 253:             attachments.append(attachment)",
                "// Line 254:     pdf_attachments = []",
                "// Line 255:     for attachment in attachments:",
                "// Line 256:         pdf_attachment = write_pdf_attachment(pdf, attachment, compress)",
                "// Line 257:         if pdf_attachment is not None:",
                "// Line 258:             pdf_attachments.append(pdf_attachment)",
                "// Line 259:     if pdf_attachments:",
                "// Line 260:         content = pydyf.Dictionary({'Names': pydyf.Array()})",
                "// Line 261:         for i, pdf_attachment in enumerate(pdf_attachments):",
                "// Line 262:             content['Names'].append(pydyf.String(f'attachment{i}'))"
            ]
        },
        {
            "filename_of_changes": "anchors.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "3",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 246:         if link_type != 'attachment':",
                "// Line 247:             continue",
                "// Line 248:         if annot_target not in annot_files:",
                "// Line 249:             # A single link can be split in multiple regions. We don't want",
                "// Line 250:             # to embed a file multiple times of course, so keep a reference",
                "// Line 251:             # to every embedded URL and reuse the object number.",
                "// Line 252:             # TODO: Use the title attribute as description. The comment",
                "// Line 253:             # above about multiple regions won't always be correct, because",
                "// Line 254:             # two links might have the same href, but different titles.",
                "// Line 255:             annot_files[annot_target] = write_pdf_attachment(",
                "// vulnerable line: 256: pdf, Attachment(annot_target), compress)",
                "// Line 257:         annot_file = annot_files[annot_target]",
                "// Line 258:         if annot_file is None:",
                "// Line 259:             continue",
                "// Line 260:         rectangle = (",
                "// Line 261:             *matrix.transform_point(*rectangle[:2]),",
                "// Line 262:             *matrix.transform_point(*rectangle[2:]))",
                "// Line 263:         stream = pydyf.Stream([], {",
                "// Line 264:             'Type': '/XObject',",
                "// Line 265:             'Subtype': '/Form',",
                "// Line 266:             'BBox': pydyf.Array(rectangle),"
            ]
        },
        {
            "filename_of_changes": "html.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "3",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 277:                     modified = parse_w3c_date(name, content)",
                "// Line 278:             elif name and name not in custom:",
                "// Line 279:                 custom[name] = content",
                "// Line 280:         elif element.tag == 'link' and element_has_link_type(",
                "// Line 281:                 element, 'attachment'):",
                "// Line 282:             url = get_url_attribute(element, 'href', html.base_url)",
                "// Line 283:             attachment_title = element.get('title', None)",
                "// Line 284:             if url is None:",
                "// Line 285:                 LOGGER.error('Missing href in <link rel=\"attachment\">')",
                "// Line 286:             else:",
                "// vulnerable line: 287: attachment = Attachment(url=url, description=attachment_title)",
                "// Line 288:                 attachments.append(attachment)",
                "// Line 289:     return {",
                "// Line 290:         'title': title,",
                "// Line 291:         'description': description,",
                "// Line 292:         'generator': generator,",
                "// Line 293:         'keywords': keywords,",
                "// Line 294:         'authors': authors,",
                "// Line 295:         'created': created,",
                "// Line 296:         'modified': modified,",
                "// Line 297:         'attachments': attachments,"
            ]
        }
    ]
}