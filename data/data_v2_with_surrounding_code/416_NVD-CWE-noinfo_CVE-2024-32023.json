{
    "cve_id": "CVE-2024-32023",
    "cve_description": "Kohya_ss is a GUI for Kohya's Stable Diffusion trainers. Kohya_ss is vulnerable to a path injection in the `common_gui.py` `find_and_replace` function. This vulnerability is fixed in 23.1.5.",
    "cve_publish_date": "2024-04-16T15:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Find replace (#2258)\n\n* Improve security to limit finding and replacing contents of any files on the system, that the attacker knows the contents of by specifying the list of acceptable extensions for captions.\r\n\r\n* Update caption extension fields to Dropdown with restricted choices for security reasons",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "basic_caption_gui.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 183:                 elem_classes=[\"tool\"],",
                "// Line 184:                 visible=(not headless),",
                "// Line 185:             )",
                "// Line 186:             # Event handler for button click",
                "// Line 187:             folder_button.click(",
                "// Line 188:                 get_folder_path,",
                "// Line 189:                 outputs=images_dir,",
                "// Line 190:                 show_progress=False,",
                "// Line 191:             )",
                "// Line 192:             # Textbox for caption file extension",
                "// vulnerable line: 193: caption_ext = gr.Textbox(",
                "// Line 194:                 label=\"Caption file extension\",",
                "// vulnerable line: 195: placeholder=\"Extension for caption file (e.g., .caption, .txt)\",",
                "// Line 196:                 value=\".txt\",",
                "// Line 197:                 interactive=True,",
                "// Line 198:             )",
                "// Line 199:             # Checkbox to overwrite existing captions",
                "// Line 200:             overwrite = gr.Checkbox(",
                "// Line 201:                 label=\"Overwrite existing captions in folder\",",
                "// Line 202:                 interactive=True,",
                "// Line 203:                 value=False,",
                "// Line 204:             )",
                "// Line 205:         # Row for caption prefix and text"
            ]
        },
        {
            "filename_of_changes": "blip_caption_gui.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 135:                 elem_id=\"open_folder_small\",",
                "// Line 136:                 elem_classes=[\"tool\"],",
                "// Line 137:                 visible=(not headless),",
                "// Line 138:             )",
                "// Line 139:             button_train_data_dir_input.click(",
                "// Line 140:                 get_folder_path,",
                "// Line 141:                 outputs=train_data_dir,",
                "// Line 142:                 show_progress=False,",
                "// Line 143:             )",
                "// Line 144:         with gr.Row():",
                "// vulnerable line: 145: caption_file_ext = gr.Textbox(",
                "// Line 146:                 label=\"Caption file extension\",",
                "// vulnerable line: 147: placeholder=\"Extension for caption file (e.g., .caption, .txt)\",",
                "// Line 148:                 value=\".txt\",",
                "// Line 149:                 interactive=True,",
                "// Line 150:             )",
                "// Line 151: ",
                "// Line 152:             prefix = gr.Textbox(",
                "// Line 153:                 label=\"Prefix to add to BLIP caption\",",
                "// Line 154:                 placeholder=\"(Optional)\",",
                "// Line 155:                 interactive=True,",
                "// Line 156:             )",
                "// Line 157: "
            ]
        },
        {
            "filename_of_changes": "class_basic_training.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "5",
            "number_of_lines_deleted_vulnerable_to_cve": "4",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 91:             self.max_train_steps = gr.Textbox(",
                "// Line 92:                 label=\"Max train steps\",",
                "// Line 93:                 placeholder=\"(Optional) Enforce # steps\",",
                "// Line 94:                 value=self.config.get(\"basic.max_train_steps\", \"\"),",
                "// Line 95:             )",
                "// Line 96:             # Initialize the save every N epochs input",
                "// Line 97:             self.save_every_n_epochs = gr.Number(",
                "// Line 98:                 label=\"Save every N epochs\", value=self.config.get(\"basic.save_every_n_epochs\", 1), precision=0",
                "// Line 99:             )",
                "// Line 100:             # Initialize the caption extension input",
                "// vulnerable line: 101: self.caption_extension = gr.Textbox(",
                "// vulnerable line: 102: label=\"Caption Extension\",",
                "// vulnerable line: 103: placeholder=\"(Optional) default: .caption\",",
                "// vulnerable line: 104: value=self.config.get(\"basic.caption_extension\", \"\"),",
                "// Line 105:             )",
                "// Line 106: ",
                "// Line 107:     def init_precision_and_resources_controls(self) -> None:",
                "// Line 108:         \"\"\"",
                "// Line 109:         Initializes the precision and resources controls for the model.",
                "// Line 110:         \"\"\"",
                "// Line 111:         with gr.Row():",
                "// Line 112:             # Initialize the seed textbox",
                "// Line 113:             self.seed = gr.Textbox(label=\"Seed\", placeholder=\"(Optional) eg:1234\", value=self.config.get(\"basic.seed\", \"\"))",
                "// Line 114:             # Initialize the cache latents checkbox"
            ]
        },
        {
            "filename_of_changes": "common_gui.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "27",
            "number_of_lines_deleted_vulnerable_to_cve": "8",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 742:         msgbox(",
                "// Line 743:             f\"No files with extension {caption_file_ext} were found in {folder_path}...\"",
                "// Line 744:         )",
                "// Line 745:         log.warning(",
                "// Line 746:             \"No files with extension {caption_file_ext} were found in {folder_path}...\"",
                "// Line 747:         )",
                "// Line 748:         # Exit the function early",
                "// Line 749:         return",
                "// Line 750: ",
                "// Line 751:     # List all caption files in the folder",
                "// vulnerable line: 752: caption_files = [f for f in os.listdir(folder_path) if f.endswith(caption_file_ext)]",
                "// Line 753: ",
                "// Line 754:     # Iterate over the list of caption files",
                "// Line 755:     for caption_file in caption_files:",
                "// Line 756:         # Construct the full path for each caption file",
                "// Line 757:         file_path = os.path.join(folder_path, caption_file)",
                "// Line 758:         # Read and replace text",
                "// vulnerable line: 759: with open(file_path, \"r\", errors=\"ignore\") as f:",
                "// vulnerable line: 760: content = f.read().replace(search_text, replace_text)",
                "// Line 761: ",
                "// vulnerable line: 762: # Write the updated content back to the file",
                "// vulnerable line: 763: with open(file_path, \"w\") as f:",
                "// vulnerable line: 764: f.write(content)",
                "// Line 765: ",
                "// Line 766: ",
                "// Line 767: def color_aug_changed(color_aug):",
                "// Line 768:     \"\"\"",
                "// Line 769:     Handles the change in color augmentation checkbox.",
                "// Line 770: ",
                "// Line 771:     This function is called when the color augmentation checkbox is toggled.",
                "// Line 772:     If color augmentation is enabled, it disables the cache latent checkbox",
                "// Line 773:     and returns a new checkbox with the value set to False and interactive set to False.",
                "// Line 774:     If color augmentation is disabled, it returns a new checkbox with interactive set to True."
            ]
        },
        {
            "filename_of_changes": "git_caption_gui.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 107:                 elem_id=\"open_folder_small\",",
                "// Line 108:                 elem_classes=[\"tool\"],",
                "// Line 109:                 visible=(not headless),",
                "// Line 110:             )",
                "// Line 111:             button_train_data_dir_input.click(",
                "// Line 112:                 get_folder_path,",
                "// Line 113:                 outputs=train_data_dir,",
                "// Line 114:                 show_progress=False,",
                "// Line 115:             )",
                "// Line 116:         with gr.Row():",
                "// vulnerable line: 117: caption_ext = gr.Textbox(",
                "// Line 118:                 label=\"Caption file extension\",",
                "// vulnerable line: 119: placeholder=\"Extension for caption file (e.g., .caption, .txt)\",",
                "// Line 120:                 value=\".txt\",",
                "// Line 121:                 interactive=True,",
                "// Line 122:             )",
                "// Line 123: ",
                "// Line 124:             prefix = gr.Textbox(",
                "// Line 125:                 label=\"Prefix to add to GIT caption\",",
                "// Line 126:                 placeholder=\"(Optional)\",",
                "// Line 127:                 interactive=True,",
                "// Line 128:             )",
                "// Line 129: "
            ]
        },
        {
            "filename_of_changes": "group_images_gui.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "3",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 164:                 value=False,",
                "// Line 165:                 info=\"Do not copy other files in the input folder to the output folder\",",
                "// Line 166:             )",
                "// Line 167: ",
                "// Line 168:             generate_captions = gr.Checkbox(",
                "// Line 169:                 label=\"Generate Captions\",",
                "// Line 170:                 value=False,",
                "// Line 171:                 info=\"Generate caption files for the grouped images based on their folder name\",",
                "// Line 172:             )",
                "// Line 173: ",
                "// vulnerable line: 174: caption_ext = gr.Textbox(",
                "// vulnerable line: 175: label=\"Caption Extension\",",
                "// vulnerable line: 176: placeholder=\"Caption file extension (e.g., .txt)\",",
                "// Line 177:                 value=\".txt\",",
                "// Line 178:                 interactive=True,",
                "// Line 179:             )",
                "// Line 180: ",
                "// Line 181:         group_images_button = gr.Button(\"Group images\")",
                "// Line 182: ",
                "// Line 183:         group_images_button.click(",
                "// Line 184:             group_images,",
                "// Line 185:             inputs=[",
                "// Line 186:                 input_folder,"
            ]
        },
        {
            "filename_of_changes": "manual_caption_gui.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "2",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 291:                 elem_id=\"open_folder_small\",",
                "// Line 292:                 elem_classes=[\"tool\"],",
                "// Line 293:                 visible=(not headless),",
                "// Line 294:             )",
                "// Line 295:             folder_button.click(",
                "// Line 296:                 get_folder_path,",
                "// Line 297:                 outputs=images_dir,",
                "// Line 298:                 show_progress=False,",
                "// Line 299:             )",
                "// Line 300:             load_images_button = gr.Button(\"Load\", elem_id=\"open_folder\")",
                "// vulnerable line: 301: caption_ext = gr.Textbox(",
                "// Line 302:                 label=\"Caption file extension\",",
                "// vulnerable line: 303: placeholder=\"Extension for caption file (e.g., .caption, .txt)\",",
                "// Line 304:                 value=\".txt\",",
                "// Line 305:                 interactive=True,",
                "// Line 306:             )",
                "// Line 307:             auto_save = gr.Checkbox(",
                "// Line 308:                 label=\"Autosave\", info=\"Options\", value=True, interactive=True",
                "// Line 309:             )",
                "// Line 310: ",
                "// Line 311:             images_dir.change(",
                "// Line 312:                 fn=lambda path: gr.Dropdown(choices=[\"\"] + list_images_dirs(path)),",
                "// Line 313:                 inputs=images_dir,"
            ]
        },
        {
            "filename_of_changes": "wd14_caption_gui.py",
            "code_language": "Python",
            "number_of_lines_added_for_mitigation": "3",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 181:             )",
                "// Line 182: ",
                "// Line 183:             force_download = gr.Checkbox(",
                "// Line 184:                 label=\"Force model re-download\",",
                "// Line 185:                 value=config.get(\"wd14_caption.force_download\", False),",
                "// Line 186:                 info=\"Useful to force model re download when switching to onnx\",",
                "// Line 187:             )",
                "// Line 188: ",
                "// Line 189:         with gr.Row():",
                "// Line 190: ",
                "// vulnerable line: 191: caption_extension = gr.Textbox(",
                "// Line 192:                 label=\"Caption file extension\",",
                "// vulnerable line: 193: placeholder=\"Extension for caption file (e.g., .caption, .txt)\",",
                "// vulnerable line: 194: value=config.get(\"wd14_caption.caption_extension\", \".txt\"),",
                "// Line 195:                 interactive=True,",
                "// Line 196:             )",
                "// Line 197: ",
                "// Line 198:             caption_separator = gr.Textbox(",
                "// Line 199:                 label=\"Caption Separator\",",
                "// Line 200:                 value=config.get(\"wd14_caption.caption_separator\", \", \"),",
                "// Line 201:                 interactive=True,",
                "// Line 202:             )",
                "// Line 203: ",
                "// Line 204:         with gr.Row():"
            ]
        }
    ]
}