{
    "cve_id": "CVE-2024-35175",
    "cve_description": "sshpiper is a reverse proxy for sshd. Starting in version 1.0.50 and prior to version 1.3.0, the way the proxy protocol listener is implemented in sshpiper can allow an attacker to forge their connecting address. Commit 2ddd69876a1e1119059debc59fe869cb4e754430 added the proxy protocol listener as the only listener in sshpiper, with no option to toggle this functionality off. This means that any connection that sshpiper is directly (or in some cases indirectly) exposed to can use proxy protocol to forge its source address. Any users of sshpiper who need logs from it for whitelisting/rate limiting/security investigations could have them become much less useful if an attacker is sending a spoofed source address. Version 1.3.0 contains a patch for the issue.",
    "cve_publish_date": "2024-05-14T22:15Z",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "replace with proxy protocol listener",
    "type_of_change": "Modification",
    "changes": [
        {
            "filename_of_changes": "daemon.go",
            "code_language": "Go",
            "number_of_lines_added_for_mitigation": "3",
            "number_of_lines_deleted_vulnerable_to_cve": "3",
            "Code_with_highlighted_vulnerability_lines": [
                "// Line 62:         lis:            lis,",
                "// Line 63:         loginGraceTime: ctx.Duration(\"login-grace-time\"),",
                "// Line 64:     }, nil",
                "// Line 65: }",
                "// Line 66: ",
                "// Line 67: func (d *daemon) install(plugins ...*plugin.GrpcPlugin) error {",
                "// Line 68:     if len(plugins) == 0 {",
                "// Line 69:         return fmt.Errorf(\"no plugins found\")",
                "// Line 70:     }",
                "// Line 71: ",
                "// vulnerable line: 72: // if len(plugins) == 1 {",
                "// vulnerable line: 73: //     return plugins[0].InstallPiperConfig(d.config)",
                "// vulnerable line: 74: // }",
                "// Line 75: ",
                "// Line 76:     m := plugin.ChainPlugins{}",
                "// Line 77: ",
                "// Line 78:     for _, p := range plugins {",
                "// Line 79:         if err := m.Append(p); err != nil {",
                "// Line 80:             return err",
                "// Line 81:         }",
                "// Line 82:     }",
                "// Line 83: ",
                "// Line 84:     return m.InstallPiperConfig(d.config)"
            ]
        },
        {
            "filename_of_changes": "go.sum",
            "code_language": "Go",
            "number_of_lines_added_for_mitigation": "2",
            "number_of_lines_deleted_vulnerable_to_cve": "0",
            "Code_with_highlighted_vulnerability_lines": []
        },
        {
            "filename_of_changes": "main.go",
            "code_language": "Go",
            "number_of_lines_added_for_mitigation": "3",
            "number_of_lines_deleted_vulnerable_to_cve": "1",
            "Code_with_highlighted_vulnerability_lines": []
        }
    ]
}