{
    "cve_id": "CVE-2020-7769",
    "cve_description": "This affects the package nodemailer before 6.4.16. Use of crafted recipient email addresses may result in arbitrary command flag injection in sendmail transport for sending mails.",
    "cve_publish_date": "2020-11-12",
    "cwe_id": "CWE-88",
    "cwe_name": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
    "cwe_description": "The product constructs a string for a command to be executed by a separate component\nin another control sphere, but it does not properly delimit the\nintended arguments, options, or switches within that command string.",
    "commit_message": "v6.4.16",
    "type_of_change": "Modification",
    "filename_of_changes": "qp-test.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "19",
    "number_of_lines_deleted_vulnerable_to_cve": "19",
    "vulnerable_lines": [
        "// Line_Reference 15: describe('Quoted-Printable Tests', function() {",
        "// Line_Reference 35:     describe('#encode', function() {",
        "// Line_Reference 36:         it('shoud encode UTF-8 string to QP', function() {",
        "// Line_Reference 37:             encodeFixtures.forEach(function(test) {",
        "// Line_Reference 42:         it('shoud encode Buffer to QP', function() {",
        "// Line_Reference 47:     describe('#wrap', function() {",
        "// Line_Reference 48:         it('should wrap long QP encoded lines', function() {",
        "// Line_Reference 49:             wrapFixtures.forEach(function(test) {",
        "// Line_Reference 54:         it('should wrap line ending with <CR>', function() {",
        "// Line_Reference 59:     describe('QP Streams', function() {",
        "// Line_Reference 60:         it('should transform incoming bytes to QP', function(done) {",
        "// Line_Reference 70:             encoder.on('data', function(chunk) {",
        "// Line_Reference 75:             encoder.on('end', function(chunk) {",
        "// Line_Reference 86:             let sendNextByte = function() {",
        "// Line_Reference 99:         it('should transform incoming bytes to QP and back', function(done) {",
        "// Line_Reference 109:             file.on('data', function(chunk) {",
        "// Line_Reference 113:             file.on('end', function() {",
        "// Line_Reference 117:             decoder.on('data', function(chunk) {",
        "// Line_Reference 121:             decoder.on('end', function() {"
    ]
}
