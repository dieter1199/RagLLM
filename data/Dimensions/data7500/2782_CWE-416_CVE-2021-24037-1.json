{
    "cve_id": "CVE-2021-24037",
    "cve_description": "A use after free in hermes, while emitting certain error messages, prior to commit d86e185e485b6330216dee8e854455c694e3a36e allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.",
    "cve_publish_date": "2021-06-15",
    "cwe_id": "CWE-416",
    "cwe_name": "Use After Free",
    "cwe_description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
    "commit_message": "Fix a bug in transient object property assignment and getUTF16Ref\n\nSummary:\nThe returned `UTF16Ref` from `StringView::getUTF16Ref` can be invalidated by\nappending more contents to the same allocator.\nThis case was encountered in `transientObjectPutErrorMessage`, resulting in\nusing free'd memory.\n\nReviewed By: tmikov\n\nDifferential Revision: D23034855\n\nfbshipit-source-id: 4c25a5369934bf3bdfc5582385503f4b87de3792",
    "type_of_change": "Modification",
    "filename_of_changes": "Interpreter.cpp",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "4",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 448:   SmallU16String<32> tmp;",
        "// Line_Reference 451:       baseTypeAsString.getUTF16Ref(tmp) + \" '\" +",
        "// Line_Reference 452:       valueAsStringPrintable.getUTF16Ref(tmp) + \"'\");"
    ]
}
