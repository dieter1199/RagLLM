{
    "cve_id": "CVE-2021-23443",
    "cve_description": "This affects the package edge.js before 5.3.2. A type confusion vulnerability can be used to bypass input sanitization when the input to be rendered is an array (instead of a string or a SafeValue), even if {{ }} are used.",
    "cve_publish_date": "2021-09-21",
    "cwe_id": "CWE-843",
    "cwe_name": "Access of Resource Using Incompatible Type ('Type Confusion')",
    "cwe_description": "The product allocates or initializes a resource such as a pointer, object, or variable using one type, but it later accesses that resource using a type that is incompatible with the original type.",
    "commit_message": "fix: Cross-Site Scripting vulnerability reported by Snyk security team",
    "type_of_change": "Modification",
    "filename_of_changes": "index.ts",
    "code_language": "TypeScript",
    "number_of_lines_added_for_mitigation": "3",
    "number_of_lines_deleted_vulnerable_to_cve": "7",
    "vulnerable_lines": [
        "// Line_Reference 31: export function escape<T>(input: T): T extends SafeValue ? T['value'] : T {",
        "// Line_Reference 32:   return typeof input === 'string'",
        "// Line_Reference 33:     ? string.escapeHTML(input)",
        "// Line_Reference 34:     : input instanceof SafeValue",
        "// Line_Reference 35:     ? input.value",
        "// Line_Reference 36:     : input",
        "// Line_Reference 200:   public escape<T>(input: T): T extends SafeValue ? T['value'] : T {"
    ]
}
