{
    "cve_id": "CVE-2016-9283",
    "cve_description": "SQL Injection in framework/core/subsystems/expRouter.php in Exponent CMS v2.4.0 allows remote attackers to read database information via address/addContentToSearch/id/ and a trailing string, related to a \"sef URL\" issue.",
    "cve_publish_date": "2016-11-11",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "fix sql injection security vulnerability which failed to account for sef urls adequately; reported by many, many users",
    "type_of_change": "Modification",
    "filename_of_changes": "expRouter.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "96",
    "number_of_lines_deleted_vulnerable_to_cve": "39",
    "vulnerable_lines": [
        "// Line_Reference 41:     public  $url_style = '';",
        "// Line_Reference 43:     public  $sefPath = null;",
        "// Line_Reference 192:         // strip out possible xss exploits via url",
        "// Line_Reference 204:                 $_GET['id'] = intval($_GET['id']);",
        "// Line_Reference 206:                 $_POST['id'] = intval($_POST['id']);",
        "// Line_Reference 207: ",
        "// Line_Reference 208:             $_REQUEST['id'] = intval($_REQUEST['id']);",
        "// Line_Reference 214:                     $_GET[$key] = intval($_GET[$key]);",
        "// Line_Reference 216:                     $_POST[$key] = intval($_POST[$key]);",
        "// Line_Reference 217: ",
        "// Line_Reference 218:                 $_REQUEST[$key] = intval($_REQUEST[$key]);",
        "// Line_Reference 226:         // start splitting the URL into it's different parts",
        "// Line_Reference 227:         $this->splitURL();",
        "// Line_Reference 228:         // edebug($this,1);",
        "// Line_Reference 229: ",
        "// Line_Reference 251:                         $_POST['controller'] = $module;",
        "// Line_Reference 252:                         $_REQUEST['controller'] = $module;",
        "// Line_Reference 320:             if ($this->url_parts[count($this->url_parts)-1] == '') array_pop($this->url_parts);",
        "// Line_Reference 321:             if (empty($this->url_parts[0])) array_shift($this->url_parts);",
        "// Line_Reference 325:             } elseif (count($this->url_parts) == 1 || $db->selectObject('section', \"sef_name='\" . substr($this->sefPath,1) . \"'\") != null) {",
        "// Line_Reference 332:                 if (($db->selectObject('section', \"sef_name='\" . $this->url_parts[0] . \"'\") != null) && (in_array(array('printerfriendly','exportaspdf','ajax_action'), $this->url_parts))) {",
        "// Line_Reference 340:             $this->url_style = 'sef';",
        "// Line_Reference 433: //fixme and we may also want to log any redirects taken??",
        "// Line_Reference 496:                 $this->params = $this->convertPartsToParams();",
        "// Line_Reference 523:                 $return_params['url_parts']['id'] = $this->url_parts[2];",
        "// Line_Reference 533:         // Set the module or controller - this how the actual routing happens",
        "// Line_Reference 534:         $_REQUEST[$requestType] = $return_params['controller']; //url_parts[0];",
        "// Line_Reference 535:         $_GET[$requestType] = $return_params['controller'];",
        "// Line_Reference 536:         $_POST[$requestType] = $return_params['controller'];",
        "// Line_Reference 547:         $_REQUEST['action'] = $action;",
        "// Line_Reference 548:         $_GET['action'] = $action;",
        "// Line_Reference 549:         $_POST['action'] = $action;",
        "// Line_Reference 551:         // pass off the name<=>value pairs",
        "// Line_Reference 553:             $save_value = expString::sanitize($value);",
        "// Line_Reference 554:             $_REQUEST[$key] = $save_value;",
        "// Line_Reference 555:             $_GET[$key] = $save_value;",
        "// Line_Reference 564:             $url .= substr(PATH_RELATIVE,0,-1).$this->sefPath;",
        "// Line_Reference 684:             if (isset($_REQUEST['PHPSESSID'])) unset($_REQUEST['PHPSESSID']);",
        "// Line_Reference 778:         if (substr($this->sefPath,-1) == \"/\") $this->sefPath = substr($this->sefPath,0,-1);"
    ]
}
