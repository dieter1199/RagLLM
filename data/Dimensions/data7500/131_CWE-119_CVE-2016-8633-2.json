{
    "cve_id": "CVE-2016-8633",
    "cve_description": "drivers/firewire/net.c in the Linux kernel before 4.8.7, in certain unusual hardware configurations, allows remote attackers to execute arbitrary code via crafted fragmented packets.",
    "cve_publish_date": "2016-11-28",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "firewire: net: guard against rx buffer overflows\n\nThe IP-over-1394 driver firewire-net lacked input validation when\nhandling incoming fragmented datagrams.  A maliciously formed fragment\nwith a respectively large datagram_offset would cause a memcpy past the\ndatagram buffer.\n\nSo, drop any packets carrying a fragment with offset + length larger\nthan datagram_size.\n\nIn addition, ensure that\n  - GASP header, unfragmented encapsulation header, or fragment\n    encapsulation header actually exists before we access it,\n  - the encapsulated datagram or fragment is of nonzero size.\n\nReported-by: Eyal Itkin <eyal.itkin@gmail.com>\nReviewed-by: Eyal Itkin <eyal.itkin@gmail.com>\nFixes: CVE 2016-8633\nCc: stable@vger.kernel.org\nSigned-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>",
    "type_of_change": "Modification",
    "filename_of_changes": "net.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "35",
    "number_of_lines_deleted_vulnerable_to_cve": "16",
    "vulnerable_lines": [
        "// Line_Reference 734: \tu16 source_node_id;",
        "// Line_Reference 735: \tu32 specifier_id;",
        "// Line_Reference 736: \tu32 ver;",
        "// Line_Reference 753: \tspecifier_id =    (be32_to_cpu(buf_ptr[0]) & 0xffff) << 8",
        "// Line_Reference 754: \t\t\t| (be32_to_cpu(buf_ptr[1]) & 0xff000000) >> 24;",
        "// Line_Reference 755: \tver = be32_to_cpu(buf_ptr[1]) & 0xffffff;",
        "// Line_Reference 756: \tsource_node_id = be32_to_cpu(buf_ptr[0]) >> 16;",
        "// Line_Reference 757: ",
        "// Line_Reference 758: \tif (specifier_id == IANA_SPECIFIER_ID &&",
        "// Line_Reference 759: \t    (ver == RFC2734_SW_VERSION",
        "// Line_Reference 761: \t     || ver == RFC3146_SW_VERSION",
        "// Line_Reference 763: \t    )) {",
        "// Line_Reference 764: \t\tbuf_ptr += 2;",
        "// Line_Reference 765: \t\tlength -= IEEE1394_GASP_HDR_SIZE;",
        "// Line_Reference 766: \t\tfwnet_incoming_packet(dev, buf_ptr, length, source_node_id,",
        "// Line_Reference 768: \t}"
    ]
}
