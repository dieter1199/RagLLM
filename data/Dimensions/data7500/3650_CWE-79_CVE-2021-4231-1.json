{
    "cve_id": "CVE-2021-4231",
    "cve_description": "A vulnerability was found in Angular up to 11.0.4/11.1.0-next.2. It has been classified as problematic. Affected is the handling of comments. The manipulation leads to cross site scripting. It is possible to launch the attack remotely but it might require an authentication first. Upgrading to version 11.0.5 and 11.1.0-next.3 is able to address this issue. The name of the patch is ba8da742e3b243e8f43d4c63aa842b44e14f2b09. It is recommended to upgrade the affected component.",
    "cve_publish_date": "2022-05-26",
    "cwe_id": "CWE-79",
    "cwe_name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "cwe_description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
    "commit_message": "fix(core): fix possible XSS attack in development through SSR (#40525)\n\nThis is a follow up fix for\nhttps://github.com/angular/angular/pull/40136/commits/894286dd0c92b5af223364237e63798e18b14f58.\n\nIt turns out that comments can be closed in several ways:\n- `<!-->`\n- `<!-- -->`\n- `<!-- --!>`\n\nAll of the above are valid ways to close comment per:\nhttps://html.spec.whatwg.org/multipage/syntax.html#comments\n\nThe new fix surrounds `<` and `>` with zero width space so that it\nrenders in the same way, but it prevents the comment to be closed eagerly.\n\nPR Close #40525",
    "type_of_change": "Modification",
    "filename_of_changes": "dom.ts",
    "code_language": "TypeScript",
    "number_of_lines_added_for_mitigation": "25",
    "number_of_lines_deleted_vulnerable_to_cve": "11",
    "vulnerable_lines": [
        "// Line_Reference 9: const END_COMMENT = /-->/g;",
        "// Line_Reference 10: const END_COMMENT_ESCAPED = '-\\u200B-\\u200B>';",
        "// Line_Reference 13:  * Escape the content of the strings so that it can be safely inserted into a comment node.",
        "// Line_Reference 16:  * `<!-- The way you close a comment is with \"-->\". -->`. Above the `\"-->\"` is meant to be text not",
        "// Line_Reference 17:  * an end to the comment. This can be created programmatically through DOM APIs.",
        "// Line_Reference 28:  * This function escapes the comment text by looking for the closing char sequence `-->` and replace",
        "// Line_Reference 29:  * it with `-_-_>` where the `_` is a zero width space `\\u200B`. The result is that if a comment",
        "// Line_Reference 30:  * contains `-->` text it will render normally but it will not cause the HTML parser to close the",
        "// Line_Reference 31:  * comment.",
        "// Line_Reference 33:  * @param value text to make safe for comment node by escaping the comment close character sequence",
        "// Line_Reference 36:   return value.replace(END_COMMENT, END_COMMENT_ESCAPED);"
    ]
}
