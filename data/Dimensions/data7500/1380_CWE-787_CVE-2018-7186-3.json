{
    "cve_id": "CVE-2018-7186",
    "cve_description": "Leptonica before 1.75.3 does not limit the number of characters in a %s format argument to fscanf or sscanf, which allows remote attackers to cause a denial of service (stack-based buffer overflow) or possibly have unspecified other impact via a long string, as demonstrated by the gplotRead and ptaReadStream functions.",
    "cve_publish_date": "2018-02-16",
    "cwe_id": "CWE-787",
    "cwe_name": "Out-of-bounds Write",
    "cwe_description": "The product writes data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "Security fixes: expect final changes for release 1.75.3.\n* Fixed a debian security issue with fscanf() reading a string with\n  possible buffer overflow.\n* There were also a few similar situations with sscanf().",
    "type_of_change": "Modification",
    "filename_of_changes": "xtractprotos.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "7",
    "number_of_lines_deleted_vulnerable_to_cve": "7",
    "vulnerable_lines": [
        "// Line_Reference 90: static const l_int32  L_BUF_SIZE = 512;",
        "// Line_Reference 99: char         buf[L_BUF_SIZE];",
        "// Line_Reference 128:                 ret = sscanf(argv[i] + 1, \"prestring=%s\", buf);",
        "// Line_Reference 133:                 if ((len = strlen(buf)) > L_BUF_SIZE - 3) {",
        "// Line_Reference 142:                 ret = sscanf(argv[i] + 1, \"protos=%s\", buf);",
        "// Line_Reference 168:     snprintf(buf, L_BUF_SIZE,",
        "// Line_Reference 193:         snprintf(buf, L_BUF_SIZE, \"cpp -ansi -DNO_PROTOS %s %s\","
    ]
}
