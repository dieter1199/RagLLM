{
    "cve_id": "CVE-2014-9114",
    "cve_description": "Blkid in util-linux before 2.26rc-1 allows local users to execute arbitrary code.",
    "cve_publish_date": "2017-03-31",
    "cwe_id": "CWE-77",
    "cwe_name": "Improper Neutralization of Special Elements used in a Command ('Command Injection')",
    "cwe_description": "The product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component.",
    "commit_message": "libblkid: care about unsafe chars in cache\n\nThe high-level libblkid API uses /run/blkid/blkid.tab cache to\nstore probing results. The cache format is\n\n   <device NAME=\"value\" ...>devname</device>\n\nand unfortunately the cache code does not escape quotation marks:\n\n   # mkfs.ext4 -L 'AAA\"BBB'\n\n   # cat /run/blkid/blkid.tab\n   ...\n   <device ... LABEL=\"AAA\"BBB\" ...>/dev/sdb1</device>\n\nsuch string is later incorrectly parsed and blkid(8) returns\nnonsenses. And for use-cases like\n\n   # eval $(blkid -o export /dev/sdb1)\n\nit's also insecure.\n\nNote that mount, udevd and blkid -p are based on low-level libblkid\nAPI, it bypass the cache and directly read data from the devices.\n\nThe current udevd upstream does not depend on blkid(8) output at all,\nit's directly linked with the library and all unsafe chars are encoded by\n\\x<hex> notation.\n\n   # mkfs.ext4 -L 'X\"`/tmp/foo` \"' /dev/sdb1\n   # udevadm info --export-db | grep LABEL\n   ...\n   E: ID_FS_LABEL=X__/tmp/foo___\n   E: ID_FS_LABEL_ENC=X\\x22\\x60\\x2ftmp\\x2ffoo\\x60\\x20\\x22\n\nSigned-off-by: Karel Zak <kzak@redhat.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "blkid.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "2",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 309: \t\tsafe_print(value, valsz, NULL);",
        "// Line_Reference 318: \t\tsafe_print(value, valsz, \"\\\"\");"
    ]
}
