{
    "cve_id": "CVE-2015-10014",
    "cve_description": "A vulnerability classified as critical has been found in arekk uke. This affects an unknown part of the file lib/uke/finder.rb. The manipulation leads to sql injection. The identifier of the patch is 52fd3b2d0bc16227ef57b7b98a3658bb67c1833f. It is recommended to apply a patch to fix this issue. The identifier VDB-217485 was assigned to this vulnerability.",
    "cve_publish_date": "2023-01-05",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "SQL injection possibility",
    "type_of_change": "Modification",
    "filename_of_changes": "finder.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "17",
    "number_of_lines_deleted_vulnerable_to_cve": "17",
    "vulnerable_lines": [
        "// Line_Reference 52:     sql.gsub!(':lat_ne', conn.quote_string(bounds_ne['lat'].to_s))",
        "// Line_Reference 53:     sql.gsub!(':lat_sw', conn.quote_string(bounds_sw['lat'].to_s))",
        "// Line_Reference 54:     sql.gsub!(':lon_ne', conn.quote_string(bounds_ne['lng'].to_s))",
        "// Line_Reference 55:     sql.gsub!(':lon_sw', conn.quote_string(bounds_sw['lng'].to_s))",
        "// Line_Reference 56:     sql.gsub!(':lat', conn.quote_string(@location.latitude.to_s))",
        "// Line_Reference 57:     sql.gsub!(':lon', conn.quote_string(@location.longitude.to_s))",
        "// Line_Reference 80:     sql.gsub!(':lat_ne', conn.quote_string(bounds_ne['lat'].to_s))",
        "// Line_Reference 81:     sql.gsub!(':lat_sw', conn.quote_string(bounds_sw['lat'].to_s))",
        "// Line_Reference 82:     sql.gsub!(':lon_ne', conn.quote_string(bounds_ne['lng'].to_s))",
        "// Line_Reference 83:     sql.gsub!(':lon_sw', conn.quote_string(bounds_sw['lng'].to_s))",
        "// Line_Reference 84:     sql.gsub!(':lat', conn.quote_string(@location.latitude.to_s))",
        "// Line_Reference 85:     sql.gsub!(':lon', conn.quote_string(@location.longitude.to_s))",
        "// Line_Reference 100:     result_to_hash select_using_uke_stations_sql(sql.gsub(':uke_import_id', @active_import.id.to_s).gsub(':mhz_start', conn.quote_string(first.to_s)).gsub(':mhz_end', conn.quote_string(last.to_s)))",
        "// Line_Reference 113:     result_to_hash select_using_uke_stations_sql(sql.gsub(':uke_import_id', @active_import.id.to_s).gsub(':mhz', conn.quote_string(Uke::Unifier::frq_string(@q).to_s)))",
        "// Line_Reference 124:            AND (us.location LIKE '%:like%' OR us.name LIKE '%:like%' OR uo.name LIKE '%:like%')",
        "// Line_Reference 127:     result_to_hash select_using_uke_stations_sql(sql.gsub(':uke_import_id', @active_import.id.to_s).gsub(':like', conn.quote_string(@q)))",
        "// Line_Reference 152:     result_to_hash(conn.select_all(sql.gsub(':uke_import_id', @active_import.id.to_s).gsub(':lat', conn.quote_string(@location.latitude.to_s)).gsub(':lon', conn.quote_string(@location.longitude.to_s)).gsub(':mhz', conn.quote_string(Uke::Unifier::frq_string(@q).to_s))))"
    ]
}
