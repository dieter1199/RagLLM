{
    "cve_id": "CVE-2015-1326",
    "cve_description": "python-dbusmock before version 0.15.1 AddTemplate() D-Bus method call or DBusTestCase.spawn_server_template() method could be tricked into executing malicious code if an attacker supplies a .pyc file.",
    "cve_publish_date": "2019-04-22",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "SECURITY FIX: Prevent code execution through crafted pyc files\n\nWhen loading a template from an arbitrary file through the AddTemplate() D-Bus\nmethod call or DBusTestCase.spawn_server_template() Python method, don't create\nor use Python's *.pyc cached files.By tricking a user into loading a template\nfrom a world-writable directory like /tmp, an attacker could run arbitrary code\nwith the user's privileges by putting a crafted .pyc file into that directory.\n\nNote that this is highly unlikely to actually appear in practice as custom\ndbusmock templates are usually shipped in project directories, not directly in\nworld-writable directories.\n\nThanks to Simon McVittie for discovering this!\n\nLP: #1453815\nCVE-2015-1326",
    "type_of_change": "Modification",
    "filename_of_changes": "mockobject.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "5",
    "number_of_lines_deleted_vulnerable_to_cve": "8",
    "vulnerable_lines": [
        "// Line_Reference 43:         sys.path.insert(0, os.path.dirname(os.path.abspath(name)))",
        "// Line_Reference 44:         try:",
        "// Line_Reference 45:             m = os.path.splitext(os.path.basename(name))[0]",
        "// Line_Reference 46:             module = importlib.import_module(m)",
        "// Line_Reference 47:         finally:",
        "// Line_Reference 48:             sys.path.pop(0)",
        "// Line_Reference 49: ",
        "// Line_Reference 50:         return module"
    ]
}
