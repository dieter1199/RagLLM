{
    "cve_id": "CVE-2015-1340",
    "cve_description": "LXD before version 0.19-0ubuntu5 doUidshiftIntoContainer() has an unsafe Chmod() call that races against the stat in the Filepath.Walk() function. A symbolic link created in that window could cause any file on the system to have any mode of the attacker's choice.",
    "cve_publish_date": "2019-04-22",
    "cwe_id": "CWE-362",
    "cwe_name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
    "cwe_description": "The product contains a code sequence that can run concurrently with other code, and the code sequence requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence that is operating concurrently.",
    "commit_message": "CVE-2015-1340: Fix race condition between fchown and chmod in idmapset\n\nShifting a container filesystem in an environment where a user can\nmodify the container's filesystem as it's being shifted (for example if\nthe LXD server's / was shared over the network) would allow them to make\nuse of a race (TOCTOU) between the chown and chmod operations, allowing\nfor an arbitrary path to be chmod-ed rather than the planned container\npath.\n\nThe fix is to use a file descriptor to the entry being processed,\nvalidate that the entry itself is sane and then interact with the fd.\n\nThis is CVE-2015-1340\n\nReported-by: Seth Arnold\nSigned-off-by: St√©phane Graber <stgraber@ubuntu.com>",
    "type_of_change": "ModificationType.RENAME",
    "filename_of_changes": "idmapset_linux.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "5",
    "number_of_lines_deleted_vulnerable_to_cve": "9",
    "vulnerable_lines": [
        "// Line_Reference 241: \t\t\terr = os.Lchown(path, int(newuid), int(newgid))",
        "// Line_Reference 242: \t\t\tif err == nil {",
        "// Line_Reference 243: \t\t\t\tm := fi.Mode()",
        "// Line_Reference 244: \t\t\t\tif m&os.ModeSymlink == 0 {",
        "// Line_Reference 245: \t\t\t\t\terr = os.Chmod(path, m)",
        "// Line_Reference 246: \t\t\t\t\tif err != nil {",
        "// Line_Reference 247: \t\t\t\t\t\tfmt.Printf(\"Error resetting mode on %q, continuing\\n\", path)",
        "// Line_Reference 248: \t\t\t\t\t}",
        "// Line_Reference 249: \t\t\t\t}"
    ]
}
