{
    "cve_id": "CVE-2022-23617",
    "cve_description": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. In affected versions any user with edit right can copy the content of a page it does not have access to by using it as template of a new page. This issue has been patched in XWiki 13.2CR1 and 12.10.6. Users are advised to update. There are no known workarounds for this issue.",
    "cve_publish_date": "2022-02-09",
    "cwe_id": "CWE-862",
    "cwe_name": "Missing Authorization",
    "cwe_description": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
    "commit_message": "XWIKI-18430: Page content is revealed to users that don't have rights if used as a template for the creation of another page",
    "type_of_change": "Modification",
    "filename_of_changes": "CreateActionTest.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "105",
    "number_of_lines_deleted_vulnerable_to_cve": "110",
    "vulnerable_lines": [
        "// Line_Reference 31: import org.junit.Before;",
        "// Line_Reference 32: import org.junit.Rule;",
        "// Line_Reference 33: import org.junit.Test;",
        "// Line_Reference 48: import com.xpn.xwiki.test.MockitoOldcoreRule;",
        "// Line_Reference 51: import static org.junit.Assert.assertEquals;",
        "// Line_Reference 52: import static org.junit.Assert.assertNotNull;",
        "// Line_Reference 53: import static org.junit.Assert.assertNull;",
        "// Line_Reference 68: public class CreateActionTest",
        "// Line_Reference 70:     @Rule",
        "// Line_Reference 71:     public MockitoOldcoreRule oldcore = new MockitoOldcoreRule();",
        "// Line_Reference 85:     @Before",
        "// Line_Reference 86:     public void setUp() throws Exception",
        "// Line_Reference 88:         context = oldcore.getXWikiContext();",
        "// Line_Reference 90:         Utils.setComponentManager(oldcore.getMocker());",
        "// Line_Reference 93:             oldcore.getMocker().registerMockComponent((Type) QueryManager.class, \"secure\");",
        "// Line_Reference 95:         mockTemplateProvidersQuery = mock(Query.class);",
        "// Line_Reference 96:         when(mockSecureQueryManager.createQuery(any(), any())).thenReturn(mockTemplateProvidersQuery);",
        "// Line_Reference 97:         when(mockTemplateProvidersQuery.execute()).thenReturn(Collections.emptyList());",
        "// Line_Reference 99:         when(oldcore.getMockContextualAuthorizationManager().hasAccess(any(Right.class), any(EntityReference.class)))",
        "// Line_Reference 100:             .thenReturn(true);",
        "// Line_Reference 103:             oldcore.getMocker().registerMockComponent(DocumentReference.TYPE_PROVIDER);",
        "// Line_Reference 107:         mockURLFactory = mock(XWikiURLFactory.class);",
        "// Line_Reference 108:         context.setURLFactory(mockURLFactory);",
        "// Line_Reference 110:         action = new CreateAction();",
        "// Line_Reference 112:         mockRequest = mock(XWikiRequest.class);",
        "// Line_Reference 113:         context.setRequest(mockRequest);",
        "// Line_Reference 115:         mockResponse = mock(XWikiResponse.class);",
        "// Line_Reference 116:         context.setResponse(mockResponse);",
        "// Line_Reference 117: ",
        "// Line_Reference 118:         when(mockRequest.get(\"type\")).thenReturn(\"plain\");",
        "// Line_Reference 124:     public void newDocumentFromURL() throws Exception",
        "// Line_Reference 147:     public void newDocumentButNonTerminalFromURL() throws Exception",
        "// Line_Reference 173:     public void newDocumentFromURLWhenNoType() throws Exception",
        "// Line_Reference 196:     public void newDocumentWebHomeTopLevelFromURL() throws Exception",
        "// Line_Reference 220:     public void newDocumentWebHomeFromURL() throws Exception",
        "// Line_Reference 245:     public void newDocumentWebHomeButTerminalFromURL() throws Exception",
        "// Line_Reference 272:     public void newDocumentWebHomeTopLevelSpaceButTerminalFromURL() throws Exception",
        "// Line_Reference 297:         verify(mockURLFactory, never()).createURL(any(), any(), any(), any(), any(),",
        "// Line_Reference 298:             any(), any(XWikiContext.class));",
        "// Line_Reference 302:     public void existingDocumentFromUINoName() throws Exception",
        "// Line_Reference 323:         verify(mockURLFactory, never()).createURL(any(), any(), any(), any(), any(),",
        "// Line_Reference 324:             any(), any(XWikiContext.class));",
        "// Line_Reference 328:     public void existingDocumentFromUI() throws Exception",
        "// Line_Reference 356:     public void existingDocumentFromUICheckEscaping() throws Exception",
        "// Line_Reference 384:     public void existingDocumentTerminalFromUI() throws Exception",
        "// Line_Reference 413:     public void existingDocumentTerminalFromUICheckEscaping() throws Exception",
        "// Line_Reference 442:     public void existingDocumentTerminalFromUIButAlreadyExisting() throws Exception",
        "// Line_Reference 476:         verify(mockURLFactory, never()).createURL(any(), any(), any(), any(), any(),",
        "// Line_Reference 477:             any(), any(XWikiContext.class));",
        "// Line_Reference 481:     public void notExistingDocumentFromUIButNameTooLong() throws Exception",
        "// Line_Reference 508:         verify(mockURLFactory, never()).createURL(any(), any(), any(), any(), any(),",
        "// Line_Reference 509:             any(), any(XWikiContext.class));",
        "// Line_Reference 513:     public void notExistingDocumentFromUIButSpaceTooLong() throws Exception",
        "// Line_Reference 540:         verify(mockURLFactory, never()).createURL(any(), any(), any(), any(), any(),",
        "// Line_Reference 541:             any(), any(XWikiContext.class));",
        "// Line_Reference 545:     public void existingDocumentFromUITopLevelDocument() throws Exception",
        "// Line_Reference 576:     public void existingDocumentFromUIDeprecated() throws Exception",
        "// Line_Reference 604:     public void existingDocumentFromUIDeprecatedCheckEscaping() throws Exception",
        "// Line_Reference 633:     public void existingDocumentNonTerminalFromUIDeprecated() throws Exception",
        "// Line_Reference 661:     public void existingDocumentNonTerminalFromUIDeprecatedIgnoringPage() throws Exception",
        "// Line_Reference 691:     public void existingDocumentNonTerminalFromUIDeprecatedCheckEscaping() throws Exception",
        "// Line_Reference 724:     public void existingDocumentFromUITemplateProviderExistingButNoneSelected() throws Exception",
        "// Line_Reference 740:             new DocumentReference(\"xwiki\", Arrays.asList(\"XWiki\"), \"MyTemplateProvider\"), Collections.EMPTY_LIST);",
        "// Line_Reference 751:         verify(mockURLFactory, never()).createURL(any(), any(), any(), any(), any(),",
        "// Line_Reference 752:             any(), any(XWikiContext.class));",
        "// Line_Reference 848:     public void existingDocumentFromUITemplateProviderSpecified() throws Exception",
        "// Line_Reference 866:             new DocumentReference(\"xwiki\", Arrays.asList(\"XWiki\"), \"MyTemplateProvider\"), Collections.EMPTY_LIST);",
        "// Line_Reference 882:     public void existingDocumentFromUITemplateProviderSpecifiedRestrictionExists() throws Exception",
        "// Line_Reference 918:     public void existingDocumentFromUITemplateProviderSpecifiedRestrictionExistsOnParentSpace() throws Exception",
        "// Line_Reference 956:     public void existingDocumentFromUITemplateProviderSpecifiedButNotAllowed() throws Exception",
        "// Line_Reference 991:         verify(mockURLFactory, never()).createURL(any(), any(), any(), any(), any(),",
        "// Line_Reference 992:             any(), any(XWikiContext.class));",
        "// Line_Reference 996:     public void newDocumentFromURLTemplateProviderSpecifiedButNotAllowed() throws Exception",
        "// Line_Reference 1030:         verify(mockURLFactory, never()).createURL(any(), any(), any(), any(), any(),",
        "// Line_Reference 1031:             any(), any(XWikiContext.class));",
        "// Line_Reference 1035:     public void newDocumentWebHomeFromURLTemplateProviderSpecifiedButNotAllowed() throws Exception",
        "// Line_Reference 1068:         verify(mockURLFactory, never()).createURL(any(), any(), any(), any(), any(),",
        "// Line_Reference 1069:             any(), any(XWikiContext.class));",
        "// Line_Reference 1073:     public void newDocumentWebHomeFromURLTemplateProviderSpecifiedTerminal() throws Exception",
        "// Line_Reference 1089:             new DocumentReference(\"xwiki\", Arrays.asList(\"XWiki\"), \"MyTemplateProvider\"), Collections.EMPTY_LIST, true);",
        "// Line_Reference 1106:     public void newDocumentWebHomeFromURLTemplateProviderSpecifiedTerminalOverriddenFromUIToNonTerminal()",
        "// Line_Reference 1107:         throws Exception",
        "// Line_Reference 1124:             new DocumentReference(\"xwiki\", Arrays.asList(\"XWiki\"), \"MyTemplateProvider\"), Collections.EMPTY_LIST, true);",
        "// Line_Reference 1141:     public void newDocumentFromURLTemplateProviderSpecifiedNonTerminal() throws Exception",
        "// Line_Reference 1157:             new DocumentReference(\"xwiki\", Arrays.asList(\"XWiki\"), \"MyTemplateProvider\"), Collections.EMPTY_LIST,",
        "// Line_Reference 1175:     public void newDocumentFromURLTemplateProviderSpecifiedNonTerminalButOverriddenFromUITerminal() throws Exception",
        "// Line_Reference 1192:             new DocumentReference(\"xwiki\", Arrays.asList(\"XWiki\"), \"MyTemplateProvider\"), Collections.EMPTY_LIST,",
        "// Line_Reference 1210:     public void existingDocumentFromUITemplateSpecified() throws Exception",
        "// Line_Reference 1246:     public void existingDocumentFromUITemplateProviderSpecifiedTerminal() throws Exception",
        "// Line_Reference 1265:             new DocumentReference(\"xwiki\", Arrays.asList(\"XWiki\"), \"MyTemplateProvider\"), Collections.EMPTY_LIST, true);",
        "// Line_Reference 1282:     public void existingDocumentFromUITemplateProviderSpecifiedTerminalOverridenFromUIToNonTerminal() throws Exception",
        "// Line_Reference 1302:             new DocumentReference(\"xwiki\", Arrays.asList(\"XWiki\"), \"MyTemplateProvider\"), Collections.EMPTY_LIST, true);",
        "// Line_Reference 1319:     public void existingDocumentFromUITemplateProviderSpecifiedNonTerminal() throws Exception",
        "// Line_Reference 1338:             new DocumentReference(\"xwiki\", Arrays.asList(\"XWiki\"), \"MyTemplateProvider\"), Collections.EMPTY_LIST,",
        "// Line_Reference 1356:     public void existingDocumentFromUITemplateProviderSpecifiedNonTerminalOverridenFromUIToTerminal() throws Exception",
        "// Line_Reference 1376:             new DocumentReference(\"xwiki\", Arrays.asList(\"XWiki\"), \"MyTemplateProvider\"), Collections.EMPTY_LIST,",
        "// Line_Reference 1394:     public void newDocumentWebHomeFromURLTemplateProviderSpecifiedButOldPageType() throws Exception",
        "// Line_Reference 1410:             new DocumentReference(\"xwiki\", Arrays.asList(\"XWiki\"), \"MyTemplateProvider\"), Collections.EMPTY_LIST, null,",
        "// Line_Reference 1429:     public void newDocumentWebHomeFromURLTemplateProviderSpecifiedButOldPageTypeButOverriddenFromUIToNonTerminal()",
        "// Line_Reference 1447:             new DocumentReference(\"xwiki\", Arrays.asList(\"XWiki\"), \"MyTemplateProvider\"), Collections.EMPTY_LIST, null,",
        "// Line_Reference 1466:     public void existingDocumentFromUITemplateProviderSpecifiedButOldSpaceType() throws Exception",
        "// Line_Reference 1484:             new DocumentReference(\"xwiki\", Arrays.asList(\"XWiki\"), \"MyTemplateProvider\"), Collections.EMPTY_LIST, null,",
        "// Line_Reference 1503:     public void existingDocumentFromUITemplateProviderSpecifiedButOldSpaceTypeButOverridenFromUIToTerminal()",
        "// Line_Reference 1504:         throws Exception",
        "// Line_Reference 1523:             new DocumentReference(\"xwiki\", Arrays.asList(\"XWiki\"), \"MyTemplateProvider\"), Collections.EMPTY_LIST, null,",
        "// Line_Reference 1541:     public void newDocumentWebHomeFromURLTemplateProviderSpecifiedWithSaveAndEdit() throws Exception",
        "// Line_Reference 1562:         when(mockRequest.getParameter(\"spaceReference\")).thenReturn(\"X\");",
        "// Line_Reference 1563:         when(mockRequest.getParameter(\"name\")).thenReturn(\"Y\");",
        "// Line_Reference 1564:         when(mockRequest.getParameter(\"title\")).thenReturn(\"Yippee\");",
        "// Line_Reference 1566:         when(mockRequest.getParameter(\"templateprovider\")).thenReturn(templateProviderFullName);"
    ]
}
