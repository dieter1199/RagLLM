{
    "cve_id": "CVE-2020-15472",
    "cve_description": "In nDPI through 3.2, the H.323 dissector is vulnerable to a heap-based buffer over-read in ndpi_search_h323 in lib/protocols/h323.c, as demonstrated by a payload packet length that is too short.",
    "cve_publish_date": "2020-07-01",
    "cwe_id": "CWE-125",
    "cwe_name": "Out-of-bounds Read",
    "cwe_description": "The product reads data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "Added fix to avoid potential heap buffer overflow in H.323 dissector\nModified HTTP report information to make it closer to the HTTP field names",
    "type_of_change": "Modification",
    "filename_of_changes": "h323.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "44",
    "number_of_lines_deleted_vulnerable_to_cve": "47",
    "vulnerable_lines": [
        "// Line_Reference 4:  * Copyright (C) 2015-18 ntop.org",
        "// Line_Reference 39: \tstruct tpkt *t = (struct tpkt*)packet->payload;",
        "// Line_Reference 40: \tu_int16_t len = ntohs(t->len);",
        "// Line_Reference 41: ",
        "// Line_Reference 42: \tif(packet->payload_packet_len == len) {",
        "// Line_Reference 43: \t  /*",
        "// Line_Reference 44: \t    We need to check if this packet is in reality",
        "// Line_Reference 45: \t    a RDP (Remote Desktop) packet encapsulated on TPTK",
        "// Line_Reference 46: \t   */",
        "// Line_Reference 47: ",
        "// Line_Reference 48: \t  if(packet->payload[4] == (packet->payload_packet_len - sizeof(struct tpkt) - 1)) {",
        "// Line_Reference 49: \t    /* ISO 8073/X.224 */",
        "// Line_Reference 50: \t    if((packet->payload[5] == 0xE0 /* CC Connect Request */)",
        "// Line_Reference 51: \t       || (packet->payload[5] == 0xD0 /* CC Connect Confirm */)) {",
        "// Line_Reference 52: \t      NDPI_LOG_INFO(ndpi_struct, \"found RDP\\n\");",
        "// Line_Reference 53: \t      ndpi_set_detected_protocol(ndpi_struct, flow, NDPI_PROTOCOL_RDP, NDPI_PROTOCOL_UNKNOWN);",
        "// Line_Reference 54: \t      return;",
        "// Line_Reference 55: \t    }",
        "// Line_Reference 58: \t  flow->l4.tcp.h323_valid_packets++;",
        "// Line_Reference 60: \t  if(flow->l4.tcp.h323_valid_packets >= 2) {",
        "// Line_Reference 61: \t    NDPI_LOG_INFO(ndpi_struct, \"found H323 broadcast\\n\");",
        "// Line_Reference 62: \t    ndpi_set_detected_protocol(ndpi_struct, flow, NDPI_PROTOCOL_H323, NDPI_PROTOCOL_UNKNOWN);",
        "// Line_Reference 63: \t  }",
        "// Line_Reference 64: \t} else {",
        "// Line_Reference 65: \t  /* This is not H.323 */",
        "// Line_Reference 66: \t  NDPI_EXCLUDE_PROTO(ndpi_struct, flow);",
        "// Line_Reference 67: \t  return;",
        "// Line_Reference 83:     if(sport == 1719 || dport == 1719)",
        "// Line_Reference 84:       {",
        "// Line_Reference 85:         if(packet->payload[0] == 0x16 && packet->payload[1] == 0x80 && packet->payload[4] == 0x06 && packet->payload[5] == 0x00)",
        "// Line_Reference 86: \t  {",
        "// Line_Reference 87: \t    NDPI_LOG_INFO(ndpi_struct, \"found H323 broadcast\\n\");",
        "// Line_Reference 88: \t    ndpi_set_detected_protocol(ndpi_struct, flow, NDPI_PROTOCOL_H323, NDPI_PROTOCOL_UNKNOWN);",
        "// Line_Reference 89: \t    return;",
        "// Line_Reference 90: \t  }",
        "// Line_Reference 91:         else if(packet->payload_packet_len >= 20 && packet->payload_packet_len <= 117)",
        "// Line_Reference 92: \t  {",
        "// Line_Reference 93: \t    NDPI_LOG_INFO(ndpi_struct, \"found H323 broadcast\\n\");",
        "// Line_Reference 94: \t    ndpi_set_detected_protocol(ndpi_struct, flow, NDPI_PROTOCOL_H323, NDPI_PROTOCOL_UNKNOWN);",
        "// Line_Reference 95: \t    return;",
        "// Line_Reference 96: \t  }",
        "// Line_Reference 97:         else",
        "// Line_Reference 98: \t  {",
        "// Line_Reference 99: \t    NDPI_EXCLUDE_PROTO(ndpi_struct, flow);",
        "// Line_Reference 100: \t    return;",
        "// Line_Reference 101: \t  }",
        "// Line_Reference 104: "
    ]
}
