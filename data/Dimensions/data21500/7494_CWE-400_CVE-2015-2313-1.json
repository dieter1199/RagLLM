{
    "cve_id": "CVE-2015-2313",
    "cve_description": "Sandstorm Cap'n Proto before 0.4.1.1 and 0.5.x before 0.5.1.2, when an application invokes the totalSize method on an object reader, allows remote peers to cause a denial of service (CPU consumption) via a crafted small message, which triggers a \"tight\" for loop.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2015-2312.",
    "cve_publish_date": "2017-08-09",
    "cwe_id": "CWE-400",
    "cwe_name": "Uncontrolled Resource Consumption",
    "cwe_description": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
    "commit_message": "SECURITY: Additional CPU amplification case.\n\nUnfortunately, commit 104870608fde3c698483fdef6b97f093fc15685d missed a case of CPU amplification via struct lists with zero-sized elements.\n\nSee advisory: https://github.com/sandstorm-io/capnproto/blob/master/security-advisories/2015-03-05-0-c++-addl-cpu-amplification.md",
    "type_of_change": "Modification",
    "filename_of_changes": "encoding-test.c++",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "14",
    "number_of_lines_deleted_vulnerable_to_cve": "7",
    "vulnerable_lines": [
        "// Line_Reference 1430:   MallocMessageBuilder builder;",
        "// Line_Reference 1431:   builder.initRoot<test::TestAnyPointer>().getAnyPointerField()",
        "// Line_Reference 1432:       .initAs<List<test::TestEmptyStruct>>(1u << 28);",
        "// Line_Reference 1435:   EXPECT_EQ(1, segments.size());",
        "// Line_Reference 1436:   EXPECT_LT(segments[0].size(), 16);  // quite small for such a big list!",
        "// Line_Reference 1439:   auto root = reader.getRoot<test::TestAnyPointer>().getAnyPointerField();",
        "// Line_Reference 1440:   EXPECT_NONFATAL_FAILURE(root.getAs<List<TestAllTypes>>());"
    ]
}
