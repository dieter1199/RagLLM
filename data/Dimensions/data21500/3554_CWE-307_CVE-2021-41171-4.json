{
    "cve_id": "CVE-2021-41171",
    "cve_description": "eLabFTW is an open source electronic lab notebook manager for research teams. In versions of eLabFTW before 4.1.0, it allows attackers to bypass a brute-force protection mechanism by using many different forged PHPSESSID values in HTTP Cookie header. This issue has been addressed by implementing brute force login protection, as recommended by Owasp with Device Cookies. This mechanism will not impact users and will effectively thwart any brute-force attempts at guessing passwords. The only correct way to address this is to upgrade to version 4.1.0. Adding rate limitation upstream of the eLabFTW service is of course a valid option, with or without upgrading.",
    "cve_publish_date": "2021-10-22",
    "cwe_id": "CWE-307",
    "cwe_name": "Improper Restriction of Excessive Authentication Attempts",
    "cwe_description": "The product does not implement sufficient measures to prevent multiple failed authentication attempts within a short time frame, making it more susceptible to brute force attacks.",
    "commit_message": "Add JWT anti brute-force login protection (#2831)\n\n* WIP: better brute force login protection\r\n\r\n* split device token classes\r\n\r\n* mv schema to 63\r\n\r\n* use int(10) in schema too\r\n\r\n* add sysadmin action to clear locked users/devices\r\n\r\n* remove the FK on authfail\r\n\r\n* remove authfail users_id fk constraint in structure.sql\r\n\r\n* catch the invalid device token exception\r\n\r\n* remove the banned users stuff\r\n\r\n* change invalid token message\r\n\r\n* cleanup the exceptions a bit\r\n\r\n* get rid of the useless InvalidCsrfTokenException\r\n\r\n* remove unused js import\r\n\r\n* introduce the AuthenticatedUser and AnonymousUser classes\r\n\r\nand improve the App and init.inc.php files\r\n\r\n* remove the populateFromEmail method from Users\r\n\r\n* get rid of the useless SessionAuth\r\n\r\nand rearrange init Auth and App\r\n\r\n* be more specific about which kind of user can be loaded in App\r\n\r\n* change Update class signature\r\n\r\n* use init.inc.php in ApiController\r\n\r\n* don't store the whole teamconfigarr in app",
    "type_of_change": "Modification",
    "filename_of_changes": "Auth.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "3",
    "number_of_lines_deleted_vulnerable_to_cve": "61",
    "vulnerable_lines": [
        "// Line_Reference 1: <?php",
        "// Line_Reference 9: declare(strict_types=1);",
        "// Line_Reference 22: use Elabftw\\Services\\SessionAuth;",
        "// Line_Reference 25: use Symfony\\Component\\HttpFoundation\\Session\\SessionInterface;",
        "// Line_Reference 28:  * Provide methods to login a user",
        "// Line_Reference 32:     private Config $Config;",
        "// Line_Reference 33: ",
        "// Line_Reference 34:     private SessionInterface $Session;",
        "// Line_Reference 35: ",
        "// Line_Reference 36:     private Request $Request;",
        "// Line_Reference 37: ",
        "// Line_Reference 38:     public function __construct(App $app)",
        "// Line_Reference 40:         $this->Config = $app->Config;",
        "// Line_Reference 41:         $this->Request = $app->Request;",
        "// Line_Reference 42:         $this->Session = $app->Session;",
        "// Line_Reference 60:     /**",
        "// Line_Reference 61:      * Increase the failed attempts counter",
        "// Line_Reference 62:      */",
        "// Line_Reference 63:     public function increaseFailedAttempt(): void",
        "// Line_Reference 64:     {",
        "// Line_Reference 65:         if (!$this->Session->has('failed_attempt')) {",
        "// Line_Reference 66:             $this->Session->set('failed_attempt', 1);",
        "// Line_Reference 67:         } else {",
        "// Line_Reference 68:             $n = $this->Session->get('failed_attempt');",
        "// Line_Reference 69:             $n++;",
        "// Line_Reference 70:             $this->Session->set('failed_attempt', $n);",
        "// Line_Reference 71:         }",
        "// Line_Reference 72:     }",
        "// Line_Reference 73: ",
        "// Line_Reference 74:     /**",
        "// Line_Reference 75:      * Check if we need to bother with authentication of current user",
        "// Line_Reference 76:      *",
        "// Line_Reference 77:      * @return bool True if we are authentified (or if we don't need to be)",
        "// Line_Reference 78:      */",
        "// Line_Reference 79:     public function needAuth(): bool",
        "// Line_Reference 80:     {",
        "// Line_Reference 81:         // pages where you don't need to be logged in",
        "// Line_Reference 82:         // only the script name, not the path because we use basename() on it",
        "// Line_Reference 83:         $nologinArr = array(",
        "// Line_Reference 84:             'change-pass.php',",
        "// Line_Reference 85:             'index.php',",
        "// Line_Reference 86:             'login.php',",
        "// Line_Reference 87:             'LoginController.php',",
        "// Line_Reference 88:             'metadata.php',",
        "// Line_Reference 89:             'register.php',",
        "// Line_Reference 90:             'RegisterController.php',",
        "// Line_Reference 91:             'RequestHandler.php',",
        "// Line_Reference 92:             'ResetPasswordController.php',",
        "// Line_Reference 93:         );",
        "// Line_Reference 94: ",
        "// Line_Reference 95:         return !in_array(basename($this->Request->getScriptName()), $nologinArr, true);",
        "// Line_Reference 96:     }",
        "// Line_Reference 97: ",
        "// Line_Reference 100:         // if we are already logged in with the session, skip everything",
        "// Line_Reference 101:         // same if we don't need to be authenticated",
        "// Line_Reference 102:         if ($this->Session->has('is_auth')) {",
        "// Line_Reference 103:             return 'session';",
        "// Line_Reference 104:         }",
        "// Line_Reference 105: ",
        "// Line_Reference 132:             case 'session':",
        "// Line_Reference 133:                 return new SessionAuth();"
    ]
}
