{
    "cve_id": "CVE-2017-18509",
    "cve_description": "An issue was discovered in net/ipv6/ip6mr.c in the Linux kernel before 4.11. By setting a specific socket option, an attacker can control a pointer in kernel land and cause an inet_csk_listen_stop general protection fault, or potentially execute arbitrary code under certain circumstances. The issue can be triggered as root (e.g., inside a default LXC container or with the CAP_NET_ADMIN capability) or after namespace unsharing. This occurs because sk_type and protocol are not checked in the appropriate part of the ip6_mroute_* functions. NOTE: this affects Linux distributions that use 4.9.x longterm kernels before 4.9.187.",
    "cve_publish_date": "2019-08-13",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "ipv6: check sk sk_type and protocol early in ip_mroute_set/getsockopt\n\nCommit 5e1859fbcc3c (\"ipv4: ipmr: various fixes and cleanups\") fixed\nthe issue for ipv4 ipmr:\n\n  ip_mroute_setsockopt() & ip_mroute_getsockopt() should not\n  access/set raw_sk(sk)->ipmr_table before making sure the socket\n  is a raw socket, and protocol is IGMP\n\nThe same fix should be done for ipv6 ipmr as well.\n\nThis patch can fix the panic caused by overwriting the same offset\nas ipmr_table as in raw_sk(sk) when accessing other type's socket\nby ip_mroute_setsockopt().\n\nSigned-off-by: Xin Long <lucien.xin@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "type_of_change": "Modification",
    "filename_of_changes": "ip6mr.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "8",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 1680: \t\tif (sk->sk_type != SOCK_RAW ||",
        "// Line_Reference 1681: \t\t    inet_sk(sk)->inet_num != IPPROTO_ICMPV6)",
        "// Line_Reference 1682: \t\t\treturn -EOPNOTSUPP;"
    ]
}
