{
    "cve_id": "CVE-2013-6368",
    "cve_description": "The KVM subsystem in the Linux kernel through 3.12.5 allows local users to gain privileges or cause a denial of service (system crash) via a VAPIC synchronization operation involving a page-end address.",
    "cve_publish_date": "2013-12-14",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "KVM: x86: Convert vapic synchronization to _cached functions (CVE-2013-6368)\n\nIn kvm_lapic_sync_from_vapic and kvm_lapic_sync_to_vapic there is the\npotential to corrupt kernel memory if userspace provides an address that\nis at the end of a page.  This patches concerts those functions to use\nkvm_write_guest_cached and kvm_read_guest_cached.  It also checks the\nvapic_address specified by userspace during ioctl processing and returns\nan error to userspace if the address is not a valid GPA.\n\nThis is generally not guest triggerable, because the required write is\ndone by firmware that runs before the guest.  Also, it only affects AMD\nprocessors and oldish Intel that do not have the FlexPriority feature\n(unless you disable FlexPriority, of course; then newer processors are\nalso affected).\n\nFixes: b93463aa59d6 ('KVM: Accelerated apic support')\n\nReported-by: Andrew Honig <ahonig@google.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Andrew Honig <ahonig@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "lapic.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "15",
    "number_of_lines_deleted_vulnerable_to_cve": "12",
    "vulnerable_lines": [
        "// Line_Reference 1695: \tvoid *vapic;",
        "// Line_Reference 1703: \tvapic = kmap_atomic(vcpu->arch.apic->vapic_page);",
        "// Line_Reference 1704: \tdata = *(u32 *)(vapic + offset_in_page(vcpu->arch.apic->vapic_addr));",
        "// Line_Reference 1705: \tkunmap_atomic(vapic);",
        "// Line_Reference 1741: \tvoid *vapic;",
        "// Line_Reference 1757: \tvapic = kmap_atomic(vcpu->arch.apic->vapic_page);",
        "// Line_Reference 1758: \t*(u32 *)(vapic + offset_in_page(vcpu->arch.apic->vapic_addr)) = data;",
        "// Line_Reference 1759: \tkunmap_atomic(vapic);",
        "// Line_Reference 1762: void kvm_lapic_set_vapic_addr(struct kvm_vcpu *vcpu, gpa_t vapic_addr)",
        "// Line_Reference 1764: \tvcpu->arch.apic->vapic_addr = vapic_addr;",
        "// Line_Reference 1765: \tif (vapic_addr)",
        "// Line_Reference 1767: \telse"
    ]
}
