{
    "cve_id": "CVE-2024-23327",
    "cve_description": "Envoy is a high-performance edge/middle/service proxy. When PPv2 is enabled both on a listener and subsequent cluster, the Envoy instance will segfault when attempting to craft the upstream PPv2 header. This occurs when the downstream request has a command type of LOCAL and does not have the protocol block. This issue has been addressed in releases 1.29.1, 1.28.1, 1.27.3, and 1.26.7. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "cve_publish_date": "2024-02-09",
    "cwe_id": "CWE-476",
    "cwe_name": "NULL Pointer Dereference",
    "cwe_description": "The product dereferences a pointer that it expects to be valid but is NULL.",
    "commit_message": "Fix crash from AWS NLB healthchecks when proxy protocol is enabled\n\nFix: [CVE-2024-23327](https://github.com/envoyproxy/envoy/security/advisories/GHSA-4h5x-x9vh-m29j)\n\nSigned-off-by: Jacob Neil Taylor <me@jacobtaylor.id.au>\nSigned-off-by: Greg Greenway <ggreenway@apple.com>\nSigned-off-by: Ryan Northey <ryan@synca.io>",
    "type_of_change": "Modification",
    "filename_of_changes": "proxy_protocol.cc",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "23",
    "number_of_lines_deleted_vulnerable_to_cve": "10",
    "vulnerable_lines": [
        "// Line_Reference 147:     if (!proxy_protocol_header_.value().local_command_) {",
        "// Line_Reference 148:       auto buf = reinterpret_cast<const uint8_t*>(buffer.rawSlice().mem_);",
        "// Line_Reference 151:           \"Parsed proxy protocol header, length: {}, buffer: {}, TLV length: {}, TLV buffer: {}\",",
        "// Line_Reference 158: ",
        "// Line_Reference 159:     cb_->filterState().setData(",
        "// Line_Reference 160:         Network::ProxyProtocolFilterState::key(),",
        "// Line_Reference 161:         std::make_unique<Network::ProxyProtocolFilterState>(Network::ProxyProtocolData{",
        "// Line_Reference 162:             proxy_protocol_header_.value().remote_address_,",
        "// Line_Reference 163:             proxy_protocol_header_.value().local_address_, parsed_tlvs_}),",
        "// Line_Reference 164:         StreamInfo::FilterState::StateType::Mutable, StreamInfo::FilterState::LifeSpan::Connection);"
    ]
}
