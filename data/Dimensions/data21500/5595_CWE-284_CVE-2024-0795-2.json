{
    "cve_id": "CVE-2024-0795",
    "cve_description": "If an attacked was given access to an instance with the admin or manager role there is no backend authentication that would prevent the attacked from creating a new user with an `admin` role and then be able to use this new account to have elevated privileges on the instance",
    "cve_publish_date": "2024-03-02",
    "cwe_id": "CWE-284",
    "cwe_name": "Improper Access Control",
    "cwe_description": "The product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.",
    "commit_message": "Implement total permission overhaul (#629)\n\n* Implement total permission overhaul\r\nAdd explicit permissions on each flex and strict route\r\nPatch issues with role escalation and CRUD of users\r\nPatch permissions on all routes for coverage\r\nImprove middleware to accept role array for clarity\r\n\r\n* update comments\r\n\r\n* remove permissions to API-keys for manager. Manager could generate API-key and using high-privelege api-key give themselves admin\r\n\r\n* update sidebar permissions for multi-user and single user\r\n\r\n* update options for mobile sidebar",
    "type_of_change": "ModificationType.ADD",
    "filename_of_changes": "index.jsx",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "29",
    "number_of_lines_deleted_vulnerable_to_cve": "6",
    "vulnerable_lines": [
        "// Line_Reference 17:     setSuspended(!suspended);",
        "// Line_Reference 18:     await Admin.updateUser(user.id, { suspended: suspended ? 0 : 1 });",
        "// Line_Reference 27:     rowRef?.current?.remove();",
        "// Line_Reference 28:     await Admin.deleteUser(user.id);",
        "// Line_Reference 43:           {currUser?.role !== \"default\" && (",
        "// Line_Reference 53:           {currUser?.id !== user.id && currUser?.role !== \"default\" && ("
    ]
}
