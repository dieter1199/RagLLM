{
    "cve_id": "CVE-2015-2319",
    "cve_description": "The TLS stack in Mono before 3.12.1 makes it easier for remote attackers to conduct cipher-downgrade attacks to EXPORT_RSA ciphers via crafted TLS traffic, related to the \"FREAK\" issue, a different vulnerability than CVE-2015-0204.",
    "cve_publish_date": "2018-01-08",
    "cwe_id": "CWE-295",
    "cwe_name": "Improper Certificate Validation",
    "cwe_description": "The product does not validate, or incorrectly validates, a certificate.",
    "commit_message": "Remove the EXPORT ciphers and related code path\n\n    That was still useful in 2003/2004 but the technical and legal landscape\n    changed a lot since then. Removing the old, limited key size, cipher\n    suites also allow removed additional parts of the code that deals with\n    them.",
    "type_of_change": "Modification",
    "filename_of_changes": "TlsCipherSuite.cs",
    "code_language": "C#",
    "number_of_lines_added_for_mitigation": "5",
    "number_of_lines_deleted_vulnerable_to_cve": "35",
    "vulnerable_lines": [
        "// Line_Reference 126: \t\t\tif (!this.IsExportable)",
        "// Line_Reference 128: \t\t\t\tif (this.IvSize != 0)",
        "// Line_Reference 129: \t\t\t\t{",
        "// Line_Reference 130: \t\t\t\t\tthis.Context.ClientWriteIV = keyBlock.ReadBytes(this.IvSize);",
        "// Line_Reference 131: \t\t\t\t\tthis.Context.ServerWriteIV = keyBlock.ReadBytes(this.IvSize);",
        "// Line_Reference 132: \t\t\t\t}",
        "// Line_Reference 133: \t\t\t\telse",
        "// Line_Reference 134: \t\t\t\t{",
        "// Line_Reference 135: \t\t\t\t\tthis.Context.ClientWriteIV = CipherSuite.EmptyArray;",
        "// Line_Reference 136: \t\t\t\t\tthis.Context.ServerWriteIV = CipherSuite.EmptyArray;",
        "// Line_Reference 137: \t\t\t\t}",
        "// Line_Reference 141: \t\t\t\t// Generate final write keys",
        "// Line_Reference 142: \t\t\t\tbyte[] finalClientWriteKey\t= PRF(this.Context.ClientWriteKey, \"client write key\", this.Context.RandomCS, this.ExpandedKeyMaterialSize);",
        "// Line_Reference 143: \t\t\t\tbyte[] finalServerWriteKey\t= PRF(this.Context.ServerWriteKey, \"server write key\", this.Context.RandomCS, this.ExpandedKeyMaterialSize);",
        "// Line_Reference 144: ",
        "// Line_Reference 145: \t\t\t\tthis.Context.ClientWriteKey\t= finalClientWriteKey;",
        "// Line_Reference 146: \t\t\t\tthis.Context.ServerWriteKey\t= finalServerWriteKey;",
        "// Line_Reference 147: ",
        "// Line_Reference 148: \t\t\t\tif (this.IvSize > 0)",
        "// Line_Reference 149: \t\t\t\t{",
        "// Line_Reference 150: \t\t\t\t\t// Generate IV block",
        "// Line_Reference 151: \t\t\t\t\tbyte[] ivBlock = PRF(CipherSuite.EmptyArray, \"IV block\", this.Context.RandomCS, this.IvSize*2);",
        "// Line_Reference 152: ",
        "// Line_Reference 153: \t\t\t\t\t// Generate IV keys",
        "// Line_Reference 154: \t\t\t\t\tthis.Context.ClientWriteIV = new byte[this.IvSize];",
        "// Line_Reference 155: \t\t\t\t\tBuffer.BlockCopy(ivBlock, 0, this.Context.ClientWriteIV, 0, this.Context.ClientWriteIV.Length);",
        "// Line_Reference 156: ",
        "// Line_Reference 157: \t\t\t\t\tthis.Context.ServerWriteIV = new byte[this.IvSize];",
        "// Line_Reference 158: \t\t\t\t\tBuffer.BlockCopy(ivBlock, this.IvSize, this.Context.ServerWriteIV, 0, this.Context.ServerWriteIV.Length);",
        "// Line_Reference 159: \t\t\t\t}",
        "// Line_Reference 160: \t\t\t\telse",
        "// Line_Reference 161: \t\t\t\t{",
        "// Line_Reference 162: \t\t\t\t\tthis.Context.ClientWriteIV = CipherSuite.EmptyArray;",
        "// Line_Reference 163: \t\t\t\t\tthis.Context.ServerWriteIV = CipherSuite.EmptyArray;",
        "// Line_Reference 164: \t\t\t\t}"
    ]
}
