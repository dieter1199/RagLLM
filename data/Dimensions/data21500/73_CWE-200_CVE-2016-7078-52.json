{
    "cve_id": "CVE-2016-7078",
    "cve_description": "foreman before version 1.15.0 is vulnerable to an information leak through organizations and locations feature. When a user is assigned _no_ organizations/locations, they are able to view all resources instead of none (mirroring an administrator's view). The user's actions are still limited by their assigned permissions, e.g. to control viewing, editing and deletion.",
    "cve_publish_date": "2018-09-10",
    "cwe_id": "CWE-200",
    "cwe_name": "Exposure of Sensitive Information to an Unauthorized Actor",
    "cwe_description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
    "commit_message": "Fixes #16982 - Scope properly when no taxonomies are set\n\nThe default scope for hosts and other objects did not restrict\nproperly by taxonomies. An user without organizations or\nlocations, could do anything it's permissions allow to.\nThe list of hosts was unrestricted and showed hosts in\nany location or organization.\n\nThis is fixed to work so that:\n\nUsers without taxonomies, when set to 'any context' cannot see\nanything (at all)\n\nUsers with taxonomies, when set to 'any context' can see\neverything within all of their taxonomies context (including\nchildren taxonomies).\n\nAdmins set to 'any context' can see everything - regardless\nof whether it has a taxonomy or not.\n\nUsers or admins set to some organization/location scope\ncan only see stuff within scope.",
    "type_of_change": "Modification",
    "filename_of_changes": "report_test.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "3",
    "number_of_lines_deleted_vulnerable_to_cve": "5",
    "vulnerable_lines": [
        "// Line_Reference 44:       user_role = FactoryGirl.create(:user_user_role)",
        "// Line_Reference 45:       FactoryGirl.create(:filter, :role => user_role.role, :permissions => Permission.where(:name => 'view_hosts'), :search => \"hostgroup_id = #{@target_host.hostgroup_id}\")",
        "// Line_Reference 46:       as_user user_role.owner do",
        "// Line_Reference 47:         assert_equal @target_reports.map(&:id).sort, Report.my_reports.map(&:id).sort",
        "// Line_Reference 48:       end"
    ]
}
