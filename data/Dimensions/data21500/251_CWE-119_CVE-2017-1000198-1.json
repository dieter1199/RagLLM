{
    "cve_id": "CVE-2017-1000198",
    "cve_description": "tcmu-runner daemon version 0.9.0 to 1.2.0 is vulnerable to invalid memory references in the handler_glfs.so handler resulting in denial of service",
    "cve_publish_date": "2017-11-17",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "glfs: discard glfs_check_config\n\nSigned-off-by: Prasanna Kumar Kalever <prasanna.kalever@redhat.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "glfs.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "0",
    "number_of_lines_deleted_vulnerable_to_cve": "54",
    "vulnerable_lines": [
        "// Line_Reference 433: ",
        "// Line_Reference 434: static bool glfs_check_config(const char *cfgstring, char **reason)",
        "// Line_Reference 435: {",
        "// Line_Reference 436: \tchar *path;",
        "// Line_Reference 437: \tglfs_t *fs = NULL;",
        "// Line_Reference 438: \tglfs_fd_t *gfd = NULL;",
        "// Line_Reference 439: \tgluster_server *hosts = NULL; /* gluster server defination */",
        "// Line_Reference 440: \tbool result = true;",
        "// Line_Reference 441: ",
        "// Line_Reference 442: \tpath = strchr(cfgstring, '/');",
        "// Line_Reference 443: \tif (!path) {",
        "// Line_Reference 444: \t\tif (asprintf(reason, \"No path found\") == -1)",
        "// Line_Reference 445: \t\t\t*reason = NULL;",
        "// Line_Reference 446: \t\tresult = false;",
        "// Line_Reference 447: \t\tgoto done;",
        "// Line_Reference 448: \t}",
        "// Line_Reference 449: \tpath += 1; /* get past '/' */",
        "// Line_Reference 450: ",
        "// Line_Reference 451: \tfs = tcmu_create_glfs_object(path, &hosts);",
        "// Line_Reference 452: \tif (!fs) {",
        "// Line_Reference 453: \t\ttcmu_err(\"tcmu_create_glfs_object failed\\n\");",
        "// Line_Reference 454: \t\tgoto done;",
        "// Line_Reference 455: \t}",
        "// Line_Reference 456: ",
        "// Line_Reference 457: \tgfd = glfs_open(fs, hosts->path, ALLOWED_BSOFLAGS);",
        "// Line_Reference 458: \tif (!gfd) {",
        "// Line_Reference 459: \t\tif (asprintf(reason, \"glfs_open failed: %m\") == -1)",
        "// Line_Reference 460: \t\t\t*reason = NULL;",
        "// Line_Reference 461: \t\tresult = false;",
        "// Line_Reference 462: \t\tgoto unref;",
        "// Line_Reference 463: \t}",
        "// Line_Reference 464: ",
        "// Line_Reference 465: \tif (glfs_access(fs, hosts->path, R_OK|W_OK) == -1) {",
        "// Line_Reference 466: \t\tif (asprintf(reason, \"glfs_access file not present, or not writable\") == -1)",
        "// Line_Reference 467: \t\t\t*reason = NULL;",
        "// Line_Reference 468: \t\tresult = false;",
        "// Line_Reference 469: \t\tgoto unref;",
        "// Line_Reference 470: \t}",
        "// Line_Reference 471: ",
        "// Line_Reference 472: \tgoto done;",
        "// Line_Reference 473: ",
        "// Line_Reference 474: unref:",
        "// Line_Reference 475: \tgluster_cache_refresh(fs, path);",
        "// Line_Reference 476: ",
        "// Line_Reference 477: done:",
        "// Line_Reference 478: \tif (gfd)",
        "// Line_Reference 479: \t\tglfs_close(gfd);",
        "// Line_Reference 480: \tgluster_free_server(&hosts);",
        "// Line_Reference 481: ",
        "// Line_Reference 482: \treturn result;",
        "// Line_Reference 483: }",
        "// Line_Reference 484: ",
        "// Line_Reference 684: \t.check_config \t= glfs_check_config,",
        "// Line_Reference 685: "
    ]
}
