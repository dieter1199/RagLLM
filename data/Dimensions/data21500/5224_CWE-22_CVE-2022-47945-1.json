{
    "cve_id": "CVE-2022-47945",
    "cve_description": "ThinkPHP Framework before 6.0.14 allows local file inclusion via the lang parameter when the language pack feature is enabled (lang_switch_on=true). An unauthenticated and remote attacker can exploit this to execute arbitrary operating system commands, as demonstrated by including pearcmd.php.",
    "cve_publish_date": "2022-12-23",
    "cwe_id": "CWE-22",
    "cwe_name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
    "cwe_description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
    "commit_message": "删除废弃方法 优化多语言检测",
    "type_of_change": "Modification",
    "filename_of_changes": "Lang.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "0",
    "number_of_lines_deleted_vulnerable_to_cve": "54",
    "vulnerable_lines": [
        "// Line_Reference 290:     /**",
        "// Line_Reference 291:      * 自动侦测设置获取语言选择",
        "// Line_Reference 292:      * @deprecated",
        "// Line_Reference 293:      * @access public",
        "// Line_Reference 294:      * @param Request $request",
        "// Line_Reference 295:      * @return string",
        "// Line_Reference 296:      */",
        "// Line_Reference 297:     public function detect(Request $request): string",
        "// Line_Reference 298:     {",
        "// Line_Reference 299:         // 自动侦测设置获取语言选择",
        "// Line_Reference 300:         $langSet = '';",
        "// Line_Reference 301: ",
        "// Line_Reference 302:         if ($request->get($this->config['detect_var'])) {",
        "// Line_Reference 303:             // url中设置了语言变量",
        "// Line_Reference 304:             $langSet = strtolower($request->get($this->config['detect_var']));",
        "// Line_Reference 305:         } elseif ($request->header($this->config['header_var'])) {",
        "// Line_Reference 306:             // Header中设置了语言变量",
        "// Line_Reference 307:             $langSet = strtolower($request->header($this->config['header_var']));",
        "// Line_Reference 308:         } elseif ($request->cookie($this->config['cookie_var'])) {",
        "// Line_Reference 309:             // Cookie中设置了语言变量",
        "// Line_Reference 310:             $langSet = strtolower($request->cookie($this->config['cookie_var']));",
        "// Line_Reference 311:         } elseif ($request->server('HTTP_ACCEPT_LANGUAGE')) {",
        "// Line_Reference 312:             // 自动侦测浏览器语言",
        "// Line_Reference 313:             $match = preg_match('/^([a-z\\d\\-]+)/i', $request->server('HTTP_ACCEPT_LANGUAGE'), $matches);",
        "// Line_Reference 314:             if ($match) {",
        "// Line_Reference 315:                 $langSet = strtolower($matches[1]);",
        "// Line_Reference 316:                 if (isset($this->config['accept_language'][$langSet])) {",
        "// Line_Reference 317:                     $langSet = $this->config['accept_language'][$langSet];",
        "// Line_Reference 318:                 }",
        "// Line_Reference 319:             }",
        "// Line_Reference 320:         }",
        "// Line_Reference 321: ",
        "// Line_Reference 322:         if (empty($this->config['allow_lang_list']) || in_array($langSet, $this->config['allow_lang_list'])) {",
        "// Line_Reference 323:             // 合法的语言",
        "// Line_Reference 324:             $this->range = $langSet;",
        "// Line_Reference 325:         }",
        "// Line_Reference 326: ",
        "// Line_Reference 327:         return $this->range;",
        "// Line_Reference 328:     }",
        "// Line_Reference 329: ",
        "// Line_Reference 330:     /**",
        "// Line_Reference 331:      * 保存当前语言到Cookie",
        "// Line_Reference 332:      * @deprecated",
        "// Line_Reference 333:      * @access public",
        "// Line_Reference 334:      * @param Cookie $cookie Cookie对象",
        "// Line_Reference 335:      * @return void",
        "// Line_Reference 336:      */",
        "// Line_Reference 337:     public function saveToCookie(Cookie $cookie)",
        "// Line_Reference 338:     {",
        "// Line_Reference 339:         if ($this->config['use_cookie']) {",
        "// Line_Reference 340:             $cookie->set($this->config['cookie_var'], $this->range);",
        "// Line_Reference 341:         }",
        "// Line_Reference 342:     }",
        "// Line_Reference 343: "
    ]
}
