{
    "cve_id": "CVE-2022-21126",
    "cve_description": "The package com.github.samtools:htsjdk before 3.0.1 are vulnerable to Creation of Temporary File in Directory with Insecure Permissions due to the createTempDir() function in util/IOUtil.java not checking for the existence of the temporary directory before attempting to create it.",
    "cve_publish_date": "2022-11-29",
    "cwe_id": "CWE-668",
    "cwe_name": "Exposure of Resource to Wrong Sphere",
    "cwe_description": "The product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.",
    "commit_message": "Fix temporary directory hijacking or temporary directory information disclosure (#1621)\n\nThis replaces and closes #1617.\r\n\r\nFix a vulnerability which allows a malicious user access files created in a temp directory if it was created using IOUtils.createTempDir.  \r\nThe implementation has been changed to use the more secure Files.createTemporaryDirectory(). This has a side effect of making the second \"suffix\" argument no longer usable and it is now simply appended to the existing prefix.  \r\nDeprecating IOUtils.createTempDir(String, String) and adding a new single argument version instead which returns a Path.\r\n\r\nThis potentially exposed data created by CoordinateSortedPairInfoMaps on shared systems to a malicious users with access to the global temp directory.  \r\n\r\nIt is recommended that user upgrade if they use CoordinateSortedPairInfoMap or IOUTils.createTempDir() in their code.\r\n\r\n* vuln-fix: Temporary Directory Hijacking or Information Disclosure\r\n\r\nThis fixes either Temporary Directory Hijacking, or Temporary Directory Local Information Disclosure.\r\n\r\nWeakness: CWE-379: Creation of Temporary File in Directory with Insecure Permissions\r\nSeverity: High\r\nCVSSS: 7.3\r\nDetection: CodeQL & OpenRewrite (https://public.moderne.io/recipes/org.openrewrite.java.security.UseFilesCreateTempDirectory)\r\n\r\nReported-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\r\nSigned-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\r\n\r\nBug-tracker: https://github.com/JLLeitschuh/security-research/issues/10\r\n\r\nCo-authored-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\r\nCo-authored-by: Moderne <team@moderne.io>",
    "type_of_change": "Modification",
    "filename_of_changes": "IOUtil.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "22",
    "number_of_lines_deleted_vulnerable_to_cve": "13",
    "vulnerable_lines": [
        "// Line_Reference 977:      * Create a temporary subdirectory in the default temporary-file directory, using the given prefix and suffix to generate the name.",
        "// Line_Reference 981:      * @param prefix The prefix string to be used in generating the file's name; must be at least three characters long",
        "// Line_Reference 982:      * @param suffix The suffix string to be used in generating the file's name; may be null, in which case the suffix \".tmp\" will be used",
        "// Line_Reference 985:     public static File createTempDir(final String prefix, final String suffix) {",
        "// Line_Reference 987:             final File tmp = File.createTempFile(prefix, suffix);",
        "// Line_Reference 988:             if (!tmp.delete()) {",
        "// Line_Reference 989:                 throw new SAMException(\"Could not delete temporary file \" + tmp);",
        "// Line_Reference 990:             }",
        "// Line_Reference 991:             if (!tmp.mkdir()) {",
        "// Line_Reference 992:                 throw new SAMException(\"Could not create temporary directory \" + tmp);",
        "// Line_Reference 993:             }",
        "// Line_Reference 994:             return tmp;",
        "// Line_Reference 995:         } catch (IOException e) {"
    ]
}
