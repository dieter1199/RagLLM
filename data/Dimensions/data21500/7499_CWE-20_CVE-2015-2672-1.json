{
    "cve_id": "CVE-2015-2672",
    "cve_description": "The xsave/xrstor implementation in arch/x86/include/asm/xsave.h in the Linux kernel before 3.19.2 creates certain .altinstr_replacement pointers and consequently does not provide any protection against instruction faulting, which allows local users to cause a denial of service (panic) by triggering a fault, as demonstrated by an unaligned memory operand or a non-canonical address memory operand.",
    "cve_publish_date": "2016-05-02",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "x86/fpu/xsaves: Fix improper uses of __ex_table\n\nCommit:\n\n  f31a9f7c7169 (\"x86/xsaves: Use xsaves/xrstors to save and restore xsave area\")\n\nintroduced alternative instructions for XSAVES/XRSTORS and commit:\n\n  adb9d526e982 (\"x86/xsaves: Add xsaves and xrstors support for booting time\")\n\nadded support for the XSAVES/XRSTORS instructions at boot time.\n\nUnfortunately both failed to properly protect them against faulting:\n\nThe 'xstate_fault' macro will use the closest label named '1'\nbackward and that ends up in the .altinstr_replacement section\nrather than in .text. This means that the kernel will never find\nin the __ex_table the .text address where this instruction might\nfault, leading to serious problems if userspace manages to\ntrigger the fault.\n\nSigned-off-by: Quentin Casasnovas <quentin.casasnovas@oracle.com>\nSigned-off-by: Jamie Iles <jamie.iles@oracle.com>\n[ Improved the changelog, fixed some whitespace noise. ]\nAcked-by: Borislav Petkov <bp@alien8.de>\nAcked-by: Linus Torvalds <torvalds@linux-foundation.org>\nCc: <stable@vger.kernel.org>\nCc: Allan Xavier <mr.a.xavier@gmail.com>\nCc: H. Peter Anvin <hpa@zytor.com>\nCc: Thomas Gleixner <tglx@linutronix.de>\nFixes: adb9d526e982 (\"x86/xsaves: Add xsaves and xrstors support for booting time\")\nFixes: f31a9f7c7169 (\"x86/xsaves: Use xsaves/xrstors to save and restore xsave area\")\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "xsave.h",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "11",
    "number_of_lines_deleted_vulnerable_to_cve": "17",
    "vulnerable_lines": [
        "// Line_Reference 85: \t\t\t: : \"D\" (fx), \"m\" (*fx), \"a\" (lmask), \"d\" (hmask)",
        "// Line_Reference 90: \t\t\t: : \"D\" (fx), \"m\" (*fx), \"a\" (lmask), \"d\" (hmask)",
        "// Line_Reference 92: ",
        "// Line_Reference 93: \tasm volatile(xstate_fault",
        "// Line_Reference 94: \t\t     : \"0\" (0)",
        "// Line_Reference 95: \t\t     : \"memory\");",
        "// Line_Reference 96: ",
        "// Line_Reference 115: \t\t\t: : \"D\" (fx), \"m\" (*fx), \"a\" (lmask), \"d\" (hmask)",
        "// Line_Reference 120: \t\t\t: : \"D\" (fx), \"m\" (*fx), \"a\" (lmask), \"d\" (hmask)",
        "// Line_Reference 122: ",
        "// Line_Reference 123: \tasm volatile(xstate_fault",
        "// Line_Reference 124: \t\t     : \"0\" (0)",
        "// Line_Reference 125: \t\t     : \"memory\");",
        "// Line_Reference 126: ",
        "// Line_Reference 152: \t\t\"1:\"XSAVEOPT,",
        "// Line_Reference 154: \t\t\"1:\"XSAVES,",
        "// Line_Reference 181: \t\t\"1: \" XRSTORS,"
    ]
}
