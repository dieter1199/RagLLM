{
    "cve_id": "CVE-2022-36085",
    "cve_description": "Open Policy Agent (OPA) is an open source, general-purpose policy engine. The Rego compiler provides a (deprecated) `WithUnsafeBuiltins` function, which allows users to provide a set of built-in functions that should be deemed unsafe — and as such rejected — by the compiler if encountered in the policy compilation stage. A bypass of this protection has been found, where the use of the `with` keyword to mock such a built-in function (a feature introduced in OPA v0.40.0), isn’t taken into account by `WithUnsafeBuiltins`. Multiple conditions need to be met in order to create an adverse effect. Version 0.43.1 contains a patch for this issue. As a workaround, avoid using the `WithUnsafeBuiltins` function and use the `capabilities` feature instead.",
    "cve_publish_date": "2022-09-08",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "ast/compile: respect unsafeBuiltinMap for 'with' replacements (#5107)\n\nThe changes are necessary for both the Compiler and the QueryCompiler. Tests\r\nhave been added to ensure that the code path through the rego package has also\r\nbeen fixed.\r\n\r\nFixes CVE-2022-36085.\r\n\r\nSigned-off-by: Stephan Renatus <stephan.renatus@gmail.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "compile_test.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "80",
    "number_of_lines_deleted_vulnerable_to_cve": "6",
    "vulnerable_lines": [
        "// Line_Reference 6679: \tc := NewCompiler().WithUnsafeBuiltins(map[string]struct{}{",
        "// Line_Reference 6680: \t\t\"count\": {},",
        "// Line_Reference 6681: \t})",
        "// Line_Reference 6683: \t_, err := c.QueryCompiler().WithUnsafeBuiltins(map[string]struct{}{}).Compile(MustParseBody(\"count([])\"))",
        "// Line_Reference 6684: \tif err != nil {",
        "// Line_Reference 6685: \t\tt.Fatal(err)"
    ]
}
