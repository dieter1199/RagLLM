{
    "cve_id": "CVE-2020-7692",
    "cve_description": "PKCE support is not implemented in accordance with the RFC for OAuth 2.0 for Native Apps. Without the use of PKCE, the authorization code returned by an authorization server is not enough to guarantee that the client that issued the initial authorization request is the one that will be authorized. An attacker is able to obtain the authorization code using a malicious app on the client-side and use it to gain authorization to the protected resource. This affects the package com.google.oauth-client:google-oauth-client before 1.31.0.",
    "cve_publish_date": "2020-07-09",
    "cwe_id": "CWE-863",
    "cwe_name": "Incorrect Authorization",
    "cwe_description": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check. This allows attackers to bypass intended access restrictions.",
    "commit_message": "feat: add PKCE support to AuthorizationCodeFlow (#470)\n\n* Initial test code for a PKCE enabled Authorization Code Flow\r\n\r\n* WIP: work on README.md\r\n\r\n* Script to initialize keycloak by adding client via REST API.\r\n\r\n* Improve keycloak init script and some code cleanup. Still WIP.\r\n\r\n* WIP: work on README.md\r\n\r\n* Working PKCE AuthorizationCodeFlow. Some cleanup of test classes.\r\n\r\n* Add scopes back to the AuthorizationCodeRequestUrl creation.\r\n\r\n* Simplify code by moving PKCE entirely into the AuthorizationCodeFlow class. Add documentation.\r\n\r\n* Remove wildcard imports as that seems to be the way to do things here.\r\n\r\n* Add @since annotation in JavaDoc to the PKCE parameters of the autorization url class.\r\n\r\n* Add PKCE unit test, documentation and minor cleanup of dependencies for code sample.\r\n\r\n* Add PKCE unit test, documentation and minor cleanup of dependencies for code sample.\r\n\r\n* Annotate PKCE with Beta annotation.\r\n\r\n* Responding to code review comments\r\n\r\n* Responding to more PR comments\r\n\r\n* Improve Keycloak PKCE sample documentation\r\n\r\n* Add license header with copyright to new files. Improve documentation.",
    "type_of_change": "Modification",
    "filename_of_changes": "AuthorizationCodeFlow.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "98",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 185:     return new AuthorizationCodeRequestUrl(authorizationServerEncodedUrl, clientId).setScopes(",
        "// Line_Reference 186:         scopes);",
        "// Line_Reference 211:         clientAuthentication).setRequestInitializer(requestInitializer).setScopes(scopes);"
    ]
}
