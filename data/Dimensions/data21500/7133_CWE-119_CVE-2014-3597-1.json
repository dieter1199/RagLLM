{
    "cve_id": "CVE-2014-3597",
    "cve_description": "Multiple buffer overflows in the php_parserr function in ext/standard/dns.c in PHP before 5.4.32 and 5.5.x before 5.5.16 allow remote DNS servers to cause a denial of service (application crash) or possibly execute arbitrary code via a crafted DNS record, related to the dns_get_record function and the dn_expand function.  NOTE: this issue exists because of an incomplete fix for CVE-2014-4049.",
    "cve_publish_date": "2014-08-23",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "Fixed Sec Bug #67717 segfault in dns_get_record CVE-2014-3597\n\nIncomplete fix for CVE-2014-4049\n\nCheck possible buffer overflow\n- pass real buffer end to dn_expand calls\n- check buffer len before each read",
    "type_of_change": "Modification",
    "filename_of_changes": "dns.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "60",
    "number_of_lines_deleted_vulnerable_to_cve": "24",
    "vulnerable_lines": [
        "// Line_Reference 416: static u_char *php_parserr(u_char *cp, querybuf *answer, int type_to_fetch, int store, int raw, zval **subarray)",
        "// Line_Reference 428: \tn = dn_expand(answer->qb2, answer->qb2+65536, cp, name, sizeof(name) - 2);",
        "// Line_Reference 488: \t\t\tn = dn_expand(answer->qb2, answer->qb2+65536, cp, name, (sizeof name) - 2);",
        "// Line_Reference 509: \t\t\t\tint ll = 0;",
        "// Line_Reference 518: \t\t\t\twhile (ll < dlen) {",
        "// Line_Reference 519: \t\t\t\t\tn = cp[ll];",
        "// Line_Reference 520: \t\t\t\t\tif ((ll + n) >= dlen) {",
        "// Line_Reference 522: \t\t\t\t\t\tn = dlen - (ll + 1);",
        "// Line_Reference 524: \t\t\t\t\tmemcpy(tp + ll , cp + ll + 1, n);",
        "// Line_Reference 525: \t\t\t\t\tadd_next_index_stringl(entries, cp + ll + 1, n, 1);",
        "// Line_Reference 526: \t\t\t\t\tll = ll + n + 1;",
        "// Line_Reference 528: \t\t\t\ttp[dlen] = '\\0';",
        "// Line_Reference 531: \t\t\t\tadd_assoc_stringl(*subarray, \"txt\", tp, (dlen>0)?dlen - 1:0, 0);",
        "// Line_Reference 537: \t\t\tn = dn_expand(answer->qb2, answer->qb2+65536, cp, name, (sizeof name) -2);",
        "// Line_Reference 543: \t\t\tn = dn_expand(answer->qb2, answer->qb2+65536, cp, name, (sizeof name) -2);",
        "// Line_Reference 660: \t\t\t\tn = dn_expand(answer->qb2, answer->qb2+65536, cp, name, (sizeof name) - 2);",
        "// Line_Reference 676: \t\t\tn = dn_expand(answer->qb2, answer->qb2+65536, cp, name, (sizeof name) - 2);",
        "// Line_Reference 690: \t\t\tadd_assoc_stringl(*subarray, \"flags\", (char*)++cp, n, 1);",
        "// Line_Reference 693: \t\t\tadd_assoc_stringl(*subarray, \"services\", (char*)++cp, n, 1);",
        "// Line_Reference 696: \t\t\tadd_assoc_stringl(*subarray, \"regex\", (char*)++cp, n, 1);",
        "// Line_Reference 698: \t\t\tn = dn_expand(answer->qb2, answer->qb2+65536, cp, name, (sizeof name) - 2);",
        "// Line_Reference 891: \t\t\t\tcp = php_parserr(cp, &answer, type_to_fetch, store_results, raw, &retval);",
        "// Line_Reference 904: \t\t\t\t\tcp = php_parserr(cp, &answer, DNS_T_ANY, authns != NULL, raw, &retval);",
        "// Line_Reference 916: \t\t\t\t\tcp = php_parserr(cp, &answer, DNS_T_ANY, 1, raw, &retval);"
    ]
}
