{
    "cve_id": "CVE-2014-0063",
    "cve_description": "Multiple stack-based buffer overflows in PostgreSQL before 8.4.20, 9.0.x before 9.0.16, 9.1.x before 9.1.12, 9.2.x before 9.2.7, and 9.3.x before 9.3.3 allow remote authenticated users to cause a denial of service (crash) or possibly execute arbitrary code via vectors related to an incorrect MAXDATELEN constant and datetime values involving (1) intervals, (2) timestamps, or (3) timezones, a different vulnerability than CVE-2014-0065.",
    "cve_publish_date": "2014-03-31",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "Fix handling of wide datetime input/output.\n\nMany server functions use the MAXDATELEN constant to size a buffer for\nparsing or displaying a datetime value.  It was much too small for the\nlongest possible interval output and slightly too small for certain\nvalid timestamp input, particularly input with a long timezone name.\nThe long input was rejected needlessly; the long output caused\ninterval_out() to overrun its buffer.  ECPG's pgtypes library has a copy\nof the vulnerable functions, which bore the same vulnerabilities along\nwith some of its own.  In contrast to the server, certain long inputs\ncaused stack overflow rather than failing cleanly.  Back-patch to 8.4\n(all supported versions).\n\nReported by Daniel Sch√ºssler, reviewed by Tom Lane.\n\nSecurity: CVE-2014-0063",
    "type_of_change": "Modification",
    "filename_of_changes": "pgtypeslib-dt_test2.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "16",
    "number_of_lines_deleted_vulnerable_to_cve": "6",
    "vulnerable_lines": [
        "// Line_Reference 76: #line 52 \"dt_test2.pgc\"",
        "// Line_Reference 79: #line 53 \"dt_test2.pgc\"",
        "// Line_Reference 82: #line 54 \"dt_test2.pgc\"",
        "// Line_Reference 85: #line 55 \"dt_test2.pgc\"",
        "// Line_Reference 88: #line 56 \"dt_test2.pgc\"",
        "// Line_Reference 91: #line 57 \"dt_test2.pgc\""
    ]
}
