{
    "cve_id": "CVE-2016-7097",
    "cve_description": "The filesystem implementation in the Linux kernel through 4.8.2 preserves the setgid bit during a setxattr call, which allows local users to gain group privileges by leveraging the existence of a setgid program with restrictions on execute permissions.",
    "cve_publish_date": "2016-10-16",
    "cwe_id": "CWE-285",
    "cwe_name": "Improper Authorization",
    "cwe_description": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
    "commit_message": "posix_acl: Clear SGID bit when setting file permissions\n\nWhen file permissions are modified via chmod(2) and the user is not in\nthe owning group or capable of CAP_FSETID, the setgid bit is cleared in\ninode_change_ok().  Setting a POSIX ACL via setxattr(2) sets the file\npermissions as well as the new ACL, but doesn't clear the setgid bit in\na similar way; this allows to bypass the check in chmod(2).  Fix that.\n\nReferences: CVE-2016-7097\nReviewed-by: Christoph Hellwig <hch@lst.de>\nReviewed-by: Jeff Layton <jlayton@redhat.com>\nSigned-off-by: Jan Kara <jack@suse.cz>\nSigned-off-by: Andreas Gruenbacher <agruenba@redhat.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "acl.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "17",
    "number_of_lines_deleted_vulnerable_to_cve": "23",
    "vulnerable_lines": [
        "// Line_Reference 279: \t\t\tumode_t mode = inode->i_mode;",
        "// Line_Reference 280: \t\t\tretval = posix_acl_equiv_mode(acl, &mode);",
        "// Line_Reference 281: \t\t\tif (retval < 0)",
        "// Line_Reference 283: \t\t\telse {",
        "// Line_Reference 284: \t\t\t\tstruct iattr iattr;",
        "// Line_Reference 285: \t\t\t\tif (retval == 0) {",
        "// Line_Reference 286: \t\t\t\t\t/*",
        "// Line_Reference 287: \t\t\t\t\t * ACL can be represented",
        "// Line_Reference 288: \t\t\t\t\t * by the mode bits. So don't",
        "// Line_Reference 289: \t\t\t\t\t * update ACL.",
        "// Line_Reference 290: \t\t\t\t\t */",
        "// Line_Reference 291: \t\t\t\t\tacl = NULL;",
        "// Line_Reference 292: \t\t\t\t\tvalue = NULL;",
        "// Line_Reference 293: \t\t\t\t\tsize = 0;",
        "// Line_Reference 294: \t\t\t\t}",
        "// Line_Reference 295: \t\t\t\t/* Updte the mode bits */",
        "// Line_Reference 296: \t\t\t\tiattr.ia_mode = ((mode & S_IALLUGO) |",
        "// Line_Reference 297: \t\t\t\t\t\t (inode->i_mode & ~S_IALLUGO));",
        "// Line_Reference 298: \t\t\t\tiattr.ia_valid = ATTR_MODE;",
        "// Line_Reference 299: \t\t\t\t/* FIXME should we update ctime ?",
        "// Line_Reference 300: \t\t\t\t * What is the following setxattr update the",
        "// Line_Reference 301: \t\t\t\t * mode ?",
        "// Line_Reference 303: \t\t\t\tv9fs_vfs_setattr_dotl(dentry, &iattr);"
    ]
}
