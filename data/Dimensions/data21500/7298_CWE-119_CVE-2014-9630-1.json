{
    "cve_id": "CVE-2014-9630",
    "cve_description": "The rtp_packetize_xiph_config function in modules/stream_out/rtpfmt.c in VideoLAN VLC media player before 2.1.6 uses a stack-allocation approach with a size determined by arbitrary input data, which allows remote attackers to cause a denial of service (memory corruption) or possibly have unspecified other impact via a crafted length value.",
    "cve_publish_date": "2020-01-24",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "stream_out: rtp: don't use VLA for user controlled data\n\nIt should fix a possible invalid memory access\n\nWhen streaming ogg-files via rtp, an ogg-file can trigger an invalid\nwrite access using an overly long 'configuration' string.\n\nThe original code attemps to allocate space to hold the string on the stack\nand hence, cannot verify if allocation succeeds. Instead, we now allocate the\nbuffer on the heap and return if allocation fails.\n\nIn detail, rtp_packetize_xiph_config allocates a buffer on the stack at (1) where\nthe size depends on the local variable 'len'. The variable 'len' is\ncalculated at (0) to be the length of a string contained in a specially\ncrafted Ogg Vorbis file, and therefore, it is attacker-controlled.\n\nSigned-off-by: Jean-Baptiste Kempf <jb@videolan.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "rtpfmt.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "6",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 562:     char b64[len + 1];"
    ]
}
