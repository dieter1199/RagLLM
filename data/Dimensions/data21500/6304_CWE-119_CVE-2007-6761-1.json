{
    "cve_id": "CVE-2007-6761",
    "cve_description": "drivers/media/video/videobuf-vmalloc.c in the Linux kernel before 2.6.24 does not initialize videobuf_mapping data structures, which allows local users to trigger an incorrect count value and videobuf leak via unspecified vectors, a different vulnerability than CVE-2010-5321.",
    "cve_publish_date": "2017-04-24",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "V4L/DVB (6751): V4L: Memory leak!  Fix count in videobuf-vmalloc mmap\n\nThis is pretty serious bug.  map->count is never initialized after the\ncall to kmalloc making the count start at some random trash value.  The\nend result is leaking videobufs.\n\nAlso, fix up the debug statements to print unsigned values.\n\nPushed to http://ifup.org/hg/v4l-dvb too\n\nSigned-off-by: Brandon Philips <bphilips@suse.de>\nSigned-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "videobuf-vmalloc.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "3",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 54: \tdprintk(2,\"vm_open %p [count=%d,vma=%08lx-%08lx]\\n\",map,",
        "// Line_Reference 67: \tdprintk(2,\"vm_close %p [count=%d,vma=%08lx-%08lx]\\n\",map,",
        "// Line_Reference 224: \tmap = q->bufs[first]->map = kmalloc(sizeof(struct videobuf_mapping),GFP_KERNEL);"
    ]
}
