{
    "cve_id": "CVE-2022-1379",
    "cve_description": "URL Restriction Bypass in GitHub repository plantuml/plantuml prior to V1.2022.5. An attacker can abuse this to bypass URL restrictions that are imposed by the different security profiles and achieve server side request forgery (SSRF). This allows accessing restricted internal resources/servers or sending requests to third party servers.",
    "cve_publish_date": "2022-05-14",
    "cwe_id": "CWE-918",
    "cwe_name": "Server-Side Request Forgery (SSRF)",
    "cwe_description": "The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
    "commit_message": "Import version 1.2022.5",
    "type_of_change": "Modification",
    "filename_of_changes": "Player.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "8",
    "number_of_lines_deleted_vulnerable_to_cve": "17",
    "vulnerable_lines": [
        "// Line_Reference 37: import net.sourceforge.plantuml.FontParam;",
        "// Line_Reference 39: import net.sourceforge.plantuml.UseStyle;",
        "// Line_Reference 55: import net.sourceforge.plantuml.ugraphic.color.HColorUtils;",
        "// Line_Reference 65: \tpublic Player(String title, ISkinParam skinParam, TimingRuler ruler, boolean compact) {",
        "// Line_Reference 76: \tprotected abstract StyleSignatureBasic getStyleSignature();",
        "// Line_Reference 77: ",
        "// Line_Reference 78: \tprotected abstract SymbolContext getContextLegacy();",
        "// Line_Reference 79: //\tprivate StyleSignature getStyleSignature() {",
        "// Line_Reference 80: //\t\treturn StyleSignature.of(SName.root, SName.element, SName.timingDiagram);",
        "// Line_Reference 81: //\t}",
        "// Line_Reference 85: ",
        "// Line_Reference 89: \t\tif (UseStyle.useBetaStyle() == false)",
        "// Line_Reference 90: \t\t\treturn FontConfiguration.create(skinParam, FontParam.TIMING, null);",
        "// Line_Reference 91: \t\treturn FontConfiguration.create(skinParam, StyleSignatureBasic.of(SName.root, SName.element, SName.timingDiagram)",
        "// Line_Reference 92: \t\t\t\t.getMergedStyle(skinParam.getCurrentStyleBuilder()));",
        "// Line_Reference 101: \t\tif (UseStyle.useBetaStyle() == false)",
        "// Line_Reference 102: \t\t\treturn getContextLegacy();"
    ]
}
