{
    "cve_id": "CVE-2014-4667",
    "cve_description": "The sctp_association_free function in net/sctp/associola.c in the Linux kernel before 3.15.2 does not properly manage a certain backlog value, which allows remote attackers to cause a denial of service (socket outage) via a crafted SCTP packet.",
    "cve_publish_date": "2014-07-03",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "sctp: Fix sk_ack_backlog wrap-around problem\n\nConsider the scenario:\nFor a TCP-style socket, while processing the COOKIE_ECHO chunk in\nsctp_sf_do_5_1D_ce(), after it has passed a series of sanity check,\na new association would be created in sctp_unpack_cookie(), but afterwards,\nsome processing maybe failed, and sctp_association_free() will be called to\nfree the previously allocated association, in sctp_association_free(),\nsk_ack_backlog value is decremented for this socket, since the initial\nvalue for sk_ack_backlog is 0, after the decrement, it will be 65535,\na wrap-around problem happens, and if we want to establish new associations\nafterward in the same socket, ABORT would be triggered since sctp deem the\naccept queue as full.\nFix this issue by only decrementing sk_ack_backlog for associations in\nthe endpoint's list.\n\nFix-suggested-by: Neil Horman <nhorman@tuxdriver.com>\nSigned-off-by: Xufeng Zhang <xufeng.zhang@windriver.com>\nAcked-by: Daniel Borkmann <dborkman@redhat.com>\nAcked-by: Vlad Yasevich <vyasevich@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "type_of_change": "Modification",
    "filename_of_changes": "associola.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 334: \tif (!asoc->temp) {"
    ]
}
