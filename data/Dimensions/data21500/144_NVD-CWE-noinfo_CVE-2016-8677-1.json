{
    "cve_id": "CVE-2016-8677",
    "cve_description": "The AcquireQuantumPixels function in MagickCore/quantum.c in ImageMagick before 7.0.3-1 allows remote attackers to have unspecified impact via a crafted image file, which triggers a memory allocation failure.",
    "cve_publish_date": "2017-02-15",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "https://github.com/ImageMagick/ImageMagick/issues/268",
    "type_of_change": "Modification",
    "filename_of_changes": "tiff.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "67",
    "number_of_lines_deleted_vulnerable_to_cve": "68",
    "vulnerable_lines": [
        "// Line_Reference 1428:     /*",
        "// Line_Reference 1429:       Allocate memory for the image and pixel buffer.",
        "// Line_Reference 1430:     */",
        "// Line_Reference 1431:     quantum_info=AcquireQuantumInfo(image_info,image);",
        "// Line_Reference 1432:     if (quantum_info == (QuantumInfo *) NULL)",
        "// Line_Reference 1433:       {",
        "// Line_Reference 1434:         TIFFClose(tiff);",
        "// Line_Reference 1435:         ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
        "// Line_Reference 1436:       }",
        "// Line_Reference 1437:     if (sample_format == SAMPLEFORMAT_UINT)",
        "// Line_Reference 1438:       status=SetQuantumFormat(image,quantum_info,UnsignedQuantumFormat);",
        "// Line_Reference 1439:     if (sample_format == SAMPLEFORMAT_INT)",
        "// Line_Reference 1440:       status=SetQuantumFormat(image,quantum_info,SignedQuantumFormat);",
        "// Line_Reference 1441:     if (sample_format == SAMPLEFORMAT_IEEEFP)",
        "// Line_Reference 1442:       status=SetQuantumFormat(image,quantum_info,FloatingPointQuantumFormat);",
        "// Line_Reference 1443:     if (status == MagickFalse)",
        "// Line_Reference 1444:       {",
        "// Line_Reference 1445:         TIFFClose(tiff);",
        "// Line_Reference 1446:         quantum_info=DestroyQuantumInfo(quantum_info);",
        "// Line_Reference 1447:         ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
        "// Line_Reference 1448:       }",
        "// Line_Reference 1449:     status=MagickTrue;",
        "// Line_Reference 1450:     switch (photometric)",
        "// Line_Reference 1451:     {",
        "// Line_Reference 1452:       case PHOTOMETRIC_MINISBLACK:",
        "// Line_Reference 1453:       {",
        "// Line_Reference 1454:         quantum_info->min_is_white=MagickFalse;",
        "// Line_Reference 1455:         break;",
        "// Line_Reference 1456:       }",
        "// Line_Reference 1457:       case PHOTOMETRIC_MINISWHITE:",
        "// Line_Reference 1458:       {",
        "// Line_Reference 1459:         quantum_info->min_is_white=MagickTrue;",
        "// Line_Reference 1460:         break;",
        "// Line_Reference 1461:       }",
        "// Line_Reference 1462:       default:",
        "// Line_Reference 1463:         break;",
        "// Line_Reference 1464:     }",
        "// Line_Reference 1465:     tiff_status=TIFFGetFieldDefaulted(tiff,TIFFTAG_EXTRASAMPLES,&extra_samples,",
        "// Line_Reference 1466:       &sample_info);",
        "// Line_Reference 1467:     if (tiff_status == 1)",
        "// Line_Reference 1468:       {",
        "// Line_Reference 1469:         (void) SetImageProperty(image,\"tiff:alpha\",\"unspecified\",exception);",
        "// Line_Reference 1470:         if (extra_samples == 0)",
        "// Line_Reference 1471:           {",
        "// Line_Reference 1472:             if ((samples_per_pixel == 4) && (photometric == PHOTOMETRIC_RGB))",
        "// Line_Reference 1473:               image->alpha_trait=BlendPixelTrait;",
        "// Line_Reference 1474:           }",
        "// Line_Reference 1475:         else",
        "// Line_Reference 1476:           for (i=0; i < extra_samples; i++)",
        "// Line_Reference 1477:           {",
        "// Line_Reference 1478:             image->alpha_trait=BlendPixelTrait;",
        "// Line_Reference 1479:             if (sample_info[i] == EXTRASAMPLE_ASSOCALPHA)",
        "// Line_Reference 1480:               {",
        "// Line_Reference 1481:                 SetQuantumAlphaType(quantum_info,DisassociatedQuantumAlpha);",
        "// Line_Reference 1482:                 (void) SetImageProperty(image,\"tiff:alpha\",\"associated\",",
        "// Line_Reference 1483:                   exception);",
        "// Line_Reference 1484:               }",
        "// Line_Reference 1485:             else",
        "// Line_Reference 1486:               if (sample_info[i] == EXTRASAMPLE_UNASSALPHA)",
        "// Line_Reference 1487:                 (void) SetImageProperty(image,\"tiff:alpha\",\"unassociated\",",
        "// Line_Reference 1488:                   exception);",
        "// Line_Reference 1489:           }",
        "// Line_Reference 1490:       }",
        "// Line_Reference 1557:             {",
        "// Line_Reference 1558:               quantum_info=DestroyQuantumInfo(quantum_info);",
        "// Line_Reference 1559:               break;",
        "// Line_Reference 1560:             }",
        "// Line_Reference 2075:     quantum_info=DestroyQuantumInfo(quantum_info);"
    ]
}
