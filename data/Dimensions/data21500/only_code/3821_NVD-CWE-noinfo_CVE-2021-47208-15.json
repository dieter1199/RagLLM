$r->any('/optional/:foo/:bar')->to(bar => 'test');
$r->any('/optional2/:foo')->to(foo => 'one')->any('/:bar')->to(bar => 'two');
# /format.html
$r->any('/format')->to(testcase => 'hello')->to(action => 'you', format => 'html');
$inline->any('/delete')->to(testcase => 'articles', action => 'delete', format => undef)->name('articles_delete');
$r->any('/method/get')->methods('GET')->to(testcase => 'method', action => 'get');
$versioned->any('/1.0')->to(testcase => 'bar')->any('/test')->to(action => 'baz');
$versioned->any('/2.4')->to(testcase => 'foo')->any('/test')->to(action => 'bar');
my $inactive = $r->any('/', [format => 0]);
$source->any('/second')->to('#second');
my $third  = $source->any('/third')->to('#third');
$r->any('/slash')->to(testcase => 'just')->any('/')->to(action => 'slash');
is $r->find('nodetect')->pattern->constraints->{format}, 0, 'right value';
is $m->path_for->{path}, '/articles/1/delete', 'right path';
is $m->path_for->{path}, '/method/get', 'right path';
is_deeply $m->stack, [{testcase => 'bar', action => 'baz'}], 'right structure';
is $m->path_for->{path}, '/versioned/1.0/test', 'right path';
is_deeply $m->stack, [{testcase => 'foo', action => 'bar'}], 'right structure';
is $m->path_for->{path}, '/versioned/2.4/test', 'right path';
is_deeply $m->stack, [{controller => 'target', action => 'second'}], 'right structure';
is $m->path_for->{path}, '/target/second', 'right path';
is_deeply $m->stack, [{controller => 'source', action => 'third'}], 'right structure';
is $m->path_for->{path}, '/source/third', 'right path';
is $m->path_for->{path}, '/slash', 'right path';