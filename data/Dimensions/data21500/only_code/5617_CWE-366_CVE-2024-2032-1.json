# Check if a service account with the given name already
# exists
service_accounts = session.execute(
select(UserSchema).where(
UserSchema.name == service_account.name,
UserSchema.is_service_account.is_(True),  # type: ignore[attr-defined]
)
).fetchall()
if len(service_accounts) == 1:
session.commit()
else:
raise EntityExistsError(
f"Unable to create service account with name "
f"'{service_account.name}': Found existing service "
"account with this name."
)
# Check if a user account with the given name already exists
users = session.execute(
select(UserSchema).where(
UserSchema.name == user.name,
UserSchema.is_service_account.is_(False),  # type: ignore[attr-defined]
)
).fetchall()
if len(users) == 1:
session.commit()
else:
raise EntityExistsError(
f"Unable to create user with name '{user.name}': "
f"Found an existing user account with this name."
)
