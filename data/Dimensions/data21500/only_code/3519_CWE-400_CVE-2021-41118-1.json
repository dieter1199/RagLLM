/**
* DynamicPageList3
* DPL Article Class
*
* @author		IlyaHaykinson, Unendlich, Dangerville, Algorithmix, Theaitetos, Alexia E. Smith, Universal Omega
* @license		GPL-2.0-or-later
* @package		DynamicPageList3
*
*/
use User;
* @var object
public $mTitle = null;
* @var string
* @var string
* @var string
* Main Constructor
*
* @access	public
* @param	string	Title
* @param	integer	Namespace
* @return	void
public function __construct( $title, $namespace ) {
$this->mTitle     = $title;
* @access	public
* @param	array	Database Row
* @param	object	\DPL\Parameters Object
* @param	object	Mediawiki Title Object
* @param	integer	Page Namespace ID
* @param	string	Page Title as Selected from Query
* @return	object	\DPL\Article Object
public static function newFromRow( $row, Parameters $parameters, \Title $title, $pageNamespace, $pageTitle ) {
$article = new Article( $title, $pageNamespace );
$revActorName = null;
if ( isset( $row['revactor_actor'] ) ) {
$revActorName = User::newFromActorId( $row['revactor_actor'] )->getName();
}
//Chop off title if longer than the 'titlemaxlen' parameter.
$contLang = MediaWikiServices::getInstance()->getContentLanguage();
//get first char used for category-style output
$article->mStartChar = $contLang->convert( $contLang->firstChar( $row['sortkey'] ) );
$article->mStartChar = $contLang->convert( $contLang->firstChar( $pageTitle ) );
//External link
//SHOW PAGE_COUNTER
//SHOW PAGE_SIZE
//STORE initially selected PAGE
$article->mSelTitle     = 'unknown page';
$article->mSelTitle     = $row['sel_title'];
//STORE selected image
//REVISION SPECIFIED
$article->mRevision = $row['revactor_rev'];
$article->mUser     = $revActorName;
$article->mDate     = $row['revactor_timestamp'];
//SHOW "PAGE_TOUCHED" DATE, "FIRSTCATEGORYDATE" OR (FIRST/LAST) EDIT DATE
} elseif ( $parameters->getParameter( 'addeditdate' ) && isset( $row['revactor_timestamp'] ) ) {
$article->mDate = $row['revactor_timestamp'];
//Time zone adjustment
//Apply the userdateformat
$article->myDate = gmdate( $parameters->getParameter( 'userdateformat' ), wfTimeStamp( TS_UNIX, $article->mDate ) );
$article->mContributor  = User::newFromActorId( $row['contributor'] )->getName();
$article->mContrib      = substr( '*****************', 0, (int)round( log( $row['contribution'] ) ) );
//USER/AUTHOR(S)
$article->mUserLink = '[[User:' . $revActorName . '|' . $revActorName . ']]';
$article->mUser     = $revActorName;
//CATEGORY LINKS FROM CURRENT PAGE
//Count one more page in this heading
//uncategorized page (used if ordermethod=category,...)
self::$headings[$revActorName] = ( isset( self::$headings[$revActorName] ) ? self::$headings[$revActorName] + 1 : 1 );
if ( $row['revactor_actor'] == 0 ) { //anonymous user
$article->mParentHLink = '[[User:' . $revActorName . '|' . $revActorName . ']]';
} else {
$article->mParentHLink = '[[User:' . $revActorName . '|' . $revActorName . ']]';
}
* @access	public
* @return	array	Headings
*
* @access	public
* @return	void
* @access	public
* @return	mixed	Formatted string or null for none set.
return $wgLang->timeanddate( $article->mDate, true );