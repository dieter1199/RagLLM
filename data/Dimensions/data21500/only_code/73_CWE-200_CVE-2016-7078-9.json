@model = AuthSourceLdap.first
post :create, {:auth_source_ldap => {:name => AuthSourceLdap.first.name}}, set_session_user
put :update, {:id => AuthSourceLdap.first, :auth_source_ldap => {:name => AuthSourceLdap.first.name} }, set_session_user
put :update, {:id => AuthSourceLdap.first.id, :format => "weird", :auth_source_ldap => {:name => AuthSourceLdap.first.name} }, set_session_user
wierd_id = "#{AuthSourceLdap.first.id}.weird"
put :update, {:id => wierd_id, :auth_source_ldap => {:name => AuthSourceLdap.first.name} }, set_session_user
parameterized_id = "#{AuthSourceLdap.first.id}-#{AuthSourceLdap.first.name.parameterize}"
put :update, {:id => parameterized_id, :auth_source_ldap => {:name => AuthSourceLdap.first.name} }, set_session_user
put :update, {:id => AuthSourceLdap.first, :auth_source_ldap => {:name => AuthSourceLdap.first.name} }, set_session_user
auth_source_ldap = AuthSourceLdap.first
User.where(:auth_source_id => auth_source_ldap.id).update_all(:auth_source_id => nil)
assert !AuthSourceLdap.exists?(auth_source_ldap.id)
get :edit, { :id => AuthSourceLdap.first.id },
auth_source_ldap = AuthSourceLdap.find(auth_source_ldap.id)
put :test_connection, {:id => AuthSourceLdap.first, :auth_source_ldap => {:name => AuthSourceLdap.first.name} }, set_session_user
put :test_connection, {:id => AuthSourceLdap.first, :auth_source_ldap => {:name => AuthSourceLdap.first.name} }, set_session_user
auth_source_ldap_params = { :name => AuthSourceLdap.first.name,
put :update, { :id => AuthSourceLdap.first,
AuthSourceLdap.first.organizations.to_a
AuthSourceLdap.first.locations.to_a