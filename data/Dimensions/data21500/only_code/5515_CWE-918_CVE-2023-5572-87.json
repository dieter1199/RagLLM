import { Component, createSignal, Show } from "solid-js";
import { uploadFile as uploadFileUtil } from "#lib/utils";
import { Button, IconButton, Input, Loader, Tooltip } from "#components/primitives";
const inputId = nanoid();
if (uploadedUrl) {
props.state.updateAttributes({ src: uploadedUrl });
}
const getPlaceholder = (): string => {
if (inputMode() === "src") {
return options().cover ? "Cover image URL" : "Image URL";
}
return options().cover ? "Cover alt description" : "Alt description";
};
<div class="flex p-0 transition-shadow duration-200 border-0 rounded-xl">
<Tooltip text="Alt">
<IconButton
path={mdiText}
color={inputMode() === "alt" ? "primary" : "contrast"}
text={inputMode() === "alt" ? "primary" : "soft"}
onClick={() => {
setInputMode("alt");
></IconButton>
</Tooltip>
<Tooltip text="Image URL">
<IconButton
path={mdiLinkVariant}
color={inputMode() === "src" ? "primary" : "contrast"}
text={inputMode() === "src" ? "primary" : "soft"}
onClick={() => {
setInputMode("src");
}}
></IconButton>
</Tooltip>
<Input
color="contrast"
wrapperClass="flex-1 max-w-full min-w-unset"
class="w-full"
placeholder={getPlaceholder()}
value={attrs()[inputMode()] || ""}
disabled={!props.state.editor.isEditable}
setValue={(value) => {
updateAttribute.clear();
updateAttribute(inputMode(), value);
}}
/>
<Show when={props.state.editor.isEditable}>
<Tooltip text={uploading() ? "Uploading" : "Upload image"}>
<Show
when={!uploading()}
fallback={
<Button badge color="contrast" class="flex items-center justify-center w-8 h-8">
<Loader class="w-6 h-6" />
</Button>
}
>
<IconButton path={mdiUpload} color="contrast" text="soft" badge></IconButton>
</Show>
</Show>
