{
    "cve_id": "CVE-2024-4030",
    "cve_description": "On Windows a directory returned by tempfile.mkdtemp() would not always have permissions set to restrict reading and writing to the temporary directory by other users, instead usually inheriting the correct permissions from the default location. Alternate configurations or users without a profile directory may not have the intended permissions.\n\nIf you’re not using Windows or haven’t changed the temporary directory location then you aren’t affected by this vulnerability. On other platforms the returned directory is consistently readable and writable only by the current user.\n\nThis issue was caused by Python not supporting Unix permissions on Windows. The fix adds support for Unix “700” for the mkdir function on Windows which is used by mkdtemp() to ensure the newly created directory has the proper permissions.\n",
    "cve_publish_date": "2024-05-07",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "gh-118486: Simplify test_win32_mkdir_700 to check the exact ACL (GH-119056)",
    "type_of_change": "Modification",
    "filename_of_changes": "test_os.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "8",
    "number_of_lines_deleted_vulnerable_to_cve": "15",
    "vulnerable_lines": [
        "// Line_Reference 1817:         path1 = os.path.join(os_helper.TESTFN, 'dir1')",
        "// Line_Reference 1818:         path2 = os.path.join(os_helper.TESTFN, 'dir2')",
        "// Line_Reference 1819:         # mode=0o700 is special-cased to override ACLs on Windows",
        "// Line_Reference 1820:         # There's no way to know exactly how the ACLs will look, so we'll",
        "// Line_Reference 1821:         # check that they are different from a regularly created directory.",
        "// Line_Reference 1822:         os.mkdir(path1, mode=0o700)",
        "// Line_Reference 1823:         os.mkdir(path2, mode=0o777)",
        "// Line_Reference 1824: ",
        "// Line_Reference 1825:         out1 = subprocess.check_output([\"icacls.exe\", path1], encoding=\"oem\")",
        "// Line_Reference 1826:         out2 = subprocess.check_output([\"icacls.exe\", path2], encoding=\"oem\")",
        "// Line_Reference 1827:         os.rmdir(path1)",
        "// Line_Reference 1828:         os.rmdir(path2)",
        "// Line_Reference 1829:         out1 = out1.replace(path1, \"<PATH>\")",
        "// Line_Reference 1830:         out2 = out2.replace(path2, \"<PATH>\")",
        "// Line_Reference 1831:         self.assertNotEqual(out1, out2)"
    ]
}
