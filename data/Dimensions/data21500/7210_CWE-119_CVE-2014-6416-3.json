{
    "cve_id": "CVE-2014-6416",
    "cve_description": "Buffer overflow in net/ceph/auth_x.c in Ceph, as used in the Linux kernel before 3.16.3, allows remote attackers to cause a denial of service (memory corruption and panic) or possibly have unspecified other impact via a long unencrypted auth ticket.",
    "cve_publish_date": "2014-09-28",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "libceph: do not hard code max auth ticket len\n\nWe hard code cephx auth ticket buffer size to 256 bytes.  This isn't\nenough for any moderate setups and, in case tickets themselves are not\nencrypted, leads to buffer overflows (ceph_x_decrypt() errors out, but\nceph_decode_copy() doesn't - it's just a memcpy() wrapper).  Since the\nbuffer is allocated dynamically anyway, allocated it a bit later, at\nthe point where we know how much is going to be needed.\n\nFixes: http://tracker.ceph.com/issues/8979\n\nCc: stable@vger.kernel.org\nSigned-off-by: Ilya Dryomov <ilya.dryomov@inktank.com>\nReviewed-by: Sage Weil <sage@redhat.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "auth_x.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "29",
    "number_of_lines_deleted_vulnerable_to_cve": "35",
    "vulnerable_lines": [
        "// Line_Reference 16: #define TEMP_TICKET_BUF_LEN\t256",
        "// Line_Reference 17: ",
        "// Line_Reference 67: \t\t\t  void **p, void *end, void *obuf, size_t olen)",
        "// Line_Reference 78: \tret = ceph_decrypt2(secret, &head, &head_len, obuf, &olen,",
        "// Line_Reference 79: \t\t\t    *p, len);",
        "// Line_Reference 134: \t\t\t      void **p, void *end,",
        "// Line_Reference 135: \t\t\t      void *dbuf, void *ticket_buf)",
        "// Line_Reference 170: \tdlen = ceph_x_decrypt(secret, p, end, dbuf,",
        "// Line_Reference 171: \t\t\t      TEMP_TICKET_BUF_LEN);",
        "// Line_Reference 198: \ttp = ticket_buf;",
        "// Line_Reference 202: \t\tdlen = ceph_x_decrypt(&old_key, p, end, ticket_buf,",
        "// Line_Reference 203: \t\t\t\t      TEMP_TICKET_BUF_LEN);",
        "// Line_Reference 252: \tchar *dbuf;",
        "// Line_Reference 253: \tchar *ticket_buf;",
        "// Line_Reference 258: \tdbuf = kmalloc(TEMP_TICKET_BUF_LEN, GFP_NOFS);",
        "// Line_Reference 259: \tif (!dbuf)",
        "// Line_Reference 260: \t\treturn -ENOMEM;",
        "// Line_Reference 261: ",
        "// Line_Reference 262: \tret = -ENOMEM;",
        "// Line_Reference 263: \tticket_buf = kmalloc(TEMP_TICKET_BUF_LEN, GFP_NOFS);",
        "// Line_Reference 264: \tif (!ticket_buf)",
        "// Line_Reference 265: \t\tgoto out_dbuf;",
        "// Line_Reference 266: ",
        "// Line_Reference 275: \t\tret = process_one_ticket(ac, secret, &p, end,",
        "// Line_Reference 276: \t\t\t\t\t dbuf, ticket_buf);",
        "// Line_Reference 278: \t\t\tgoto out;",
        "// Line_Reference 281: \tret = 0;",
        "// Line_Reference 282: out:",
        "// Line_Reference 283: \tkfree(ticket_buf);",
        "// Line_Reference 284: out_dbuf:",
        "// Line_Reference 285: \tkfree(dbuf);",
        "// Line_Reference 286: \treturn ret;",
        "// Line_Reference 289: \tret = -EINVAL;",
        "// Line_Reference 290: \tgoto out;",
        "// Line_Reference 612: \tret = ceph_x_decrypt(&th->session_key, &p, end, &reply, sizeof(reply));"
    ]
}
