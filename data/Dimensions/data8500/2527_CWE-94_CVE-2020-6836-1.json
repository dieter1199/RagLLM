{
    "cve_id": "CVE-2020-6836",
    "cve_description": "grammar-parser.jison in the hot-formula-parser package before 3.0.1 for Node.js is vulnerable to arbitrary code injection. The package fails to sanitize values passed to the parse function and concatenates them in an eval call. If a value of the formula is taken from user-controlled input, it may allow attackers to run arbitrary commands on the server.",
    "cve_publish_date": "2020-01-11",
    "cwe_id": "CWE-94",
    "cwe_name": "Improper Control of Generation of Code ('Code Injection')",
    "cwe_description": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
    "commit_message": "Remove usage of the 'eval' function (#58)\n\n* Remove usage of the 'eval' function\r\n* Update formulajs module",
    "type_of_change": "Modification",
    "filename_of_changes": "grammar-parser.jison",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "8",
    "vulnerable_lines": [
        "// Line_Reference 190:       var result = [];",
        "// Line_Reference 191:       var arr = eval(\"[\" + yytext + \"]\");",
        "// Line_Reference 192: ",
        "// Line_Reference 193:       arr.forEach(function(item) {",
        "// Line_Reference 194:         result.push(item);",
        "// Line_Reference 195:       });",
        "// Line_Reference 196: ",
        "// Line_Reference 197:       $$ = result;"
    ]
}
