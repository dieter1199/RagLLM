{
    "cve_id": "CVE-2016-7784",
    "cve_description": "SQL injection vulnerability in the getSection function in framework/core/subsystems/expRouter.php in Exponent CMS 2.3.9 and earlier allows remote attackers to execute arbitrary SQL commands via the section parameter.",
    "cve_publish_date": "2017-03-07",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "fix a possible vulnerability and add some comments",
    "type_of_change": "Modification",
    "filename_of_changes": "expRouter.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "75",
    "number_of_lines_deleted_vulnerable_to_cve": "72",
    "vulnerable_lines": [
        "// Line_Reference 44: ",
        "// Line_Reference 57:     {",
        "// Line_Reference 58:         if(substr($fulllink, -1) == '/') $fulllink = substr($fulllink, 0, -1);",
        "// Line_Reference 59:         return $fulllink;",
        "// Line_Reference 61: ",
        "// Line_Reference 85: ",
        "// Line_Reference 86:         if (isset($params['section']) && $params['section'] == SITE_DEFAULT_SECTION) {",
        "// Line_Reference 92: ",
        "// Line_Reference 93:             if (isset($params['section']) && !isset($params['action'])) {",
        "// Line_Reference 98:                 }",
        "// Line_Reference 100:             } else {",
        "// Line_Reference 102:                 $link = '';",
        "// Line_Reference 103: ",
        "// Line_Reference 107: ",
        "// Line_Reference 133: ",
        "// Line_Reference 151:                 //trim last / off",
        "// Line_Reference 167:                         }",
        "// Line_Reference 238:                 // if this url wasn't a valid section, or action then kill it.  It might not actually be a \"bad\" url,",
        "// Line_Reference 242:                 if (!$ret) $this->url_type = 'malformed';",
        "// Line_Reference 257:             // if we hit this it's an old school url coming in and we're trying to use SEF's.",
        "// Line_Reference 260:             header(\"Location: \".$this->makeLink(array('section'=>intval($_REQUEST['section']))),TRUE,301);",
        "// Line_Reference 264:         if ($this->url_type != 'malformed') {",
        "// Line_Reference 268:             // if page or controller is not found we will route to the not found controller.",
        "// Line_Reference 316:             $this->url_parts = explode('/', $this->sefPath);",
        "// Line_Reference 322: ",
        "// Line_Reference 358: ",
        "// Line_Reference 360:         define('PRINTER_FRIENDLY', (isset($_REQUEST['printerfriendly']) || isset($this->params['printerfriendly'])) ? 1 : 0);",
        "// Line_Reference 365:     public function routePageRequest() {",
        "// Line_Reference 373:                 $_REQUEST['section'] = SITE_DEFAULT_SECTION;",
        "// Line_Reference 377:             // check the regular page names.  If that still doesn't work then we'll redirect them to the",
        "// Line_Reference 386:                     'url_parts'=>array(",
        "// Line_Reference 391:                     'url_parts'=>array(",
        "// Line_Reference 395:             //if section is empty, we'll look for the page overrides first and route to",
        "// Line_Reference 402:                 $c = new storeCategory();",
        "// Line_Reference 409:                         //fake parts and route to action",
        "// Line_Reference 410:                         $this->url_type = 'action';",
        "// Line_Reference 412:                         $this->url_parts[1] = 'show'; //controller",
        "// Line_Reference 413:                         $this->url_parts[2] = 'title'; //controller",
        "// Line_Reference 414:                         $this->url_parts[3] = $sef_url; //controller",
        "// Line_Reference 421:                     //fake parts and route to action",
        "// Line_Reference 422:                     $this->url_type = 'action';",
        "// Line_Reference 424:                     $this->url_parts[1] = 'showall'; //controller",
        "// Line_Reference 425:                     $this->url_parts[2] = 'title'; //controller",
        "// Line_Reference 426:                     $this->url_parts[3] = $sef_url; //controller",
        "// Line_Reference 437: ",
        "// Line_Reference 451:             if ($part_count == count($map['url_parts'])) {",
        "// Line_Reference 457:                     }",
        "// Line_Reference 463:             }",
        "// Line_Reference 464: ",
        "// Line_Reference 473: ",
        "// Line_Reference 492: ",
        "// Line_Reference 503: ",
        "// Line_Reference 528:         }",
        "// Line_Reference 534: ",
        "// Line_Reference 537:             // most of the time we can just grab the action outta the POST array since this is passed as a hidden field,",
        "// Line_Reference 543: ",
        "// Line_Reference 572: ",
        "// Line_Reference 626: ",
        "// Line_Reference 627:         return $url;",
        "// Line_Reference 698: ",
        "// Line_Reference 720: ",
        "// Line_Reference 757: ",
        "// Line_Reference 758:         $this->sefPath = substr($this->sefPath,strlen(substr(PATH_RELATIVE,0,-1)));",
        "// Line_Reference 762: ",
        "// Line_Reference 771:                     $this->ectid = $s[1];",
        "// Line_Reference 772:                 }",
        "// Line_Reference 773:             }",
        "// Line_Reference 786:                 $section = $this->url_style==\"sef\" ? $this->getPageByName($_REQUEST['section'])->id : intval($_REQUEST['section']) ;",
        "// Line_Reference 820: ",
        "// Line_Reference 830: ",
        "// Line_Reference 840: ",
        "// Line_Reference 842:     {"
    ]
}
