{
    "cve_id": "CVE-2021-41114",
    "cve_description": "TYPO3 is an open source PHP based web content management system released under the GNU GPL. It has been discovered that TYPO3 CMS is susceptible to host spoofing due to improper validation of the HTTP Host header. TYPO3 uses the HTTP Host header, for example, to generate absolute URLs during the frontend rendering process. Since the host header itself is provided by the client, it can be forged to any value, even in a name-based virtual hosts environment. This vulnerability is the same as described in TYPO3-CORE-SA-2014-001 (CVE-2014-3941). A regression, introduced during TYPO3 v11 development, led to this situation. The already existing setting $GLOBALS['TYPO3_CONF_VARS']['SYS']['trustedHostsPattern'] (used as an effective mitigation strategy in previous TYPO3 versions) was not evaluated anymore, and reintroduced the vulnerability.",
    "cve_publish_date": "2021-10-05",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "[SECURITY] Verify HTTP_HOST via FE/BE middleware\n\nAvoid a dependency cycle between HTTP_HOST generation\nand verification.\nAs $GLOBALS['TYPO3_REQUEST'] is not available\nduring ServerRequestFactory::fromGlobals(), HTTP_HOST\nverification can not be performed at that point.\nIt is therefore delayed into a context aware middleware\ninstead of being skipped because of missing $GLOBALS.\n\nPositive advantage of moving the verification into\nfrontend and backend middlewares, is that context\nchecks to exclude CLI/installtool can be dropped.\n\nAs a side effect this also fixes the frontend to installtool\nredirect if TYPO3 is not yet configured and running with\nan invalid SERVER_NAME, as ServerRequestFactory::fromGlobals()\ndoesn't fail.\n\nReleases: master\nResolves: #95395\nChange-Id: Idd3a3449a878cd625dad0d04892d9f0e710ca1a9\nSecurity-Bulletin: TYPO3-CORE-SA-2021-015\nSecurity-References: CVE-2021-41114\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/71438\nTested-by: Oliver Hader <oliver.hader@typo3.org>\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "GeneralUtilityFixture.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "0",
    "number_of_lines_deleted_vulnerable_to_cve": "32",
    "vulnerable_lines": [
        "// Line_Reference 27:     public static int $isAllowedHostHeaderValueCallCount = 0;",
        "// Line_Reference 28: ",
        "// Line_Reference 29:     /**",
        "// Line_Reference 30:      * Tracks number of calls done to this method",
        "// Line_Reference 31:      *",
        "// Line_Reference 32:      * @param string $hostHeaderValue Host name without port",
        "// Line_Reference 33:      * @return bool",
        "// Line_Reference 34:      */",
        "// Line_Reference 35:     public static function isAllowedHostHeaderValue($hostHeaderValue): bool",
        "// Line_Reference 36:     {",
        "// Line_Reference 37:         self::$isAllowedHostHeaderValueCallCount++;",
        "// Line_Reference 38:         return parent::isAllowedHostHeaderValue($hostHeaderValue);",
        "// Line_Reference 39:     }",
        "// Line_Reference 40: ",
        "// Line_Reference 41:     /**",
        "// Line_Reference 42:      * @param bool $allowHostHeaderValue",
        "// Line_Reference 43:      */",
        "// Line_Reference 44:     public static function setAllowHostHeaderValue(bool $allowHostHeaderValue): void",
        "// Line_Reference 45:     {",
        "// Line_Reference 46:         static::$allowHostHeaderValue = $allowHostHeaderValue;",
        "// Line_Reference 47:     }",
        "// Line_Reference 48: ",
        "// Line_Reference 49:     /**",
        "// Line_Reference 50:      * For testing we must not generally allow HTTP Host headers",
        "// Line_Reference 51:      *",
        "// Line_Reference 52:      * @return bool",
        "// Line_Reference 53:      */",
        "// Line_Reference 54:     protected static function isInternalRequestType(): bool",
        "// Line_Reference 55:     {",
        "// Line_Reference 56:         return false;",
        "// Line_Reference 57:     }",
        "// Line_Reference 58: "
    ]
}
