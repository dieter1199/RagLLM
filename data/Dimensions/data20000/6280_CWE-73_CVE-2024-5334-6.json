{
    "cve_id": "CVE-2024-5334",
    "cve_description": "A local file read vulnerability exists in the stitionai/devika repository, affecting the latest version. The vulnerability is due to improper handling of the 'snapshot_path' parameter in the '/api/get-browser-snapshot' endpoint. An attacker can exploit this vulnerability by crafting a request with a malicious 'snapshot_path' parameter, leading to arbitrary file read from the system. This issue impacts the security of the application by allowing unauthorized access to sensitive files on the server.",
    "cve_publish_date": "2024-06-27",
    "cwe_id": "CWE-73",
    "cwe_name": "External Control of File Name or Path",
    "cwe_description": "The product allows user input to control or influence paths or file names that are used in filesystem operations.",
    "commit_message": "Fix: Sanitizing HTML inputs and Cors misconfiguration",
    "type_of_change": "Modification",
    "filename_of_changes": "state.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "25",
    "vulnerable_lines": [
        "// Line_Reference 177: ",
        "// Line_Reference 178:     def get_project_files(self, project_name: str):",
        "// Line_Reference 179:         if not project_name:",
        "// Line_Reference 180:             return []",
        "// Line_Reference 181:         project_directory = \"-\".join(project_name.split(\" \"))",
        "// Line_Reference 182:         directory = os.path.join(os.getcwd(), 'data', 'projects', project_directory)",
        "// Line_Reference 183:         if(not os.path.exists(directory)):",
        "// Line_Reference 184:             return []",
        "// Line_Reference 185:         files = []",
        "// Line_Reference 186:         for root, _, filenames in os.walk(directory):",
        "// Line_Reference 187:             for filename in filenames:",
        "// Line_Reference 188:                 file_relative_path = os.path.relpath(root, directory)",
        "// Line_Reference 189:                 if file_relative_path == '.': file_relative_path = ''",
        "// Line_Reference 190:                 file_path = os.path.join(file_relative_path, filename)",
        "// Line_Reference 191:                 print(\"file_path\",file_path)",
        "// Line_Reference 192:                 try:",
        "// Line_Reference 193:                     with open(os.path.join(root, filename), 'r') as file:",
        "// Line_Reference 194:                         print(\"File:\", filename)",
        "// Line_Reference 195:                         files.append({",
        "// Line_Reference 196:                             \"file\": file_path,",
        "// Line_Reference 197:                             \"code\": file.read()",
        "// Line_Reference 198:                         })",
        "// Line_Reference 199:                 except Exception as e:",
        "// Line_Reference 200:                     print(f\"Error reading file {filename}: {e}\")",
        "// Line_Reference 201:         return files"
    ]
}
