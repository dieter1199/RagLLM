{
    "cve_id": "CVE-2018-6010",
    "cve_description": "In Yii Framework 2.x before 2.0.14, remote attackers could obtain potentially sensitive information from exception messages, or exploit reflected XSS on the error handler page in non-debug mode. Related to base/ErrorHandler.php, log/Dispatcher.php, and views/errorHandler/exception.php.",
    "cve_publish_date": "2018-01-22",
    "cwe_id": "CWE-79",
    "cwe_name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "cwe_description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
    "commit_message": "Fixes #14711: Fixed `yii\\web\\ErrorHandler` displaying exception message in non-debug mode",
    "type_of_change": "Modification",
    "filename_of_changes": "ErrorHandler.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "28",
    "number_of_lines_deleted_vulnerable_to_cve": "14",
    "vulnerable_lines": [
        "// Line_Reference 327:         if ($exception instanceof Exception && ($exception instanceof UserException || !YII_DEBUG)) {",
        "// Line_Reference 328:             $message = \"{$exception->getName()}: {$exception->getMessage()}\";",
        "// Line_Reference 329:         } elseif (YII_DEBUG) {",
        "// Line_Reference 330:             if ($exception instanceof Exception) {",
        "// Line_Reference 331:                 $message = \"Exception ({$exception->getName()})\";",
        "// Line_Reference 332:             } elseif ($exception instanceof ErrorException) {",
        "// Line_Reference 333:                 $message = \"{$exception->getName()}\";",
        "// Line_Reference 334:             } else {",
        "// Line_Reference 335:                 $message = 'Exception';",
        "// Line_Reference 336:             }",
        "// Line_Reference 337:             $message .= \" '\" . get_class($exception) . \"' with message '{$exception->getMessage()}' \\n\\nin \"",
        "// Line_Reference 338:                 . $exception->getFile() . ':' . $exception->getLine() . \"\\n\\n\"",
        "// Line_Reference 339:                 . \"Stack trace:\\n\" . $exception->getTraceAsString();",
        "// Line_Reference 341:             $message = 'Error: ' . $exception->getMessage();"
    ]
}
