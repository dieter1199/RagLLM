{
    "cve_id": "CVE-2013-0309",
    "cve_description": "arch/x86/include/asm/pgtable.h in the Linux kernel before 3.6.2, when transparent huge pages are used, does not properly support PROT_NONE memory regions, which allows local users to cause a denial of service (system crash) via a crafted application.",
    "cve_publish_date": "2013-02-22",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "mm: thp: fix pmd_present for split_huge_page and PROT_NONE with THP\n\nIn many places !pmd_present has been converted to pmd_none.  For pmds\nthat's equivalent and pmd_none is quicker so using pmd_none is better.\n\nHowever (unless we delete pmd_present) we should provide an accurate\npmd_present too.  This will avoid the risk of code thinking the pmd is non\npresent because it's under __split_huge_page_map, see the pmd_mknotpresent\nthere and the comment above it.\n\nIf the page has been mprotected as PROT_NONE, it would also lead to a\npmd_present false negative in the same way as the race with\nsplit_huge_page.\n\nBecause the PSE bit stays on at all times (both during split_huge_page and\nwhen the _PAGE_PROTNONE bit get set), we could only check for the PSE bit,\nbut checking the PROTNONE bit too is still good to remember pmd_present\nmust always keep PROT_NONE into account.\n\nThis explains a not reproducible BUG_ON that was seldom reported on the\nlists.\n\nThe same issue is in pmd_large, it would go wrong with both PROT_NONE and\nif it races with split_huge_page.\n\nSigned-off-by: Andrea Arcangeli <aarcange@redhat.com>\nAcked-by: Rik van Riel <riel@redhat.com>\nCc: Johannes Weiner <jweiner@redhat.com>\nCc: Hugh Dickins <hughd@google.com>\nCc: Mel Gorman <mgorman@suse.de>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "pgtable.h",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "8",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 149: \treturn (pmd_flags(pte) & (_PAGE_PSE | _PAGE_PRESENT)) ==",
        "// Line_Reference 150: \t\t(_PAGE_PSE | _PAGE_PRESENT);",
        "// Line_Reference 418: \treturn pmd_flags(pmd) & _PAGE_PRESENT;"
    ]
}
