{
    "cve_id": "CVE-2022-3873",
    "cve_description": "Cross-site Scripting (XSS) - DOM in GitHub repository jgraph/drawio prior to 20.5.2.",
    "cve_publish_date": "2022-11-07",
    "cwe_id": "CWE-79",
    "cwe_name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "cwe_description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
    "commit_message": "20.5.2 release",
    "type_of_change": "Modification",
    "filename_of_changes": "EditorUi.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "84",
    "number_of_lines_deleted_vulnerable_to_cve": "68",
    "vulnerable_lines": [
        "// Line_Reference 1316: \t\tvar col = parent.getIndex(cells[0]);",
        "// Line_Reference 1317: \t\tvar row = table.getIndex(parent);",
        "// Line_Reference 1318: \t\tvar lastspan = null;",
        "// Line_Reference 1319: \t\tvar colspan = 1;",
        "// Line_Reference 1320: \t\tvar rowspan = 1;",
        "// Line_Reference 1321: \t\tvar index = 0;",
        "// Line_Reference 1322: ",
        "// Line_Reference 1323: \t\tvar nextRowCell = (row < table.getChildCount() - 1) ?",
        "// Line_Reference 1324: \t\t\tmodel.getChildAt(model.getChildAt(",
        "// Line_Reference 1325: \t\t\t\ttable, row + 1), col) : null;",
        "// Line_Reference 1326: ",
        "// Line_Reference 1327: \t\twhile (index < cells.length - 1)",
        "// Line_Reference 1329: \t\t\tvar next = cells[++index];",
        "// Line_Reference 1331: \t\t\tif (nextRowCell != null && nextRowCell == next &&",
        "// Line_Reference 1332: \t\t\t\t(lastspan == null || colspan == lastspan))",
        "// Line_Reference 1333: \t\t\t{",
        "// Line_Reference 1334: \t\t\t\tlastspan = colspan;",
        "// Line_Reference 1335: \t\t\t\tcolspan = 0;",
        "// Line_Reference 1336: \t\t\t\trowspan++;",
        "// Line_Reference 1337: \t\t\t\tparent = model.getParent(nextRowCell);",
        "// Line_Reference 1338: \t\t\t\tnextRowCell = (row + rowspan < table.getChildCount()) ?",
        "// Line_Reference 1339: \t\t\t\t\tmodel.getChildAt(model.getChildAt(",
        "// Line_Reference 1340: \t\t\t\t\t\ttable, row + rowspan), col) : null;",
        "// Line_Reference 1341: \t\t\t}",
        "// Line_Reference 1343: \t\t\tvar state = this.editor.graph.view.getState(next);",
        "// Line_Reference 1345: \t\t\tif (next == model.getChildAt(parent, col + colspan) && state != null &&",
        "// Line_Reference 1346: \t\t\t\tmxUtils.getValue(state.style, 'colspan', 1) == 1 &&",
        "// Line_Reference 1347: \t\t\t\tmxUtils.getValue(state.style, 'rowspan', 1) == 1)",
        "// Line_Reference 1348: \t\t\t{",
        "// Line_Reference 1349: \t\t\t\tcolspan++;",
        "// Line_Reference 1351: \t\t\telse",
        "// Line_Reference 1353: \t\t\t\tbreak;",
        "// Line_Reference 1356: ",
        "// Line_Reference 1357: \t\tif (index == rowspan * colspan - 1)",
        "// Line_Reference 1358: \t\t{",
        "// Line_Reference 1359: \t\t\tresult.mergeCell = cells[0];",
        "// Line_Reference 1360: \t\t\tresult.colspan = colspan;",
        "// Line_Reference 1361: \t\t\tresult.rowspan = rowspan;",
        "// Line_Reference 1362: \t\t}",
        "// Line_Reference 1753: \t\treturn new mxPoint(graph.snap(Math.round(x / graph.view.scale) -",
        "// Line_Reference 1754: \t\t\tgraph.view.translate.x - cell.geometry.width / 2),",
        "// Line_Reference 1755: \t\t\tgraph.snap(Math.round(y / graph.view.scale) -",
        "// Line_Reference 1756: \t\t\tgraph.view.translate.y - cell.geometry.height / 2));",
        "// Line_Reference 4620: \t\tvar name = elt.getAttribute('data-action');",
        "// Line_Reference 4621: ",
        "// Line_Reference 4622: \t\t// Make generic",
        "// Line_Reference 4623: \t\tif (name == 'statusFunction' && this.editor.statusFunction != null)",
        "// Line_Reference 4624: \t\t{",
        "// Line_Reference 4625: \t\t\tthis.editor.statusFunction();",
        "// Line_Reference 4626: \t\t}",
        "// Line_Reference 4627: \t\telse if (name != null)",
        "// Line_Reference 4629: \t\t\tvar action = this.actions.get(name);",
        "// Line_Reference 4631: \t\t\tif (action != null)",
        "// Line_Reference 4633: \t\t\t\taction.funct();",
        "// Line_Reference 4635: \t\t}",
        "// Line_Reference 4636: \t\telse",
        "// Line_Reference 4637: \t\t{",
        "// Line_Reference 4638: \t\t\tvar title = elt.getAttribute('data-title');",
        "// Line_Reference 4639: \t\t\tvar msg = elt.getAttribute('data-message');",
        "// Line_Reference 4640: ",
        "// Line_Reference 4641: \t\t\tif (title != null && msg != null)",
        "// Line_Reference 4643: \t\t\t\tthis.showError(title, msg);",
        "// Line_Reference 4647: \t\t\t\tvar link = elt.getAttribute('data-link');",
        "// Line_Reference 4649: \t\t\t\tif (link != null)",
        "// Line_Reference 4651: \t\t\t\t\tthis.editor.graph.openLink(link);",
        "// Line_Reference 4654: \t\t}",
        "// Line_Reference 4656: \t\tmxEvent.consume(evt);",
        "// Line_Reference 5576: \tif (cell != null)"
    ]
}
