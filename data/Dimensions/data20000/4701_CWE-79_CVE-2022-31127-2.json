{
    "cve_id": "CVE-2022-31127",
    "cve_description": "NextAuth.js is a complete open source authentication solution for Next.js applications. An attacker can pass a compromised input to the e-mail [signin endpoint](https://next-auth.js.org/getting-started/rest-api#post-apiauthsigninprovider) that contains some malicious HTML, tricking the e-mail server to send it to the user, so they can perform a phishing attack. Eg.: `balazs@email.com, <a href=\"http://attacker.com\">Before signing in, claim your money!</a>`. This was previously sent to `balazs@email.com`, and the content of the email containing a link to the attacker's site was rendered in the HTML. This has been remedied in the following releases, by simply not rendering that e-mail in the HTML, since it should be obvious to the receiver what e-mail they used: next-auth v3 users before version 3.29.8 are impacted. (We recommend upgrading to v4, as v3 is considered unmaintained. next-auth v4 users before version 4.9.0 are impacted. If for some reason you cannot upgrade, the workaround requires you to sanitize the `email` parameter that is passed to `sendVerificationRequest` and rendered in the HTML. If you haven't created a custom `sendVerificationRequest`, you only need to upgrade. Otherwise, make sure to either exclude `email` from the HTML body or efficiently sanitize it.",
    "cve_publish_date": "2022-07-06",
    "cwe_id": "CWE-79",
    "cwe_name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "cwe_description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
    "commit_message": "feat(providers): allow styling e-mail through `theme` option (#4841)\n\n* fix(core): move email handling\r\n\r\n* fix: don' use `replaceAll`\r\n\r\n* feat(providers): re-use `theme` for e-mail\r\n\r\n* docs: mention `theme` option for email\r\n\r\n* fix: don't render user e-mail in the email HTML body\r\n\r\n* docs: add missing comma\r\n\r\n* refactor: fix lint\r\n\r\n* refactor: fix lint",
    "type_of_change": "Modification",
    "filename_of_changes": "signin.ts",
    "code_language": "TypeScript",
    "number_of_lines_added_for_mitigation": "2",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 13:   const { url, adapter, provider, logger, callbackUrl } = options"
    ]
}
