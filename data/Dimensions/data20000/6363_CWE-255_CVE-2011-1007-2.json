{
    "cve_id": "CVE-2011-1007",
    "cve_description": "Best Practical Solutions RT before 3.8.9 does not perform certain redirect actions upon a login, which allows physically proximate attackers to obtain credentials by resubmitting the login form via the back button of a web browser on an unattended workstation after an RT logout.",
    "cve_publish_date": "2011-02-28",
    "cwe_id": "CWE-255",
    "cwe_name": "Credentials Management Errors",
    "cwe_description": "Weaknesses in this category are related to the management of credentials.",
    "commit_message": "Redirect to the desired page after logging in a user\n\nThis prevents back button attacks in the form of resubmitting form data\nafter the user has logged out of the browser (but not closed it).  See\nalso rt3 #15804.\n\nFor non-homepage hits, the browser now also gets redirected to\n/NoAuth/Login.html to get a login form.\n\nWe use the session to store the next page URL (referenced by a hash),\nsimilar to how action results work.",
    "type_of_change": "Modification",
    "filename_of_changes": "Login",
    "code_language": "Perl",
    "number_of_lines_added_for_mitigation": "11",
    "number_of_lines_deleted_vulnerable_to_cve": "64",
    "vulnerable_lines": [
        "// Line_Reference 48: <%INIT>",
        "// Line_Reference 49: if ($m->request_comp->path =~ '^/REST/\\d+\\.\\d+/') {",
        "// Line_Reference 50:     $r->content_type(\"text/plain\");",
        "// Line_Reference 51:     $m->error_format(\"text\");",
        "// Line_Reference 52:     $m->out(\"RT/$RT::VERSION 401 Credentials required\\n\");",
        "// Line_Reference 53:     $m->out(\"\\n$Error\\n\") if $Error;",
        "// Line_Reference 54:     $m->abort;",
        "// Line_Reference 55: }",
        "// Line_Reference 56: ",
        "// Line_Reference 57: my $req_uri;",
        "// Line_Reference 58: ",
        "// Line_Reference 59: if (UNIVERSAL::can($r, 'uri') and $r->uri =~ m{.*/(.*)}) {",
        "// Line_Reference 60:     $req_uri = $1;",
        "// Line_Reference 61: }",
        "// Line_Reference 62: ",
        "// Line_Reference 63: my $form_action = defined $goto             ? $goto",
        "// Line_Reference 64:                 : defined $req_uri          ? $req_uri",
        "// Line_Reference 65:                 :                             RT->Config->Get('WebPath')",
        "// Line_Reference 66:                 ;",
        "// Line_Reference 67: ",
        "// Line_Reference 68: # sanitize $form_action",
        "// Line_Reference 69: my $uri = URI->new($form_action);",
        "// Line_Reference 70: ",
        "// Line_Reference 71: # You get undef scheme with a relative uri like \"/Search/Build.html\"",
        "// Line_Reference 72: unless (!defined($uri->scheme) || $uri->scheme eq 'http' || $uri->scheme eq 'https') {",
        "// Line_Reference 73:     $form_action = RT->Config->Get('WebPath');",
        "// Line_Reference 74: }",
        "// Line_Reference 75: ",
        "// Line_Reference 76: # Make sure we're logging in to the same domain",
        "// Line_Reference 77: # You can get an undef authority with a relative uri like \"index.html\"",
        "// Line_Reference 78: my $uri_base_url = URI->new(RT->Config->Get('WebBaseURL'));",
        "// Line_Reference 79: unless (!defined($uri->authority) || $uri->authority eq $uri_base_url->authority) {",
        "// Line_Reference 80:     $form_action = RT->Config->Get('WebPath');",
        "// Line_Reference 81: }",
        "// Line_Reference 82: </%INIT>",
        "// Line_Reference 83: ",
        "// Line_Reference 92: % if ($Error) {",
        "// Line_Reference 93: <&| \"/Widgets/TitleBox\", title => loc('Error'), hideable => 0, class => 'error'  &>",
        "// Line_Reference 94: <% $Error %>",
        "// Line_Reference 95: </&>",
        "// Line_Reference 96: % }",
        "// Line_Reference 104: <form id=\"login\" name=\"login\" method=\"post\" action=\"<% $form_action %>\">",
        "// Line_Reference 123: % # From mason 1.0.1 forward, this doesn't work. in fact, it breaks things.",
        "// Line_Reference 124: % # But on Mason 1.15 it's fixed again, so we still use it.",
        "// Line_Reference 125: % # The code below iterates through everything in the passed in arguments",
        "// Line_Reference 126: % # Preserving all the old parameters",
        "// Line_Reference 127: % # This would be easier, except mason is 'smart' and calls multiple values",
        "// Line_Reference 128: % # arrays rather than multiple hash keys",
        "// Line_Reference 129: % my $key; my $val;",
        "// Line_Reference 130: % foreach $key (keys %ARGS) {",
        "// Line_Reference 131: %  if (($key ne 'user') and ($key ne 'pass')) {",
        "// Line_Reference 132: % \tif (ref($ARGS{$key}) =~ /ARRAY/) {",
        "// Line_Reference 133: % \t\tforeach $val (@{$ARGS{$key}}) {",
        "// Line_Reference 134: <input type=\"hidden\" class=\"hidden\" name=\"<%$key %>\" value=\"<% $val %>\" />",
        "// Line_Reference 135: % \t\t}",
        "// Line_Reference 136: % \t}",
        "// Line_Reference 137: %\telse {",
        "// Line_Reference 138: <input type=\"hidden\" class=\"hidden\" name=\"<% $key %>\" value=\"<% $ARGS{$key} %>\" />",
        "// Line_Reference 139: % \t}",
        "// Line_Reference 140: %  }",
        "// Line_Reference 141: % }",
        "// Line_Reference 151: $pass => undef",
        "// Line_Reference 152: $goto => undef",
        "// Line_Reference 153: $Error => undef"
    ]
}
