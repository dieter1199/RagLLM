{
    "cve_id": "CVE-2020-26207",
    "cve_description": "DatabaseSchemaViewer before version 2.7.4.3 is vulnerable to arbitrary code execution if a user is tricked into opening a specially crafted `.dbschema` file. The patch was released in v2.7.4.3. As a workaround, ensure `.dbschema` files from untrusted sources are not opened.",
    "cve_publish_date": "2020-11-04",
    "cwe_id": "CWE-502",
    "cwe_name": "Deserialization of Untrusted Data",
    "cwe_description": "The product deserializes untrusted data without sufficiently verifying that the resulting data will be valid.",
    "commit_message": "SqlGen - EscapeNames property to disable escaping",
    "type_of_change": "Modification",
    "filename_of_changes": "Form1.cs",
    "code_language": "C#",
    "number_of_lines_added_for_mitigation": "34",
    "number_of_lines_deleted_vulnerable_to_cve": "25",
    "vulnerable_lines": [
        "// Line_Reference 328:                 create.Click += (s, ea) => new SqlTasks(sqlType).BuildAllTableDdl(schema);",
        "// Line_Reference 331:                 deletes.Click += (s, ea) => new SqlTasks(sqlType).DeleteAllData(schema);",
        "// Line_Reference 346:                 create.Click += (s, ea) => new SqlTasks(sqlType).BuildPackage(pack);",
        "// Line_Reference 352:                 create.Click += (s, ea) => new SqlTasks(sqlType).BuildFunction(fun);",
        "// Line_Reference 360:                     create.Click += (s, ea) => new SqlTasks(sqlType).BuildProcedure(sproc);",
        "// Line_Reference 368:                 code.Click += (s, ea) => new SqlTasks(sqlType).BuildProcedureCode(_databaseSchema, sproc);",
        "// Line_Reference 375:                 add.Click += (s, ea) => new SqlTasks(sqlType).BuildAddColumn(column);",
        "// Line_Reference 378:                 alter.Click += (s, ea) => new SqlTasks(sqlType).BuildAlterColumn(column);",
        "// Line_Reference 385:                 add.Click += (s, ea) => new SqlTasks(sqlType).BuildAddConstraint(parentTable, constraint);",
        "// Line_Reference 388:                 drop.Click += (s, ea) => new SqlTasks(sqlType).BuildDropConstraint(parentTable, constraint);",
        "// Line_Reference 395:                 add.Click += (s, ea) => new SqlTasks(sqlType).BuildAddTrigger(parentTable, trigger);",
        "// Line_Reference 398:                 drop.Click += (s, ea) => new SqlTasks(sqlType).BuildDropTrigger(trigger);",
        "// Line_Reference 405:                 add.Click += (s, ea) => new SqlTasks(sqlType).BuildAddIndex(parentTable, index);",
        "// Line_Reference 408:                 drop.Click += (s, ea) => new SqlTasks(sqlType).BuildDropIndex(parentTable, index);",
        "// Line_Reference 425:                 create.Click += (s, ea) => new SqlTasks(sqlType).BuildView(view);",
        "// Line_Reference 433:             select.Click += (s, ea) => new SqlTasks(sqlType).BuildTableSelect(view);",
        "// Line_Reference 437:             selectPaged.Click += (s, ea) => new SqlTasks(sqlType).BuildTableSelectPaged(view);",
        "// Line_Reference 445:             create.Click += (s, ea) => new SqlTasks(sqlType).BuildTableDdl(table);",
        "// Line_Reference 449:             drop.Click += (s, ea) => new SqlTasks(sqlType).BuildDropTable(table);",
        "// Line_Reference 456:             select.Click += (s, ea) => new SqlTasks(sqlType).BuildTableSelect(table);",
        "// Line_Reference 460:             selectPaged.Click += (s, ea) => new SqlTasks(sqlType).BuildTableSelectPaged(table);",
        "// Line_Reference 464:             insert.Click += (s, ea) => new SqlTasks(sqlType).BuildTableInsert(table);",
        "// Line_Reference 468:             update.Click += (s, ea) => new SqlTasks(sqlType).BuildTableUpdate(table);",
        "// Line_Reference 475:             code.Click += (s, ea) => new SqlTasks(sqlType).BuildClass(table);",
        "// Line_Reference 479:             data.Click += (s, ea) => new SqlTasks(sqlType).GetData(table, ConnectionString.Text.Trim(), (string)DataProviders.SelectedItem);"
    ]
}
