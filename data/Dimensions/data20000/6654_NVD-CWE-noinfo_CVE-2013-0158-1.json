{
    "cve_id": "CVE-2013-0158",
    "cve_description": "Unspecified vulnerability in Jenkins before 1.498, Jenkins LTS before 1.480.2, and Jenkins Enterprise 1.447.x before 1.447.6.1 and 1.466.x before 1.466.12.1, when a slave is attached and anonymous read access is enabled, allows remote attackers to obtain the master cryptographic key via unknown vectors.",
    "cve_publish_date": "2013-02-24",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "[SECURITY-49] Deprecating Jenkins.getSecretKey()\n\nWe are replacing it by the ConfidentialStore class and the\nConfidentialKey class, which provides purpose-specific confidential\ninformation that are separated from each other.\n\nIn this way, not all eggs are in one basket, and in case of a\ncompromise, the impact will contained.\n\nAlso replaced several insecure use of digest(secret|messsage) or\ndigest(message|secret) by HMAC.",
    "type_of_change": "Modification",
    "filename_of_changes": "AnnotatedLargeText.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "15",
    "number_of_lines_deleted_vulnerable_to_cve": "18",
    "vulnerable_lines": [
        "// Line_Reference 119:                 Cipher sym = Secret.getCipher(\"AES\");",
        "// Line_Reference 120:                 sym.init(Cipher.DECRYPT_MODE, Jenkins.getInstance().getSecretKeyAsAES128());",
        "// Line_Reference 134:         } catch (GeneralSecurityException e) {",
        "// Line_Reference 135:             throw new IOException2(e);",
        "// Line_Reference 161:         try {",
        "// Line_Reference 162:             ByteArrayOutputStream baos = new ByteArrayOutputStream();",
        "// Line_Reference 163:             Cipher sym = Secret.getCipher(\"AES\");",
        "// Line_Reference 164:             sym.init(Cipher.ENCRYPT_MODE, Jenkins.getInstance().getSecretKeyAsAES128());",
        "// Line_Reference 165:             ObjectOutputStream oos = new ObjectOutputStream(new GZIPOutputStream(new CipherOutputStream(baos,sym)));",
        "// Line_Reference 166:             oos.writeLong(System.currentTimeMillis()); // send timestamp to prevent a replay attack",
        "// Line_Reference 167:             oos.writeObject(caw.getConsoleAnnotator());",
        "// Line_Reference 168:             oos.close();",
        "// Line_Reference 169:             StaplerResponse rsp = Stapler.getCurrentResponse();",
        "// Line_Reference 170:             if (rsp!=null)",
        "// Line_Reference 171:                 rsp.setHeader(\"X-ConsoleAnnotator\", new String(Base64.encode(baos.toByteArray())));",
        "// Line_Reference 172:         } catch (GeneralSecurityException e) {",
        "// Line_Reference 173:             throw new IOException2(e);",
        "// Line_Reference 174:         }"
    ]
}
