{
    "cve_id": "CVE-2012-0807",
    "cve_description": "Stack-based buffer overflow in the suhosin_encrypt_single_cookie function in the transparent cookie-encryption feature in the Suhosin extension before 0.9.33 for PHP, when suhosin.cookie.encrypt and suhosin.multiheader are enabled, might allow remote attackers to execute arbitrary code via a long string that is used in a Set-Cookie HTTP header.",
    "cve_publish_date": "2012-01-27",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "Fixed stack based buffer overflow in transparent cookie encryption (see separate advisory)",
    "type_of_change": "Modification",
    "filename_of_changes": "header.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "20",
    "number_of_lines_deleted_vulnerable_to_cve": "55",
    "vulnerable_lines": [
        "// Line_Reference 43: \tchar buffer[4096];",
        "// Line_Reference 44:     char buffer2[4096];",
        "// Line_Reference 45: \tchar *buf = buffer, *buf2 = buffer2, *d, *d_url;",
        "// Line_Reference 46:     int l;",
        "// Line_Reference 47: ",
        "// Line_Reference 48: \tif (name_len > sizeof(buffer)-2) {",
        "// Line_Reference 49: \t\tbuf = estrndup(name, name_len);",
        "// Line_Reference 50: \t} else {",
        "// Line_Reference 51: \t\tmemcpy(buf, name, name_len);",
        "// Line_Reference 52: \t\tbuf[name_len] = 0;",
        "// Line_Reference 53: \t}",
        "// Line_Reference 56:     normalize_varname(buf);",
        "// Line_Reference 57:     name_len = strlen(buf);",
        "// Line_Reference 62: \t\t\tif (buf != buffer) {",
        "// Line_Reference 63: \t\t\t\tefree(buf);",
        "// Line_Reference 64: \t\t\t}",
        "// Line_Reference 73: \tif (strlen(value) <= sizeof(buffer2)-2) {",
        "// Line_Reference 74: \t\tmemcpy(buf2, value, value_len);",
        "// Line_Reference 75: \t\tbuf2[value_len] = 0;",
        "// Line_Reference 76: \t} else {",
        "// Line_Reference 77: \t\tbuf2 = estrndup(value, value_len);",
        "// Line_Reference 78: \t}",
        "// Line_Reference 85:     if (buf != buffer) {",
        "// Line_Reference 86: \t\tefree(buf);",
        "// Line_Reference 87: \t}",
        "// Line_Reference 88:     if (buf2 != buffer2) {",
        "// Line_Reference 89: \t\tefree(buf2);",
        "// Line_Reference 90: \t}",
        "// Line_Reference 96: \tchar buffer[4096];",
        "// Line_Reference 97:     char buffer2[4096];",
        "// Line_Reference 99: \tchar *buf = buffer, *buf2 = buffer2, *d, *d_url;",
        "// Line_Reference 102: \tif (name_len > sizeof(buffer)-2) {",
        "// Line_Reference 103: \t\tbuf = estrndup(name, name_len);",
        "// Line_Reference 104: \t} else {",
        "// Line_Reference 105: \t\tmemcpy(buf, name, name_len);",
        "// Line_Reference 106: \t\tbuf[name_len] = 0;",
        "// Line_Reference 107: \t}",
        "// Line_Reference 108: ",
        "// Line_Reference 110:     normalize_varname(buf);",
        "// Line_Reference 111:     name_len = strlen(buf);",
        "// Line_Reference 116: \t\t\tif (buf != buffer) {",
        "// Line_Reference 117: \t\t\t\tefree(buf);",
        "// Line_Reference 118: \t\t\t}",
        "// Line_Reference 133: \tif (strlen(value) <= sizeof(buffer2)-2) {",
        "// Line_Reference 134: \t\tmemcpy(buf2, value, value_len);",
        "// Line_Reference 135: \t\tbuf2[value_len] = 0;",
        "// Line_Reference 136: \t} else {",
        "// Line_Reference 137: \t\tbuf2 = estrndup(value, value_len);",
        "// Line_Reference 138: \t}",
        "// Line_Reference 155: \tif (buf != buffer) {",
        "// Line_Reference 156: \t\tefree(buf);",
        "// Line_Reference 157: \t}",
        "// Line_Reference 158: \tif (buf2 != buffer2) {",
        "// Line_Reference 159: \t\tefree(buf2);",
        "// Line_Reference 160: \t}"
    ]
}
