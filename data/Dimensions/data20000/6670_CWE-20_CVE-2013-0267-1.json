{
    "cve_id": "CVE-2013-0267",
    "cve_description": "The Privileges portion of the web GUI and the XMLRPC API in Apache VCL 2.3.x before 2.3.2, 2.2.x before 2.2.2 and 2.1 allow remote authenticated users with nodeAdmin, manageGroup, resourceGrant, or userGrant permissions to gain privileges, cause a denial of service, or conduct cross-site scripting (XSS) attacks by leveraging improper data validation.",
    "cve_publish_date": "2018-02-21",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "xmlrpcWrappers.php:\n-added option to supply name of reservation to XMLRPCdeployServer\n-XMLRPCremoveUserGroup and XMLRPCdeleteUserGroup did the same thing; made XMLRPCdeleteUserGroup just call XMLRPCremoveUserGroup - kept both so that scripts would not have to change because one was dropped\n-did some updates to headers to provide better documentation generation\n-changed some whitespace formatting\n-modified XMLRPCgetRequestIds - added OS, isserver, state, and if it is a server, servername to returned data-modified XMLRPCgetUserGroupAttributes - added overlapResCount to returned data; modified error return code to not be duplicated with an different error\n-modified XMLRPCremoveUserGroup - added ability to delete federated groups if user has access; added check for group being in use before deleting it and return error if it is in use\n-modified XMLRPCeditUserGroup - added ability to modify federated groups if user has access; do not attempt to update name and affiliation if they are not changed (resulted in an duplicate group name error)\n-modified XMLRPCgetUserGroupMembers - added ability to modify federated groups if user has access\n\nprivileges.php:\n-additional parameter checking\n-modified viewNodes - added serverProfileAdmin to $privs array used to determine which resource groups can be added at the node\n-modified AJsubmitAddChildNode - moved updateUserOrGroupPrivs to inside if conditional (no need to call it if no changes)\n-modified getNodeCascadePrivileges - located problem where blocking cascaded privileges does not continue to child nodes; added fix and commented it out until can properly prepare users for change\n\nutils.php:\n-modified getResourceGroups - optional argument of $id to limit returned data to just a specified resource group\n-modified getUserGroupID - added optional argument of $noadd that causes the function to return NULL instead of adding the group if it does not already exist\n-modified getTypes - removed conditional that checks for 'block' and 'cascade' with resource groups - type here is computer, image, etc.\n\ngroups.php:\n-modified addGroup - moved conditional for editgroupid to inside 'user' section",
    "type_of_change": "Modification",
    "filename_of_changes": "groups.php",
    "code_language": "Perl",
    "number_of_lines_added_for_mitigation": "3",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 1093: \tif($data['editgroupid'] == 0 || $data['editgroupid'] == '')",
        "// Line_Reference 1094: \t\t$data['editgroupid'] = 'NULL';"
    ]
}
