{
    "cve_id": "CVE-2024-29041",
    "cve_description": "Express.js minimalist web framework for node. Versions of Express.js prior to 4.19.0 and all pre-release alpha and beta versions of 5.0 are affected by an open redirect vulnerability using malformed URLs. When a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list. The main method impacted is `res.location()` but this is also called from within `res.redirect()`. The vulnerability is fixed in 4.19.2 and 5.0.0-beta.3.",
    "cve_publish_date": "2024-03-25",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Improved fix for open redirect allow list bypass\n\nCo-authored-by: Jon Church <me@jonchurch.com>\nCo-authored-by: Blake Embrey <hello@blakeembrey.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "response.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "11",
    "number_of_lines_deleted_vulnerable_to_cve": "20",
    "vulnerable_lines": [
        "// Line_Reference 37: var urlParse = require('url').parse;",
        "// Line_Reference 908:   var loc = String(url);",
        "// Line_Reference 915:   var lowerLoc = loc.toLowerCase();",
        "// Line_Reference 916:   var encodedUrl = encodeUrl(loc);",
        "// Line_Reference 917:   if (lowerLoc.indexOf('https://') === 0 || lowerLoc.indexOf('http://') === 0) {",
        "// Line_Reference 918:     try {",
        "// Line_Reference 919:       var parsedUrl = urlParse(loc);",
        "// Line_Reference 920:       var parsedEncodedUrl = urlParse(encodedUrl);",
        "// Line_Reference 921:       // Because this can encode the host, check that we did not change the host",
        "// Line_Reference 922:       if (parsedUrl.host !== parsedEncodedUrl.host) {",
        "// Line_Reference 923:         // If the host changes after encodeUrl, return the original url",
        "// Line_Reference 924:         return this.set('Location', loc);",
        "// Line_Reference 925:       }",
        "// Line_Reference 926:     } catch (e) {",
        "// Line_Reference 927:       // If parse fails, return the original url",
        "// Line_Reference 928:       return this.set('Location', loc);",
        "// Line_Reference 929:     }",
        "// Line_Reference 930:   }",
        "// Line_Reference 932:   // set location",
        "// Line_Reference 933:   return this.set('Location', encodedUrl);"
    ]
}
