{
    "cve_id": "CVE-2021-46463",
    "cve_description": "njs through 0.7.1, used in NGINX, was discovered to contain a control flow hijack caused by a Type Confusion vulnerability in njs_promise_perform_then().",
    "cve_publish_date": "2022-02-14",
    "cwe_id": "CWE-843",
    "cwe_name": "Access of Resource Using Incompatible Type ('Type Confusion')",
    "cwe_description": "The product allocates or initializes a resource such as a pointer, object, or variable using one type, but it later accesses that resource using a type that is incompatible with the original type.",
    "commit_message": "Fixed type confusion bug while resolving promises.\n\nPreviously, the internal function njs_promise_perform_then() which\nimplements PerformPromiseThen() expects its first argument to always be\na promise instance.  This assertion might be invalid because the\nfunctions corresponding to Promise.prototype.then() and\nPromise.resolve() incorrectly verified their arguments.\n\nSpecifically, the functions recognized their first argument as promise\nif it was an object which was an Promise or had Promise object in its\nprototype chain.  The later condition is not correct because internal\nslots are not inherited according to the spec.\n\nThis closes #447 issue in Github.",
    "type_of_change": "Modification",
    "filename_of_changes": "njs_promise.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "11",
    "number_of_lines_deleted_vulnerable_to_cve": "22",
    "vulnerable_lines": [
        "// Line_Reference 774:     njs_object_t              *object;",
        "// Line_Reference 779:     if (njs_is_object(x)) {",
        "// Line_Reference 780:         object = njs_object_proto_lookup(njs_object(x), NJS_PROMISE,",
        "// Line_Reference 781:                                          njs_object_t);",
        "// Line_Reference 782: ",
        "// Line_Reference 783:         if (object != NULL) {",
        "// Line_Reference 784:             ret = njs_value_property(vm, x, njs_value_arg(&string_constructor),",
        "// Line_Reference 785:                                      &value);",
        "// Line_Reference 786:             if (njs_slow_path(ret == NJS_ERROR)) {",
        "// Line_Reference 787:                 return NULL;",
        "// Line_Reference 788:             }",
        "// Line_Reference 790:             if (njs_values_same(&value, constructor)) {",
        "// Line_Reference 791:                 return njs_promise(x);",
        "// Line_Reference 792:             }",
        "// Line_Reference 878:     njs_object_t              *object;",
        "// Line_Reference 884:     if (njs_slow_path(!njs_is_object(promise))) {",
        "// Line_Reference 885:         goto failed;",
        "// Line_Reference 886:     }",
        "// Line_Reference 887: ",
        "// Line_Reference 888:     object = njs_object_proto_lookup(njs_object(promise), NJS_PROMISE,",
        "// Line_Reference 889:                                      njs_object_t);",
        "// Line_Reference 890:     if (njs_slow_path(object == NULL)) {"
    ]
}
