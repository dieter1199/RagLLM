{
    "cve_id": "CVE-2017-13006",
    "cve_description": "The L2TP parser in tcpdump before 4.9.2 has a buffer over-read in print-l2tp.c, several functions.",
    "cve_publish_date": "2017-09-14",
    "cwe_id": "CWE-125",
    "cwe_name": "Out-of-bounds Read",
    "cwe_description": "The product reads data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "CVE-2017-13006/L2TP: Check whether an AVP's content exceeds the AVP length.\n\nIt's not good enough to check whether all the data specified by the AVP\nlength was captured - you also have to check whether that length is\nlarge enough for all the required data in the AVP.\n\nThis fixes a buffer over-read discovered by Yannick Formaggio.\n\nAdd a test using the capture file supplied by the reporter(s).",
    "type_of_change": "Modification",
    "filename_of_changes": "print-l2tp.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "177",
    "number_of_lines_deleted_vulnerable_to_cve": "46",
    "vulnerable_lines": [
        "// Line_Reference 300: l2tp_msgtype_print(netdissect_options *ndo, const u_char *dat)",
        "// Line_Reference 313: \tND_PRINT((ndo, \"%u\", EXTRACT_16BITS(ptr))); ptr++;\t/* Result Code */",
        "// Line_Reference 314: \tif (length > 2) {\t\t\t\t/* Error Code (opt) */",
        "// Line_Reference 315: \t        ND_PRINT((ndo, \"/%u\", EXTRACT_16BITS(ptr))); ptr++;",
        "// Line_Reference 317: \tif (length > 4) {\t\t\t\t/* Error Message (opt) */",
        "// Line_Reference 318: \t\tND_PRINT((ndo, \" \"));",
        "// Line_Reference 319: \t\tprint_string(ndo, (const u_char *)ptr, length - 4);",
        "// Line_Reference 324: l2tp_proto_ver_print(netdissect_options *ndo, const uint16_t *dat)",
        "// Line_Reference 331: l2tp_framing_cap_print(netdissect_options *ndo, const u_char *dat)",
        "// Line_Reference 344: l2tp_bearer_cap_print(netdissect_options *ndo, const u_char *dat)",
        "// Line_Reference 361: \tif (length > 3) {",
        "// Line_Reference 363: \t\tprint_string(ndo, dat+3, length-3);",
        "// Line_Reference 368: l2tp_bearer_type_print(netdissect_options *ndo, const u_char *dat)",
        "// Line_Reference 381: l2tp_framing_type_print(netdissect_options *ndo, const u_char *dat)",
        "// Line_Reference 400: l2tp_proxy_auth_type_print(netdissect_options *ndo, const u_char *dat)",
        "// Line_Reference 409: l2tp_proxy_auth_id_print(netdissect_options *ndo, const u_char *dat)",
        "// Line_Reference 417: l2tp_call_errors_print(netdissect_options *ndo, const u_char *dat)",
        "// Line_Reference 424: \tval_h = EXTRACT_16BITS(ptr); ptr++;",
        "// Line_Reference 425: \tval_l = EXTRACT_16BITS(ptr); ptr++;",
        "// Line_Reference 428: \tval_h = EXTRACT_16BITS(ptr); ptr++;",
        "// Line_Reference 429: \tval_l = EXTRACT_16BITS(ptr); ptr++;",
        "// Line_Reference 432: \tval_h = EXTRACT_16BITS(ptr); ptr++;",
        "// Line_Reference 433: \tval_l = EXTRACT_16BITS(ptr); ptr++;",
        "// Line_Reference 436: \tval_h = EXTRACT_16BITS(ptr); ptr++;",
        "// Line_Reference 437: \tval_l = EXTRACT_16BITS(ptr); ptr++;",
        "// Line_Reference 440: \tval_h = EXTRACT_16BITS(ptr); ptr++;",
        "// Line_Reference 441: \tval_l = EXTRACT_16BITS(ptr); ptr++;",
        "// Line_Reference 450: l2tp_accm_print(netdissect_options *ndo, const u_char *dat)",
        "// Line_Reference 457: \tval_h = EXTRACT_16BITS(ptr); ptr++;",
        "// Line_Reference 458: \tval_l = EXTRACT_16BITS(ptr); ptr++;",
        "// Line_Reference 471: \tND_PRINT((ndo, \"%04x, \", EXTRACT_16BITS(ptr))); ptr++;\t/* Disconnect Code */",
        "// Line_Reference 472: \tND_PRINT((ndo, \"%04x \",  EXTRACT_16BITS(ptr))); ptr++;\t/* Control Protocol Number */",
        "// Line_Reference 474: \t\t\t     \"Direction-#%u\", *((const u_char *)ptr++))));",
        "// Line_Reference 476: \tif (length > 5) {",
        "// Line_Reference 478: \t\tprint_string(ndo, (const u_char *)ptr, length-5);",
        "// Line_Reference 511: \t/* After this point, no need to worry about truncation */",
        "// Line_Reference 540: \t\t\t\tl2tp_msgtype_print(ndo, (const u_char *)ptr);",
        "// Line_Reference 546: \t\t\t\tl2tp_proto_ver_print(ndo, ptr);",
        "// Line_Reference 549: \t\t\t\tl2tp_framing_cap_print(ndo, (const u_char *)ptr);",
        "// Line_Reference 552: \t\t\t\tl2tp_bearer_cap_print(ndo, (const u_char *)ptr);",
        "// Line_Reference 596: \t\t\t\tl2tp_bearer_type_print(ndo, (const u_char *)ptr);",
        "// Line_Reference 599: \t\t\t\tl2tp_framing_type_print(ndo, (const u_char *)ptr);",
        "// Line_Reference 605: \t\t\t\tl2tp_proxy_auth_type_print(ndo, (const u_char *)ptr);",
        "// Line_Reference 608: \t\t\t\tl2tp_proxy_auth_id_print(ndo, (const u_char *)ptr);",
        "// Line_Reference 611: \t\t\t\tl2tp_call_errors_print(ndo, (const u_char *)ptr);",
        "// Line_Reference 614: \t\t\t\tl2tp_accm_print(ndo, (const u_char *)ptr);"
    ]
}
