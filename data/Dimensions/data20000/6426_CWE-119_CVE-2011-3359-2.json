{
    "cve_id": "CVE-2011-3359",
    "cve_description": "The dma_rx function in drivers/net/wireless/b43/dma.c in the Linux kernel before 2.6.39 does not properly allocate receive buffers, which allows remote attackers to cause a denial of service (system crash) via a crafted frame.",
    "cve_publish_date": "2012-05-24",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "b43: allocate receive buffers big enough for max frame len + offset\n\nOtherwise, skb_put inside of dma_rx can fail...\n\n\thttps://bugzilla.kernel.org/show_bug.cgi?id=32042\n\nSigned-off-by: John W. Linville <linville@tuxdriver.com>\nAcked-by: Larry Finger <Larry.Finger@lwfinger.net>\nCc: stable@kernel.org",
    "type_of_change": "Modification",
    "filename_of_changes": "dma.h",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 166: #define B43_DMA0_RX_BUFFERSIZE\t\tIEEE80211_MAX_FRAME_LEN"
    ]
}
