{
    "cve_id": "CVE-2017-16806",
    "cve_description": "The Process function in RemoteTaskServer/WebServer/HttpServer.cs in Ulterius before 1.9.5.0 allows HTTP server directory traversal.",
    "cve_publish_date": "2017-11-13",
    "cwe_id": "CWE-22",
    "cwe_name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
    "cwe_description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
    "commit_message": "Stability patch, fixes broken GPU detection code, updates the websocket framework to be real-time, removes crappy agent spawning system, removes IPC, fixes HTTP server traversal,",
    "type_of_change": "Modification",
    "filename_of_changes": "ScreenSharePacketHandler.cs",
    "code_language": "C#",
    "number_of_lines_added_for_mitigation": "30",
    "number_of_lines_deleted_vulnerable_to_cve": "187",
    "vulnerable_lines": [
        "// Line_Reference 13: using AgentInterface.Api.ScreenShare;",
        "// Line_Reference 14: using AgentInterface.Api.ScreenShare.DesktopDuplication;",
        "// Line_Reference 15: using AgentInterface.Api.Win32;",
        "// Line_Reference 128:                 var stream = RunningAsService",
        "// Line_Reference 129:                     ? new Thread(GetScreenAgentFrame) { IsBackground = true }",
        "// Line_Reference 130:                     : new Thread(GetScreenFrame) { IsBackground = true };",
        "// Line_Reference 151: ",
        "// Line_Reference 152:         private void GetScreenAgentFrame()",
        "// Line_Reference 153:         {",
        "// Line_Reference 154:             try",
        "// Line_Reference 155:             {",
        "// Line_Reference 156:                 while (_client != null && _client.IsConnected && _authClient != null &&",
        "// Line_Reference 157:                        !_authClient.ShutDownScreenShare)",
        "// Line_Reference 158:                 {",
        "// Line_Reference 159:                     try",
        "// Line_Reference 160:                     {",
        "// Line_Reference 161:                         var image = AgentClient.GetCleanFrame();",
        "// Line_Reference 162:                         if (image != null)",
        "// Line_Reference 163:                         {",
        "// Line_Reference 164:                             if (image.UsingGpu)",
        "// Line_Reference 165:                             {",
        "// Line_Reference 166:                                 SendGpuFrame(image.FinishedRegions);",
        "// Line_Reference 167:                             }",
        "// Line_Reference 168:                             else",
        "// Line_Reference 169:                             {",
        "// Line_Reference 170:                                 SendPolledFrame(image.ScreenImage, image.Bounds);",
        "// Line_Reference 171:                             }",
        "// Line_Reference 172:                         }",
        "// Line_Reference 173:                     }",
        "// Line_Reference 174:                     catch (Exception e)",
        "// Line_Reference 175:                     {",
        "// Line_Reference 176:                         //  Console.WriteLine(e.Message + \" \" + e.StackTrace);",
        "// Line_Reference 177:                     }",
        "// Line_Reference 178:                 }",
        "// Line_Reference 179:                 Console.WriteLine(\"Screen Share Died\");",
        "// Line_Reference 180:             }",
        "// Line_Reference 181:             catch (Exception)",
        "// Line_Reference 182:             {",
        "// Line_Reference 183:             }",
        "// Line_Reference 184:         }",
        "// Line_Reference 185: ",
        "// Line_Reference 279:                     if (RunningAsService)",
        "// Line_Reference 280:                     {",
        "// Line_Reference 281:                         HandleAgentFullFrame();",
        "// Line_Reference 282:                     }",
        "// Line_Reference 283:                     else",
        "// Line_Reference 284:                     {",
        "// Line_Reference 285:                         HandleFullFrame();",
        "// Line_Reference 286:                     }",
        "// Line_Reference 319:             if (!ScreenShareService.Streams.ContainsKey(_authClient)) return;",
        "// Line_Reference 320:             if (RunningAsService)",
        "// Line_Reference 321:             {",
        "// Line_Reference 322:                 AgentClient.HandleRightMouseUp();",
        "// Line_Reference 323:             }",
        "// Line_Reference 324:             else",
        "// Line_Reference 325:             {",
        "// Line_Reference 326:                 new InputSimulator().Mouse.RightButtonUp();",
        "// Line_Reference 327:             }",
        "// Line_Reference 332:             if (!ScreenShareService.Streams.ContainsKey(_authClient)) return;",
        "// Line_Reference 333:             if (RunningAsService)",
        "// Line_Reference 334:             {",
        "// Line_Reference 335:                 AgentClient.HandleRightMouseDown();",
        "// Line_Reference 336:             }",
        "// Line_Reference 337:             else",
        "// Line_Reference 338:             {",
        "// Line_Reference 339:                 new InputSimulator().Mouse.RightButtonDown();",
        "// Line_Reference 340:             }",
        "// Line_Reference 341:         }",
        "// Line_Reference 342: ",
        "// Line_Reference 343:         private void HandleAgentFullFrame()",
        "// Line_Reference 344:         {",
        "// Line_Reference 345:             try",
        "// Line_Reference 346:             {",
        "// Line_Reference 347:                 var fullFrameData = AgentClient.GetFullFrame();",
        "// Line_Reference 348:                 if (fullFrameData?.ScreenImage == null) throw new InvalidOperationException(\"Frame was null\");",
        "// Line_Reference 349:                 var bounds = fullFrameData.Bounds;",
        "// Line_Reference 350:                 var image = ScreenData.ImageToByteArray(fullFrameData.ScreenImage);",
        "// Line_Reference 351:                 var frameData = new",
        "// Line_Reference 352:                 {",
        "// Line_Reference 353:                     screenBounds = new",
        "// Line_Reference 354:                     {",
        "// Line_Reference 355:                         top = bounds.Top,",
        "// Line_Reference 356:                         bottom = bounds.Bottom,",
        "// Line_Reference 357:                         left = bounds.Left,",
        "// Line_Reference 358:                         right = bounds.Right,",
        "// Line_Reference 359:                         height = bounds.Height,",
        "// Line_Reference 360:                         width = bounds.Width,",
        "// Line_Reference 361:                         x = bounds.X,",
        "// Line_Reference 362:                         y = bounds.Y,",
        "// Line_Reference 363:                         empty = bounds.IsEmpty,",
        "// Line_Reference 364:                         location = bounds.Location,",
        "// Line_Reference 365:                         size = bounds.Size",
        "// Line_Reference 366:                     },",
        "// Line_Reference 367:                     frameData = image.Select(b => (int)b).ToArray()",
        "// Line_Reference 368:                 };",
        "// Line_Reference 369:                 _builder.WriteMessage(frameData);",
        "// Line_Reference 370:             }",
        "// Line_Reference 371:             catch (Exception ex)",
        "// Line_Reference 372:             {",
        "// Line_Reference 373:                 var data = new",
        "// Line_Reference 374:                 {",
        "// Line_Reference 375:                     frameFailed = true,",
        "// Line_Reference 376:                     message = ex.Message",
        "// Line_Reference 377:                 };",
        "// Line_Reference 378:                 Console.WriteLine(ex.Message + \"Fuck\");",
        "// Line_Reference 379:                 _builder.WriteMessage(data);",
        "// Line_Reference 380:             }",
        "// Line_Reference 430:             if (!ScreenShareService.Streams.ContainsKey(_authClient)) return;",
        "// Line_Reference 439:             if (RunningAsService)",
        "// Line_Reference 440:             {",
        "// Line_Reference 441:                 AgentClient.HandleKeyUp(codes);",
        "// Line_Reference 442:             }",
        "// Line_Reference 443:             else",
        "// Line_Reference 445:                 foreach (var code in codes)",
        "// Line_Reference 446:                 {",
        "// Line_Reference 447:                     var virtualKey = (VirtualKeyCode)code;",
        "// Line_Reference 448:                     new InputSimulator().Keyboard.KeyUp(virtualKey);",
        "// Line_Reference 449:                 }",
        "// Line_Reference 461:             if (!ScreenShareService.Streams.ContainsKey(_authClient)) return;",
        "// Line_Reference 469:             if (RunningAsService)",
        "// Line_Reference 471:                 AgentClient.HandleKeyDown(codes);",
        "// Line_Reference 472:             }",
        "// Line_Reference 473:             else",
        "// Line_Reference 474:             {",
        "// Line_Reference 475:                 foreach (var code in codes)",
        "// Line_Reference 476:                 {",
        "// Line_Reference 477:                     var virtualKey = (VirtualKeyCode)code;",
        "// Line_Reference 478:                     new InputSimulator().Keyboard.KeyDown(virtualKey);",
        "// Line_Reference 479:                 }",
        "// Line_Reference 485:             if (!ScreenShareService.Streams.ContainsKey(_authClient)) return;",
        "// Line_Reference 490:             if (RunningAsService)",
        "// Line_Reference 491:             {",
        "// Line_Reference 492:                 AgentClient.ScrollMouse(positive);",
        "// Line_Reference 493:             }",
        "// Line_Reference 494:             else",
        "// Line_Reference 495:             {",
        "// Line_Reference 496:                 new InputSimulator().Mouse.VerticalScroll(direction);",
        "// Line_Reference 497:             }",
        "// Line_Reference 513:             if (!ScreenShareService.Streams.ContainsKey(_authClient)) return;",
        "// Line_Reference 519: ",
        "// Line_Reference 520:                 if (RunningAsService)",
        "// Line_Reference 521:                 {",
        "// Line_Reference 522: ",
        "// Line_Reference 523:                     AgentClient.MoveMouse(x, y);",
        "// Line_Reference 524:                 }",
        "// Line_Reference 525:                 else",
        "// Line_Reference 526:                 {",
        "// Line_Reference 527:                     var bounds = Display.GetWindowRectangle();",
        "// Line_Reference 528:                     x = checked((int)Math.Round(x * (65535 / (double)bounds.Width)));",
        "// Line_Reference 529:                     y = checked((int)Math.Round(y * (65535 / (double)bounds.Height)));",
        "// Line_Reference 530:                     new InputSimulator().Mouse.MoveMouseTo(x, y);",
        "// Line_Reference 531:                 }",
        "// Line_Reference 536:                 Console.WriteLine(\"Error moving mouse\");",
        "// Line_Reference 542:             if (ScreenShareService.Streams.ContainsKey(_authClient))",
        "// Line_Reference 543:             {",
        "// Line_Reference 544:                 if (RunningAsService)",
        "// Line_Reference 545:                 {",
        "// Line_Reference 546:                     AgentClient.HandleRightClick();",
        "// Line_Reference 547:                 }",
        "// Line_Reference 548:                 else",
        "// Line_Reference 549:                 {",
        "// Line_Reference 550:                     new InputSimulator().Mouse.RightButtonClick();",
        "// Line_Reference 551:                 }",
        "// Line_Reference 552:             }",
        "// Line_Reference 557:             if (ScreenShareService.Streams.ContainsKey(_authClient))",
        "// Line_Reference 558:             {",
        "// Line_Reference 559:                 if (RunningAsService)",
        "// Line_Reference 560:                 {",
        "// Line_Reference 561:                     AgentClient.HandleLeftMouseUp();",
        "// Line_Reference 562:                 }",
        "// Line_Reference 563:                 else",
        "// Line_Reference 564:                 {",
        "// Line_Reference 565:                     new InputSimulator().Mouse.LeftButtonUp();",
        "// Line_Reference 566:                 }",
        "// Line_Reference 567:             }",
        "// Line_Reference 572:             if (ScreenShareService.Streams.ContainsKey(_authClient))",
        "// Line_Reference 573:             {",
        "// Line_Reference 574:                 if (RunningAsService)",
        "// Line_Reference 575:                 {",
        "// Line_Reference 576:                     AgentClient.HandleLeftMouseDown();",
        "// Line_Reference 577:                 }",
        "// Line_Reference 578:                 else",
        "// Line_Reference 579: ",
        "// Line_Reference 580:                 {",
        "// Line_Reference 581:                     new InputSimulator().Mouse.LeftButtonDown();",
        "// Line_Reference 582:                 }",
        "// Line_Reference 583:             }"
    ]
}
