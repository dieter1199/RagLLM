{
    "cve_id": "CVE-2024-5549",
    "cve_description": "A CORS misconfiguration in the stitionai/devika repository allows attackers to steal sensitive information such as logs, browser sessions, and settings containing private API keys from other services. This vulnerability also enables attackers to perform actions on behalf of the user, such as deleting projects or sending messages. The issue arises from the lack of proper origin validation, allowing unauthorized cross-origin requests to be executed. The vulnerability is present in all versions of the repository, as no fixed version has been specified.",
    "cve_publish_date": "2024-07-09",
    "cwe_id": "CWE-346",
    "cwe_name": "Origin Validation Error",
    "cwe_description": "The product does not properly verify that the source of data or communication is valid.",
    "commit_message": "Fix: Sanitizing HTML inputs and Cors misconfiguration",
    "type_of_change": "Modification",
    "filename_of_changes": "state.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "25",
    "vulnerable_lines": [
        "// Line_Reference 177: ",
        "// Line_Reference 178:     def get_project_files(self, project_name: str):",
        "// Line_Reference 179:         if not project_name:",
        "// Line_Reference 180:             return []",
        "// Line_Reference 181:         project_directory = \"-\".join(project_name.split(\" \"))",
        "// Line_Reference 182:         directory = os.path.join(os.getcwd(), 'data', 'projects', project_directory)",
        "// Line_Reference 183:         if(not os.path.exists(directory)):",
        "// Line_Reference 184:             return []",
        "// Line_Reference 185:         files = []",
        "// Line_Reference 186:         for root, _, filenames in os.walk(directory):",
        "// Line_Reference 187:             for filename in filenames:",
        "// Line_Reference 188:                 file_relative_path = os.path.relpath(root, directory)",
        "// Line_Reference 189:                 if file_relative_path == '.': file_relative_path = ''",
        "// Line_Reference 190:                 file_path = os.path.join(file_relative_path, filename)",
        "// Line_Reference 191:                 print(\"file_path\",file_path)",
        "// Line_Reference 192:                 try:",
        "// Line_Reference 193:                     with open(os.path.join(root, filename), 'r') as file:",
        "// Line_Reference 194:                         print(\"File:\", filename)",
        "// Line_Reference 195:                         files.append({",
        "// Line_Reference 196:                             \"file\": file_path,",
        "// Line_Reference 197:                             \"code\": file.read()",
        "// Line_Reference 198:                         })",
        "// Line_Reference 199:                 except Exception as e:",
        "// Line_Reference 200:                     print(f\"Error reading file {filename}: {e}\")",
        "// Line_Reference 201:         return files"
    ]
}
