{
    "cve_id": "CVE-2013-2220",
    "cve_description": "Buffer overflow in the radius_get_vendor_attr function in the Radius extension before 1.2.7 for PHP allows remote attackers to cause a denial of service (crash) and possibly execute arbitrary code via a large Vendor Specific Attributes (VSA) length value.",
    "cve_publish_date": "2013-07-31",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "Fix a security issue in radius_get_vendor_attr().\n\nThe underlying rad_get_vendor_attr() function assumed that it would always be\ngiven valid VSA data. Indeed, the buffer length wasn't even passed in; the\nassumption was that the length field within the VSA structure would be valid.\n\nThis could result in denial of service by providing a length that would be\nbeyond the memory limit, or potential arbitrary memory access by providing a\nlength greater than the actual data given.\n\nrad_get_vendor_attr() has been changed to require the raw data length be\nprovided, and this is then used to check that the VSA is valid.\n\nConflicts:\n\tradlib_vs.h",
    "type_of_change": "Modification",
    "filename_of_changes": "radius.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "7",
    "number_of_lines_deleted_vulnerable_to_cve": "7",
    "vulnerable_lines": [
        "// Line_Reference 544: \tint res;",
        "// Line_Reference 545: \tconst void *data;",
        "// Line_Reference 549: \tif (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &data, &len) == FAILURE) {",
        "// Line_Reference 553: \tres = rad_get_vendor_attr(&vendor, &data, (size_t *) &len);",
        "// Line_Reference 554: \tif (res == -1) {",
        "// Line_Reference 559: \t\tadd_assoc_long(return_value, \"attr\", res);",
        "// Line_Reference 561: \t\tadd_assoc_stringl(return_value, \"data\", (char *) data, len, 1);"
    ]
}
