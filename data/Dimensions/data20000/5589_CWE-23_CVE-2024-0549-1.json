{
    "cve_id": "CVE-2024-0549",
    "cve_description": "mintplex-labs/anything-llm is vulnerable to a relative path traversal attack, allowing unauthorized attackers with a default role account to delete files and folders within the filesystem, including critical database files such as 'anythingllm.db'. The vulnerability stems from insufficient input validation and normalization in the handling of file and folder deletion requests. Successful exploitation results in the compromise of data integrity and availability.",
    "cve_publish_date": "2024-04-16",
    "cwe_id": "CWE-23",
    "cwe_name": "Relative Path Traversal",
    "cwe_description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as \"..\" that can resolve to a location that is outside of that directory.",
    "commit_message": "normalize paths for submit URLs of  `remove-documents (#598)\n\nnormalize paths for submit URLs",
    "type_of_change": "Modification",
    "filename_of_changes": "index.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "24",
    "number_of_lines_deleted_vulnerable_to_cve": "32",
    "vulnerable_lines": [
        "// Line_Reference 5: async function collectDocumentData(folderName = null) {",
        "// Line_Reference 6:   if (!folderName) throw new Error(\"No docPath provided in request\");",
        "// Line_Reference 7:   const folder =",
        "// Line_Reference 8:     process.env.NODE_ENV === \"development\"",
        "// Line_Reference 9:       ? path.resolve(__dirname, `../../storage/documents/${folderName}`)",
        "// Line_Reference 10:       : path.resolve(process.env.STORAGE_DIR, `documents/${folderName}`);",
        "// Line_Reference 11: ",
        "// Line_Reference 12:   const dirExists = fs.existsSync(folder);",
        "// Line_Reference 13:   if (!dirExists)",
        "// Line_Reference 14:     throw new Error(",
        "// Line_Reference 15:       `No documents folder for ${folderName} - did you run collector/main.py for this element?`",
        "// Line_Reference 16:     );",
        "// Line_Reference 17: ",
        "// Line_Reference 18:   const files = fs.readdirSync(folder);",
        "// Line_Reference 19:   const fileData = [];",
        "// Line_Reference 20:   files.forEach((file) => {",
        "// Line_Reference 21:     if (path.extname(file) === \".json\") {",
        "// Line_Reference 22:       const filePath = path.join(folder, file);",
        "// Line_Reference 23:       const data = fs.readFileSync(filePath, \"utf8\");",
        "// Line_Reference 24:       console.log(`Parsing document: ${file}`);",
        "// Line_Reference 25:       fileData.push(JSON.parse(data));",
        "// Line_Reference 26:     }",
        "// Line_Reference 27:   });",
        "// Line_Reference 28:   return fileData;",
        "// Line_Reference 29: }",
        "// Line_Reference 30: ",
        "// Line_Reference 38:       ? path.resolve(__dirname, `../../storage/documents/${filePath}`)",
        "// Line_Reference 39:       : path.resolve(process.env.STORAGE_DIR, `documents/${filePath}`);",
        "// Line_Reference 145: ",
        "// Line_Reference 148:       ? path.resolve(__dirname, `../../storage/documents`, filename)",
        "// Line_Reference 149:       : path.resolve(process.env.STORAGE_DIR, `documents`, filename);",
        "// Line_Reference 174:   collectDocumentData,"
    ]
}
