{
    "cve_id": "CVE-2013-7225",
    "cve_description": "Multiple SQL injection vulnerabilities in app/controllers/home_controller.rb in Fat Free CRM before 0.12.1 allow remote authenticated users to execute arbitrary SQL commands via (1) the homepage timeline feature or (2) the activity feature.",
    "cve_publish_date": "2014-01-02",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "Fixed sql injection in timeline method.",
    "type_of_change": "Modification",
    "filename_of_changes": "home_controller.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "13",
    "number_of_lines_deleted_vulnerable_to_cve": "8",
    "vulnerable_lines": [
        "// Line_Reference 60:     unless params[:type].empty?",
        "// Line_Reference 61:       model = params[:type].camelize.constantize",
        "// Line_Reference 62:       item = model.find(params[:id])",
        "// Line_Reference 63:       item.update_attribute(:state, params[:state])",
        "// Line_Reference 64:     else",
        "// Line_Reference 65:       comments, emails = params[:id].split(\"+\")",
        "// Line_Reference 66:       Comment.update_all(\"state = '#{params[:state]}'\", \"id IN (#{comments})\") unless comments.blank?",
        "// Line_Reference 67:       Email.update_all(\"state = '#{params[:state]}'\", \"id IN (#{emails})\") unless emails.blank?"
    ]
}
