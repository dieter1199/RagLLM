{
    "cve_id": "CVE-2017-20146",
    "cve_description": "Usage of the CORS handler may apply improper CORS headers, allowing the requester to explicitly control the value of the Access-Control-Allow-Origin header, which bypasses the expected behavior of the Same Origin Policy.",
    "cve_publish_date": "2022-12-27",
    "cwe_id": "CWE-346",
    "cwe_name": "Origin Validation Error",
    "cwe_description": "The product does not properly verify that the source of data or communication is valid.",
    "commit_message": "[bugfix] Don't return the origin header when configured to * (#116)\n\nThere's no reason to allow for a server to reflect all origin headers.\r\nThis has caused numerous security problems in the past.\r\n - https://github.com/cyu/rack-cors/issues/126\r\n - https://nodesecurity.io/advisories/148\r\n - https://github.com/captncraig/cors/commit/cc1cf75f5e3c06124602f2aa7893c8f3b1eef0b7\r\n\r\nSome helpful blog posts on the topic:\r\n - https://ejj.io/misconfigured-cors/\r\n - http://blog.portswigger.net/2016/10/exploiting-cors-misconfigurations-for.html",
    "type_of_change": "Modification",
    "filename_of_changes": "cors.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "11",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 113: \tw.Header().Set(corsAllowOriginHeader, origin)"
    ]
}
