<?= $PMF_LANG['ad_group_deleteGroup'] ?> "<?= $groupData['name'] ?>"
$groupName = Filter::filterInput(INPUT_POST, 'group_name', FILTER_UNSAFE_RAW, '');
$groupDescription = Filter::filterInput(INPUT_POST, 'group_description', FILTER_UNSAFE_RAW, '');
if ($groupName == '') {
// Import LDAP groups
/*
if ('import-ldap-groups' === $groupAction && $user->perm->hasPermission($user->getUserId(), 'addgroup')) {
$user = new CurrentUser($faqConfig);
$message = '';
$messages = [];
// Temporary data
$groupName = 'LDAP Group';
$groupDescription = 'This is a LDAP group import demo';
$groupAutoJoin = false;
$csrfOkay = true;
$csrfToken = Filter::filterInput(INPUT_POST, 'csrf', FILTER_UNSAFE_RAW);
if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {
$csrfOkay = false;
}
// check group name
if ($groupName == '') {
$messages[] = $PMF_LANG['ad_group_error_noName'];
}
// ok, let's go
if (count($messages) == 0 && $csrfOkay) {
// create group
$groupData = [
'name' => $groupName,
'description' => $groupDescription,
'auto_join' => $groupAutoJoin,
];
if ($user->perm->addGroup($groupData) <= 0) {
$messages[] = $PMF_LANG['ad_adus_dberr'];
}
}
// no errors, show list
if (count($messages) == 0) {
$groupAction = $defaultGroupAction;
$message = sprintf('<p class="alert alert-success">%s</p>', $PMF_LANG['ad_group_suc']);
// display error messages and show form again
} else {
$groupAction = 'import-ldap-groups';
$message = '<p class="alert alert-danger">';
foreach ($messages as $err) {
$message .= $err . '<br>';
}
$message .= '</p>';
}
}
*/
<!--
<div class="card mb-4">
<div class="card-header py-3">
<form id="group-import-ldap-groups" method="post"
name="group-import-ldap-groups" action="?action=group&amp;group_action=import-ldap-groups">
<input type="hidden" name="csrf" value="<?= $currentUser->getCsrfTokenFromSession() ?>">
<button class="btn btn-success" type="submit">
Import LDAP groups
</button>
</form>
</div>
</div>
-->
