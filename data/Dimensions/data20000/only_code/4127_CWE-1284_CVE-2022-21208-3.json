import { CallbackT, StatusCodes } from "node-opcua-status-code";
private readonly messageBuilder: MessageBuilder;
securityMode: this.securityMode
this._requests = {};
.on("message", (response: Response, msgType: string, requestId: number) => {
this._on_message_received(response, msgType, requestId);
.on("start_chunk", () => {
.on("error", (err, requestId) => {
//
this.__in_normal_close_operation = false;
this._timeout_request_count = 0;
this._securityTokenTimeoutId = null;
this.transportTimeout = options.transportTimeout || ClientSecureChannelLayer.defaultTransportTimeout;
this.channelId = 0;
this.connectionStrategy = coerceConnectionStrategy(options.connectionStrategy);
public closeWithError(err: Error, callback: ErrorCallback): void {
this._transport.prematureTerminate(err);
requestData._tick2 = this.messageBuilder._tick1;
requestData.bytesRead = this.messageBuilder.totalMessageSize;
const cryptoFactory = this.messageBuilder.cryptoFactory;
this.messageBuilder.pushNewToken(this.securityToken, derivedServerKeys);
this._transport.on("message", (messageChunk: Buffer) => {
this.closeWithError(new Error("Restarting because Request has timed out during OpenSecureChannel"), () => {
/* */
});
this.messageBuilder.feed(messageChunk);
