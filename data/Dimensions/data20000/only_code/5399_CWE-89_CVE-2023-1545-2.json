// Check if user exists
$userInfoRes = $this->select("SELECT id, pw, public_key, private_key, personal_folder, fonction_id, groupes_visibles, groupes_interdits, user_api_key FROM " . prefixTable('users') . " WHERE login='".$login."'");
$userInfoRes[0]['special'] = '';
$userInfo = $userInfoRes[0];
// Check password
include_once API_ROOT_PATH . '/../sources/SplClassLoader.php';
$pwdlib = new SplClassLoader('PasswordLib', API_ROOT_PATH . '/../includes/libraries');
$pwdlib->register();
$pwdlib = new PasswordLib\PasswordLib();
if ($pwdlib->verifyPasswordHash($password, $userInfo['pw']) === true) {
// Correct credentials
// Now check apikey
// We check if it is the correct user api or if it is a generic api key
$apiInfo = $this->select("SELECT count(*) FROM " . prefixTable('api') . " WHERE value='".$apikey."'");
if ($apikey === $userInfo['user_api_key'] || (int) $apiInfo[0]['count(*)'] === 1) {
$privateKeyClear = decryptPrivateKey($password, (string) $userInfo['private_key']); //prepareUserEncryptionKeys($userInfo, $password);
$login,
return ["error" => "Login failed.", "apikey" => "Not valid"];
} else {
return ["error" => "Login failed.", "password" => $password];