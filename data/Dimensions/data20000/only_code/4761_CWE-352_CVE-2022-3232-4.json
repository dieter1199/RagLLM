def _delete(self, user, repo, confirm, redirect=None):
if redirect is not None:
body['redirect'] = redirect
("with_dir", 'admin', '/testcases/Revisions', 'Revisions', 303, 404),
("with_file", 'admin', '/testcases/Revisions/Data', 'Data', 303, 404),
("with_broken_symlink", 'admin', '/testcases/BrokenSymlink', 'BrokenSymlink', 303, 404),
("with_utf8", 'admin', '/testcases/R%C3%A9pertoire%20Existant', 'RÃ©pertoire Existant', 303, 404),
("with_quoted_path", 'admin', '/testcases/Char%20%3B090%20to%20quote', 'Char Z to quote', 303, 404),
def test_delete_path(self, unused, username, path, confirmation, expected_status, expected_history_status):
self._delete('anotheruser', 'testcases', 'testcases', redirect='/admin/repos/')
location = self.assertHeader('Location')
self.assertTrue(location.endswith('/admin/repos/'))
# Try to delete own own repo
self._delete('maintainer', 'testcases', 'testcases', redirect='/admin/repos/')
location = self.assertHeader('Location')
self.assertTrue(location.endswith('/admin/repos/'))
self._delete('user', 'testcases', 'testcases', redirect='/admin/repos/')