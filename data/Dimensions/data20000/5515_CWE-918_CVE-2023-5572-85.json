{
    "cve_id": "CVE-2023-5572",
    "cve_description": "Server-Side Request Forgery (SSRF) in GitHub repository vriteio/vrite prior to 0.3.0.",
    "cve_publish_date": "2023-10-13",
    "cwe_id": "CWE-918",
    "cwe_name": "Server-Side Request Forgery (SSRF)",
    "cwe_description": "The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
    "commit_message": "Vrite v0.3 (#45)\n\n- Replace wrapper with element;\r\n- Add XML-like syntax for elements;\r\n- Redesign editor block menus;\r\n- Add MDX extension;\r\n- Allow CORS API access;\r\n- Restructure @vrite/backend;",
    "type_of_change": "Modification",
    "filename_of_changes": "menu.tsx",
    "code_language": "TypeScript",
    "number_of_lines_added_for_mitigation": "107",
    "number_of_lines_deleted_vulnerable_to_cve": "35",
    "vulnerable_lines": [
        "// Line_Reference 2: import { useSolidNodeView } from \"@vrite/tiptap-solid\";",
        "// Line_Reference 3: import { mdiCodeTagsCheck } from \"@mdi/js\";",
        "// Line_Reference 5: import type { monaco } from \"#lib/monaco\";",
        "// Line_Reference 6: import { IconButton, Input, Tooltip } from \"#components/primitives\";",
        "// Line_Reference 10:   monaco: typeof monaco;",
        "// Line_Reference 12:   changeLanguage(languageId: string | null): void;",
        "// Line_Reference 16:   const { state } = useSolidNodeView();",
        "// Line_Reference 17:   const attrs = (): CodeBlockAttributes => state().node.attrs;",
        "// Line_Reference 19:   const suggestLanguage = useSuggestLanguage(props.monaco.languages.getLanguages());",
        "// Line_Reference 20:   const formattingAvailable = createMemo(() => {",
        "// Line_Reference 21:     return isFormattable(attrs().lang || \"\");",
        "// Line_Reference 22:   });",
        "// Line_Reference 25:     on(attrs, () => {",
        "// Line_Reference 26:       setSuggestions(suggestLanguage(attrs().lang || \"\"));",
        "// Line_Reference 27:       props.changeLanguage(attrs().lang || null);",
        "// Line_Reference 32:     <div class=\"flex p-0 transition-shadow duration-200 border-0 rounded-xl\">",
        "// Line_Reference 33:       <Input",
        "// Line_Reference 34:         wrapperClass=\"flex-1 max-w-full\"",
        "// Line_Reference 35:         placeholder=\"Language\"",
        "// Line_Reference 36:         value={attrs().lang || \"\"}",
        "// Line_Reference 37:         suggestions={suggestions()}",
        "// Line_Reference 38:         color=\"contrast\"",
        "// Line_Reference 39:         disabled={!state().editor.isEditable}",
        "// Line_Reference 40:         setValue={(value) => {",
        "// Line_Reference 41:           state().updateAttributes({ lang: value });",
        "// Line_Reference 42:         }}",
        "// Line_Reference 43:       />",
        "// Line_Reference 44:       <Show when={state().editor.isEditable}>",
        "// Line_Reference 45:         <Tooltip text={formattingAvailable() ? \"Format\" : \"Formatting unavailable\"}>",
        "// Line_Reference 47:             path={mdiCodeTagsCheck}",
        "// Line_Reference 48:             color=\"contrast\"",
        "// Line_Reference 49:             text=\"soft\"",
        "// Line_Reference 50:             disabled={!formattingAvailable()}",
        "// Line_Reference 51:             onClick={props.format}",
        "// Line_Reference 54:       </Show>"
    ]
}
