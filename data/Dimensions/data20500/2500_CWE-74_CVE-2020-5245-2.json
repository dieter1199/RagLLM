{
    "cve_id": "CVE-2020-5245",
    "cve_description": "Dropwizard-Validation before 1.3.19, and 2.0.2 may allow arbitrary code execution on the host system, with the privileges of the Dropwizard service account, by injecting arbitrary Java Expression Language expressions when using the self-validating feature.\n\nThe issue has been fixed in dropwizard-validation 1.3.19 and 2.0.2.",
    "cve_publish_date": "2020-02-24",
    "cwe_id": "CWE-74",
    "cwe_name": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
    "cwe_description": "The product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.",
    "commit_message": "Escape EL expressions in ViolationCollector (#3157)\n\nFixes #3153",
    "type_of_change": "Modification",
    "filename_of_changes": "ViolationCollector.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "75",
    "number_of_lines_deleted_vulnerable_to_cve": "5",
    "vulnerable_lines": [
        "// Line_Reference 20:      * Adds a new violation to this collector. This also sets violationOccurred to true.",
        "// Line_Reference 22:      * @param msg the message of the violation",
        "// Line_Reference 24:     public void addViolation(String msg) {",
        "// Line_Reference 26:         context.buildConstraintViolationWithTemplate(msg)",
        "// Line_Reference 27:             .addConstraintViolation();"
    ]
}
