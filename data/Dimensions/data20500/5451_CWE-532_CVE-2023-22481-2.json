{
    "cve_id": "CVE-2023-22481",
    "cve_description": "FreshRSS is a self-hosted RSS feed aggregator. When using the greader API, the provided password is logged in clear in `users/_/log_api.txt` in the case where the authentication fails. The issues occurs in `authorizationToUser()` in `greader.php`. If there is an issue with the request or the credentials, `unauthorized()` or `badRequest()` is called. Both these functions are printing the return of `debugInfo()` in the logs.  `debugInfo()` will return the content of the request. By default, this will be saved in `users/_/log_api.txt` and if the const `COPY_LOG_TO_SYSLOG` is true, in syslogs as well. Exploiting this issue requires having access to logs produced by FreshRSS. Using the information from the logs, a malicious individual could get users' API keys (would be displayed if the users fills in a bad username) or passwords.",
    "cve_publish_date": "2023-03-06",
    "cwe_id": "CWE-532",
    "cwe_name": "Insertion of Sensitive Information into Log File",
    "cwe_description": "Information written to log files can be of a sensitive nature and give valuable guidance to an attacker or expose sensitive user information.",
    "commit_message": "API avoid logging passwords (#5001)\n\n* API avoid logging passwords\r\n* Strip passwords and tokens from API logs\r\n* Only log failed requests information when in debug mode\r\n\r\n* Remove debug SHA\r\n\r\n* Clean also Apache logs\r\n\r\n* Better comments\r\n\r\n* Redact also token parameters\r\n\r\n* shfmt\r\n\r\n* Simplify whitespace\r\n\r\n* redacted",
    "type_of_change": "Modification",
    "filename_of_changes": "greader.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "15",
    "number_of_lines_deleted_vulnerable_to_cve": "11",
    "vulnerable_lines": [
        "// Line_Reference 100: \treturn print_r(",
        "// Line_Reference 101: \t\tarray(",
        "// Line_Reference 108: \t\t\t'INPUT' => $ORIGINAL_INPUT",
        "// Line_Reference 109: \t\t), true);",
        "// Line_Reference 113: \tMinz_Log::warning('badRequest() ' . debugInfo(), API_LOG);",
        "// Line_Reference 120: \tMinz_Log::warning('unauthorized() ' . debugInfo(), API_LOG);",
        "// Line_Reference 128: \tMinz_Log::warning('notImplemented() ' . debugInfo(), API_LOG);",
        "// Line_Reference 135: \tMinz_Log::warning('serviceUnavailable() ' . debugInfo(), API_LOG);",
        "// Line_Reference 142: \tMinz_Log::warning('checkCompatibility() ' . debugInfo(), API_LOG);",
        "// Line_Reference 175: \t\t\t\t\tMinz_Log::warning('Invalid API authorisation for user ' . $user . ': ' . $headerAuthX[1], API_LOG);",
        "// Line_Reference 176: \t\t\t\t\tMinz_Log::warning('Invalid API authorisation for user ' . $user . ': ' . $headerAuthX[1]);"
    ]
}
