{
    "cve_id": "CVE-2019-9278",
    "cve_description": "In libexif, there is a possible out of bounds write due to an integer overflow. This could lead to remote escalation of privilege in the media content provider with no additional execution privileges needed. User interaction is needed for exploitation. Product: AndroidVersions: Android-10Android ID: A-112537774",
    "cve_publish_date": "2019-09-27",
    "cwe_id": "CWE-190",
    "cwe_name": "Integer Overflow or Wraparound",
    "cwe_description": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
    "commit_message": "fix CVE-2019-9278\n\navoid the use of unsafe integer overflow checking constructs (unsigned integer operations cannot overflow, so \"u1 + u2 > u1\" can be optimized away)\n\ncheck for the actual sizes, which should also handle the overflows\ndocument other places google patched, but do not seem relevant due to other restrictions\n\nfixes https://github.com/libexif/libexif/issues/26",
    "type_of_change": "Modification",
    "filename_of_changes": "exif-data.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "18",
    "number_of_lines_deleted_vulnerable_to_cve": "10",
    "vulnerable_lines": [
        "// Line_Reference 195: \tif ((doff + s < doff) || (doff + s < s) || (doff + s > size)) {",
        "// Line_Reference 197: \t\t\t\t  \"Tag data past end of buffer (%u > %u)\", doff+s, size);",
        "// Line_Reference 318: \tif ((o + s < o) || (o + s < s) || (o + s > ds) || (o > ds)) {",
        "// Line_Reference 319: \t\texif_log (data->priv->log, EXIF_LOG_CODE_DEBUG, \"ExifData\",",
        "// Line_Reference 320: \t\t\t  \"Bogus thumbnail offset (%u) or size (%u).\",",
        "// Line_Reference 321: \t\t\t  o, s);",
        "// Line_Reference 324: ",
        "// Line_Reference 950: \t/* Sanity check the offset, being careful about overflow */",
        "// Line_Reference 967: \t\t/* Sanity check. */",
        "// Line_Reference 968: \t\tif (offset > ds || offset + 6 > ds) {"
    ]
}
