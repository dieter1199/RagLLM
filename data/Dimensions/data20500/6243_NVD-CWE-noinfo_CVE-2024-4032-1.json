{
    "cve_id": "CVE-2024-4032",
    "cve_description": "The “ipaddress” module contained incorrect information about whether certain IPv4 and IPv6 addresses were designated as “globally reachable” or “private”. This affected the is_private and is_global properties of the ipaddress.IPv4Address, ipaddress.IPv4Network, ipaddress.IPv6Address, and ipaddress.IPv6Network classes, where values wouldn’t be returned in accordance with the latest information from the IANA Special-Purpose Address Registries.\n\nCPython 3.12.4 and 3.13.0a6 contain updated information from these registries and thus have the intended behavior.",
    "cve_publish_date": "2024-06-17",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "GH-113171: Fix \"private\" (non-global) IP address ranges (GH-113179)\n\n* GH-113171: Fix \"private\" (really non-global) IP address ranges\r\n\r\nThe _private_networks variables, used by various is_private\r\nimplementations, were missing some ranges and at the same time had\r\noverly strict ranges (where there are more specific ranges considered\r\nglobally reachable by the IANA registries).\r\n\r\nThis patch updates the ranges with what was missing or otherwise\r\nincorrect.\r\n\r\nI left 100.64.0.0/10 alone, for now, as it's been made special in [1]\r\nand I'm not sure if we want to undo that as I don't quite understand the\r\nmotivation behind it.\r\n\r\nThe _address_exclude_many() call returns 8 networks for IPv4, 121\r\nnetworks for IPv6.\r\n\r\n[1] https://github.com/python/cpython/issues/61602",
    "type_of_change": "Modification",
    "filename_of_changes": "ipaddress.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "35",
    "number_of_lines_deleted_vulnerable_to_cve": "6",
    "vulnerable_lines": [
        "// Line_Reference 1089:                    for priv_network in self._constants._private_networks)",
        "// Line_Reference 1350:         return any(self in net for net in self._constants._private_networks)",
        "// Line_Reference 1587:         IPv4Network('192.0.0.0/29'),",
        "// Line_Reference 2089:         return any(self in net for net in self._constants._private_networks)",
        "// Line_Reference 2351:         IPv6Network('2001:2::/48'),",
        "// Line_Reference 2353:         IPv6Network('2001:10::/28'),"
    ]
}
