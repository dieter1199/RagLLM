{
    "cve_id": "CVE-2020-11060",
    "cve_description": "In GLPI before 9.4.6, an attacker can execute system commands by abusing the backup functionality. Theoretically, this vulnerability can be exploited by an attacker without a valid account by using a CSRF. Due to the difficulty of the exploitation, the attack is only conceivable by an account having Maintenance privileges and the right to add WIFI networks. This is fixed in version 9.4.6.",
    "cve_publish_date": "2020-05-12",
    "cwe_id": "CWE-352",
    "cwe_name": "Cross-Site Request Forgery (CSRF)",
    "cwe_description": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
    "commit_message": "Drop xml backup; check new versions from config\n\ncloses #7182",
    "type_of_change": "Modification",
    "filename_of_changes": "update_945_946.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "17",
    "number_of_lines_deleted_vulnerable_to_cve": "38",
    "vulnerable_lines": [
        "// Line_Reference 33: if (!defined('GLPI_ROOT')) {",
        "// Line_Reference 34:    die(\"Sorry. You can't access this file directly\");",
        "// Line_Reference 35: }",
        "// Line_Reference 36: ",
        "// Line_Reference 38:  * Backup class",
        "// Line_Reference 40:  * @since 0.85",
        "// Line_Reference 44: class Backup extends CommonGLPI {",
        "// Line_Reference 45: ",
        "// Line_Reference 46:    static $rightname = 'backup';",
        "// Line_Reference 47: ",
        "// Line_Reference 48:    const CHECKUPDATE = 1024;",
        "// Line_Reference 49: ",
        "// Line_Reference 50: ",
        "// Line_Reference 51: ",
        "// Line_Reference 52:    /**",
        "// Line_Reference 53:     * @since 0.85.3",
        "// Line_Reference 54:     **/",
        "// Line_Reference 55:    static function canView() {",
        "// Line_Reference 56:       return Session::haveRight(self::$rightname, READ);",
        "// Line_Reference 57:    }",
        "// Line_Reference 58: ",
        "// Line_Reference 59: ",
        "// Line_Reference 60:    static function getTypeName($nb = 0) {",
        "// Line_Reference 61:       return __('Maintenance');",
        "// Line_Reference 62:    }",
        "// Line_Reference 63: ",
        "// Line_Reference 65:    /**",
        "// Line_Reference 66:     * @since 0.85",
        "// Line_Reference 67:     *",
        "// Line_Reference 68:     * @see commonDBTM::getRights()",
        "// Line_Reference 69:    **/",
        "// Line_Reference 70:    function getRights($interface = 'central') {",
        "// Line_Reference 72:       $values = [READ                => __('Read'),",
        "// Line_Reference 73:                       CREATE              => __('Create'),",
        "// Line_Reference 74:                       PURGE               => _x('button', 'Delete permanently'),",
        "// Line_Reference 75:                       self::CHECKUPDATE   => __('Check for upgrade')];",
        "// Line_Reference 76:       return $values;",
        "// Line_Reference 77:    }"
    ]
}
