{
    "cve_id": "CVE-2017-18075",
    "cve_description": "crypto/pcrypt.c in the Linux kernel before 4.14.13 mishandles freeing instances, allowing a local user able to access the AF_ALG-based AEAD interface (CONFIG_CRYPTO_USER_API_AEAD) and pcrypt (CONFIG_CRYPTO_PCRYPT) to cause a denial of service (kfree of an incorrect pointer) or possibly have unspecified other impact by executing a crafted sequence of system calls.",
    "cve_publish_date": "2018-01-24",
    "cwe_id": "CWE-763",
    "cwe_name": "Release of Invalid Pointer or Reference",
    "cwe_description": "The product attempts to return a memory resource to the system, but it calls the wrong release function or calls the appropriate release function incorrectly.",
    "commit_message": "crypto: pcrypt - fix freeing pcrypt instances\n\npcrypt is using the old way of freeing instances, where the ->free()\nmethod specified in the 'struct crypto_template' is passed a pointer to\nthe 'struct crypto_instance'.  But the crypto_instance is being\nkfree()'d directly, which is incorrect because the memory was actually\nallocated as an aead_instance, which contains the crypto_instance at a\nnonzero offset.  Thus, the wrong pointer was being kfree()'d.\n\nFix it by switching to the new way to free aead_instance's where the\n->free() method is specified in the aead_instance itself.\n\nReported-by: syzbot <syzkaller@googlegroups.com>\nFixes: 0496f56065e0 (\"crypto: pcrypt - Add support for new AEAD interface\")\nCc: <stable@vger.kernel.org> # v4.2+\nSigned-off-by: Eric Biggers <ebiggers@google.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
    "type_of_change": "Modification",
    "filename_of_changes": "pcrypt.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "10",
    "number_of_lines_deleted_vulnerable_to_cve": "9",
    "vulnerable_lines": [
        "// Line_Reference 352: static void pcrypt_free(struct crypto_instance *inst)",
        "// Line_Reference 353: {",
        "// Line_Reference 354: \tstruct pcrypt_instance_ctx *ctx = crypto_instance_ctx(inst);",
        "// Line_Reference 355: ",
        "// Line_Reference 356: \tcrypto_drop_aead(&ctx->spawn);",
        "// Line_Reference 357: \tkfree(inst);",
        "// Line_Reference 358: }",
        "// Line_Reference 359: ",
        "// Line_Reference 472: \t.free = pcrypt_free,"
    ]
}
