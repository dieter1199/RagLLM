{
    "cve_id": "CVE-2018-7186",
    "cve_description": "Leptonica before 1.75.3 does not limit the number of characters in a %s format argument to fscanf or sscanf, which allows remote attackers to cause a denial of service (stack-based buffer overflow) or possibly have unspecified other impact via a long string, as demonstrated by the gplotRead and ptaReadStream functions.",
    "cve_publish_date": "2018-02-16",
    "cwe_id": "CWE-787",
    "cwe_name": "Out-of-bounds Write",
    "cwe_description": "The product writes data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "Security fixes: expect final changes for release 1.75.3.\n* Fixed a debian security issue with fscanf() reading a string with\n  possible buffer overflow.\n* There were also a few similar situations with sscanf().",
    "type_of_change": "Modification",
    "filename_of_changes": "gplot.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "36",
    "number_of_lines_deleted_vulnerable_to_cve": "36",
    "vulnerable_lines": [
        "// Line_Reference 53:  *     Utility for programmatic plotting using gnuplot 7.3.2 or later",
        "// Line_Reference 55:  *         ~ output to png (color), ps (mono), x11 (color), latex (mono)",
        "// Line_Reference 103: static const l_int32  L_BUF_SIZE = 512;",
        "// Line_Reference 145: char     buf[L_BUF_SIZE];",
        "// Line_Reference 172:     snprintf(buf, L_BUF_SIZE, \"%s.cmd\", rootname);",
        "// Line_Reference 175:         snprintf(buf, L_BUF_SIZE, \"%s.png\", newroot);",
        "// Line_Reference 177:         snprintf(buf, L_BUF_SIZE, \"%s.ps\", newroot);",
        "// Line_Reference 179:         snprintf(buf, L_BUF_SIZE, \"%s.eps\", newroot);",
        "// Line_Reference 181:         snprintf(buf, L_BUF_SIZE, \"%s.tex\", newroot);",
        "// Line_Reference 269: char       buf[L_BUF_SIZE];",
        "// Line_Reference 306:     snprintf(buf, L_BUF_SIZE, \"%s.data.%d\", gplot->rootname, gplot->nplots);",
        "// Line_Reference 317:         snprintf(buf, L_BUF_SIZE, \"%f %f\\n\", valx, valy);",
        "// Line_Reference 381: char     buf[L_BUF_SIZE];",
        "// Line_Reference 395:     snprintf(buf, L_BUF_SIZE, \"gnuplot %s\", cmdname);",
        "// Line_Reference 397:     snprintf(buf, L_BUF_SIZE, \"wgnuplot %s\", cmdname);",
        "// Line_Reference 418: char     buf[L_BUF_SIZE];",
        "// Line_Reference 433:         snprintf(buf, L_BUF_SIZE, \"set title '%s'\", gplot->title);",
        "// Line_Reference 437:         snprintf(buf, L_BUF_SIZE, \"set xlabel '%s'\", gplot->xlabel);",
        "// Line_Reference 441:         snprintf(buf, L_BUF_SIZE, \"set ylabel '%s'\", gplot->ylabel);",
        "// Line_Reference 447:         snprintf(buf, L_BUF_SIZE, \"set terminal png; set output '%s'\",",
        "// Line_Reference 450:         snprintf(buf, L_BUF_SIZE, \"set terminal postscript; set output '%s'\",",
        "// Line_Reference 453:         snprintf(buf, L_BUF_SIZE,",
        "// Line_Reference 457:         snprintf(buf, L_BUF_SIZE, \"set terminal latex; set output '%s'\",",
        "// Line_Reference 464:         snprintf(buf, L_BUF_SIZE, \"set logscale x\");",
        "// Line_Reference 469:         snprintf(buf, L_BUF_SIZE, \"set logscale y\");",
        "// Line_Reference 479:             snprintf(buf, L_BUF_SIZE, \"plot '%s' title '%s' %s\",",
        "// Line_Reference 483:                 snprintf(buf, L_BUF_SIZE, \"plot '%s' title '%s' %s, \\\\\",",
        "// Line_Reference 486:                 snprintf(buf, L_BUF_SIZE, \" '%s' title '%s' %s, \\\\\",",
        "// Line_Reference 489:                 snprintf(buf, L_BUF_SIZE, \" '%s' title '%s' %s\",",
        "// Line_Reference 823: char     buf[L_BUF_SIZE];",
        "// Line_Reference 847:     ignore = fscanf(fp, \"Rootname: %s\\n\", buf);",
        "// Line_Reference 850:     ignores = fgets(buf, L_BUF_SIZE, fp);   /* Title: ... */",
        "// Line_Reference 853:     ignores = fgets(buf, L_BUF_SIZE, fp);   /* X axis label: ... */",
        "// Line_Reference 856:     ignores = fgets(buf, L_BUF_SIZE, fp);   /* Y axis label: ... */",
        "// Line_Reference 875:     ignore = fscanf(fp, \"Commandfile name: %s\\n\", buf);",
        "// Line_Reference 889:     ignore = fscanf(fp, \"Output file name: %s\\n\", buf);"
    ]
}
