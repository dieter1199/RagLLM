{
    "cve_id": "CVE-2024-21631",
    "cve_description": "Vapor is an HTTP web framework for Swift. Prior to version 4.90.0, Vapor's `vapor_urlparser_parse` function uses `uint16_t` indexes when parsing a URI's components, which may cause integer overflows when parsing untrusted inputs. This vulnerability does not affect Vapor directly but could impact applications relying on the URI type for validating user input. The URI type is used in several places in Vapor. A developer may decide to use URI to represent a URL in their application (especially if that URL is then passed to the HTTP Client) and rely on its public properties and methods. However, URI may fail to properly parse a valid (albeit abnormally long) URL, due to string ranges being converted to 16-bit integers. An attacker may use this behavior to trick the application into accepting a URL to an untrusted destination. By padding the port number with zeros, an attacker can cause an integer overflow to occur when the URL authority is parsed and, as a result, spoof the host. Version 4.90.0 contains a patch for this issue. As a workaround, validate user input before parsing as a URI or, if possible, use Foundation's `URL` and `URLComponents` utilities.\n",
    "cve_publish_date": "2024-01-03",
    "cwe_id": "CWE-190",
    "cwe_name": "Integer Overflow or Wraparound",
    "cwe_description": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
    "commit_message": "Merge pull request from GHSA-r6r4-5pr8-gjcp\n\n* Replace the ancient CVaporURLParser code with use of Foundation's URLComponents\n\n* Fixes for weird macOS behaviors\n\n* Tests fixup\n\n* Add test for extreme-length untrusted input which triggered failures in the old implementation.\n\n* Fix Sendable warnings across multiple Swift versions\n\n* Indirect through URL to get to URLComponents so parsing is consistent on Linux.\n\n* A couple more test fixes.",
    "type_of_change": "Modification",
    "filename_of_changes": "Package.swift",
    "code_language": "Swift",
    "number_of_lines_added_for_mitigation": "0",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 69:         .target(name: \"CVaporURLParser\"),",
        "// Line_Reference 77:             .target(name: \"CVaporURLParser\"),"
    ]
}
