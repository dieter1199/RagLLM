{
    "cve_id": "CVE-2020-15861",
    "cve_description": "Net-SNMP through 5.7.3 allows Escalation of Privileges because of UNIX symbolic link (symlink) following.",
    "cve_publish_date": "2020-08-20",
    "cwe_id": "CWE-59",
    "cwe_name": "Improper Link Resolution Before File Access ('Link Following')",
    "cwe_description": "The product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.",
    "commit_message": "CHANGES: snmpd: Stop reading and writing the mib_indexes/* files\n\nCaching directory contents is something the operating system should do\nand is not something Net-SNMP should do. Instead of storing a copy of\nthe directory contents in ${tmp_dir}/mib_indexes/${n}, always scan a\nMIB directory.",
    "type_of_change": "Modification",
    "filename_of_changes": "mib.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "147",
    "vulnerable_lines": [
        "// Line_Reference 2723:     netsnmp_mibindex_load();",
        "// Line_Reference 2743:             add_mibfile(entry, NULL, NULL);",
        "// Line_Reference 2894: /*",
        "// Line_Reference 2895:  * Handle MIB indexes centrally",
        "// Line_Reference 2896:  */",
        "// Line_Reference 2897: static int _mibindex     = 0;   /* Last index in use */",
        "// Line_Reference 2898: static int _mibindex_max = 0;   /* Size of index array */",
        "// Line_Reference 2899: char     **_mibindexes   = NULL;",
        "// Line_Reference 2900: ",
        "// Line_Reference 2901: int _mibindex_add( const char *dirname, int i );",
        "// Line_Reference 2902: void",
        "// Line_Reference 2903: netsnmp_mibindex_load( void )",
        "// Line_Reference 2904: {",
        "// Line_Reference 2905:     DIR *dir;",
        "// Line_Reference 2906:     struct dirent *file;",
        "// Line_Reference 2907:     FILE *fp;",
        "// Line_Reference 2908:     char tmpbuf[ 300];",
        "// Line_Reference 2909:     char tmpbuf2[300];",
        "// Line_Reference 2910:     int  i;",
        "// Line_Reference 2911:     char *cp;",
        "// Line_Reference 2912: ",
        "// Line_Reference 2913:     /*",
        "// Line_Reference 2914:      * Open the MIB index directory, or create it (empty)",
        "// Line_Reference 2915:      */",
        "// Line_Reference 2916:     snprintf( tmpbuf, sizeof(tmpbuf), \"%s/mib_indexes\",",
        "// Line_Reference 2917:               get_persistent_directory());",
        "// Line_Reference 2918:     tmpbuf[sizeof(tmpbuf)-1] = 0;",
        "// Line_Reference 2919:     dir = opendir( tmpbuf );",
        "// Line_Reference 2920:     if ( dir == NULL ) {",
        "// Line_Reference 2921:         DEBUGMSGTL((\"mibindex\", \"load: (new)\\n\"));",
        "// Line_Reference 2922:         mkdirhier( tmpbuf, NETSNMP_AGENT_DIRECTORY_MODE, 0);",
        "// Line_Reference 2923:         return;",
        "// Line_Reference 2924:     }",
        "// Line_Reference 2925: ",
        "// Line_Reference 2926:     /*",
        "// Line_Reference 2927:      * Create a list of which directory each file refers to",
        "// Line_Reference 2928:      */",
        "// Line_Reference 2929:     while ((file = readdir( dir ))) {",
        "// Line_Reference 2930:         if ( !isdigit((unsigned char)(file->d_name[0])))",
        "// Line_Reference 2931:             continue;",
        "// Line_Reference 2932:         i = atoi( file->d_name );",
        "// Line_Reference 2933: ",
        "// Line_Reference 2934:         snprintf( tmpbuf, sizeof(tmpbuf), \"%s/mib_indexes/%d\",",
        "// Line_Reference 2935:               get_persistent_directory(), i );",
        "// Line_Reference 2936:         tmpbuf[sizeof(tmpbuf)-1] = 0;",
        "// Line_Reference 2937:         fp = fopen( tmpbuf, \"r\" );",
        "// Line_Reference 2938:         if (!fp)",
        "// Line_Reference 2939:             continue;",
        "// Line_Reference 2940:         cp = fgets( tmpbuf2, sizeof(tmpbuf2), fp );",
        "// Line_Reference 2941:         fclose( fp );",
        "// Line_Reference 2942:         if ( !cp ) {",
        "// Line_Reference 2943:             DEBUGMSGTL((\"mibindex\", \"Empty MIB index (%d)\\n\", i));",
        "// Line_Reference 2944:             continue;",
        "// Line_Reference 2945:         }",
        "// Line_Reference 2946:         if ( strncmp( tmpbuf2, \"DIR \", 4 ) != 0 ) {",
        "// Line_Reference 2947:             DEBUGMSGTL((\"mibindex\", \"Malformed MIB index (%d)\\n\", i));",
        "// Line_Reference 2948:             continue;",
        "// Line_Reference 2949:         }",
        "// Line_Reference 2950:         tmpbuf2[strlen(tmpbuf2)-1] = 0;",
        "// Line_Reference 2951:         DEBUGMSGTL((\"mibindex\", \"load: (%d) %s\\n\", i, tmpbuf2));",
        "// Line_Reference 2952:         (void)_mibindex_add( tmpbuf2+4, i );  /* Skip 'DIR ' */",
        "// Line_Reference 2953:     }",
        "// Line_Reference 2954:     closedir( dir );",
        "// Line_Reference 2955: }",
        "// Line_Reference 2956: ",
        "// Line_Reference 2957: char *",
        "// Line_Reference 2958: netsnmp_mibindex_lookup( const char *dirname )",
        "// Line_Reference 2959: {",
        "// Line_Reference 2960:     int i;",
        "// Line_Reference 2961:     static char tmpbuf[300];",
        "// Line_Reference 2962: ",
        "// Line_Reference 2963:     for (i=0; i<_mibindex; i++) {",
        "// Line_Reference 2964:         if ( _mibindexes[i] &&",
        "// Line_Reference 2965:              strcmp( _mibindexes[i], dirname ) == 0) {",
        "// Line_Reference 2966:              snprintf(tmpbuf, sizeof(tmpbuf), \"%s/mib_indexes/%d\",",
        "// Line_Reference 2967:                       get_persistent_directory(), i);",
        "// Line_Reference 2968:              tmpbuf[sizeof(tmpbuf)-1] = 0;",
        "// Line_Reference 2969:              DEBUGMSGTL((\"mibindex\", \"lookup: %s (%d) %s\\n\", dirname, i, tmpbuf ));",
        "// Line_Reference 2970:              return tmpbuf;",
        "// Line_Reference 2971:         }",
        "// Line_Reference 2972:     }",
        "// Line_Reference 2973:     DEBUGMSGTL((\"mibindex\", \"lookup: (none)\\n\"));",
        "// Line_Reference 2974:     return NULL;",
        "// Line_Reference 2975: }",
        "// Line_Reference 2976: ",
        "// Line_Reference 2977: int",
        "// Line_Reference 2978: _mibindex_add( const char *dirname, int i )",
        "// Line_Reference 2979: {",
        "// Line_Reference 2980:     const int old_mibindex_max = _mibindex_max;",
        "// Line_Reference 2981: ",
        "// Line_Reference 2982:     DEBUGMSGTL((\"mibindex\", \"add: %s (%d)\\n\", dirname, i ));",
        "// Line_Reference 2983:     if ( i == -1 )",
        "// Line_Reference 2984:         i = _mibindex++;",
        "// Line_Reference 2985:     if ( i >= _mibindex_max ) {",
        "// Line_Reference 2986:         /*",
        "// Line_Reference 2987:          * If the index array is full (or non-existent)",
        "// Line_Reference 2988:          *   then expand (or create) it",
        "// Line_Reference 2989:          */",
        "// Line_Reference 2990:         _mibindex_max = i + 10;",
        "// Line_Reference 2991:         _mibindexes = realloc(_mibindexes,",
        "// Line_Reference 2992:                               _mibindex_max * sizeof(_mibindexes[0]));",
        "// Line_Reference 2993:         netsnmp_assert(_mibindexes);",
        "// Line_Reference 2994:         memset(_mibindexes + old_mibindex_max, 0,",
        "// Line_Reference 2995:                (_mibindex_max - old_mibindex_max) * sizeof(_mibindexes[0]));",
        "// Line_Reference 2996:     }",
        "// Line_Reference 2997: ",
        "// Line_Reference 2998:     _mibindexes[ i ] = strdup( dirname );",
        "// Line_Reference 2999:     if ( i >= _mibindex )",
        "// Line_Reference 3000:         _mibindex = i+1;",
        "// Line_Reference 3001: ",
        "// Line_Reference 3002:     DEBUGMSGTL((\"mibindex\", \"add: %d/%d/%d\\n\", i, _mibindex, _mibindex_max ));",
        "// Line_Reference 3003:     return i;",
        "// Line_Reference 3004: }",
        "// Line_Reference 3005: ",
        "// Line_Reference 3006: FILE *",
        "// Line_Reference 3007: netsnmp_mibindex_new( const char *dirname )",
        "// Line_Reference 3008: {",
        "// Line_Reference 3009:     FILE *fp;",
        "// Line_Reference 3010:     char  tmpbuf[300];",
        "// Line_Reference 3011:     char *cp;",
        "// Line_Reference 3012:     int   i;",
        "// Line_Reference 3013: ",
        "// Line_Reference 3014:     cp = netsnmp_mibindex_lookup( dirname );",
        "// Line_Reference 3015:     if (!cp) {",
        "// Line_Reference 3016:         i  = _mibindex_add( dirname, -1 );",
        "// Line_Reference 3017:         snprintf( tmpbuf, sizeof(tmpbuf), \"%s/mib_indexes/%d\",",
        "// Line_Reference 3018:                   get_persistent_directory(), i );",
        "// Line_Reference 3019:         tmpbuf[sizeof(tmpbuf)-1] = 0;",
        "// Line_Reference 3020:         cp = tmpbuf;",
        "// Line_Reference 3021:     }",
        "// Line_Reference 3022:     DEBUGMSGTL((\"mibindex\", \"new: %s (%s)\\n\", dirname, cp ));",
        "// Line_Reference 3023:     fp = fopen( cp, \"w\" );",
        "// Line_Reference 3024:     if (fp)",
        "// Line_Reference 3025:         fprintf( fp, \"DIR %s\\n\", dirname );",
        "// Line_Reference 3026:     return fp;",
        "// Line_Reference 3027: }",
        "// Line_Reference 3028: ",
        "// Line_Reference 3029: ",
        "// Line_Reference 3044:     if (_mibindexes) {",
        "// Line_Reference 3045:         int i;",
        "// Line_Reference 3046:         for (i = 0; i < _mibindex; ++i)",
        "// Line_Reference 3047:             SNMP_FREE(_mibindexes[i]);",
        "// Line_Reference 3048:         free(_mibindexes);",
        "// Line_Reference 3049:         _mibindex = 0;",
        "// Line_Reference 3050:         _mibindex_max = 0;",
        "// Line_Reference 3051:         _mibindexes = NULL;",
        "// Line_Reference 3052:     }"
    ]
}
