{
    "cve_id": "CVE-2022-24829",
    "cve_description": "Garden is an automation platform for Kubernetes development and testing. In versions prior to 0.12.39 multiple endpoints did not require authentication. In some operating modes this allows for an attacker to gain access to the application erroneously. The configuration is leaked through the /api endpoint on the local server that is responsible for serving the Garden dashboard. At the moment, this server is accessible to 0.0.0.0 which makes it accessible to anyone on the same network (or anyone on the internet if they are on a public, static IP). This may lead to the ability to compromise credentials, secrets or environment variables. Users are advised to upgrade to version 0.12.39 as soon as possible. Users unable to upgrade should use a firewall blocking access to port 9777 from all untrusted network machines.",
    "cve_publish_date": "2022-04-11",
    "cwe_id": "CWE-306",
    "cwe_name": "Missing Authentication for Critical Function",
    "cwe_description": "The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.",
    "commit_message": "fix(core): require auth key for server endpoints",
    "type_of_change": "Modification",
    "filename_of_changes": "server.ts",
    "code_language": "TypeScript",
    "number_of_lines_added_for_mitigation": "31",
    "number_of_lines_deleted_vulnerable_to_cve": "18",
    "vulnerable_lines": [
        "// Line_Reference 82:     this.authKey = randomString(64)",
        "// Line_Reference 88:       for (const { host, command } of servers) {",
        "// Line_Reference 90:           this.showUrl(host)",
        "// Line_Reference 108:       this.server = this.app.listen(this.port)",
        "// Line_Reference 113:           this.server = this.app.listen(this.port)",
        "// Line_Reference 122:   getUrl() {",
        "// Line_Reference 167:       // TODO: require auth key here from 0.13.0 onwards",
        "// Line_Reference 242:       const authHeader = ctx.header[authTokenHeader]",
        "// Line_Reference 243: ",
        "// Line_Reference 244:       if (authHeader !== this.authKey) {",
        "// Line_Reference 245:         ctx.status = 401",
        "// Line_Reference 246:         return",
        "// Line_Reference 247:       }",
        "// Line_Reference 248: ",
        "// Line_Reference 250: ",
        "// Line_Reference 280:   private notReady(ctx: Router.IRouterContext) {",
        "// Line_Reference 300:       // TODO: require auth key on connections here, from 0.13.0 onwards",
        "// Line_Reference 301: "
    ]
}
