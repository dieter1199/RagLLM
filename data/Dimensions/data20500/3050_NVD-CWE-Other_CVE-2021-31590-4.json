{
    "cve_id": "CVE-2021-31590",
    "cve_description": "PwnDoc all versions until 0.4.0 (2021-08-23) has incorrect JSON Webtoken handling, leading to incorrect access control. With a valid JSON Webtoken that is used for authentication and authorization, a user can keep his admin privileges even if he is downgraded to the \"user\" privilege. Even after a user's account is deleted, the user can still access the administration panel (and add or delete users) and has complete access to the system.",
    "cve_publish_date": "2021-07-19",
    "cwe_id": "NVD-CWE-Other",
    "cwe_name": "Other",
    "cwe_description": "NVD is only using a subset of CWE for mapping instead of the entire CWE, and the weakness type is not covered by that subset.",
    "commit_message": "Update Session management using refresh token\n\nAdded refresh token with lifetime of 7 days\nToken has now a lifetime of 15min\nRefresh token is updated on the frontend each time application is loaded or every 14min\nEach refresh token is associated with a sessionId allowing to have multiple sessions on different devices",
    "type_of_change": "Modification",
    "filename_of_changes": "user.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "40",
    "number_of_lines_deleted_vulnerable_to_cve": "44",
    "vulnerable_lines": [
        "// Line_Reference 4: import Router from '../router'",
        "// Line_Reference 7:     user: null,",
        "// Line_Reference 16:                 var countdown = this.user.exp*1000 - Date.now() - 60000 // Countdown to expiration less 1 minute",
        "// Line_Reference 17:                 setTimeout(() => {",
        "// Line_Reference 18:                     this.refreshToken()",
        "// Line_Reference 19:                 }, countdown)",
        "// Line_Reference 23:                 console.log(error)",
        "// Line_Reference 30:         Vue.prototype.$axios.get('users/refreshtoken')",
        "// Line_Reference 31:         .then((response) => {",
        "// Line_Reference 32:             var token = response.data.datas.token;",
        "// Line_Reference 33:             this.user = jwtDecode(token);",
        "// Line_Reference 34:             var countdown = this.user.exp*1000 - Date.now() - 60000 // Countdown to expiration less 1 minute",
        "// Line_Reference 35:             setTimeout(() => {",
        "// Line_Reference 36:                 this.refreshToken()",
        "// Line_Reference 37:             }, countdown)",
        "// Line_Reference 38:         })",
        "// Line_Reference 39:         .catch(err => {",
        "// Line_Reference 40:             console.log(err)",
        "// Line_Reference 41:             if (err.response && err.response.data.datas.includes('Expired'))",
        "// Line_Reference 42:                 Router.push('/login?tokenError=2')",
        "// Line_Reference 43:             else",
        "// Line_Reference 44:                 Router.push('/login')",
        "// Line_Reference 49:         Vue.prototype.$axios.get('users/destroytoken')",
        "// Line_Reference 53:         .catch(err => Router.push('/login'))",
        "// Line_Reference 54:     },",
        "// Line_Reference 55: ",
        "// Line_Reference 56:     checkToken() {",
        "// Line_Reference 57:         return new Promise((resolve, reject) => {",
        "// Line_Reference 58:             Vue.prototype.$axios.get(`users/checktoken`)",
        "// Line_Reference 59:             .then(data => {",
        "// Line_Reference 60:                 var token = data.data.datas",
        "// Line_Reference 61:                 var decoded = jwtDecode(token);",
        "// Line_Reference 62:                 if (decoded) {",
        "// Line_Reference 63:                     this.user = decoded;",
        "// Line_Reference 64:                     resolve();",
        "// Line_Reference 65:                 }",
        "// Line_Reference 66:                 else",
        "// Line_Reference 67:                     reject('InvalidToken');",
        "// Line_Reference 68:                 resolve()",
        "// Line_Reference 69:             })",
        "// Line_Reference 70:             .catch((error) => {",
        "// Line_Reference 71:                 reject(error);",
        "// Line_Reference 72:             })",
        "// Line_Reference 97:         return (this.user !== null);"
    ]
}
