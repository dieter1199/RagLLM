{
    "cve_id": "CVE-2019-19065",
    "cve_description": "A memory leak in the sdma_init() function in drivers/infiniband/hw/hfi1/sdma.c in the Linux kernel before 5.3.9 allows attackers to cause a denial of service (memory consumption) by triggering rhashtable_init() failures, aka CID-34b3be18a04e. NOTE: This has been disputed as not a vulnerability because \"rhashtable_init() can only fail if it is passed invalid values in the second parameter's struct, but when invoked from sdma_init() that is a pointer to a static const struct, so an attacker could only trigger failure if they could corrupt kernel memory (in which case a small memory leak is not a significant problem).",
    "cve_publish_date": "2019-11-18",
    "cwe_id": "CWE-401",
    "cwe_name": "Missing Release of Memory after Effective Lifetime",
    "cwe_description": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.",
    "commit_message": "RDMA/hfi1: Prevent memory leak in sdma_init\n\nIn sdma_init if rhashtable_init fails the allocated memory for\ntmp_sdma_rht should be released.\n\nFixes: 5a52a7acf7e2 (\"IB/hfi1: NULL pointer dereference when freeing rhashtable\")\nLink: https://lore.kernel.org/r/20190925144543.10141-1-navid.emamdoost@gmail.com\nSigned-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>\nAcked-by: Dennis Dalessandro <dennis.dalessandro@intel.com>\nSigned-off-by: Jason Gunthorpe <jgg@mellanox.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "sdma.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "4",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 1529: \tif (ret < 0)"
    ]
}
