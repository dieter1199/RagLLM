{
    "cve_id": "CVE-2022-39368",
    "cve_description": "Eclipse Californium is a Java implementation of RFC7252 - Constrained Application Protocol for IoT Cloud services. In versions prior to 3.7.0, and 2.7.4, Californium is vulnerable to a Denial of Service. Failing handshakes don't cleanup counters for throttling, causing the threshold to be reached without being released again. This results in permanently dropping records. The issue was reported for certificate based handshakes, but may also affect PSK based handshakes. It generally affects client and server as well. This issue is patched in version 3.7.0 and 2.7.4. There are no known workarounds. main: commit 726bac57659410da463dcf404b3e79a7312ac0b9 2.7.x: commit 5648a0c27c2c2667c98419254557a14bac2b1f3f",
    "cve_publish_date": "2022-11-10",
    "cwe_id": "CWE-404",
    "cwe_name": "Improper Resource Shutdown or Release",
    "cwe_description": "The product does not release or incorrectly releases a resource before it is made available for re-use.",
    "commit_message": "Fix pending job counters.\n\nRun pending jobs on connection shutdown to align the counters.\n\nFixes issue #2065\n\nSigned-off-by: Achim Kraus <achim.kraus@cloudcoap.net>",
    "type_of_change": "Modification",
    "filename_of_changes": "SerialExecutor.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "24",
    "number_of_lines_deleted_vulnerable_to_cve": "19",
    "vulnerable_lines": [
        "// Line_Reference 214: \t * Shutdown this executor and add all pending task from {@link #tasks} to",
        "// Line_Reference 284: \t\t\t\t\t\t\t\tsetOwner();",
        "// Line_Reference 285: \t\t\t\t\t\t\t\tExecutionListener current = listener.get();",
        "// Line_Reference 288: \t\t\t\t\t\t\t\t\t\tcurrent.beforeExecution();",
        "// Line_Reference 290: \t\t\t\t\t\t\t\t\tcommand.run();",
        "// Line_Reference 292: \t\t\t\t\t\t\t\t\tLOGGER.error(\"unexpected error occurred:\", t);",
        "// Line_Reference 293: \t\t\t\t\t\t\t\t} finally {",
        "// Line_Reference 294: \t\t\t\t\t\t\t\t\ttry {",
        "// Line_Reference 295: \t\t\t\t\t\t\t\t\t\tif (current != null) {",
        "// Line_Reference 296: \t\t\t\t\t\t\t\t\t\t\tcurrent.afterExecution();",
        "// Line_Reference 297: \t\t\t\t\t\t\t\t\t\t}",
        "// Line_Reference 298: \t\t\t\t\t\t\t\t\t} catch (Throwable t) {",
        "// Line_Reference 299: \t\t\t\t\t\t\t\t\t\tLOGGER.error(\"unexpected error occurred:\", t);",
        "// Line_Reference 300: \t\t\t\t\t\t\t\t\t}",
        "// Line_Reference 301: \t\t\t\t\t\t\t\t\tclearOwner();",
        "// Line_Reference 303: \t\t\t\t\t\t\t} finally {",
        "// Line_Reference 306: \t\t\t\t\t\t} catch (RejectedExecutionException ex) {",
        "// Line_Reference 307: \t\t\t\t\t\t\tLOGGER.debug(\"shutdown?\", ex);",
        "// Line_Reference 335: \t * Called before and after executing a task."
    ]
}
