{
    "cve_id": "CVE-2024-36404",
    "cve_description": "GeoTools is an open source Java library that provides tools for geospatial data. Prior to versions 31.2, 30.4, and 29.6, Remote Code Execution (RCE) is possible if an application uses certain GeoTools functionality to evaluate XPath expressions supplied by user input. Versions 31.2, 30.4, and 29.6 contain a fix for this issue. As a workaround, GeoTools can operate with reduced functionality by removing the `gt-complex` jar from one's application. As an example of the impact, application schema `datastore` would not function without the ability to use XPath expressions to query complex content. Alternatively, one may utilize a drop-in replacement GeoTools jar from SourceForge for versions 31.1, 30.3, 30.2, 29.2, 28.2, 27.5, 27.4, 26.7, 26.4, 25.2, and 24.0. These jars are for download only and are not available from maven central, intended to quickly provide a fix to affected applications.",
    "cve_publish_date": "2024-07-02",
    "cwe_id": "NVD-CWE-noinfo",
    "commit_message": "[GEOT-7587] Improve handling of XPath expressions",
    "type_of_change": "Modification",
    "filename_of_changes": "FeaturePropertyAccessorFactory.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "8",
    "number_of_lines_deleted_vulnerable_to_cve": "17",
    "vulnerable_lines": [
        "// Line_Reference 23: import java.util.Enumeration;",
        "// Line_Reference 86:         if (SimpleFeature.class.isAssignableFrom(type)) {",
        "// Line_Reference 263:             JXPathContext context = JXPathContext.newContext(object);",
        "// Line_Reference 264:             Enumeration declaredPrefixes = namespaces.getDeclaredPrefixes();",
        "// Line_Reference 265:             while (declaredPrefixes.hasMoreElements()) {",
        "// Line_Reference 266:                 String prefix = (String) declaredPrefixes.nextElement();",
        "// Line_Reference 267:                 String uri = namespaces.getURI(prefix);",
        "// Line_Reference 268:                 context.registerNamespace(prefix, uri);",
        "// Line_Reference 269:             }",
        "// Line_Reference 270: ",
        "// Line_Reference 299:             JXPathContext context = JXPathContext.newContext(object);",
        "// Line_Reference 300:             Enumeration declaredPrefixes = namespaces.getDeclaredPrefixes();",
        "// Line_Reference 301:             while (declaredPrefixes.hasMoreElements()) {",
        "// Line_Reference 302:                 String prefix = (String) declaredPrefixes.nextElement();",
        "// Line_Reference 303:                 String uri = namespaces.getURI(prefix);",
        "// Line_Reference 304:                 context.registerNamespace(prefix, uri);",
        "// Line_Reference 305:             }"
    ]
}
