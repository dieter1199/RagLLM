{
    "cve_id": "CVE-2018-12466",
    "cve_description": "openSUSE openbuildservice before 9.2.4 allowed authenticated users to delete packages on specific projects with project links.",
    "cve_publish_date": "2018-08-01",
    "cwe_id": "CWE-732",
    "cwe_name": "Incorrect Permission Assignment for Critical Resource",
    "cwe_description": "The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.",
    "commit_message": "Ignore a project link in BsRequestAction.check_action_permission!\n\nThis makes sure that we check the permissions of the correct package. For\ninstance, assume that the project \"Staging\" is a link project where the\nlink points to the \"Base\" project. Also, assume that there exists a\n\"Base/foo\" package, but there exists no explicit \"Staging/foo\" package.\nMoreover, assume we check the permissions for the following \"submit\"\naction:\n\n<action type=\"submit\">\n  <source project=\"Staging\" package=\"foo\"/>\n  <target project=\"an_arbitrary_project\" package=\"foo\"/>\n</action>\n\nIn this case, the old code checks if request acceptor can modify the\n\"Base/foo\" package (since it follows the project link). This is wrong\nbecause the \"Staging/foo\" package would be turned into a branch during\naccept.\nThe new code checks the correct package because it does not follow the\nproject link and requires that the source package exists in the source\nproject. Requiring the existence of the source package potentially\nbreaks artificial requests (for instance, a request where the \"submit\"\naction from above is preceded by a \"submit\" action that creates a\n\"Staging/foo\" package).\n\nNote: so far I was unable to exploit the old code - so this is just\nto avoid a potential future headache.\n\nFixes: commit 990ef7ccc (\"[api][webui] Check access to source package\")",
    "type_of_change": "Modification",
    "filename_of_changes": "bs_request_action_submit.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "5",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 118:     source_package = Package.get_by_project_and_name(source_project, self.source_package)",
        "// Line_Reference 119:     return if !source_package || User.current.can_modify?(source_package)"
    ]
}
