{
    "cve_id": "CVE-2022-24751",
    "cve_description": "Zulip is an open source group chat application. Starting with version 4.0 and prior to version 4.11, Zulip is vulnerable to a race condition during account deactivation, where a simultaneous access by the user being deactivated may, in rare cases, allow continued access by the deactivated user. A patch is available in version 4.11 on the 4.x branch and version 5.0-rc1 on the 5.x branch. Upgrading to a fixed version will, as a side effect, deactivate any cached sessions that may have been leaked through this bug. There are currently no known workarounds.",
    "cve_publish_date": "2022-03-16",
    "cwe_id": "CWE-362",
    "cwe_name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
    "cwe_description": "The product contains a code sequence that can run concurrently with other code, and the code sequence requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence that is operating concurrently.",
    "commit_message": "CVE-2022-24751: Clear sessions outside of the transaction.\n\nClearing the sessions inside the transaction makes Zulip vulnerable to\na narrow window where the deleted session has not yet been committed,\nbut has been removed from the memcached cache.  During this window, a\nrequest with the session-id which has just been deleted can\nsuccessfully re-fill the memcached cache, as the in-database delete is\nnot yet committed, and thus not yet visible.  After the delete\ntransaction commits, the cache will be left with a cached session,\nwhich allows further site access until it expires (after\nSESSION_COOKIE_AGE seconds), is ejected from the cache due to memory\npressure, or the server is upgraded.\n\nMove the session deletion outside of the transaction.\n\nBecause the testsuite runs inside of a transaction, it is impossible\nto test this is CI; the testsuite uses the non-caching\n`django.contrib.sessions.backends.db` backend, regardless.  The test\nadded in this commit thus does not fail before this commit; it is\nmerely a base expression that the session should be deleted somehow,\nand does not exercise the assert added in the previous commit.",
    "type_of_change": "Modification",
    "filename_of_changes": "actions.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 1417:         delete_user_sessions(user_profile)"
    ]
}
