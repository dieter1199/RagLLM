{
    "cve_id": "CVE-2014-1832",
    "cve_description": "Phusion Passenger 4.0.37 allows local users to write to certain files and directories via a symlink attack on (1) control_process.pid or a (2) generation-* file.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-1831.",
    "cve_publish_date": "2015-02-19",
    "cwe_id": "NVD-CWE-Other",
    "cwe_name": "Other",
    "cwe_description": "NVD is only using a subset of CWE for mapping instead of the entire CWE, and the weakness type is not covered by that subset.",
    "commit_message": "Fix a symlink-related security vulnerability.\n\nThe fix in commit 34b10878 and contained a small attack time window in\nbetween two filesystem operations. This has been fixed.",
    "type_of_change": "Modification",
    "filename_of_changes": "Utils.cpp",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "0",
    "number_of_lines_deleted_vulnerable_to_cve": "29",
    "vulnerable_lines": [
        "// Line_Reference 146: FileType",
        "// Line_Reference 147: getFileTypeNoFollowSymlinks(const StaticString &filename) {",
        "// Line_Reference 148: \tstruct stat buf;",
        "// Line_Reference 149: \tint ret;",
        "// Line_Reference 150: ",
        "// Line_Reference 151: \tret = lstat(filename.c_str(), &buf);",
        "// Line_Reference 152: \tif (ret == 0) {",
        "// Line_Reference 153: \t\tif (S_ISREG(buf.st_mode)) {",
        "// Line_Reference 154: \t\t\treturn FT_REGULAR;",
        "// Line_Reference 155: \t\t} else if (S_ISDIR(buf.st_mode)) {",
        "// Line_Reference 156: \t\t\treturn FT_DIRECTORY;",
        "// Line_Reference 157: \t\t} else if (S_ISLNK(buf.st_mode)) {",
        "// Line_Reference 158: \t\t\treturn FT_SYMLINK;",
        "// Line_Reference 159: \t\t} else {",
        "// Line_Reference 160: \t\t\treturn FT_OTHER;",
        "// Line_Reference 161: \t\t}",
        "// Line_Reference 162: \t} else {",
        "// Line_Reference 163: \t\tif (errno == ENOENT) {",
        "// Line_Reference 164: \t\t\treturn FT_NONEXISTANT;",
        "// Line_Reference 165: \t\t} else {",
        "// Line_Reference 166: \t\t\tint e = errno;",
        "// Line_Reference 167: \t\t\tstring message(\"Cannot lstat '\");",
        "// Line_Reference 168: \t\t\tmessage.append(filename);",
        "// Line_Reference 169: \t\t\tmessage.append(\"'\");",
        "// Line_Reference 170: \t\t\tthrow FileSystemException(message, e, filename);",
        "// Line_Reference 171: \t\t}",
        "// Line_Reference 172: \t}",
        "// Line_Reference 173: }",
        "// Line_Reference 174: "
    ]
}
