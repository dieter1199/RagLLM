{
    "cve_id": "CVE-2022-29210",
    "cve_description": "TensorFlow is an open source platform for machine learning. In version 2.8.0, the `TensorKey` hash function used total estimated `AllocatedBytes()`, which (a) is an estimate per tensor, and (b) is a very poor hash function for constants (e.g. `int32_t`). It also tried to access individual tensor bytes through `tensor.data()` of size `AllocatedBytes()`. This led to ASAN failures because the `AllocatedBytes()` is an estimate of total bytes allocated by a tensor, including any pointed-to constructs (e.g. strings), and does not refer to contiguous bytes in the `.data()` buffer. The discoverers could not use this byte vector anyway because types such as `tstring` include pointers, whereas they needed to hash the string values themselves. This issue is patched in Tensorflow versions 2.9.0 and 2.8.1.",
    "cve_publish_date": "2022-05-21",
    "cwe_id": "CWE-787",
    "cwe_name": "Out-of-bounds Write",
    "cwe_description": "The product writes data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "Fix TensorKey hash function.\n\nThe original hash function only used total estimated `AllocatedBytes()`, which (a) is an estimate per tensor, and (b) is a very poor hash function for constants (e.g. `int32_t`).\nIt also tried to access individual tensor bytes through `tensor.data()` of size `AllocatedBytes()`.  This led to ASAN failures because the `AllocatedBytes()` is an estimate of total bytes allocated by a tensor, including any pointed-to constructs (e.g. strings), and does not refer to contiguous bytes in the `.data()` buffer.  We couldn't use this byte vector anyways, since types like `tstring` include pointers, whereas we need to hash the string values themselves.\n\nModified the hash function to more closely mirror the `==` operator.  This correctly handles `tstring` and any numeric types that do have contiguous storage.  Other types are currently left as unimplemented.\n\nPiperOrigin-RevId: 446265413",
    "type_of_change": "Modification",
    "filename_of_changes": "tensor_key.h",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "17",
    "number_of_lines_deleted_vulnerable_to_cve": "9",
    "vulnerable_lines": [
        "// Line_Reference 35:     }",
        "// Line_Reference 36:     if (t1.dtype() == DT_STRING) {",
        "// Line_Reference 56:     const uint8* d = static_cast<uint8*>(k.data());",
        "// Line_Reference 57:     size_t s = k.AllocatedBytes();",
        "// Line_Reference 58:     std::vector<uint8> vec;",
        "// Line_Reference 59:     vec.reserve(s);",
        "// Line_Reference 60:     for (int i = 0; i < s; i++) {",
        "// Line_Reference 61:       vec.push_back(d[i]);",
        "// Line_Reference 63:     return H::combine(std::move(h), s);"
    ]
}
