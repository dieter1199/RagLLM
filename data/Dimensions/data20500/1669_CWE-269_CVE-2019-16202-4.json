{
    "cve_id": "CVE-2019-16202",
    "cve_description": "MISP before 2.4.115 allows privilege escalation in certain situations. After updating to 2.4.115, escalation attempts are blocked by the __checkLoggedActions function with a \"This could be an indication of an attempted privilege escalation on older vulnerable versions of MISP (<2.4.115)\" message.",
    "cve_publish_date": "2019-09-10",
    "cwe_id": "CWE-269",
    "cwe_name": "Improper Privilege Management",
    "cwe_description": "The product does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor.",
    "commit_message": "fix: [security] Fix to a vulnerability related to the server index\n\n- along with various support tools\n- more information coming soon",
    "type_of_change": "Modification",
    "filename_of_changes": "UsersController.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "34",
    "number_of_lines_deleted_vulnerable_to_cve": "61",
    "vulnerable_lines": [
        "// Line_Reference 214:                     $this->__extralog(\"change_pw\");",
        "// Line_Reference 872:                     $this->__extralog(\"edit\", \"user\", $fieldsResultStr);",
        "// Line_Reference 957:             $this->__extralog(\"delete\", $fieldsDescrStr, '');",
        "// Line_Reference 1013:             $this->__extralog(\"login\");",
        "// Line_Reference 1128:             $this->__extralog(\"logout\");",
        "// Line_Reference 1143:     public function resetauthkey($id = null)",
        "// Line_Reference 1152:             throw new MethodNotAllowedException('Invalid action.');",
        "// Line_Reference 1154:         $this->User->id = $id;",
        "// Line_Reference 1155:         if (!$id || !$this->User->exists($id)) {",
        "// Line_Reference 1156:             throw new MethodNotAllowedException('Invalid user.');",
        "// Line_Reference 1157:         }",
        "// Line_Reference 1158:         $user = $this->User->read();",
        "// Line_Reference 1159:         $oldKey = $this->User->data['User']['authkey'];",
        "// Line_Reference 1160:         if (!$this->_isSiteAdmin() && !($this->_isAdmin() && $this->Auth->user('org_id') == $this->User->data['User']['org_id']) && ($this->Auth->user('id') != $id)) {",
        "// Line_Reference 1161:             throw new MethodNotAllowedException('Invalid user.');",
        "// Line_Reference 1162:         }",
        "// Line_Reference 1163:         $newkey = $this->User->generateAuthKey();",
        "// Line_Reference 1164:         $this->User->saveField('authkey', $newkey);",
        "// Line_Reference 1165:         $this->__extralog(",
        "// Line_Reference 1166:                 'reset_auth_key',",
        "// Line_Reference 1167:                 'Authentication key for user ' . $user['User']['id'] . ' (' . $user['User']['email'] . ')',",
        "// Line_Reference 1168:                 $fieldsResult = 'authkey(' . $oldKey . ') => (' . $newkey . ')'",
        "// Line_Reference 1169:         );",
        "// Line_Reference 1300:     private function __extralog($action = null, $description = null, $fieldsResult = null)",
        "// Line_Reference 1301:     {",
        "// Line_Reference 1302:         // new data",
        "// Line_Reference 1303:         $model = 'User';",
        "// Line_Reference 1304:         $modelId = $this->Auth->user('id');",
        "// Line_Reference 1305:         if ($action == 'login') {",
        "// Line_Reference 1306:             $description = \"User (\" . $this->Auth->user('id') . \"): \" . $this->data['User']['email'];",
        "// Line_Reference 1307:         } elseif ($action == 'logout') {",
        "// Line_Reference 1308:             $description = \"User (\" . $this->Auth->user('id') . \"): \" . $this->Auth->user('email');",
        "// Line_Reference 1309:         } elseif ($action == 'edit') {",
        "// Line_Reference 1310:             $description = \"User (\" . $this->User->id . \"): \" . $this->data['User']['email'];",
        "// Line_Reference 1311:         } elseif ($action == 'change_pw') {",
        "// Line_Reference 1312:             $description = \"User (\" . $this->User->id . \"): \" . $this->Auth->user('email');",
        "// Line_Reference 1313:             $fieldsResult = \"Password changed.\";",
        "// Line_Reference 1314:         }",
        "// Line_Reference 1315: ",
        "// Line_Reference 1316:         // query",
        "// Line_Reference 1317:         $this->Log = ClassRegistry::init('Log');",
        "// Line_Reference 1318:         $this->Log->create();",
        "// Line_Reference 1319:         $this->Log->save(array(",
        "// Line_Reference 1320:             'org' => $this->Auth->user('Organisation')['name'],",
        "// Line_Reference 1321:             'model' => $model,",
        "// Line_Reference 1322:             'model_id' => $modelId,",
        "// Line_Reference 1323:             'email' => $this->Auth->user('email'),",
        "// Line_Reference 1324:             'action' => $action,",
        "// Line_Reference 1325:             'title' => $description,",
        "// Line_Reference 1326:             'change' => isset($fieldsResult) ? $fieldsResult : ''));",
        "// Line_Reference 1327: ",
        "// Line_Reference 1328:         // write to syslogd as well",
        "// Line_Reference 1329:         App::import('Lib', 'SysLog.SysLog');",
        "// Line_Reference 1330:         $syslog = new SysLog();",
        "// Line_Reference 1331:         if (isset($fieldsResult) && $fieldsResult) {",
        "// Line_Reference 1332:             $syslog->write('notice', $description . ' -- ' . $action . ' -- ' . $fieldsResult);",
        "// Line_Reference 1333:         } else {",
        "// Line_Reference 1334:             $syslog->write('notice', $description . ' -- ' . $action);",
        "// Line_Reference 1335:         }",
        "// Line_Reference 1336:     }",
        "// Line_Reference 1337: "
    ]
}
