{
    "cve_id": "CVE-2020-12278",
    "cve_description": "An issue was discovered in libgit2 before 0.28.4 and 0.9x before 0.99.0. path.c mishandles equivalent filenames that exist because of NTFS Alternate Data Streams. This may allow remote code execution when cloning a repository. This issue is similar to CVE-2019-1352.",
    "cve_publish_date": "2020-04-27",
    "cwe_id": "CWE-706",
    "cwe_name": "Use of Incorrectly-Resolved Name or Reference",
    "cwe_description": "The product uses a name or reference to access a resource, but the name/reference resolves to a resource that is outside of the intended control sphere.",
    "commit_message": "Disallow NTFS Alternate Data Stream attacks, even on Linux/macOS\n\nA little-known feature of NTFS is that it offers to store metadata in\nso-called \"Alternate Data Streams\" (inspired by Apple's \"resource\nforks\") that are copied together with the file they are associated with.\nThese Alternate Data Streams can be accessed via `<file name>:<stream\nname>:<stream type>`.\n\nDirectories, too, have Alternate Data Streams, and they even have a\ndefault stream type `$INDEX_ALLOCATION`. Which means that `abc/` and\n`abc::$INDEX_ALLOCATION/` are actually equivalent.\n\nThis is of course another attack vector on the Git directory that we\ndefinitely want to prevent.\n\nOn Windows, we already do this incidentally, by disallowing colons in\nfile/directory names.\n\nWhile it looks as if files'/directories' Alternate Data Streams are not\naccessible in the Windows Subsystem for Linux, and neither via\nCIFS/SMB-mounted network shares in Linux, it _is_ possible to access\nthem on SMB-mounted network shares on macOS.\n\nTherefore, let's go the extra mile and prevent this particular attack\n_everywhere_. To keep things simple, let's just disallow *any* Alternate\nData Stream of `.git`.\n\nThis is libgit2's variant of CVE-2019-1352.\n\nSigned-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>",
    "type_of_change": "Modification",
    "filename_of_changes": "path.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "6",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 1627: \t/* Reject paths like \".git\\\" */",
        "// Line_Reference 1628: \tif (path[start] == '\\\\')"
    ]
}
