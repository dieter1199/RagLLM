{
    "cve_id": "CVE-2022-40307",
    "cve_description": "An issue was discovered in the Linux kernel through 5.19.8. drivers/firmware/efi/capsule-loader.c has a race condition with a resultant use-after-free.",
    "cve_publish_date": "2022-09-09",
    "cwe_id": "CWE-362",
    "cwe_name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
    "cwe_description": "The product contains a code sequence that can run concurrently with other code, and the code sequence requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence that is operating concurrently.",
    "commit_message": "efi: capsule-loader: Fix use-after-free in efi_capsule_write\n\nA race condition may occur if the user calls close() on another thread\nduring a write() operation on the device node of the efi capsule.\n\nThis is a race condition that occurs between the efi_capsule_write() and\nefi_capsule_flush() functions of efi_capsule_fops, which ultimately\nresults in UAF.\n\nSo, the page freeing process is modified to be done in\nefi_capsule_release() instead of efi_capsule_flush().\n\nCc: <stable@vger.kernel.org> # v4.9+\nSigned-off-by: Hyunwoo Kim <imv4bel@gmail.com>\nLink: https://lore.kernel.org/all/20220907102920.GA88602@ubuntu/\nSigned-off-by: Ard Biesheuvel <ardb@kernel.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "capsule-loader.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "7",
    "number_of_lines_deleted_vulnerable_to_cve": "24",
    "vulnerable_lines": [
        "// Line_Reference 245: /**",
        "// Line_Reference 246:  * efi_capsule_flush - called by file close or file flush",
        "// Line_Reference 247:  * @file: file pointer",
        "// Line_Reference 248:  * @id: not used",
        "// Line_Reference 249:  *",
        "// Line_Reference 250:  *\tIf a capsule is being partially uploaded then calling this function",
        "// Line_Reference 251:  *\twill be treated as upload termination and will free those completed",
        "// Line_Reference 252:  *\tbuffer pages and -ECANCELED will be returned.",
        "// Line_Reference 253:  **/",
        "// Line_Reference 254: static int efi_capsule_flush(struct file *file, fl_owner_t id)",
        "// Line_Reference 255: {",
        "// Line_Reference 256: \tint ret = 0;",
        "// Line_Reference 257: \tstruct capsule_info *cap_info = file->private_data;",
        "// Line_Reference 258: ",
        "// Line_Reference 259: \tif (cap_info->index > 0) {",
        "// Line_Reference 260: \t\tpr_err(\"capsule upload not complete\\n\");",
        "// Line_Reference 261: \t\tefi_free_all_buff_pages(cap_info);",
        "// Line_Reference 262: \t\tret = -ECANCELED;",
        "// Line_Reference 263: \t}",
        "// Line_Reference 264: ",
        "// Line_Reference 265: \treturn ret;",
        "// Line_Reference 266: }",
        "// Line_Reference 267: ",
        "// Line_Reference 327: \t.flush = efi_capsule_flush,"
    ]
}
