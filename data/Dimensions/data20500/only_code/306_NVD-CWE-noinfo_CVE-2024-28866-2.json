loadingPageIsSetTo("/test.loading.page.html");
assertLoadingResponseInHTML(response, "<div><b>GoCD server is starting. This comes from test.loading.page.html</b></div>");
loadingPageIsSetTo("/test.loading.page.html");
assertLoadingResponseInHTML(response, "<div><b>GoCD server is starting. This comes from test.loading.page.html</b></div>");
loadingPageIsSetTo("/test.loading.page.html");
assertLoadingResponseInHTML(response, "<div><b>GoCD server is starting. This comes from test.loading.page.html</b></div>");
}
@Test
void shouldRespondWithSimpleMessageIfLoadingHTMLFileCannotBeLoaded() throws Exception {
webAppIsStarting();
loadingPageIsSetTo("/some-non-existent-file");
MockResponse response = request("/go/pipelines", "text/html");
assertLoadingResponseInHTML(response, "<h2>GoCD is starting up. Please wait ....</h2>");
private void assertLoadingResponseInHTML(MockResponse response, String expectedBody) {
withBody(expectedBody).
private void loadingPageIsSetTo(String loadingPageResourcePath) {
when(systemEnvironment.get(SystemEnvironment.LOADING_PAGE)).thenReturn(loadingPageResourcePath);
}
private HttpServletResponse response;
private PrintWriter printWriter;
