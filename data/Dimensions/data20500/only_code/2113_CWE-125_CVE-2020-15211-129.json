const TfLiteTensor* top_k = GetInput(context, node, kInputTopK);
const TfLiteTensor* input = GetInput(context, node, kInputTensor);
TfLiteTensor* output_indexes = GetOutput(context, node, kOutputIndexes);
TfLiteTensor* output_values = GetOutput(context, node, kOutputValues);
const TfLiteTensor* input = GetInput(context, node, kInputTensor);
TfLiteTensor* output_values = GetOutput(context, node, kOutputValues);
const TfLiteTensor* top_k = GetInput(context, node, kInputTopK);
TfLiteTensor* output_indexes = GetOutput(context, node, kOutputIndexes);
TfLiteTensor* output_values = GetOutput(context, node, kOutputValues);
TfLiteTensor* output_values = GetOutput(context, node, kOutputValues);
TfLiteTensor* output_indexes = GetOutput(context, node, kOutputIndexes);
const TfLiteTensor* top_k = GetInput(context, node, kInputTopK);
const TfLiteTensor* input = GetInput(context, node, kInputTensor);