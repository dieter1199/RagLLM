int uri_found, authorization_type_enabled;
if (check_result_value(j_client, G_OK)) {
uri_found = 0;
} else {
uri_found = 1;
static int validate_code_challenge(json_t * j_result_code, const char * code_verifier) {
if (!json_string_null_or_empty(json_object_get(j_result_code, "code_challenge"))) {
y_log_message(Y_LOG_LEVEL_ERROR, "validate_code_challenge - Error o_base64url_encode");
y_log_message(Y_LOG_LEVEL_ERROR, "validate_code_challenge - Error gnutls_fingerprint");
ret = G_ERROR_PARAM;
ret = G_ERROR_PARAM;
} else {
ret = G_OK;
if ((res = validate_code_challenge(json_array_get(j_result, 0), code_verifier)) == G_OK) {
if (u_map_has_key(request->map_url, "g_continue")) {
if (!o_strnullempty(u_map_get(request->map_url, "scope"))) {
// Scope is not allowed for this user
y_log_message(Y_LOG_LEVEL_DEBUG, "check_auth_type_auth_code_grant - oauth2 - scope list is missing or empty, origin: %s", ip_source);
response->status = 302;
redirect_url = msprintf("%s%serror=invalid_scope%s", u_map_get(request->map_url, "redirect_uri"), (o_strchr(u_map_get(request->map_url, "redirect_uri"), '?')!=NULL?"&":"?"), state_param);
// Redirect to login page
redirect_url = get_login_url(config, request, "auth", u_map_get(request->map_url, "client_id"), u_map_get(request->map_url, "scope"), NULL);
ulfius_add_header_to_response(response, "Location", redirect_url);
o_free(redirect_url);
response->status = 302;
response->status = 302;
redirect_url = msprintf("%s%serror=unauthorized_client%s%s", u_map_get(request->map_url, "redirect_uri"), (o_strchr(u_map_get(request->map_url, "redirect_uri"), '?')!=NULL?"&":"?"), (u_map_get(request->map_url, "state")!=NULL?"&state=":""), (u_map_get(request->map_url, "state")!=NULL?u_map_get(request->map_url, "state"):""));
ulfius_add_header_to_response(response, "Location", redirect_url);
o_free(redirect_url);
if (u_map_has_key(request->map_url, "g_continue")) {
if (!o_strnullempty(u_map_get(request->map_url, "scope"))) {
// Empty scope is not allowed
response->status = 302;
redirect_url = msprintf("%s%serror=invalid_scope%s", u_map_get(request->map_url, "redirect_uri"), (o_strchr(u_map_get(request->map_url, "redirect_uri"), '?')!=NULL?"&":"?"), state_param);
// Redirect to login page
redirect_url = get_login_url(config, request, "auth", u_map_get(request->map_url, "client_id"), u_map_get(request->map_url, "scope"), NULL);
ulfius_add_header_to_response(response, "Location", redirect_url);
o_free(redirect_url);
response->status = 302;
response->status = 302;
redirect_url = msprintf("%s%serror=unauthorized_client%s%s", u_map_get(request->map_url, "redirect_uri"), (o_strchr(u_map_get(request->map_url, "redirect_uri"), '?')!=NULL?"&":"?"), (u_map_get(request->map_url, "state")!=NULL?"&state=":""), (u_map_get(request->map_url, "state")!=NULL?u_map_get(request->map_url, "state"):""));
ulfius_add_header_to_response(response, "Location", redirect_url);
o_free(redirect_url);
char * redirect_url, * state_encoded = NULL, * state_param = NULL;
if (u_map_get(request->map_url, "redirect_uri") != NULL) {
response->status = 302;
redirect_url = msprintf("%s#error=unsupported_response_type%s", u_map_get(request->map_url, "redirect_uri"), state_param);
ulfius_add_header_to_response(response, "Location", redirect_url);
o_free(redirect_url);
} else {
response->status = 403;
}
} else {
if (u_map_get(request->map_url, "redirect_uri") != NULL) {
response->status = 302;
redirect_url = msprintf("%s#error=unsupported_response_type%s", u_map_get(request->map_url, "redirect_uri"), state_param);
ulfius_add_header_to_response(response, "Location", redirect_url);
o_free(redirect_url);
} else {
response->status = 403;
}
}
} else {
if (u_map_get(request->map_url, "redirect_uri") != NULL) {
response->status = 302;
redirect_url = msprintf("%s#error=unsupported_response_type%s", u_map_get(request->map_url, "redirect_uri"), state_param);
ulfius_add_header_to_response(response, "Location", redirect_url);
o_free(redirect_url);