import os
import string
import popen2
customized_dico="/usr/local/share/aspell/w3c.dat"
return "<option value='%s'%s>%s</option>" % (a,selected,b)
def concat(a,b):
return a+b
line = fp.readline()
count = 0
while line!="":
if line!="\n" and line !="*\n" and line[0]!="@":
line = line[:-1]
parts = string.split(line,": ")
fields = string.split(parts[0]," ")
if fields[0]=="&":
values = string.split(parts[1],", ")
if (not words.has_key(fields[1])):
words[fields[1]]=values
if (not words.has_key(fields[1])):
words[fields[1]]=[]
elif line=="\n":
count = count + 1
line = fp.readline()
offsets = {}
count = 0
if len(words):
keys = words.keys()
keys.sort()
print "<form action=\"http://www.w3.org/Team/update_dictionary\" method=\"post\"><ol>"
for error in keys:
print "<li>\"<span class='no'>%s</span>\" (<input type=\"checkbox\" name=\"list[]\" value=\"%s\"/> add to the dictionary)" % (error,error)
if len(words[error]) and suggest:
print "; suggestions:<ul class='suggestions'>"
for option in words[error]:
print "<li>%s</li>" % option
print "</ul>"
print "</li>"
print "</ol><p><label><input type=\"submit\" value=\"Update dictionary\"/> (W3C Comm Team only)</label></p></form>"
else:
if  os.environ.has_key('SCRIPT_NAME'):
fields = cgi.FieldStorage()
uri =""
uri_text =""
uri_text1=""
suggest=0
suggest_txt=''
if fields.has_key('uri'):
uri = fields['uri'].value
elif fields.has_key('referrer') and os.environ.has_key('HTTP_REFERER'):
uri = os.environ['HTTP_REFERER']
if uri:
uri_text1="for %s" % (cgi.escape(uri))
uri_text=" for <a href=\"%s\">%s</a>" %(cgi.escape(uri),cgi.escape(uri))
lang = "en_US"
if fields.has_key('lang') and fields['lang'].value in languages.keys():
lang=fields['lang'].value
languages_options = reduce(concat,map(format_option,languages.keys(),languages.values(),[lang for x in languages.keys()]))
if fields.has_key('suggest'):
if fields['suggest'].value=='on':
suggest=1
suggest_txt=" checked='checked'"
if uri:
import http_auth
url_opener = http_auth.ProxyAuthURLopener()
try:
fp = url_opener.open(uri)
except IOError as e:
url_opener.error = "I/O error: %s %s" % (e.errno,e.strerror)
fp = None
print Page1 % ('<meta name="ROBOTS" content="NOINDEX,NOFOLLOW"/>',uri_text1,uri_text,cgi.escape(uri),languages_options,suggest_txt)
if fp:
personal = "--personal=%s" % customized_dico
if lang!="en_US":
personal = ""
headers = fp.info()
charset_opt = ""
if headers.has_key('Content-Type'):
contentType = cgi.parse_header(headers["Content-Type"])
if contentType[1].has_key('charset'):
charset_opt = "-assume_charset=%s" % contentType[1]['charset']
command = "/usr/bin/lynx  %s -cfg=/usr/local/lib/lynx.cfg -nolist -dump -stdin|/usr/bin/aspell --encoding=utf-8 --lang %s -a %s --sug-mode=fast" % (charset_opt,lang,personal)
(piperfd,pipewfd,pipeErr) = popen2.popen3(command)
pipewfd.write(fp.read())
fp.close()
pipewfd.close()
# Need to find a way to display any errors if relevant
processingErrors=""
if (processingErrors):
print "<p>The following error occurred when trying to process your request :</p><pre class='no'>"
print "</pre>"
pipeErr.close()
if (piperfd):
print "<h2>Errors found in the page</h2>"
format(piperfd,suggest)
piperfd.close()
else:
print "<p><span class='no'>Unable to read</span> <a href='%s'>%s</a> (%s). Sorry, check the URI.</p>" % (cgi.escape(uri),cgi.escape(uri), url_opener.error)
else:
print Page1 % ('',uri_text1,uri_text,cgi.escape(uri),languages_options,suggest_txt)
print Page2
