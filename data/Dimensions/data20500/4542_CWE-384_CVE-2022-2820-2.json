{
    "cve_id": "CVE-2022-2820",
    "cve_description": "Session Fixation in GitHub repository namelessmc/nameless prior to v2.0.2.\n\n",
    "cve_publish_date": "2022-08-15",
    "cwe_id": "CWE-384",
    "cwe_name": "Session Fixation",
    "cwe_description": "Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.",
    "commit_message": "Rework user sessions system (#3000)\n\nCo-authored-by: samerton <samerton@users.noreply.github.com>",
    "type_of_change": "ModificationType.ADD",
    "filename_of_changes": "User.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "41",
    "number_of_lines_deleted_vulnerable_to_cve": "25",
    "vulnerable_lines": [
        "// Line_Reference 9:  * @version 2.0.0-pr13",
        "// Line_Reference 76:                 $user = Session::get($this->_sessionName);",
        "// Line_Reference 77:                 if ($this->find($user, $field)) {",
        "// Line_Reference 82:                 $user = Session::get($this->_admSessionName);",
        "// Line_Reference 83:                 if ($user == $this->data()->id && $this->find($user, $field)) {",
        "// Line_Reference 110:             $data = $this->_db->get('users', [$field, $value]);",
        "// Line_Reference 300:      * @param string $method What column to check for their details in. Can be either `username` or `email`.",
        "// Line_Reference 310:         if (!$username && !$password && $this->exists()) {",
        "// Line_Reference 311:             Session::put($sessionName, $this->data()->id);",
        "// Line_Reference 317:             Session::put($sessionName, $this->data()->id);",
        "// Line_Reference 319:             if ($remember) {",
        "// Line_Reference 320:                 $hash = SecureRandom::alphanumeric();",
        "// Line_Reference 321:                 $table = $is_admin ? 'users_admin_session' : 'users_session';",
        "// Line_Reference 322:                 $hashCheck = $this->_db->get($table, ['user_id', $this->data()->id]);",
        "// Line_Reference 323: ",
        "// Line_Reference 324:                 if (!$hashCheck->count()) {",
        "// Line_Reference 325:                     $this->_db->insert($table, [",
        "// Line_Reference 326:                         'user_id' => $this->data()->id,",
        "// Line_Reference 327:                         'hash' => $hash",
        "// Line_Reference 328:                     ]);",
        "// Line_Reference 329:                 } else {",
        "// Line_Reference 330:                     $hash = $hashCheck->first()->hash;",
        "// Line_Reference 331:                 }",
        "// Line_Reference 540:         $this->_db->delete('users_session', ['user_id', $this->data()->id]);",
        "// Line_Reference 550:         $this->_db->delete('users_admin_session', ['user_id', $this->data()->id]);"
    ]
}
