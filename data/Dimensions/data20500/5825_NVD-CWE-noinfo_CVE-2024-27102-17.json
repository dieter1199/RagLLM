{
    "cve_id": "CVE-2024-27102",
    "cve_description": "Wings is the server control plane for Pterodactyl Panel. This vulnerability impacts anyone running the affected versions of Wings. The vulnerability can potentially be used to access files and directories on the host system. The full scope of impact is exactly unknown, but reading files outside of a server's base directory (sandbox root) is possible. In order to use this exploit, an attacker must have an existing \"server\" allocated and controlled by Wings. Details on the exploitation of this vulnerability are embargoed until March 27th, 2024 at 18:00 UTC. In order to mitigate this vulnerability, a full rewrite of the entire server filesystem was necessary. Because of this, the size of the patch is massive, however effort was made to reduce the amount of breaking changes. Users are advised to update to version 1.11.9. There are no known workarounds for this vulnerability.",
    "cve_publish_date": "2024-03-13",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "server(filesystem): rebuild everything imaginable\n\nThis wonderfully large commit replaces basically everything under the\n`server/filesystem` package, re-implementing essentially everything.\n\nThis is related to\nhttps://github.com/pterodactyl/wings/security/advisories/GHSA-494h-9924-xww9\n\nIf any vulnerabilities related to symlinks persist after this commit, I\nwill be very upset.\n\nSigned-off-by: Matthew Penner <me@matthewp.io>",
    "type_of_change": "Modification",
    "filename_of_changes": "handler.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "5",
    "number_of_lines_deleted_vulnerable_to_cve": "18",
    "vulnerable_lines": [
        "// Line_Reference 5: \t\"io/ioutil\"",
        "// Line_Reference 125: \tf, err := h.fs.Touch(request.Filepath, os.O_RDWR|os.O_CREATE|os.O_TRUNC)",
        "// Line_Reference 223: \t\tsource, err := h.fs.SafePath(request.Filepath)",
        "// Line_Reference 224: \t\tif err != nil {",
        "// Line_Reference 225: \t\t\treturn sftp.ErrSSHFxNoSuchFile",
        "// Line_Reference 226: \t\t}",
        "// Line_Reference 227: \t\ttarget, err := h.fs.SafePath(request.Target)",
        "// Line_Reference 228: \t\tif err != nil {",
        "// Line_Reference 229: \t\t\treturn sftp.ErrSSHFxNoSuchFile",
        "// Line_Reference 230: \t\t}",
        "// Line_Reference 231: \t\tif err := os.Symlink(source, target); err != nil {",
        "// Line_Reference 232: \t\t\tl.WithField(\"target\", target).WithField(\"error\", err).Error(\"failed to create symlink\")",
        "// Line_Reference 277: \t\tp, err := h.fs.SafePath(request.Filepath)",
        "// Line_Reference 278: \t\tif err != nil {",
        "// Line_Reference 279: \t\t\treturn nil, sftp.ErrSSHFxNoSuchFile",
        "// Line_Reference 280: \t\t}",
        "// Line_Reference 281: \t\tfiles, err := ioutil.ReadDir(p)",
        "// Line_Reference 286: \t\treturn ListerAt(files), nil"
    ]
}
