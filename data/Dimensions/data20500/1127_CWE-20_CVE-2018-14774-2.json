{
    "cve_id": "CVE-2018-14774",
    "cve_description": "An issue was discovered in HttpKernel in Symfony 2.7.0 through 2.7.48, 2.8.0 through 2.8.43, 3.3.0 through 3.3.17, 3.4.0 through 3.4.13, 4.0.0 through 4.0.13, and 4.1.0 through 4.1.2. When using HttpCache, the values of the X-Forwarded-Host headers are implicitly set as trusted while this should be forbidden, leading to potential host header injection.",
    "cve_publish_date": "2018-08-03",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "[HttpKernel] fix trusted headers management in HttpCache and InlineFragmentRenderer",
    "type_of_change": "Modification",
    "filename_of_changes": "HttpCacheTest.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "30",
    "number_of_lines_deleted_vulnerable_to_cve": "24",
    "vulnerable_lines": [
        "// Line_Reference 1306:         $this->assertEquals('127.0.0.1', $this->kernel->getBackendRequest()->server->get('REMOTE_ADDR'));",
        "// Line_Reference 1312:     public function testHttpCacheIsSetAsATrustedProxy(array $existing, array $expected)",
        "// Line_Reference 1319:         $this->assertEquals($expected, Request::getTrustedProxies());",
        "// Line_Reference 1327:             array(array(), array('127.0.0.1')),",
        "// Line_Reference 1328:             array(array('10.0.0.2'), array('10.0.0.2', '127.0.0.1')),",
        "// Line_Reference 1329:             array(array('10.0.0.2', '127.0.0.1'), array('10.0.0.2', '127.0.0.1')),",
        "// Line_Reference 1334:      * @dataProvider getXForwardedForData",
        "// Line_Reference 1336:     public function testXForwarderForHeaderForForwardedRequests($xForwardedFor, $expected)",
        "// Line_Reference 1340:         if (false !== $xForwardedFor) {",
        "// Line_Reference 1341:             $server['HTTP_X_FORWARDED_FOR'] = $xForwardedFor;",
        "// Line_Reference 1345:         $this->assertEquals($expected, $this->kernel->getBackendRequest()->headers->get('X-Forwarded-For'));",
        "// Line_Reference 1348:     public function getXForwardedForData()",
        "// Line_Reference 1351:             array(false, '10.0.0.1'),",
        "// Line_Reference 1352:             array('10.0.0.2', '10.0.0.2, 10.0.0.1'),",
        "// Line_Reference 1353:             array('10.0.0.2, 10.0.0.3', '10.0.0.2, 10.0.0.3, 10.0.0.1'),",
        "// Line_Reference 1357:     public function testXForwarderForHeaderForPassRequests()",
        "// Line_Reference 1358:     {",
        "// Line_Reference 1359:         $this->setNextResponse();",
        "// Line_Reference 1360:         $server = array('REMOTE_ADDR' => '10.0.0.1');",
        "// Line_Reference 1361:         $this->request('POST', '/', $server);",
        "// Line_Reference 1362: ",
        "// Line_Reference 1363:         $this->assertEquals('10.0.0.1', $this->kernel->getBackendRequest()->headers->get('X-Forwarded-For'));",
        "// Line_Reference 1364:     }",
        "// Line_Reference 1365: "
    ]
}
