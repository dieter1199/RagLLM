{
    "cve_id": "CVE-2022-25918",
    "cve_description": "The package shescape from 1.5.10 and before 1.6.1 are vulnerable to Regular Expression Denial of Service (ReDoS) via the escape function in index.js, due to the usage of insecure regex in the escapeArgBash function.",
    "cve_publish_date": "2022-10-27",
    "cwe_id": "CWE-1333",
    "cwe_name": "Inefficient Regular Expression Complexity",
    "cwe_description": "The product uses a regular expression with an inefficient, possibly exponential worst-case computational complexity that consumes excessive CPU cycles.",
    "commit_message": "Merge pull request from GHSA-cr84-xvw4-qx3c\n\n* Test polynomial backtracking ReDoS attack string on Bash\n\nCreate a unit test for a (new) ReDoS string on bash. This test should be\nfailing in this commit.\n\n* Fix ReDoS (as seen in ReDoS test 1) for bash\n\nUpdate bash escaping to pessimistically escape opening curly braces,\nsimilar to Zsh escaping, to fix the ReDoS due to the complex regular\nexpression for opening curly braces.\n\nUpdate tests accordingly.\n\n* Test against old ReDoS values and all shells\n\nRefactor the ReDoS test such that 1) it's tested against all (supported)\nshells, and 2) extensible to test against multiple potential ReDoS\nstrings. Regarding the latter, the scope has been updated to include\nknown ReDoS strings related to CVE-2022-36064.\n\nThe `redos` value is intentionally a function as this avoids building\nthe string unnecessarily if the file is imported but the `redos` value\nisn't used.\n\n* Update SECURITY.md\n\nAdd latest advisory and credit its finder",
    "type_of_change": "Modification",
    "filename_of_changes": "unix.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "4",
    "vulnerable_lines": [
        "// Line_Reference 51:       .replace(/([\"$&'()*;<>?`|])/gu, \"\\\\$1\")",
        "// Line_Reference 52:       .replace(/(?<!\\{)\\{+(?=(?:[^{][^,.]*)?[,.][^}]*\\})/gu, (curlyBraces) =>",
        "// Line_Reference 53:         curlyBraces.replace(/\\{/gu, \"\\\\{\")",
        "// Line_Reference 54:       )"
    ]
}
