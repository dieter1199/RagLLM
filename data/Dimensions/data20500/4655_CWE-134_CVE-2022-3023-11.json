{
    "cve_id": "CVE-2022-3023",
    "cve_description": "Use of Externally-Controlled Format String in GitHub repository pingcap/tidb prior to 6.4.0, 6.1.3.",
    "cve_publish_date": "2022-11-04",
    "cwe_id": "CWE-134",
    "cwe_name": "Use of Externally-Controlled Format String",
    "cwe_description": "The product uses a function that accepts a format string as an argument, but the format string originates from an external source.",
    "commit_message": "*: don't use DSN to avoid some security problems (#38342)",
    "type_of_change": "Modification",
    "filename_of_changes": "util_test.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "5",
    "number_of_lines_deleted_vulnerable_to_cve": "64",
    "vulnerable_lines": [
        "// Line_Reference 19: \t\"database/sql\"",
        "// Line_Reference 20: \t\"database/sql/driver\"",
        "// Line_Reference 25: \t\"math/rand\"",
        "// Line_Reference 28: \t\"strconv\"",
        "// Line_Reference 38: \ttmysql \"github.com/pingcap/tidb/errno\"",
        "// Line_Reference 88: func TestToDSN(t *testing.T) {",
        "// Line_Reference 89: \tparam := common.MySQLConnectParam{",
        "// Line_Reference 90: \t\tHost:             \"127.0.0.1\",",
        "// Line_Reference 91: \t\tPort:             4000,",
        "// Line_Reference 92: \t\tUser:             \"root\",",
        "// Line_Reference 93: \t\tPassword:         \"123456\",",
        "// Line_Reference 94: \t\tSQLMode:          \"strict\",",
        "// Line_Reference 95: \t\tMaxAllowedPacket: 1234,",
        "// Line_Reference 96: \t\tTLS:              \"cluster\",",
        "// Line_Reference 97: \t\tVars: map[string]string{",
        "// Line_Reference 98: \t\t\t\"tidb_distsql_scan_concurrency\": \"1\",",
        "// Line_Reference 99: \t\t},",
        "// Line_Reference 100: \t}",
        "// Line_Reference 101: \trequire.Equal(t, \"root:123456@tcp(127.0.0.1:4000)/?charset=utf8mb4&sql_mode='strict'&maxAllowedPacket=1234&tls=cluster&tidb_distsql_scan_concurrency='1'\", param.ToDSN())",
        "// Line_Reference 102: ",
        "// Line_Reference 103: \tparam.Host = \"::1\"",
        "// Line_Reference 104: \trequire.Equal(t, \"root:123456@tcp([::1]:4000)/?charset=utf8mb4&sql_mode='strict'&maxAllowedPacket=1234&tls=cluster&tidb_distsql_scan_concurrency='1'\", param.ToDSN())",
        "// Line_Reference 105: }",
        "// Line_Reference 106: ",
        "// Line_Reference 107: type mockDriver struct {",
        "// Line_Reference 108: \tdriver.Driver",
        "// Line_Reference 109: \tplainPsw string",
        "// Line_Reference 110: }",
        "// Line_Reference 111: ",
        "// Line_Reference 112: func (m *mockDriver) Open(dsn string) (driver.Conn, error) {",
        "// Line_Reference 113: \tcfg, err := mysql.ParseDSN(dsn)",
        "// Line_Reference 114: \tif err != nil {",
        "// Line_Reference 115: \t\treturn nil, err",
        "// Line_Reference 116: \t}",
        "// Line_Reference 117: \taccessDenied := cfg.Passwd != m.plainPsw",
        "// Line_Reference 118: \treturn &mockConn{accessDenied: accessDenied}, nil",
        "// Line_Reference 119: }",
        "// Line_Reference 120: ",
        "// Line_Reference 121: type mockConn struct {",
        "// Line_Reference 122: \tdriver.Conn",
        "// Line_Reference 123: \tdriver.Pinger",
        "// Line_Reference 124: \taccessDenied bool",
        "// Line_Reference 125: }",
        "// Line_Reference 126: ",
        "// Line_Reference 127: func (c *mockConn) Ping(ctx context.Context) error {",
        "// Line_Reference 128: \tif c.accessDenied {",
        "// Line_Reference 129: \t\treturn &mysql.MySQLError{Number: tmysql.ErrAccessDenied, Message: \"access denied\"}",
        "// Line_Reference 130: \t}",
        "// Line_Reference 131: \treturn nil",
        "// Line_Reference 132: }",
        "// Line_Reference 133: ",
        "// Line_Reference 134: func (c *mockConn) Close() error {",
        "// Line_Reference 135: \treturn nil",
        "// Line_Reference 136: }",
        "// Line_Reference 137: ",
        "// Line_Reference 140: \tdriverName := \"mysql-mock-\" + strconv.Itoa(rand.Int())",
        "// Line_Reference 141: \tsql.Register(driverName, &mockDriver{plainPsw: plainPsw})",
        "// Line_Reference 144: \t\t\"github.com/pingcap/tidb/br/pkg/lightning/common/MockMySQLDriver\",",
        "// Line_Reference 145: \t\tfmt.Sprintf(\"return(\\\"%s\\\")\", driverName)))",
        "// Line_Reference 147: \t\trequire.NoError(t, failpoint.Disable(\"github.com/pingcap/tidb/br/pkg/lightning/common/MockMySQLDriver\"))",
        "// Line_Reference 158: \tdb, err := param.Connect()",
        "// Line_Reference 160: \trequire.NoError(t, db.Close())",
        "// Line_Reference 162: \tdb, err = param.Connect()",
        "// Line_Reference 164: \trequire.NoError(t, db.Close())"
    ]
}
