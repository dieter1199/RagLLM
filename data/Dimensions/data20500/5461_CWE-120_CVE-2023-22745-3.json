{
    "cve_id": "CVE-2023-22745",
    "cve_description": "tpm2-tss is an open source software implementation of the Trusted Computing Group (TCG) Trusted Platform Module (TPM) 2 Software Stack (TSS2). In affected versions `Tss2_RC_SetHandler` and `Tss2_RC_Decode` both index into `layer_handler` with an 8 bit layer number, but the array only has `TPM2_ERROR_TSS2_RC_LAYER_COUNT` entries, so trying to add a handler for higher-numbered layers or decode a response code with such a layer number reads/writes past the end of the buffer. This Buffer overrun, could result in arbitrary code execution. An example attack would be a MiTM bus attack that returns 0xFFFFFFFF for the RC. Given the common use case of TPM modules an attacker must have local access to the target machine with local system privileges which allows access to the TPM system. Usually TPM access requires administrative privilege.",
    "cve_publish_date": "2023-01-19",
    "cwe_id": "CWE-120",
    "cwe_name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
    "cwe_description": "The product copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow.",
    "commit_message": "tss2_rc: ensure layer number is in bounds\n\nThe layer handler array was defined as 255, the max number of uint8,\nwhich is the size of the layer field, however valid values are 0-255\nallowing for 256 possibilities and thus the array was off by one and\nneeded to be sized to 256 entries. Update the size and add tests.\n\nNote: previous implementations incorrectly dropped bits on unknown error\noutput, ie TSS2_RC of 0xFFFFFF should yeild a string of 255:0xFFFFFF,\nbut earlier implementations returned 255:0xFFFF, dropping the middle\nbits, this patch fixes that.\n\nFixes: CVE-2023-22745\n\nSigned-off-by: William Roberts <william.c.roberts@intel.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "test_tss2_rc.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "20",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 200:     assert_string_equal(e, \"1:0x2A\");"
    ]
}
