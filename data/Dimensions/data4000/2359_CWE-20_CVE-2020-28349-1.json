{
    "cve_id": "CVE-2020-28349",
    "cve_description": "An inaccurate frame deduplication process in ChirpStack Network Server 3.9.0 allows a malicious gateway to perform uplink Denial of Service via malformed frequency attributes in CollectAndCallOnceCollect in internal/uplink/collect.go. NOTE: the vendor's position is that there are no \"guarantees that allowing untrusted LoRa gateways to the network should still result in a secure network.",
    "cve_publish_date": "2020-11-09",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "Improve error handling of unknown gateways.",
    "type_of_change": "Modification",
    "filename_of_changes": "rx_info.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "29",
    "number_of_lines_deleted_vulnerable_to_cve": "42",
    "vulnerable_lines": [
        "// Line_Reference 28: func UpdateMetaDataInRxInfoSet(ctx context.Context, db sqlx.Queryer, rxInfo []*gw.UplinkRXInfo) error {",
        "// Line_Reference 29: \tfor i := range rxInfo {",
        "// Line_Reference 30: \t\tid := helpers.GetGatewayID(rxInfo[i])",
        "// Line_Reference 33: \t\t\tlog.WithFields(log.Fields{",
        "// Line_Reference 34: \t\t\t\t\"ctx_id\":     ctx.Value(logging.ContextIDKey),",
        "// Line_Reference 35: \t\t\t\t\"gateway_id\": id,",
        "// Line_Reference 36: \t\t\t}).WithError(err).Error(\"get gateway error\")",
        "// Line_Reference 41: \t\trxInfo[i].Location = &common.Location{",
        "// Line_Reference 48: \t\tif int(rxInfo[i].Board) < len(g.Boards) {",
        "// Line_Reference 49: \t\t\tboard = g.Boards[int(rxInfo[i].Board)]",
        "// Line_Reference 55: \t\tif rxInfo[i].FineTimestampType == gw.FineTimestampType_ENCRYPTED && board.FPGAID != nil {",
        "// Line_Reference 56: \t\t\ttsInfo := rxInfo[i].GetEncryptedFineTimestamp()",
        "// Line_Reference 57: \t\t\tif tsInfo == nil {",
        "// Line_Reference 58: \t\t\t\tlog.WithFields(log.Fields{",
        "// Line_Reference 59: \t\t\t\t\t\"ctx_id\":     ctx.Value(logging.ContextIDKey),",
        "// Line_Reference 60: \t\t\t\t\t\"gateway_id\": id,",
        "// Line_Reference 61: \t\t\t\t}).Error(\"encrypted_fine_timestamp must not be nil\")",
        "// Line_Reference 62: \t\t\t\tcontinue",
        "// Line_Reference 63: \t\t\t}",
        "// Line_Reference 64: ",
        "// Line_Reference 71: \t\tif rxInfo[i].FineTimestampType == gw.FineTimestampType_ENCRYPTED && board.FineTimestampKey != nil {",
        "// Line_Reference 72: \t\t\ttsInfo := rxInfo[i].GetEncryptedFineTimestamp()",
        "// Line_Reference 73: \t\t\tif tsInfo == nil {",
        "// Line_Reference 74: \t\t\t\tlog.WithFields(log.Fields{",
        "// Line_Reference 75: \t\t\t\t\t\"ctx_id\":     ctx.Value(logging.ContextIDKey),",
        "// Line_Reference 76: \t\t\t\t\t\"gateway_id\": id,",
        "// Line_Reference 77: \t\t\t\t}).Error(\"encrypted_fine_timestamp must not be nil\")",
        "// Line_Reference 78: \t\t\t\tcontinue",
        "// Line_Reference 79: \t\t\t}",
        "// Line_Reference 80: ",
        "// Line_Reference 81: \t\t\tif rxInfo[i].Time == nil {",
        "// Line_Reference 82: \t\t\t\tlog.WithFields(log.Fields{",
        "// Line_Reference 83: \t\t\t\t\t\"ctx_id\":     ctx.Value(logging.ContextIDKey),",
        "// Line_Reference 84: \t\t\t\t\t\"gateway_id\": id,",
        "// Line_Reference 85: \t\t\t\t}).Error(\"time must not be nil\")",
        "// Line_Reference 86: \t\t\t\tcontinue",
        "// Line_Reference 87: \t\t\t}",
        "// Line_Reference 88: ",
        "// Line_Reference 89: \t\t\trxTime, err := ptypes.Timestamp(rxInfo[i].Time)",
        "// Line_Reference 106: \t\t\trxInfo[i].FineTimestampType = gw.FineTimestampType_PLAIN",
        "// Line_Reference 107: \t\t\trxInfo[i].FineTimestamp = &gw.UplinkRXInfo_PlainFineTimestamp{",
        "// Line_Reference 113: \treturn nil"
    ]
}
