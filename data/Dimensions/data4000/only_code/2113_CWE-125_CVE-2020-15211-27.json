const TfLiteTensor* input_box_encodings =
GetInput(context, node, kInputTensorBoxEncodings);
const TfLiteTensor* input_class_predictions =
GetInput(context, node, kInputTensorClassPredictions);
const TfLiteTensor* input_anchors =
GetInput(context, node, kInputTensorAnchors);
TfLiteTensor* detection_boxes =
GetOutput(context, node, kOutputTensorDetectionBoxes);
TfLiteTensor* detection_classes =
GetOutput(context, node, kOutputTensorDetectionClasses);
TfLiteTensor* detection_scores =
GetOutput(context, node, kOutputTensorDetectionScores);
TfLiteTensor* num_detections =
GetOutput(context, node, kOutputTensorNumDetections);
const TfLiteTensor* input_box_encodings =
GetInput(context, node, kInputTensorBoxEncodings);
const TfLiteTensor* input_anchors =
GetInput(context, node, kInputTensorAnchors);
const TfLiteTensor* input_box_encodings =
GetInput(context, node, kInputTensorBoxEncodings);
const TfLiteTensor* input_box_encodings =
GetInput(context, node, kInputTensorBoxEncodings);
const TfLiteTensor* input_class_predictions =
GetInput(context, node, kInputTensorClassPredictions);
TfLiteTensor* detection_boxes =
GetOutput(context, node, kOutputTensorDetectionBoxes);
TfLiteTensor* detection_classes =
GetOutput(context, node, kOutputTensorDetectionClasses);
TfLiteTensor* detection_scores =
GetOutput(context, node, kOutputTensorDetectionScores);
TfLiteTensor* num_detections =
GetOutput(context, node, kOutputTensorNumDetections);
const TfLiteTensor* input_box_encodings =
GetInput(context, node, kInputTensorBoxEncodings);
const TfLiteTensor* input_class_predictions =
GetInput(context, node, kInputTensorClassPredictions);
TfLiteTensor* detection_boxes =
GetOutput(context, node, kOutputTensorDetectionBoxes);
TfLiteTensor* detection_classes =
GetOutput(context, node, kOutputTensorDetectionClasses);
TfLiteTensor* detection_scores =
GetOutput(context, node, kOutputTensorDetectionScores);
TfLiteTensor* num_detections =
GetOutput(context, node, kOutputTensorNumDetections);
const TfLiteTensor* input_box_encodings =
GetInput(context, node, kInputTensorBoxEncodings);
const TfLiteTensor* input_class_predictions =
GetInput(context, node, kInputTensorClassPredictions);