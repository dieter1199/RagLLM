{
    "cve_id": "CVE-2018-9019",
    "cve_description": "SQL Injection vulnerability in Dolibarr before version 7.0.2 allows remote attackers to execute arbitrary SQL commands via the sortfield parameter to /accountancy/admin/accountmodel.php, /accountancy/admin/categories_list.php, /accountancy/admin/journals_list.php, /admin/dict.php, /admin/mails_templates.php, or /admin/website.php.",
    "cve_publish_date": "2018-05-22",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "FIX CVE-2018-9019",
    "type_of_change": "Modification",
    "filename_of_changes": "accountmodel.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "7",
    "number_of_lines_deleted_vulnerable_to_cve": "33",
    "vulnerable_lines": [
        "// Line_Reference 48: $id=GETPOST('id','int');",
        "// Line_Reference 61: $sortfield = GETPOST(\"sortfield\",'alpha');",
        "// Line_Reference 62: $sortorder = GETPOST(\"sortorder\",'alpha');",
        "// Line_Reference 87: $tabname[32]= MAIN_DB_PREFIX.\"c_accounting_category\";",
        "// Line_Reference 92: $tablib[32]= \"DictionaryAccountancyCategory\";",
        "// Line_Reference 97: $tabsql[32]= \"SELECT a.rowid as rowid, a.code as code, a.label, a.range_account, a.sens, a.category_type, a.formula, a.position as position, a.fk_country as country_id, c.code as country_code, c.label as country, a.active FROM \".MAIN_DB_PREFIX.\"c_accounting_category as a, \".MAIN_DB_PREFIX.\"c_country as c WHERE a.fk_country=c.rowid and c.active=1\";",
        "// Line_Reference 102: $tabsqlsort[32]=\"position ASC\";",
        "// Line_Reference 107: $tabfield[32]= \"code,label,range_account,sens,category_type,formula,position,country_id,country\";",
        "// Line_Reference 112: $tabfieldvalue[32]= \"code,label,range_account,sens,category_type,formula,position,country\";",
        "// Line_Reference 117: $tabfieldinsert[32]= \"code,label,range_account,sens,category_type,formula,position,fk_country\";",
        "// Line_Reference 124: $tabrowid[32]= \"\";",
        "// Line_Reference 129: $tabcond[32]= ! empty($conf->accounting->enabled);",
        "// Line_Reference 134: $tabhelp[32] = array('code'=>$langs->trans(\"EnterAnyCode\"));",
        "// Line_Reference 139: $tabfieldcheck[32] = array();",
        "// Line_Reference 487: \tprint $form->formconfirm($_SERVER[\"PHP_SELF\"].'?'.($page?'page='.$page.'&':'').'sortfield='.$sortfield.'&sortorder='.$sortorder.'&rowid='.$rowid.'&code='.$code.'&id='.$id, $langs->trans('DeleteLine'), $langs->trans('ConfirmDeleteLine'), 'confirm_delete','',0,1);",
        "// Line_Reference 506: \tif ($sortfield)",
        "// Line_Reference 507: \t{",
        "// Line_Reference 508: \t\t// If sort order is \"country\", we use country_code instead",
        "// Line_Reference 509: \t\tif ($sortfield == 'country') $sortfield='country_code';",
        "// Line_Reference 510: \t\t$sql.= \" ORDER BY \".$sortfield;",
        "// Line_Reference 511: \t\tif ($sortorder)",
        "// Line_Reference 512: \t\t{",
        "// Line_Reference 513: \t\t\t$sql.=\" \".strtoupper($sortorder);",
        "// Line_Reference 514: \t\t}",
        "// Line_Reference 515: \t\t$sql.=\", \";",
        "// Line_Reference 516: \t\t// Clear the required sort criteria for the tabsqlsort to be able to force it with selected value",
        "// Line_Reference 517: \t\t$tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.' '.$sortorder.',/i','',$tabsqlsort[$id]);",
        "// Line_Reference 518: \t\t$tabsqlsort[$id]=preg_replace('/([a-z]+\\.)?'.$sortfield.',/i','',$tabsqlsort[$id]);",
        "// Line_Reference 519: \t}",
        "// Line_Reference 520: \telse {",
        "// Line_Reference 521: \t\t$sql.=\" ORDER BY \";",
        "// Line_Reference 522: \t}",
        "// Line_Reference 523: \t$sql.=$tabsqlsort[$id];"
    ]
}
