{
    "cve_id": "CVE-2020-15203",
    "cve_description": "In Tensorflow before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, by controlling the `fill` argument of tf.strings.as_string, a malicious attacker is able to trigger a format string vulnerability due to the way the internal format use in a `printf` call is constructed. This may result in segmentation fault. The issue is patched in commit 33be22c65d86256e6826666662e40dbdfe70ee83, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.",
    "cve_publish_date": "2020-09-25",
    "cwe_id": "CWE-134",
    "cwe_name": "Use of Externally-Controlled Format String",
    "cwe_description": "The product uses a function that accepts a format string as an argument, but the format string originates from an external source.",
    "commit_message": "Prevent format string vulnerability in `tf.strings.as_string`.\n\nThe `printf` format specifier only allows `#`, `0`, `-`, `+` and space as flag characters. Others are interpreted as width/precision/length modifier or conversion specifiers. If a character does not fit into any of these sets `printf` just displays it.\n\nAlso add a test suite for `tf.strings.as_string`. Also fix the issue where the flag character was used only if width was specified.\n\nPiperOrigin-RevId: 332553548\nChange-Id: Ie57cf2a7c14d1a36097642794c14329db669bbba",
    "type_of_change": "Modification",
    "filename_of_changes": "as_string_op.cc",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "18",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 70:       strings::Appendf(&format_, \"%s%d\", fill_string.c_str(), width);"
    ]
}
