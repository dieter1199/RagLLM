import { hashValue } from "#lib/hash";
import { isAuthenticated } from "#lib/middleware";
import { UnderscoreID } from "#lib/mongo";
import { procedure, router } from "#lib/trpc";
import {
FullUser,
Profile,
VerificationDetails,
getUsersCollection,
profile,
verificationDetails
} from "#database/users";
import * as errors from "#lib/errors";
import { createEventPublisher, createEventSubscription } from "#lib/pub-sub";
import { stringToRegex } from "#lib/utils";
type UserEvent = {
action: "update";
data: Partial<Profile> & { id: string } & Partial<VerificationDetails>;
};
const publishEvent = createEventPublisher<UserEvent>((userId: string) => `user:${userId}`);
return createEventSubscription<UserEvent>(ctx, `user:${ctx.auth.userId}`);
publishEvent(ctx, `${ctx.auth.userId}`, {
