//protected $permissions = array_merge(array("test"=>'Test'), array('copyProduct'=>"Copy Product"));
protected $add_permissions = array(
'copyProduct'                 => "Copy Product",
'delete_children'             => "Delete Children",
'reimport'                    => 'ReImport Products',
'findDupes'                   => 'Fix Duplicate SEF Names',
'manage_sales_reps'           => 'Manage Sales Reps',
'batch_process'               => 'Batch capture order transactions',
'process_orders'              => 'Batch capture order transactions',
'import_external_addresses'   => 'Import addresses from other sources',
'showallImpropercategorized'  => 'View products in top level categories that should not be',
'showallUncategorized'        => 'View all uncategorized products',
'nonUnicodeProducts'          => 'View all non-unicode charset products',
'cleanNonUnicodeProducts'     => 'Clean all non-unicode charset products',
'uploadModelAliases'          => 'Upload model aliases',
'processModelAliases'         => 'Process uploaded model aliases',
'saveModelAliases'            => 'Save uploaded model aliases',
'deleteProcessedModelAliases' => 'Delete processed uploaded model aliases',
'delete_model_alias'          => 'Process model aliases',
'update_model_alias'          => 'Save model aliases',
'edit_model_alias'            => 'Delete model aliases',
'import'                      => 'Import Products',
'export'                      => 'Export Products',
);
$ancestors = $this->category->pathToNode();
{
$ancestors = $this->category->pathToNode();
//eDebug($editable_options[$group->title]);
//eDebug($product_type);
//eDebug($this->params,true);
if (empty($product->id)) // || empty($product->previous_id))
//fwrite($lfh, "Deleting:" . $ctd->id . "\n");
//$sql .= "GROUP BY p.id ";
$req = 'a29f9shsgh32hsf80s7';
{
$successSet[$count]['message'] = "Sucessfully imported row " . $count . ", order: " . $data[2] . "<br/>";
$successSet[$count]['shipping_tracking_number'] = '1ZNF453937547';
{
$data[2] = $inv + $count;
$amt += $count*$count;
assign_to_template(array('errorSet'=>$errorSet, 'successSet'=>$successSet));
//eDebug($this->params,true);
//eDebug($data);
//just need to set the order shipping info, check and see if we send user an email, and set statuses.
//shipping info:
//$failMessage = "Attempted to delay capture order " . $data[2] . " and it failed with the following error: " . $result->errorCode . " - " .$result->message;
$order->save();
//continue;
//dont suppose we do anything here, as it may be set to approved manually
//$errorSet[$count] = "Order " . $data[2] . " does not use a billing method with delayed capture ability.";
//eDebug($product);
//eDebug($data);
