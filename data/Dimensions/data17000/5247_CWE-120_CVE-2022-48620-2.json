{
    "cve_id": "CVE-2022-48620",
    "cve_description": "uev (aka libuev) before 2.4.1 has a buffer overflow in epoll_wait if maxevents is a large number.",
    "cve_publish_date": "2024-01-12",
    "cwe_id": "CWE-120",
    "cwe_name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
    "cwe_description": "The product copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow.",
    "commit_message": "Fix #27: possible buffer overrun in uev_run()\n\nIf uev_init1() is called with maxevents > 10 the call to epoll_wait()\nmight cause buffer overflow.  Reported by Steve Palmer.\n\nSigned-off-by: Joachim Wiberg <troglobit@gmail.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "uev.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "11",
    "number_of_lines_deleted_vulnerable_to_cve": "4",
    "vulnerable_lines": [
        "// Line_Reference 199:  * @param maxevents Maximum number of events in event cache",
        "// Line_Reference 202:  * argument, which controls the number of events in the event cache",
        "// Line_Reference 203:  * returned to the main loop.",
        "// Line_Reference 344: \t\twhile ((nfds = epoll_wait(ctx->fd, ee, ctx->maxevents, timeout)) < 0) {"
    ]
}
