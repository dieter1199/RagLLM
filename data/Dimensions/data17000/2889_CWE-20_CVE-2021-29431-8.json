{
    "cve_id": "CVE-2021-29431",
    "cve_description": "Sydent is a reference Matrix identity server. Sydent can be induced to send HTTP GET requests to internal systems, due to lack of parameter validation or IP address blacklisting. It is not possible to exfiltrate data or control request headers, but it might be possible to use the attack to perform an internal port enumeration. This issue has been addressed in in 9e57334, 8936925, 3d531ed, 0f00412. A potential workaround would be to use a firewall to ensure that Sydent cannot reach internal HTTP resources.",
    "cve_publish_date": "2021-04-15",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "Allow IPv6 literals as Matrix server names.\n\nAccording to the spec, Matrix server names are allowed to be IP\naddresses, including IPv6 literals.",
    "type_of_change": "Modification",
    "filename_of_changes": "test_util.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "29",
    "number_of_lines_deleted_vulnerable_to_cve": "18",
    "vulnerable_lines": [
        "// Line_Reference 2: from sydent.util.stringutils import is_valid_hostname",
        "// Line_Reference 7:     def test_is_valid_hostname(self):",
        "// Line_Reference 8:         \"\"\"Tests that the is_valid_hostname function accepts only valid",
        "// Line_Reference 9:         hostnames (or domain names), with optional port number.",
        "// Line_Reference 12:         self.assertTrue(is_valid_hostname(\"example.com\"))",
        "// Line_Reference 13:         self.assertTrue(is_valid_hostname(\"EXAMPLE.COM\"))",
        "// Line_Reference 14:         self.assertTrue(is_valid_hostname(\"ExAmPlE.CoM\"))",
        "// Line_Reference 15:         self.assertTrue(is_valid_hostname(\"example.com:4242\"))",
        "// Line_Reference 16:         self.assertTrue(is_valid_hostname(\"localhost\"))",
        "// Line_Reference 17:         self.assertTrue(is_valid_hostname(\"localhost:9000\"))",
        "// Line_Reference 18:         self.assertTrue(is_valid_hostname(\"a.b:1234\"))",
        "// Line_Reference 20:         self.assertFalse(is_valid_hostname(\"example.com:65536\"))",
        "// Line_Reference 21:         self.assertFalse(is_valid_hostname(\"example.com:0\"))",
        "// Line_Reference 22:         self.assertFalse(is_valid_hostname(\"example.com:a\"))",
        "// Line_Reference 23:         self.assertFalse(is_valid_hostname(\"example.com:04242\"))",
        "// Line_Reference 24:         self.assertFalse(is_valid_hostname(\"example.com: 4242\"))",
        "// Line_Reference 25:         self.assertFalse(is_valid_hostname(\"example.com/example.com\"))",
        "// Line_Reference 26:         self.assertFalse(is_valid_hostname(\"example.com#example.com\"))"
    ]
}
