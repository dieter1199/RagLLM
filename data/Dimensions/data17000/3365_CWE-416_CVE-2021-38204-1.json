{
    "cve_id": "CVE-2021-38204",
    "cve_description": "drivers/usb/host/max3421-hcd.c in the Linux kernel before 5.13.6 allows physically proximate attackers to cause a denial of service (use-after-free and panic) by removing a MAX-3421 USB device in certain situations.",
    "cve_publish_date": "2021-08-08",
    "cwe_id": "CWE-416",
    "cwe_name": "Use After Free",
    "cwe_description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
    "commit_message": "usb: max-3421: Prevent corruption of freed memory\n\nThe MAX-3421 USB driver remembers the state of the USB toggles for a\ndevice/endpoint. To save SPI writes, this was only done when a new\ndevice/endpoint was being used. Unfortunately, if the old device was\nremoved, this would cause writes to freed memory.\n\nTo fix this, a simpler scheme is used. The toggles are read from\nhardware when a URB is completed, and the toggles are always written to\nhardware when any URB transaction is started. This will cause a few more\nSPI transactions, but no causes kernel panics.\n\nFixes: 2d53139f3162 (\"Add support for using a MAX3421E chip as a host driver.\")\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Mark Tomlinson <mark.tomlinson@alliedtelesis.co.nz>\nLink: https://lore.kernel.org/r/20210625031456.8632-1-mark.tomlinson@alliedtelesis.co.nz\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "max3421-hcd.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "14",
    "number_of_lines_deleted_vulnerable_to_cve": "30",
    "vulnerable_lines": [
        "// Line_Reference 156: \tstruct usb_device *loaded_dev;\t/* dev that's loaded into the chip */",
        "// Line_Reference 157: \tint loaded_epnum;\t\t/* epnum whose toggles are loaded */",
        "// Line_Reference 495: max3421_set_address(struct usb_hcd *hcd, struct usb_device *dev, int epnum,",
        "// Line_Reference 496: \t\t    int force_toggles)",
        "// Line_Reference 498: \tstruct max3421_hcd *max3421_hcd = hcd_to_max3421(hcd);",
        "// Line_Reference 499: \tint old_epnum, same_ep, rcvtog, sndtog;",
        "// Line_Reference 500: \tstruct usb_device *old_dev;",
        "// Line_Reference 503: \told_dev = max3421_hcd->loaded_dev;",
        "// Line_Reference 504: \told_epnum = max3421_hcd->loaded_epnum;",
        "// Line_Reference 505: ",
        "// Line_Reference 506: \tsame_ep = (dev == old_dev && epnum == old_epnum);",
        "// Line_Reference 507: \tif (same_ep && !force_toggles)",
        "// Line_Reference 508: \t\treturn;",
        "// Line_Reference 509: ",
        "// Line_Reference 510: \tif (old_dev && !same_ep) {",
        "// Line_Reference 511: \t\t/* save the old end-points toggles: */",
        "// Line_Reference 512: \t\tu8 hrsl = spi_rd8(hcd, MAX3421_REG_HRSL);",
        "// Line_Reference 513: ",
        "// Line_Reference 514: \t\trcvtog = (hrsl >> MAX3421_HRSL_RCVTOGRD_BIT) & 1;",
        "// Line_Reference 515: \t\tsndtog = (hrsl >> MAX3421_HRSL_SNDTOGRD_BIT) & 1;",
        "// Line_Reference 516: ",
        "// Line_Reference 517: \t\t/* no locking: HCD (i.e., we) own toggles, don't we? */",
        "// Line_Reference 518: \t\tusb_settoggle(old_dev, old_epnum, 0, rcvtog);",
        "// Line_Reference 519: \t\tusb_settoggle(old_dev, old_epnum, 1, sndtog);",
        "// Line_Reference 520: \t}",
        "// Line_Reference 527: \tmax3421_hcd->loaded_epnum = epnum;",
        "// Line_Reference 535: \tmax3421_hcd->loaded_dev = dev;",
        "// Line_Reference 670: \tint epnum, force_toggles = 0;",
        "// Line_Reference 780: \t\t\tforce_toggles = 1;",
        "// Line_Reference 788: \tmax3421_set_address(hcd, urb->dev, epnum, force_toggles);"
    ]
}
