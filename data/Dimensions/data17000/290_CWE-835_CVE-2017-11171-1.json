{
    "cve_id": "CVE-2017-11171",
    "cve_description": "Bad reference counting in the context of accept_ice_connection() in gsm-xsmp-server.c in old versions of gnome-session up until version 2.29.92 allows a local attacker to establish ICE connections to gnome-session with invalid authentication data (an invalid magic cookie). Each failed authentication attempt will leak a file descriptor in gnome-session. When the maximum number of file descriptors is exhausted in the gnome-session process, it will enter an infinite loop trying to communicate without success, consuming 100% of the CPU. The graphical session associated with the gnome-session process will stop working correctly, because communication with gnome-session is no longer possible.",
    "cve_publish_date": "2017-07-11",
    "cwe_id": "CWE-835",
    "cwe_name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
    "cwe_description": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.",
    "commit_message": "[gsm] Delay the creation of the GsmXSMPClient until it really exists\n\nWe used to create the GsmXSMPClient before the XSMP connection is really\naccepted. This can lead to some issues, though. An example is:\nhttps://bugzilla.gnome.org/show_bug.cgi?id=598211#c19. Quoting:\n\n \"What is happening is that a new client (probably metacity in your\n case) is opening an ICE connection in the GSM_MANAGER_PHASE_END_SESSION\n phase, which causes a new GsmXSMPClient to be added to the client\n store. The GSM_MANAGER_PHASE_EXIT phase then begins before the client\n has had a chance to establish a xsmp connection, which means that\n client->priv->conn will not be initialized at the point that xsmp_stop\n is called on the new unregistered client.\"\n\nThe fix is to create the GsmXSMPClient object when there's a real XSMP\nconnection. This implies moving the timeout that makes sure we don't\nhave an empty client to the XSMP server.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=598211",
    "type_of_change": "Modification",
    "filename_of_changes": "gsm-xsmp-client.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "0",
    "number_of_lines_deleted_vulnerable_to_cve": "30",
    "vulnerable_lines": [
        "// Line_Reference 54:         guint      protocol_timeout;",
        "// Line_Reference 118: /* Called if too much time passes between the initial connection and",
        "// Line_Reference 119:  * the XSMP protocol setup.",
        "// Line_Reference 120:  */",
        "// Line_Reference 121: static gboolean",
        "// Line_Reference 122: _client_protocol_timeout (GsmXSMPClient *client)",
        "// Line_Reference 123: {",
        "// Line_Reference 124:         g_debug (\"GsmXSMPClient: client_protocol_timeout for client '%s' in ICE status %d\",",
        "// Line_Reference 125:                  client->priv->description,",
        "// Line_Reference 126:                  IceConnectionStatus (client->priv->ice_connection));",
        "// Line_Reference 127: ",
        "// Line_Reference 128:         gsm_client_set_status (GSM_CLIENT (client), GSM_CLIENT_FAILED);",
        "// Line_Reference 129:         gsm_client_disconnected (GSM_CLIENT (client));",
        "// Line_Reference 130: ",
        "// Line_Reference 131:         return FALSE;",
        "// Line_Reference 132: }",
        "// Line_Reference 133: ",
        "// Line_Reference 196:         client->priv->protocol_timeout = g_timeout_add_seconds (5,",
        "// Line_Reference 197:                                                                 (GSourceFunc)_client_protocol_timeout,",
        "// Line_Reference 198:                                                                 client);",
        "// Line_Reference 199: ",
        "// Line_Reference 872: ",
        "// Line_Reference 873:         if (client->priv->protocol_timeout > 0) {",
        "// Line_Reference 874:                 g_source_remove (client->priv->protocol_timeout);",
        "// Line_Reference 875:         }",
        "// Line_Reference 1308:         if (client->priv->protocol_timeout) {",
        "// Line_Reference 1309:                 g_source_remove (client->priv->protocol_timeout);",
        "// Line_Reference 1310:                 client->priv->protocol_timeout = 0;",
        "// Line_Reference 1311:         }",
        "// Line_Reference 1312: "
    ]
}
