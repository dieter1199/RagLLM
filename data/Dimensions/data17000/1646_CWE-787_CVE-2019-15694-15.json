{
    "cve_id": "CVE-2019-15694",
    "cve_description": "TigerVNC version prior to 1.10.1 is vulnerable to heap buffer overflow, which could be triggered from DecodeManager::decodeRect. Vulnerability occurs due to the signdness error in processing MemOutStream. Exploitation of this vulnerability could potentially result into remote code execution. This attack appear to be exploitable via network connectivity.",
    "cve_publish_date": "2019-12-26",
    "cwe_id": "CWE-787",
    "cwe_name": "Out-of-bounds Write",
    "cwe_description": "The product writes data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "Use size_t for lengths in stream objects\n\nProvides safety against them accidentally becoming negative because\nof bugs in the calculations.\n\nAlso does the same to CharArray and friends as they were strongly\nconnection to the stream objects.",
    "type_of_change": "Modification",
    "filename_of_changes": "OutStream.h",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "10",
    "number_of_lines_deleted_vulnerable_to_cve": "10",
    "vulnerable_lines": [
        "// Line_Reference 47:     inline int check(int itemSize, int nItems=1)",
        "// Line_Reference 79:     inline void pad(int bytes) {",
        "// Line_Reference 83:     inline void skip(int bytes) {",
        "// Line_Reference 85:         int n = check(1, bytes);",
        "// Line_Reference 93:     void writeBytes(const void* data, int length) {",
        "// Line_Reference 97:         int n = check(1, dataEnd - dataPtr);",
        "// Line_Reference 106:     void copyBytes(InStream* is, int length) {",
        "// Line_Reference 108:         int n = check(1, length);",
        "// Line_Reference 127:     virtual int length() = 0;",
        "// Line_Reference 148:     virtual int overrun(int itemSize, int nItems) = 0;"
    ]
}
