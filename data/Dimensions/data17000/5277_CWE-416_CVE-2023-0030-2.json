{
    "cve_id": "CVE-2023-0030",
    "cve_description": "A use-after-free flaw was found in the Linux kernelâ€™s nouveau driver in how a user triggers a memory overflow that causes the nvkm_vma_tail function to fail. This flaw allows a local user to crash or potentially escalate their privileges on the system.",
    "cve_publish_date": "2023-03-08",
    "cwe_id": "CWE-416",
    "cwe_name": "Use After Free",
    "cwe_description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
    "commit_message": "drm/nouveau/mmu: add more general vmm free/node handling functions\n\nAside from being a nice cleanup, these will to allow the upcoming direct\npage mapping interfaces to play nicely with normal mappings.\n\nSigned-off-by: Ben Skeggs <bskeggs@redhat.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "vmm.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "112",
    "number_of_lines_deleted_vulnerable_to_cve": "33",
    "vulnerable_lines": [
        "// Line_Reference 798: void",
        "// Line_Reference 957: #define node(root, dir) ((root)->head.dir == &vmm->list) ? NULL :              \\",
        "// Line_Reference 958: \tlist_entry((root)->head.dir, struct nvkm_vma, head)",
        "// Line_Reference 959: ",
        "// Line_Reference 963: \tstruct nvkm_vma *next;",
        "// Line_Reference 968: \tif (vma->part) {",
        "// Line_Reference 969: \t\tstruct nvkm_vma *prev = node(vma, prev);",
        "// Line_Reference 970: \t\tif (!prev->memory) {",
        "// Line_Reference 971: \t\t\tprev->size += vma->size;",
        "// Line_Reference 972: \t\t\trb_erase(&vma->tree, &vmm->root);",
        "// Line_Reference 973: \t\t\tlist_del(&vma->head);",
        "// Line_Reference 974: \t\t\tkfree(vma);",
        "// Line_Reference 975: \t\t\tvma = prev;",
        "// Line_Reference 976: \t\t}",
        "// Line_Reference 977: \t}",
        "// Line_Reference 978: ",
        "// Line_Reference 979: \tnext = node(vma, next);",
        "// Line_Reference 980: \tif (next && next->part) {",
        "// Line_Reference 981: \t\tif (!next->memory) {",
        "// Line_Reference 982: \t\t\tvma->size += next->size;",
        "// Line_Reference 983: \t\t\trb_erase(&next->tree, &vmm->root);",
        "// Line_Reference 984: \t\t\tlist_del(&next->head);",
        "// Line_Reference 985: \t\t\tkfree(next);",
        "// Line_Reference 986: \t\t}",
        "// Line_Reference 987: \t}",
        "// Line_Reference 1166: \t\trb_erase(&prev->tree, &vmm->free);",
        "// Line_Reference 1167: \t\tlist_del(&prev->head);",
        "// Line_Reference 1170: \t\tkfree(prev);",
        "// Line_Reference 1174: \t\trb_erase(&next->tree, &vmm->free);",
        "// Line_Reference 1175: \t\tlist_del(&next->head);",
        "// Line_Reference 1177: \t\tkfree(next);",
        "// Line_Reference 1253: \trb_erase(&vma->tree, &vmm->root);",
        "// Line_Reference 1360: \t\t\trb_erase(&this->tree, &vmm->free);"
    ]
}
