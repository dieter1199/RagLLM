{
    "cve_id": "CVE-2024-0607",
    "cve_description": "A flaw was found in the Netfilter subsystem in the Linux kernel. The issue is in the nft_byteorder_eval() function, where the code iterates through a loop and writes to the `dst` array. On each iteration, 8 bytes are written, but `dst` is an array of u32, so each element only has space for 4 bytes. That means every iteration overwrites part of the previous element corrupting this array of u32. This flaw allows a local user to cause a denial of service or potentially break NetFilter functionality.",
    "cve_publish_date": "2024-01-18",
    "cwe_id": "NVD-CWE-Other",
    "cwe_name": "Other",
    "cwe_description": "NVD is only using a subset of CWE for mapping instead of the entire CWE, and the weakness type is not covered by that subset.",
    "commit_message": "netfilter: nf_tables: fix pointer math issue in nft_byteorder_eval()\n\nThe problem is in nft_byteorder_eval() where we are iterating through a\nloop and writing to dst[0], dst[1], dst[2] and so on...  On each\niteration we are writing 8 bytes.  But dst[] is an array of u32 so each\nelement only has space for 4 bytes.  That means that every iteration\noverwrites part of the previous element.\n\nI spotted this bug while reviewing commit caf3ef7468f7 (\"netfilter:\nnf_tables: prevent OOB access in nft_byteorder_eval\") which is a related\nissue.  I think that the reason we have not detected this bug in testing\nis that most of time we only write one element.\n\nFixes: ce1e7989d989 (\"netfilter: nft_byteorder: provide 64bit le/be conversion\")\nSigned-off-by: Dan Carpenter <dan.carpenter@linaro.org>\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "nft_meta.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 66: \t\tnft_reg_store64(dest, ktime_get_real_ns());"
    ]
}
