{
    "cve_id": "CVE-2020-14398",
    "cve_description": "An issue was discovered in LibVNCServer before 0.9.13. An improperly closed TCP connection causes an infinite loop in libvncclient/sockets.c.",
    "cve_publish_date": "2020-06-17",
    "cwe_id": "CWE-835",
    "cwe_name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
    "cwe_description": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.",
    "commit_message": "libvncclient: handle half-open TCP connections\n\nWhen a connection is not reset properly at the TCP level (e.g. sudden\npower loss or process crash) the TCP connection becomes half-open and\nread() always returns -1 with errno = EAGAIN while select() always\nreturns 0. This leads to an infinite loop and can be fixed by closing\nthe connection after a certain number of retries (based on a timeout)\nhas been exceeded.",
    "type_of_change": "Modification",
    "filename_of_changes": "sockets.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "16",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 157: \t    WaitForMessage(client, 100000);",
        "// Line_Reference 200: \t    WaitForMessage(client, 100000);"
    ]
}
