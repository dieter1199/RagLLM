{
    "cve_id": "CVE-2019-9942",
    "cve_description": "A sandbox information disclosure exists in Twig before 1.38.0 and 2.x before 2.7.0 because, under some circumstances, it is possible to call the __toString() method on an object even if not allowed by the security policy in place.",
    "cve_publish_date": "2019-03-23",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "fixed security issue in the sandbox",
    "type_of_change": "ModificationType.ADD",
    "filename_of_changes": "SandboxTest.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "65",
    "number_of_lines_deleted_vulnerable_to_cve": "30",
    "vulnerable_lines": [
        "// Line_Reference 37:             '1_basic6' => '{{ arr.obj }}',",
        "// Line_Reference 115:     public function testSandboxUnallowedToString()",
        "// Line_Reference 117:         $twig = $this->getEnvironment(true, [], self::$templates);",
        "// Line_Reference 119:             $twig->load('1_basic5')->render(self::$params);",
        "// Line_Reference 128:     public function testSandboxUnallowedToStringArray()",
        "// Line_Reference 130:         $twig = $this->getEnvironment(true, [], self::$templates);",
        "// Line_Reference 131:         try {",
        "// Line_Reference 132:             $twig->load('1_basic6')->render(self::$params);",
        "// Line_Reference 133:             $this->fail('Sandbox throws a SecurityError exception if an unallowed method (__toString()) is called in the template');",
        "// Line_Reference 134:         } catch (SecurityError $e) {",
        "// Line_Reference 135:             $this->assertInstanceOf('\\Twig\\Sandbox\\SecurityNotAllowedMethodError', $e, 'Exception should be an instance of Twig_Sandbox_SecurityNotAllowedMethodError');",
        "// Line_Reference 136:             $this->assertEquals('FooObject', $e->getClassName(), 'Exception should be raised on the \"FooObject\" class');",
        "// Line_Reference 137:             $this->assertEquals('__tostring', $e->getMethodName(), 'Exception should be raised on the \"__toString\" method');",
        "// Line_Reference 138:         }",
        "// Line_Reference 173:     public function testSandboxAllowMethodToString()",
        "// Line_Reference 174:     {",
        "// Line_Reference 175:         $twig = $this->getEnvironment(true, [], self::$templates, [], [], ['FooObject' => '__toString']);",
        "// Line_Reference 176:         FooObject::reset();",
        "// Line_Reference 177:         $this->assertEquals('foo', $twig->load('1_basic5')->render(self::$params), 'Sandbox allow some methods');",
        "// Line_Reference 178:         $this->assertEquals(1, FooObject::$called['__toString'], 'Sandbox only calls method once');",
        "// Line_Reference 179:     }",
        "// Line_Reference 180: ",
        "// Line_Reference 181:     public function testSandboxAllowMethodToStringDisabled()",
        "// Line_Reference 182:     {",
        "// Line_Reference 183:         $twig = $this->getEnvironment(false, [], self::$templates);",
        "// Line_Reference 184:         FooObject::reset();",
        "// Line_Reference 185:         $this->assertEquals('foo', $twig->load('1_basic5')->render(self::$params), 'Sandbox allows __toString when sandbox disabled');",
        "// Line_Reference 186:         $this->assertEquals(1, FooObject::$called['__toString'], 'Sandbox only calls method once');",
        "// Line_Reference 187:     }",
        "// Line_Reference 188: "
    ]
}
