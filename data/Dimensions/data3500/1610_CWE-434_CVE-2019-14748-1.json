{
    "cve_id": "CVE-2019-14748",
    "cve_description": "An issue was discovered in osTicket before 1.10.7 and 1.12.x before 1.12.1. The Ticket creation form allows users to upload files along with queries. It was found that the file-upload functionality has fewer (or no) mitigations implemented for file content checks; also, the output is not handled properly, causing persistent XSS that leads to cookie stealing or malicious actions. For example, a non-agent user can upload a .html file, and Content-Disposition will be set to inline instead of attachment.",
    "cve_publish_date": "2019-08-07",
    "cwe_id": "CWE-434",
    "cwe_name": "Unrestricted Upload of File with Dangerous Type",
    "cwe_description": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
    "commit_message": "security: HTML File Browser Execution (Windows: Firefox/IE)\n\nThis addresses an issue reported by Aishwarya Iyer where attached HTML files\nare executed in the browser instead of forcing download in Firefox and IE\nfor Windows specifically. This is caused by an incorrect\n`Content-Disposition` set in the `AttachmentFile::download` function.\nInstead of attachments having a disposition of `attachment` (which forces\ndownload) they have a disposition of `inline` (which displays the file\ncontents in the browser). This updates the download function to use whatever\ndisposition is passed (for S3 plugin), if none it defaults to `attachment`.\nIn addition, this overwrites the disposition and sets it to `attachment`\nafter the `$bk->sendRedirectURL()` so that S3 attachments still work and the\nissue of an attacker passing their own disposition is mitigated.",
    "type_of_change": "Modification",
    "filename_of_changes": "class.file.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "4",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 243:         $disposition = $disposition ?: 'inline';",
        "// Line_Reference 250:         Http::download($this->getName(), $type, null, 'inline');"
    ]
}
