{
    "cve_id": "CVE-2019-16792",
    "cve_description": "Waitress through version 1.3.1 allows request smuggling by sending the Content-Length header twice. Waitress would header fold a double Content-Length header and due to being unable to cast the now comma separated value to an integer would set the Content-Length to 0 internally. If two Content-Length headers are sent in a single request, Waitress would treat the request as having no body, thereby treating the body of the request as a new request in HTTP pipelining. This issue is fixed in Waitress 1.4.0.",
    "cve_publish_date": "2020-01-22",
    "cwe_id": "CWE-444",
    "cwe_name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')",
    "cwe_description": "The product acts as an intermediary HTTP agent\n         (such as a proxy or firewall) in the data flow between two\n         entities such as a client and server, but it does not\n         interpret malformed HTTP requests or responses in ways that\n         are consistent with how the messages will be processed by\n         those entities that are at the ultimate destination.",
    "commit_message": "Upon receiving invalid Content-Length bail\n\nInstead of attempting to continue processing the request, we instead\nraise a ParsingError and return a HTTP Bad Request to the client.\n\nThis also catches the case where two Content-Length's are sent, and are\nfolded together using HTTP header folding.",
    "type_of_change": "Modification",
    "filename_of_changes": "test_parser.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "21",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 171:         self.parser.parse_header(data)",
        "// Line_Reference 172:         self.assertEqual(self.parser.body_rcv, None)"
    ]
}
