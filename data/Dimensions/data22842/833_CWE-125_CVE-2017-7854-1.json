{
    "cve_id": "CVE-2017-7854",
    "cve_description": "The consume_init_expr function in wasm.c in radare2 1.3.0 allows remote attackers to cause a denial of service (heap-based buffer over-read and application crash) via a crafted Web Assembly file.",
    "cve_publish_date": "2017-04-13",
    "cwe_id": "CWE-125",
    "cwe_name": "Out-of-bounds Read",
    "cwe_description": "The product reads data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "Fix crash in fuzzed wasm r2_hoobr_consume_init_expr",
    "type_of_change": "Modification",
    "filename_of_changes": "wasm.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "27",
    "number_of_lines_deleted_vulnerable_to_cve": "38",
    "vulnerable_lines": [
        "// Line_Reference 74: \t\ti += 1;",
        "// Line_Reference 451: ",
        "// Line_Reference 460: \tut32 len =  sec->payload_len;",
        "// Line_Reference 465: \twhile (i < len && r < count) {",
        "// Line_Reference 466: ",
        "// Line_Reference 470: ",
        "// Line_Reference 472: \t\t\tfree (ptr);",
        "// Line_Reference 473: \t\t\treturn ret;",
        "// Line_Reference 475: ",
        "// Line_Reference 477: \t\t\tfree (ptr);",
        "// Line_Reference 478: \t\t\treturn ret;",
        "// Line_Reference 480: ",
        "// Line_Reference 482: ",
        "// Line_Reference 484: \t\t\tfree (ptr);",
        "// Line_Reference 485: \t\t\treturn ret;",
        "// Line_Reference 487: ",
        "// Line_Reference 495: ",
        "// Line_Reference 596: \tint buflen = bin->buf->length;",
        "// Line_Reference 597: \tif (sec->payload_data + 32 > buflen) {",
        "// Line_Reference 598: \t\treturn NULL;",
        "// Line_Reference 599: \t}",
        "// Line_Reference 634: ",
        "// Line_Reference 647: \twhile (i < len && r < count) {",
        "// Line_Reference 648: ",
        "// Line_Reference 652: ",
        "// Line_Reference 654: \t\t\tfree (ptr);",
        "// Line_Reference 655: \t\t\treturn ret;",
        "// Line_Reference 657: ",
        "// Line_Reference 659: \t\t\tfree (ptr);",
        "// Line_Reference 660: \t\t\treturn ret;",
        "// Line_Reference 662: ",
        "// Line_Reference 664: \t\t\tfree (ptr);",
        "// Line_Reference 665: \t\t\treturn ret;",
        "// Line_Reference 667: ",
        "// Line_Reference 669: \t\twhile (i < len && j < ptr->num_elem\t) {",
        "// Line_Reference 677: ",
        "// Line_Reference 681: ",
        "// Line_Reference 683: "
    ]
}
