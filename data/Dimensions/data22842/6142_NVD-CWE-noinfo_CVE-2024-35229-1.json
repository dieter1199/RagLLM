{
    "cve_id": "CVE-2024-35229",
    "cve_description": "ZKsync Era is a layer 2 rollup that uses zero-knowledge proofs to scale Ethereum. Prior to version 1.3.10, there is a very specific pattern `f(a(),b()); check_if_a_executed_last()` in Yul that exposes a bug in evaluation order of Yul function arguments. This vulnerability has been fixed in version 1.3.10. As a workaround, update and redeploy affected contracts.\n",
    "cve_publish_date": "2024-05-27",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Release v1.3.10",
    "type_of_change": "Modification",
    "filename_of_changes": "mod.rs",
    "code_language": "Rust",
    "number_of_lines_added_for_mitigation": "13",
    "number_of_lines_deleted_vulnerable_to_cve": "31",
    "vulnerable_lines": [
        "// Line_Reference 115:                 for argument in self.arguments.into_iter() {",
        "// Line_Reference 174:                 for argument in self.arguments.into_iter() {",
        "// Line_Reference 678:                 let arguments = self.pop_arguments_llvm_log::<D, 2>(context)?;",
        "// Line_Reference 688:                 let arguments = self.pop_arguments_llvm_log::<D, 3>(context)?;",
        "// Line_Reference 701:                 let arguments = self.pop_arguments_llvm_log::<D, 4>(context)?;",
        "// Line_Reference 714:                 let arguments = self.pop_arguments_llvm_log::<D, 5>(context)?;",
        "// Line_Reference 727:                 let arguments = self.pop_arguments_llvm_log::<D, 6>(context)?;",
        "// Line_Reference 1401:         for expression in self.arguments.drain(0..N) {",
        "// Line_Reference 1419:         for expression in self.arguments.drain(0..N) {",
        "// Line_Reference 1422: ",
        "// Line_Reference 1423:         Ok(arguments.try_into().expect(\"Always successful\"))",
        "// Line_Reference 1424:     }",
        "// Line_Reference 1425: ",
        "// Line_Reference 1426:     ///",
        "// Line_Reference 1427:     /// Pops the specified number of arguments, converted into their LLVM values.",
        "// Line_Reference 1428:     ///",
        "// Line_Reference 1429:     /// This function inverts the order of event topics, taking into account its behavior in EVM.",
        "// Line_Reference 1430:     ///",
        "// Line_Reference 1431:     fn pop_arguments_llvm_log<'ctx, D, const N: usize>(",
        "// Line_Reference 1432:         &mut self,",
        "// Line_Reference 1433:         context: &mut compiler_llvm_context::Context<'ctx, D>,",
        "// Line_Reference 1434:     ) -> anyhow::Result<[inkwell::values::BasicValueEnum<'ctx>; N]>",
        "// Line_Reference 1435:     where",
        "// Line_Reference 1436:         D: compiler_llvm_context::Dependency,",
        "// Line_Reference 1437:     {",
        "// Line_Reference 1438:         self.arguments[2..].reverse();",
        "// Line_Reference 1439:         let mut arguments = Vec::with_capacity(N);",
        "// Line_Reference 1440:         for expression in self.arguments.drain(0..N) {",
        "// Line_Reference 1441:             arguments.push(expression.into_llvm(context)?.expect(\"Always exists\").value);",
        "// Line_Reference 1442:         }",
        "// Line_Reference 1443:         arguments[2..].reverse();"
    ]
}
