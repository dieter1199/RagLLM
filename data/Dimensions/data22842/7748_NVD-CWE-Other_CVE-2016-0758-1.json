{
    "cve_id": "CVE-2016-0758",
    "cve_description": "Integer overflow in lib/asn1_decoder.c in the Linux kernel before 4.6 allows local users to gain privileges via crafted ASN.1 data.",
    "cve_publish_date": "2016-06-27",
    "cwe_id": "NVD-CWE-Other",
    "cwe_name": "Other",
    "cwe_description": "NVD is only using a subset of CWE for mapping instead of the entire CWE, and the weakness type is not covered by that subset.",
    "commit_message": "KEYS: Fix ASN.1 indefinite length object parsing\n\nThis fixes CVE-2016-0758.\n\nIn the ASN.1 decoder, when the length field of an ASN.1 value is extracted,\nit isn't validated against the remaining amount of data before being added\nto the cursor.  With a sufficiently large size indicated, the check:\n\n\tdatalen - dp < 2\n\nmay then fail due to integer overflow.\n\nFix this by checking the length indicated against the amount of remaining\ndata in both places a definite length is determined.\n\nWhilst we're at it, make the following changes:\n\n (1) Check the maximum size of extended length does not exceed the capacity\n     of the variable it's being stored in (len) rather than the type that\n     variable is assumed to be (size_t).\n\n (2) Compare the EOC tag to the symbolic constant ASN1_EOC rather than the\n     integer 0.\n\n (3) To reduce confusion, move the initialisation of len outside of:\n\n\tfor (len = 0; n > 0; n--) {\n\n     since it doesn't have anything to do with the loop counter n.\n\nSigned-off-by: David Howells <dhowells@redhat.com>\nReviewed-by: Mimi Zohar <zohar@linux.vnet.ibm.com>\nAcked-by: David Woodhouse <David.Woodhouse@intel.com>\nAcked-by: Peter Jones <pjones@redhat.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "asn1_decoder.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "9",
    "number_of_lines_deleted_vulnerable_to_cve": "7",
    "vulnerable_lines": [
        "// Line_Reference 77: \tif (tag == 0) {",
        "// Line_Reference 99: \tif (len <= 0x7f) {",
        "// Line_Reference 100: \t\tdp += len;",
        "// Line_Reference 101: \t\tgoto next_tag;",
        "// Line_Reference 102: \t}",
        "// Line_Reference 113: \tif (unlikely(n > sizeof(size_t) - 1))",
        "// Line_Reference 117: \tfor (len = 0; n > 0; n--) {"
    ]
}
