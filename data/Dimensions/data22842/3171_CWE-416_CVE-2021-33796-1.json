{
    "cve_id": "CVE-2021-33796",
    "cve_description": "In MuJS before version 1.1.2, a use-after-free flaw in the regexp source property access may cause denial of service.\n\n",
    "cve_publish_date": "2023-07-07",
    "cwe_id": "CWE-416",
    "cwe_name": "Use After Free",
    "cwe_description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
    "commit_message": "Fix use-after-free in regexp source property access.\n\nThe underlying string of the \"source\" property of a regular expression\nobject can be freed if the regexp is garbage collected.\n\nThis could lead to a use-after-free, because the accessor incorrectly\nassumed that the regexp source was an interned (thus never freed) string.\nFix this by calling js_pushstring instead of the faster but unsafe\njs_pushliteral.\n\nMany thanks to Connor Nelson for spotting this!",
    "type_of_change": "Modification",
    "filename_of_changes": "jsrun.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 525: \t\t\tjs_pushliteral(J, obj->u.r.source);"
    ]
}
