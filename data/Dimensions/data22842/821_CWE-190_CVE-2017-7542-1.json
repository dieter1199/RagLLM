{
    "cve_id": "CVE-2017-7542",
    "cve_description": "The ip6_find_1stfragopt function in net/ipv6/output_core.c in the Linux kernel through 4.12.3 allows local users to cause a denial of service (integer overflow and infinite loop) by leveraging the ability to open a raw socket.",
    "cve_publish_date": "2017-07-21",
    "cwe_id": "CWE-190",
    "cwe_name": "Integer Overflow or Wraparound",
    "cwe_description": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
    "commit_message": "ipv6: avoid overflow of offset in ip6_find_1stfragopt\n\nIn some cases, offset can overflow and can cause an infinite loop in\nip6_find_1stfragopt(). Make it unsigned int to prevent the overflow, and\ncap it at IPV6_MAXPLEN, since packets larger than that should be invalid.\n\nThis problem has been here since before the beginning of git history.\n\nSigned-off-by: Sabrina Dubroca <sd@queasysnail.net>\nAcked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "type_of_change": "Modification",
    "filename_of_changes": "output_core.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "6",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 81: \tu16 offset = sizeof(struct ipv6hdr);",
        "// Line_Reference 114: \t\toffset += ipv6_optlen(exthdr);"
    ]
}
