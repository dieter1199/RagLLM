{
    "cve_id": "CVE-2016-10012",
    "cve_description": "The shared memory manager (associated with pre-authentication compression) in sshd in OpenSSH before 7.4 does not ensure that a bounds check is enforced by all compilers, which might allows local users to gain privileges by leveraging access to a sandboxed privilege-separation process, related to the m_zback and m_zlib data structures.",
    "cve_publish_date": "2017-01-05",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "Remove support for pre-authentication compression. Doing compression\nearly in the protocol probably seemed reasonable in the 1990s, but\ntoday it's clearly a bad idea in terms of both cryptography (cf.\nmultiple compression oracle attacks in TLS) and attack surface.\n\nMoreover, to support it across privilege-separation zlib needed\nthe assistance of a complex shared-memory manager that made the\nrequired attack surface considerably larger.\n\nPrompted by Guido Vranken pointing out a compiler-elided security\ncheck in the shared memory manager found by Stack\n(http://css.csail.mit.edu/stack/); ok deraadt@ markus@\n\nNB. pre-auth authentication has been disabled by default in sshd\nfor >10 years.",
    "type_of_change": "Modification",
    "filename_of_changes": "monitor_wrap.h",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "4",
    "vulnerable_lines": [
        "// Line_Reference 1: /* $OpenBSD: monitor_wrap.h,v 1.31 2016/08/13 17:47:41 markus Exp $ */",
        "// Line_Reference 79: /* zlib allocation hooks */",
        "// Line_Reference 80: void mm_init_compression(struct mm_master *);",
        "// Line_Reference 81: "
    ]
}
