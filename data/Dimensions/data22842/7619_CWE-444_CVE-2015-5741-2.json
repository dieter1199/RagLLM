{
    "cve_id": "CVE-2015-5741",
    "cve_description": "The net/http library in net/http/transfer.go in Go before 1.4.3 does not properly parse HTTP headers, which allows remote attackers to conduct HTTP request smuggling attacks via a request that contains Content-Length and Transfer-Encoding header fields.",
    "cve_publish_date": "2020-02-08",
    "cwe_id": "CWE-444",
    "cwe_name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')",
    "cwe_description": "The product acts as an intermediary HTTP agent\n         (such as a proxy or firewall) in the data flow between two\n         entities such as a client and server, but it does not\n         interpret malformed HTTP requests or responses in ways that\n         are consistent with how the messages will be processed by\n         those entities that are at the ultimate destination.",
    "commit_message": "net/http: harden Server against request smuggling\n\nSee RFC 7230.\n\nThanks to RÃ©gis Leroy for the report.\n\nChange-Id: Ic1779bc2180900430d4d7a4938cac04ed73c304c\nReviewed-on: https://go-review.googlesource.com/11810\nReviewed-by: Russ Cox <rsc@golang.org>\nRun-TryBot: Brad Fitzpatrick <bradfitz@golang.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "transfer.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "39",
    "number_of_lines_deleted_vulnerable_to_cve": "11",
    "vulnerable_lines": [
        "// Line_Reference 336: \tt.TransferEncoding, err = fixTransferEncoding(t.RequestMethod, t.Header)",
        "// Line_Reference 424: func fixTransferEncoding(requestMethod string, header Header) ([]string, error) {",
        "// Line_Reference 429: ",
        "// Line_Reference 454: \t\t// Chunked encoding trumps Content-Length. See RFC 2616",
        "// Line_Reference 455: \t\t// Section 4.4. Currently len(te) > 0 implies chunked",
        "// Line_Reference 456: \t\t// encoding.",
        "// Line_Reference 457: \t\tdelete(header, \"Content-Length\")",
        "// Line_Reference 468: ",
        "// Line_Reference 487: \tcl := strings.TrimSpace(header.get(\"Content-Length\"))",
        "// Line_Reference 498: \tif !isResponse && requestMethod == \"GET\" {",
        "// Line_Reference 499: \t\t// RFC 2616 doesn't explicitly permit nor forbid an"
    ]
}
