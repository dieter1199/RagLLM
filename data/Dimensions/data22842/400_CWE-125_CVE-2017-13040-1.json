{
    "cve_id": "CVE-2017-13040",
    "cve_description": "The MPTCP parser in tcpdump before 4.9.2 has a buffer over-read in print-mptcp.c, several functions.",
    "cve_publish_date": "2017-09-14",
    "cwe_id": "CWE-125",
    "cwe_name": "Out-of-bounds Read",
    "cwe_description": "The product reads data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "CVE-2017-13040/MPTCP: Clean up printing DSS suboption.\n\nDo the length checking inline; that means we print stuff up to the point\nat which we run out of option data.\n\nFirst check to make sure we have at least 4 bytes of option, so we have\nflags to check.\n\nThis fixes a buffer over-read discovered by Kim Gwan Yeong.\n\nAdd a test using the capture file supplied by the reporter(s).",
    "type_of_change": "Modification",
    "filename_of_changes": "print-mptcp.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "50",
    "number_of_lines_deleted_vulnerable_to_cve": "34",
    "vulnerable_lines": [
        "// Line_Reference 181:         if (!(opt_len == 12 && flags & TH_SYN) &&",
        "// Line_Reference 205:         if (!(opt_len == 12 && flags & TH_SYN) &&",
        "// Line_Reference 207:             !(opt_len == 24 && flags & TH_ACK))",
        "// Line_Reference 239: static u_int mp_dss_len(const  struct mp_dss *m, int csum)",
        "// Line_Reference 240: {",
        "// Line_Reference 241:         u_int len;",
        "// Line_Reference 242: ",
        "// Line_Reference 243:         len = 4;",
        "// Line_Reference 244:         if (m->flags & MP_DSS_A) {",
        "// Line_Reference 245:                 /* Ack present - 4 or 8 octets */",
        "// Line_Reference 246:                 len += (m->flags & MP_DSS_a) ? 8 : 4;",
        "// Line_Reference 247:         }",
        "// Line_Reference 248:         if (m->flags & MP_DSS_M) {",
        "// Line_Reference 249:                 /*",
        "// Line_Reference 250:                  * Data Sequence Number (DSN), Subflow Sequence Number (SSN),",
        "// Line_Reference 251:                  * Data-Level Length present, and Checksum possibly present.",
        "// Line_Reference 252:                  * All but the Checksum are 10 bytes if the m flag is",
        "// Line_Reference 253:                  * clear (4-byte DSN) and 14 bytes if the m flag is set",
        "// Line_Reference 254:                  * (8-byte DSN).",
        "// Line_Reference 255:                  */",
        "// Line_Reference 256:                 len += (m->flags & MP_DSS_m) ? 14 : 10;",
        "// Line_Reference 257: ",
        "// Line_Reference 258:                 /*",
        "// Line_Reference 259:                  * The Checksum is present only if negotiated.",
        "// Line_Reference 260:                  */",
        "// Line_Reference 261:                 if (csum)",
        "// Line_Reference 262:                         len += 2;",
        "// Line_Reference 263: \t}",
        "// Line_Reference 264: \treturn len;",
        "// Line_Reference 265: }",
        "// Line_Reference 266: ",
        "// Line_Reference 273:         if ((opt_len != mp_dss_len(mdss, 1) &&",
        "// Line_Reference 274:              opt_len != mp_dss_len(mdss, 0)) || flags & TH_SYN)",
        "// Line_Reference 306:                 if (opt_len == mp_dss_len(mdss, 1))"
    ]
}
