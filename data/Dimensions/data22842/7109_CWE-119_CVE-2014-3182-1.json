{
    "cve_id": "CVE-2014-3182",
    "cve_description": "Array index error in the logi_dj_raw_event function in drivers/hid/hid-logitech-dj.c in the Linux kernel before 3.16.2 allows physically proximate attackers to execute arbitrary code or cause a denial of service (invalid kfree) via a crafted device that provides a malformed REPORT_TYPE_NOTIF_DEVICE_UNPAIRED value.",
    "cve_publish_date": "2014-09-28",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "HID: logitech: perform bounds checking on device_id early enough\n\ndevice_index is a char type and the size of paired_dj_deivces is 7\nelements, therefore proper bounds checking has to be applied to\ndevice_index before it is used.\n\nWe are currently performing the bounds checking in\nlogi_dj_recv_add_djhid_device(), which is too late, as malicious device\ncould send REPORT_TYPE_NOTIF_DEVICE_UNPAIRED early enough and trigger the\nproblem in one of the report forwarding functions called from\nlogi_dj_raw_event().\n\nFix this by performing the check at the earliest possible ocasion in\nlogi_dj_raw_event().\n\nCc: stable@vger.kernel.org\nReported-by: Ben Hawkes <hawkes@google.com>\nReviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>",
    "type_of_change": "Modification",
    "filename_of_changes": "hid-logitech-dj.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "6",
    "number_of_lines_deleted_vulnerable_to_cve": "7",
    "vulnerable_lines": [
        "// Line_Reference 241: \tif ((dj_report->device_index < DJ_DEVICE_INDEX_MIN) ||",
        "// Line_Reference 242: \t    (dj_report->device_index > DJ_DEVICE_INDEX_MAX)) {",
        "// Line_Reference 243: \t\tdev_err(&djrcv_hdev->dev, \"%s: invalid device index:%d\\n\",",
        "// Line_Reference 244: \t\t\t__func__, dj_report->device_index);",
        "// Line_Reference 245: \t\treturn;",
        "// Line_Reference 246: \t}",
        "// Line_Reference 247: "
    ]
}
