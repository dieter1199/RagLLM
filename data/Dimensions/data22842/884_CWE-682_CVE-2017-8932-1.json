{
    "cve_id": "CVE-2017-8932",
    "cve_description": "A bug in the standard library ScalarMult implementation of curve P-256 for amd64 architectures in Go before 1.7.6 and 1.8.x before 1.8.2 causes incorrect results to be generated for specific input points. An adaptive attack can be mounted to progressively extract the scalar input to ScalarMult by submitting crafted points and observing failures to the derive correct output. This leads to a full key recovery attack against static ECDH, as used in popular JWT libraries.",
    "cve_publish_date": "2017-07-06",
    "cwe_id": "CWE-682",
    "cwe_name": "Incorrect Calculation",
    "cwe_description": "The product performs a calculation that generates incorrect or unintended results that are later used in security-critical decisions or resource management.",
    "commit_message": "crypto/elliptic: fix carry bug in x86-64 P-256 implementation.\n\nPatch from Vlad Krasnov and confirmed to be under CLA.\n\nFixes #20040.\n\nChange-Id: Ieb8436c4dcb6669a1620f1e0d257efd047b1b87c\nReviewed-on: https://go-review.googlesource.com/41070\nRun-TryBot: Adam Langley <agl@golang.org>\nTryBot-Result: Gobot Gobot <gobot@golang.org>\nReviewed-by: Brad Fitzpatrick <bradfitz@golang.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "p256_asm_amd64.s",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "5",
    "number_of_lines_deleted_vulnerable_to_cve": "5",
    "vulnerable_lines": [
        "// Line_Reference 1317: \tADCQ $0, mul0",
        "// Line_Reference 1319: \tCMOVQNE acc0, acc4",
        "// Line_Reference 1320: \tCMOVQNE acc1, acc5",
        "// Line_Reference 1321: \tCMOVQNE acc2, acc6",
        "// Line_Reference 1322: \tCMOVQNE acc3, acc7"
    ]
}
