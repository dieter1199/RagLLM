{
    "cve_id": "CVE-2015-4177",
    "cve_description": "The collect_mounts function in fs/namespace.c in the Linux kernel before 4.0.5 does not properly consider that it may execute after a path has been unmounted, which allows local users to cause a denial of service (system crash) by leveraging user-namespace root access for an MNT_DETACH umount2 system call.",
    "cve_publish_date": "2016-05-02",
    "cwe_id": "NVD-CWE-Other",
    "cwe_name": "Other",
    "cwe_description": "NVD is only using a subset of CWE for mapping instead of the entire CWE, and the weakness type is not covered by that subset.",
    "commit_message": "mnt: Fail collect_mounts when applied to unmounted mounts\n\nThe only users of collect_mounts are in audit_tree.c\n\nIn audit_trim_trees and audit_add_tree_rule the path passed into\ncollect_mounts is generated from kern_path passed an audit_tree\npathname which is guaranteed to be an absolute path.   In those cases\ncollect_mounts is obviously intended to work on mounted paths and\nif a race results in paths that are unmounted when collect_mounts\nit is reasonable to fail early.\n\nThe paths passed into audit_tag_tree don't have the absolute path\ncheck.  But are used to play with fsnotify and otherwise interact with\nthe audit_trees, so again operating only on mounted paths appears\nreasonable.\n\nAvoid having to worry about what happens when we try and audit\nunmounted filesystems by restricting collect_mounts to mounts\nthat appear in the mount tree.\n\nSigned-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "namespace.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "5",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 1672: \ttree = copy_tree(real_mount(path->mnt), path->dentry,",
        "// Line_Reference 1673: \t\t\t CL_COPY_ALL | CL_PRIVATE);"
    ]
}
