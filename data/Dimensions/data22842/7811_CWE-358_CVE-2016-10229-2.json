{
    "cve_id": "CVE-2016-10229",
    "cve_description": "udp.c in the Linux kernel before 4.5 allows remote attackers to execute arbitrary code via UDP traffic that triggers an unsafe second checksum calculation during execution of a recv system call with the MSG_PEEK flag.",
    "cve_publish_date": "2017-04-04",
    "cwe_id": "CWE-358",
    "cwe_name": "Improperly Implemented Security Check for Standard",
    "cwe_description": "The product does not implement or incorrectly implements one or more security-relevant checks as specified by the design of a standardized algorithm, protocol, or technique.",
    "commit_message": "udp: properly support MSG_PEEK with truncated buffers\n\nBackport of this upstream commit into stable kernels :\n89c22d8c3b27 (\"net: Fix skb csum races when peeking\")\nexposed a bug in udp stack vs MSG_PEEK support, when user provides\na buffer smaller than skb payload.\n\nIn this case,\nskb_copy_and_csum_datagram_iovec(skb, sizeof(struct udphdr),\n                                 msg->msg_iov);\nreturns -EFAULT.\n\nThis bug does not happen in upstream kernels since Al Viro did a great\njob to replace this into :\nskb_copy_and_csum_datagram_msg(skb, sizeof(struct udphdr), msg);\nThis variant is safe vs short buffers.\n\nFor the time being, instead reverting Herbert Xu patch and add back\nskb->ip_summed invalid changes, simply store the result of\nudp_lib_checksum_complete() so that we avoid computing the checksum a\nsecond time, and avoid the problematic\nskb_copy_and_csum_datagram_iovec() call.\n\nThis patch can be applied on recent kernels as it avoids a double\nchecksumming, then backported to stable kernels as a bug fix.\n\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nAcked-by: Herbert Xu <herbert@gondor.apana.org.au>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "type_of_change": "Modification",
    "filename_of_changes": "udp.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "4",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 436: \t\tif (udp_lib_checksum_complete(skb))",
        "// Line_Reference 440: \tif (skb_csum_unnecessary(skb))"
    ]
}
