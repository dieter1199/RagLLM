{
    "cve_id": "CVE-2017-9763",
    "cve_description": "The grub_ext2_read_block function in fs/ext2.c in GNU GRUB before 2013-11-12, as used in shlr/grub/fs/ext2.c in radare2 1.5.0, allows remote attackers to cause a denial of service (excessive stack use and application crash) via a crafted binary file, related to use of a variable-size stack array.",
    "cve_publish_date": "2017-06-19",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "Fix #7723 - crash in ext2 GRUB code because of variable size array in stack",
    "type_of_change": "Modification",
    "filename_of_changes": "grubfs.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "17",
    "number_of_lines_deleted_vulnerable_to_cve": "16",
    "vulnerable_lines": [
        "// Line_Reference 1: /* radare - LGPL - Copyright 2011 pancake<nopcode.org> */",
        "// Line_Reference 20: \tif (disk != NULL) {",
        "// Line_Reference 21: \t\tconst int blocksize = 512; // unhardcode 512",
        "// Line_Reference 22: \t\tint ret;",
        "// Line_Reference 23: \t\tRIOBind *iob = disk->data;",
        "// Line_Reference 24: \t\tif (bio) iob = bio;",
        "// Line_Reference 25: \t\t//printf (\"io %p\\n\", file->root->iob.io);",
        "// Line_Reference 26: \t\tret = iob->read_at (iob->io, delta+(blocksize*sector),",
        "// Line_Reference 27: \t\t\t(ut8*)buf, size*blocksize);",
        "// Line_Reference 28: \t\tif (ret == -1)",
        "// Line_Reference 29: \t\t\treturn 1;",
        "// Line_Reference 30: \t\t//printf (\"DISK PTR = %p\\n\", disk->data);",
        "// Line_Reference 31: \t\t//printf (\"\\nBUF: %x %x %x %x\\n\", buf[0], buf[1], buf[2], buf[3]);",
        "// Line_Reference 32: \t} else eprintf (\"oops. no disk\\n\");",
        "// Line_Reference 33: \treturn 0; // 0 is ok",
        "// Line_Reference 61: \t\tif (gf->file && gf->file->device)"
    ]
}
