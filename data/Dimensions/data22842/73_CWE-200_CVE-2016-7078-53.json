{
    "cve_id": "CVE-2016-7078",
    "cve_description": "foreman before version 1.15.0 is vulnerable to an information leak through organizations and locations feature. When a user is assigned _no_ organizations/locations, they are able to view all resources instead of none (mirroring an administrator's view). The user's actions are still limited by their assigned permissions, e.g. to control viewing, editing and deletion.",
    "cve_publish_date": "2018-09-10",
    "cwe_id": "CWE-200",
    "cwe_name": "Exposure of Sensitive Information to an Unauthorized Actor",
    "cwe_description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
    "commit_message": "Fixes #16982 - Scope properly when no taxonomies are set\n\nThe default scope for hosts and other objects did not restrict\nproperly by taxonomies. An user without organizations or\nlocations, could do anything it's permissions allow to.\nThe list of hosts was unrestricted and showed hosts in\nany location or organization.\n\nThis is fixed to work so that:\n\nUsers without taxonomies, when set to 'any context' cannot see\nanything (at all)\n\nUsers with taxonomies, when set to 'any context' can see\neverything within all of their taxonomies context (including\nchildren taxonomies).\n\nAdmins set to 'any context' can see everything - regardless\nof whether it has a taxonomy or not.\n\nUsers or admins set to some organization/location scope\ncan only see stuff within scope.",
    "type_of_change": "Modification",
    "filename_of_changes": "seeds_test.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "30",
    "number_of_lines_deleted_vulnerable_to_cve": "28",
    "vulnerable_lines": [
        "// Line_Reference 18:     User.current = FactoryGirl.build(:user, :admin => true)",
        "// Line_Reference 49:       assert_difference 'User.where(:login => \"admin\").count', 1 do",
        "// Line_Reference 52:       user = User.find_by_login('admin')",
        "// Line_Reference 60:       assert_difference 'User.where(:login => \"seed_test\").count', 1 do",
        "// Line_Reference 69:       user = User.find_by_login('seed_test')",
        "// Line_Reference 78:     count = Ptable.count",
        "// Line_Reference 80:     assert_not_equal count, Ptable.count",
        "// Line_Reference 81:     refute Ptable.where(:os_family => nil).any?",
        "// Line_Reference 85:     count = Medium.count",
        "// Line_Reference 87:     assert_not_equal count, Medium.count",
        "// Line_Reference 88:     refute Medium.where(:os_family => nil).any?",
        "// Line_Reference 92:     count = ProvisioningTemplate.count",
        "// Line_Reference 94:     assert_not_equal count, ProvisioningTemplate.count",
        "// Line_Reference 98:         assert Ptable.where(:template => File.read(tmpl)).any?, \"No partition table containing #{tmpl}\"",
        "// Line_Reference 100:         assert ProvisioningTemplate.where(:template => File.read(tmpl)).any?, \"No template containing #{tmpl}\"",
        "// Line_Reference 106:     count = Bookmark.where(:public => true).count",
        "// Line_Reference 108:     assert_not_equal count, Bookmark.where(:public => true).count",
        "// Line_Reference 119:     ProvisioningTemplate.without_auditing { ProvisioningTemplate.find_by_name('Kickstart default').update_attributes(:template => 'test') }",
        "// Line_Reference 121:     refute_equal ProvisioningTemplate.find_by_name('Kickstart default').template, 'test'",
        "// Line_Reference 126:     assert_equal 1, ProvisioningTemplate.destroy_all(:name => 'Kickstart default').size",
        "// Line_Reference 128:     refute ProvisioningTemplate.find_by_name('Kickstart default')",
        "// Line_Reference 133:     tmpl = ProvisioningTemplate.find_by_name('Kickstart default')",
        "// Line_Reference 137:     refute ProvisioningTemplate.find_by_name('Kickstart default')",
        "// Line_Reference 150:     assert Organization.find_by_name('seed_test')",
        "// Line_Reference 158:     refute Organization.find_by_name('seed_test')",
        "// Line_Reference 166:     assert Location.find_by_name('seed_test')",
        "// Line_Reference 174:     refute Location.find_by_name('seed_test')",
        "// Line_Reference 190:     assert_equal [], view_permissions - Role.find_by_name('Viewer').permissions"
    ]
}
