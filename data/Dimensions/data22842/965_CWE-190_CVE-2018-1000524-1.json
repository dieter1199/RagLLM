{
    "cve_id": "CVE-2018-1000524",
    "cve_description": "miniSphere version 5.2.9 and earlier contains a Integer Overflow vulnerability in layer_resize() function in map_engine.c that can result in remote denial of service. This attack appear to be exploitable via the victim must load a specially-crafted map which calls SetLayerSize in its entry script. This vulnerability appears to have been fixed in 5.0.3, 5.1.5, 5.2.10 and later.",
    "cve_publish_date": "2018-06-26",
    "cwe_id": "CWE-190",
    "cwe_name": "Integer Overflow or Wraparound",
    "cwe_description": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
    "commit_message": "Fix integer overflow in layer_resize in map_engine.c (#268)\n\n* Fix integer overflow in layer_resize in map_engine.c\r\n\r\nThere's a buffer overflow bug in the function layer_resize. It allocates\r\na buffer `tilemap` with size `x_size * y_size * sizeof(struct map_tile)`.\r\nBut it didn't check for integer overflow, so if x_size and y_size are\r\nvery large, it's possible that the buffer size is smaller than needed,\r\ncausing a buffer overflow later.\r\n\r\nPoC: `SetLayerSize(0, 0x7FFFFFFF, 0x7FFFFFFF);`\r\n\r\n* move malloc to a separate line",
    "type_of_change": "Modification",
    "filename_of_changes": "map_engine.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "4",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 1047: \tif (!(tilemap = malloc(x_size * y_size * sizeof(struct map_tile))))"
    ]
}
