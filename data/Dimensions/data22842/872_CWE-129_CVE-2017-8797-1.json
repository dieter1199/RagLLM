{
    "cve_id": "CVE-2017-8797",
    "cve_description": "The NFSv4 server in the Linux kernel before 4.11.3 does not properly validate the layout type when processing the NFSv4 pNFS GETDEVICEINFO or LAYOUTGET operand in a UDP packet from a remote attacker. This type value is uninitialized upon encountering certain error conditions. This value is used as an array index for dereferencing, which leads to an OOPS and eventually a DoS of knfsd and a soft-lockup of the whole system.",
    "cve_publish_date": "2017-07-02",
    "cwe_id": "CWE-129",
    "cwe_name": "Improper Validation of Array Index",
    "cwe_description": "The product uses untrusted input when calculating or using an array index, but the product does not validate or incorrectly validates the index to ensure the index references a valid position within the array.",
    "commit_message": "nfsd: encoders mustn't use unitialized values in error cases\n\nIn error cases, lgp->lg_layout_type may be out of bounds; so we\nshouldn't be using it until after the check of nfserr.\n\nThis was seen to crash nfsd threads when the server receives a LAYOUTGET\nrequest with a large layout type.\n\nGETDEVICEINFO has the same problem.\n\nReported-by: Ari Kauppi <Ari.Kauppi@synopsys.com>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nCc: stable@vger.kernel.org\nSigned-off-by: J. Bruce Fields <bfields@redhat.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "nfs4xdr.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "4",
    "number_of_lines_deleted_vulnerable_to_cve": "4",
    "vulnerable_lines": [
        "// Line_Reference 4122: \tconst struct nfsd4_layout_ops *ops =",
        "// Line_Reference 4123: \t\tnfsd4_layout_ops[gdev->gd_layout_type];",
        "// Line_Reference 4192: \tconst struct nfsd4_layout_ops *ops =",
        "// Line_Reference 4193: \t\tnfsd4_layout_ops[lgp->lg_layout_type];"
    ]
}
