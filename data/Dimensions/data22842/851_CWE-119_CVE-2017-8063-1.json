{
    "cve_id": "CVE-2017-8063",
    "cve_description": "drivers/media/usb/dvb-usb/cxusb.c in the Linux kernel 4.9.x and 4.10.x before 4.10.12 interacts incorrectly with the CONFIG_VMAP_STACK option, which allows local users to cause a denial of service (system crash) or possibly have unspecified other impact by leveraging use of more than one virtual page for a DMA scatterlist.",
    "cve_publish_date": "2017-04-23",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "[media] cxusb: Use a dma capable buffer also for reading\n\nCommit 17ce039b4e54 (\"[media] cxusb: don't do DMA on stack\")\nadded a kmalloc'ed bounce buffer for writes, but missed to do the same\nfor reads. As the read only happens after the write is finished, we can\nreuse the same buffer.\n\nAs dvb_usb_generic_rw handles a read length of 0 by itself, avoid calling\nit using the dvb_usb_generic_read wrapper function.\n\nSigned-off-by: Stefan Br√ºns <stefan.bruens@rwth-aachen.de>\nSigned-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "cxusb.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "8",
    "number_of_lines_deleted_vulnerable_to_cve": "7",
    "vulnerable_lines": [
        "// Line_Reference 62: \tint ret, wo;",
        "// Line_Reference 69: \two = (rbuf == NULL || rlen == 0); /* write-only */",
        "// Line_Reference 74: \tif (wo)",
        "// Line_Reference 75: \t\tret = dvb_usb_generic_write(d, st->data, 1 + wlen);",
        "// Line_Reference 76: \telse",
        "// Line_Reference 77: \t\tret = dvb_usb_generic_rw(d, st->data, 1 + wlen,",
        "// Line_Reference 78: \t\t\t\t\t rbuf, rlen, 0);"
    ]
}
