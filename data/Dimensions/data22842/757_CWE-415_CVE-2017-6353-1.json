{
    "cve_id": "CVE-2017-6353",
    "cve_description": "net/sctp/socket.c in the Linux kernel through 4.10.1 does not properly restrict association peel-off operations during certain wait states, which allows local users to cause a denial of service (invalid unlock and double free) via a multithreaded application.  NOTE: this vulnerability exists because of an incorrect fix for CVE-2017-5986.",
    "cve_publish_date": "2017-03-01",
    "cwe_id": "CWE-415",
    "cwe_name": "Double Free",
    "cwe_description": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations.",
    "commit_message": "sctp: deny peeloff operation on asocs with threads sleeping on it\n\ncommit 2dcab5984841 (\"sctp: avoid BUG_ON on sctp_wait_for_sndbuf\")\nattempted to avoid a BUG_ON call when the association being used for a\nsendmsg() is blocked waiting for more sndbuf and another thread did a\npeeloff operation on such asoc, moving it to another socket.\n\nAs Ben Hutchings noticed, then in such case it would return without\nlocking back the socket and would cause two unlocks in a row.\n\nFurther analysis also revealed that it could allow a double free if the\napplication managed to peeloff the asoc that is created during the\nsendmsg call, because then sctp_sendmsg() would try to free the asoc\nthat was created only for that call.\n\nThis patch takes another approach. It will deny the peeloff operation\nif there is a thread sleeping on the asoc, so this situation doesn't\nexist anymore. This avoids the issues described above and also honors\nthe syscalls that are already being handled (it can be multiple sendmsg\ncalls).\n\nJoint work with Xin Long.\n\nFixes: 2dcab5984841 (\"sctp: avoid BUG_ON on sctp_wait_for_sndbuf\")\nCc: Alexander Popov <alex.popov@linux.com>\nCc: Ben Hutchings <ben@decadent.org.uk>\nSigned-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>\nSigned-off-by: Xin Long <lucien.xin@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "type_of_change": "Modification",
    "filename_of_changes": "socket.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "6",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 7602: \t\tif (sk != asoc->base.sk)",
        "// Line_Reference 7603: \t\t\tgoto do_error;"
    ]
}
