{
    "cve_id": "CVE-2024-39699",
    "cve_description": "Directus is a real-time API and App dashboard for managing SQL database content. There was already a reported SSRF vulnerability via file import. It was fixed by resolving all DNS names and checking if the requested IP is an internal IP address. However it is possible to bypass this security measure and execute a SSRF using redirects. Directus allows redirects when importing file from the URL and does not check the result URL. Thus, it is possible to execute a request to an internal IP, for example to 127.0.0.1. However, it is blind SSRF, because Directus also uses response interception technique to get the information about the connect from the socket directly and it does not show a response if the IP address is internal. This vulnerability is fixed in 10.9.3.",
    "cve_publish_date": "2024-07-08",
    "cwe_id": "CWE-918",
    "cwe_name": "Server-Side Request Forgery (SSRF)",
    "cwe_description": "The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
    "commit_message": "Add validation for IP Access in Role settings (#21444)",
    "type_of_change": "Modification",
    "filename_of_changes": "roles.ts",
    "code_language": "TypeScript",
    "number_of_lines_added_for_mitigation": "65",
    "number_of_lines_deleted_vulnerable_to_cve": "10",
    "vulnerable_lines": [
        "// Line_Reference 1: import { ForbiddenError, UnprocessableContentError } from '@directus/errors';",
        "// Line_Reference 3: import type { AbstractServiceOptions, Alterations, MutationOptions, PrimaryKey } from '../types/index.js';",
        "// Line_Reference 152: \toverride async updateOne(key: PrimaryKey, data: Record<string, any>, opts?: MutationOptions): Promise<PrimaryKey> {",
        "// Line_Reference 164: \toverride async updateBatch(data: Record<string, any>[], opts?: MutationOptions): Promise<PrimaryKey[]> {",
        "// Line_Reference 165: \t\tconst primaryKeyField = this.schema.collections[this.collection]!.primary;",
        "// Line_Reference 181: \toverride async updateMany(",
        "// Line_Reference 182: \t\tkeys: PrimaryKey[],",
        "// Line_Reference 183: \t\tdata: Record<string, any>,",
        "// Line_Reference 184: \t\topts?: MutationOptions,",
        "// Line_Reference 185: \t): Promise<PrimaryKey[]> {"
    ]
}
