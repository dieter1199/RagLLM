{
    "cve_id": "CVE-2014-1858",
    "cve_description": "__init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.",
    "cve_publish_date": "2018-01-08",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "ENH: remove insecure mktemp use\n\nmktemp only returns a filename, a malicous user could replace it before\nit gets used.",
    "type_of_change": "Modification",
    "filename_of_changes": "test_memmap.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "16",
    "number_of_lines_deleted_vulnerable_to_cve": "18",
    "vulnerable_lines": [
        "// Line_Reference 4: from tempfile import NamedTemporaryFile, TemporaryFile, mktemp",
        "// Line_Reference 36:         tmpname = mktemp('', 'mmap')",
        "// Line_Reference 37:         fp = memmap(tmpname, dtype=self.dtype, mode='w+',",
        "// Line_Reference 38:                        shape=self.shape)",
        "// Line_Reference 39:         fp[:] = self.data[:]",
        "// Line_Reference 40:         del fp",
        "// Line_Reference 41:         os.unlink(tmpname)",
        "// Line_Reference 58:         tmpname = mktemp('', 'mmap')",
        "// Line_Reference 59:         fp = memmap(tmpname, dtype=self.dtype, mode='w+',",
        "// Line_Reference 60:                        shape=self.shape)",
        "// Line_Reference 61:         abspath = os.path.abspath(tmpname)",
        "// Line_Reference 62:         fp[:] = self.data[:]",
        "// Line_Reference 63:         self.assertEqual(abspath, fp.filename)",
        "// Line_Reference 64:         b = fp[:1]",
        "// Line_Reference 65:         self.assertEqual(abspath, b.filename)",
        "// Line_Reference 66:         del b",
        "// Line_Reference 67:         del fp",
        "// Line_Reference 68:         os.unlink(tmpname)"
    ]
}
