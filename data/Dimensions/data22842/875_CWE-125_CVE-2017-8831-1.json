{
    "cve_id": "CVE-2017-8831",
    "cve_description": "The saa7164_bus_get function in drivers/media/pci/saa7164/saa7164-bus.c in the Linux kernel through 4.11.5 allows local users to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact by changing a certain sequence-number value, aka a \"double fetch\" vulnerability.",
    "cve_publish_date": "2017-05-08",
    "cwe_id": "CWE-125",
    "cwe_name": "Out-of-bounds Read",
    "cwe_description": "The product reads data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "[PATCH] saa7164: Bug - Double fetch PCIe access condition\n\nAvoid a double fetch by reusing the values from the prior transfer.\n\nOriginally reported via https://bugzilla.kernel.org/show_bug.cgi?id=195559\n\nThanks to Pengfei Wang <wpengfeinudt@gmail.com> for reporting.\n\nSigned-off-by: Steven Toth <stoth@kernellabs.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "saa7164-bus.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "12",
    "vulnerable_lines": [
        "// Line_Reference 396: \t\tmemcpy(msg, &msg_tmp, sizeof(*msg));",
        "// Line_Reference 441: \t\t\t/* msg wraps around the ring */",
        "// Line_Reference 442: \t\t\tmemcpy_fromio(msg, bus->m_pdwGetRing + curr_grp, space_rem);",
        "// Line_Reference 443: \t\t\tmemcpy_fromio((u8 *)msg + space_rem, bus->m_pdwGetRing,",
        "// Line_Reference 444: \t\t\t\tsizeof(*msg) - space_rem);",
        "// Line_Reference 450: \t\t\tmemcpy_fromio(msg, bus->m_pdwGetRing + curr_grp, sizeof(*msg));",
        "// Line_Reference 455: \t\t\tmemcpy_fromio(msg, bus->m_pdwGetRing + curr_grp, sizeof(*msg));",
        "// Line_Reference 468: \t\tmemcpy_fromio(msg, bus->m_pdwGetRing + curr_grp, sizeof(*msg));",
        "// Line_Reference 473: \t/* Convert from little endian to CPU */",
        "// Line_Reference 474: \tmsg->size = le16_to_cpu((__force __le16)msg->size);",
        "// Line_Reference 475: \tmsg->command = le32_to_cpu((__force __le32)msg->command);",
        "// Line_Reference 476: \tmsg->controlselector = le16_to_cpu((__force __le16)msg->controlselector);"
    ]
}
