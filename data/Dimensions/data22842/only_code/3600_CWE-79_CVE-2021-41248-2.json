static formatError(rawError: Error) {
const result = Array.isArray(rawError)
? rawError.map(formatSingleError)
: formatSingleError(rawError);
return JSON.stringify(result, null, 2);
}
schema: props.schema,
response: props.response,
const schema = buildClientSchema(result.data);
const queryFacts = getOperationFacts(schema, this.state.query);
this.safeSetState({ schema, ...queryFacts });
this.safeSetState({
// Set schema to `null` to explicitly indicate that no schema exists.
schema: undefined,
response: responseString,
});
this.safeSetState({
schema: undefined,
response: error ? GraphiQL.formatError(error) : undefined,
});
throw new Error(`Variables are invalid JSON: ${error.message}.`);
throw new Error(`Headers are invalid JSON: ${error.message}.`);
response: error ? GraphiQL.formatError(error) : undefined,
response: error.message,
const formatSingleError = (error: Error) => ({
...error,
// Raise these details even if they're non-enumerable
message: error.message,
stack: error.stack,
});
