stream_forward_getp (peer->ibuf, optlen);
struct capability cap;
{
/* Fetch structure to the byte stream. */
memcpy (&cap, pnt + 1, sizeof (struct capability));
peer->host, action, cap.code, cap.length);
if (pnt + (cap.length + 3) > end)
if (cap.code == CAPABILITY_CODE_MP)
afi = ntohs (cap.mpc.afi);
safi = cap.mpc.safi;
if ((afi == AFI_IP
|| afi == AFI_IP6)
&& (safi == SAFI_UNICAST
|| safi == SAFI_MULTICAST
|| safi == BGP_SAFI_VPNV4))
{
if (BGP_DEBUG (normal, NORMAL))
zlog_debug ("%s CAPABILITY has %s MP_EXT CAP for afi/safi: %u/%u",
peer->host,
action == CAPABILITY_ACTION_SET
? "Advertising" : "Removing",
ntohs(cap.mpc.afi) , cap.mpc.safi);
/* Adjust safi code. */
if (safi == BGP_SAFI_VPNV4)
safi = SAFI_MPLS_VPN;
if (action == CAPABILITY_ACTION_SET)
{
peer->afc_recv[afi][safi] = 1;
if (peer->afc[afi][safi])
{
peer->afc_nego[afi][safi] = 1;
bgp_announce_route (peer, afi, safi);
}
}
else
{
peer->afc_recv[afi][safi] = 0;
peer->afc_nego[afi][safi] = 0;
if (peer_active_nego (peer))
bgp_clear_route (peer, afi, safi);
else
BGP_EVENT_ADD (peer, BGP_Stop);
}
}
peer->host, cap.code);
pnt += cap.length + 3;
static void
ret = bgp_capability_msg_parse (peer, pnt, size);
