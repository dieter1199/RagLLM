import { make_errorLog, make_debugLog } from "node-opcua-debug";
public readonly signatureLength: number;
public readonly options: { signatureLength?: number };
constructor(options?: { signatureLength?: number }) {
options = options || {};
minimumSizeInBytes: 0,
readMessageFunc: readRawMessageHeader
this._packetAssembler.on("message", (messageChunk) => this._feed_messageChunk(messageChunk));
this._packetAssembler.on("newMessage", (info, data) => {
this.emit("start_chunk", info, data);
return this._report_error("Invalid secure channel Id");
return false;
protected _report_error(errorMessage: string): false {
this.emit("error", new Error(errorMessage), this.sequenceHeader ? this.sequenceHeader.requestId : null);
return this._report_error(`Invalid message header detected`);
return this._report_error("received and Abort Message");