* @version 1.3.2
/**
* @var    array          A static array of var_dump, print_r and var_export for redefining those functions
*/
public static $var_funcs = array(
'var_dump',
'print_r',
'var_export'
);
/**
* @var    bool       Should PHPSandbox overwrite var_dump, print_r, and var_export?
* @default true
*/
public $overwrite_var_funcs         = true;
/** Get PHPSandbox redefined function arguments array
* @param   array           $arguments      Array result from func_get_args() is passed here
* @return  array           Returns the redefined arguments array
public function _func_get_args(array $arguments = array()){
foreach($arguments as $index => $value){
if($value instanceof self){
unset($arguments[$index]); //hide PHPSandbox variable
}
}
return $arguments;
/** Get PHPSandbox redefined function argument
* @param   array           $arguments      Array result from func_get_args() is passed here
* @param   int             $index          Requested func_get_arg index is passed here
* @return  array           Returns the redefined argument
public function _func_get_arg(array $arguments = array(), $index = 0){
if($arguments[$index] instanceof self){
$index++;   //get next argument instead
return isset($arguments[$index]) && !($arguments[$index] instanceof self) ? $arguments[$index] : null;
/** Get PHPSandbox redefined number of function arguments
* @param   array           $arguments      Array result from func_get_args() is passed here
* @return  int             Returns the redefined number of function arguments
public function _func_num_args(array $arguments = array()){
$count = count($arguments);
foreach($arguments as $argument){
if($argument instanceof self){
$count--;
}
return $count > 0 ? $count : 0;
"\r\n" . 'if( PHP_MAJOR_VERSION >= 5 && PHP_MINOR_VERSION > 3){ $closure = $closure->bindTo(null); }' .