var expected = "&lt;&amp;&gt;/\\'\"";
describe('escape_for_html off', function () {
describe('ampersands', function () {
it('should escape a single ampersand', function () {
var start = "&";
var expected = "&";
var au = new AnsiUp();
au.escape_for_html = false;
var l = au.ansi_to_html(start);
l.should.eql(expected);
});
it('should escape some text with ampersands', function () {
var start = "abcd&efgh";
var expected = "abcd&efgh";
var au = new AnsiUp();
au.escape_for_html = false;
var l = au.ansi_to_html(start);
l.should.eql(expected);
});
it('should escape multiple ampersands', function () {
var start = " & & ";
var expected = " & & ";
var au = new AnsiUp();
au.escape_for_html = false;
var l = au.ansi_to_html(start);
l.should.eql(expected);
});
it('should escape an already escaped ampersand', function () {
var start = " &amp; ";
var expected = " &amp; ";
var au = new AnsiUp();
au.escape_for_html = false;
var l = au.ansi_to_html(start);
l.should.eql(expected);
});
});
describe('less-than', function () {
it('should escape a single less-than', function () {
var start = "<";
var expected = "<";
var au = new AnsiUp();
au.escape_for_html = false;
var l = au.ansi_to_html(start);
l.should.eql(expected);
});
it('should escape some text with less-thans', function () {
var start = "abcd<efgh";
var expected = "abcd<efgh";
var au = new AnsiUp();
au.escape_for_html = false;
var l = au.ansi_to_html(start);
l.should.eql(expected);
});
it('should escape multiple less-thans', function () {
var start = " < < ";
var expected = " < < ";
var au = new AnsiUp();
au.escape_for_html = false;
var l = au.ansi_to_html(start);
l.should.eql(expected);
});
});
describe('greater-than', function () {
it('should escape a single greater-than', function () {
var start = ">";
var expected = ">";
var au = new AnsiUp();
au.escape_for_html = false;
var l = au.ansi_to_html(start);
l.should.eql(expected);
});
it('should escape some text with greater-thans', function () {
var start = "abcd>efgh";
var expected = "abcd>efgh";
var au = new AnsiUp();
au.escape_for_html = false;
var l = au.ansi_to_html(start);
l.should.eql(expected);
});
it('should escape multiple greater-thans', function () {
var start = " > > ";
var expected = " > > ";
var au = new AnsiUp();
au.escape_for_html = false;
var l = au.ansi_to_html(start);
l.should.eql(expected);
});
});
describe('mixed characters', function () {
it('should escape a mix of characters that require escaping', function () {
var start = "<&>/\\'\"";
var expected = "<&>/\\'\"";
var au = new AnsiUp();
au.escape_for_html = false;
var l = au.ansi_to_html(start);
l.should.eql(expected);
});
});
});
