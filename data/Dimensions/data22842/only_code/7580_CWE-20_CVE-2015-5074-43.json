if (!in_array($tag, $oldTags)) { // don't add duplicates if there are already tags
$tagModel->tag = $tag;  // includes the #
$tags = array_merge($matches[1], $tags);
// Finds all tag matches
$exp = '/(?:^|\s|\.)(#\w+[-\w]+\w+|#\w+)(?:$|[^\'"])/u';
return $matches;
* Looks up the tags associated with the owner model.
* Uses {@link $tags} as a cache to prevent repeated queries.
*
* @return array an array of tags
public function getTags($refreshCache = false) {
if ($this->_tags === null || $refreshCache) {
$this->_tags = Yii::app()->db->createCommand()
->select('tag')
->from(CActiveRecord::model('Tags')->tableName())
->where('type=:type AND itemId=:itemId', array(':type' => get_class($this->getOwner()), ':itemId' => $this->getOwner()->id))
->queryColumn();
}
return $this->_tags;
if (!in_array($tagName, $this->getTags())) { // check for duplicate tag
$tag->tag = '#' . ltrim($tagName, '#');
throw new CHttpException(422, 'Failed saving tag due to errors: ' . json_encode($tag->errors));
if (in_array($tag, $this->getTags()) &&
CActiveRecord::model('Tags')->deleteAllByAttributes($attributes) > 0) {
'type' => get_class($this->getOwner()),
'itemId' => $this->getOwner()->id)