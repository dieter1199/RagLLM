import shutil
from subprocess import Popen,PIPE
#stdout, stderr = p.communicate()
def exec_command(self, cmd, tmp_path, become_user=None, sudoable=False, executable=None, in_data=None):
''' run a command on the zone '''
if executable == '/bin/sh':
executable = None
stdin=subprocess.PIPE,
def _normalize_path(self, path, prefix):
if not path.startswith(os.path.sep):
path = os.path.join(os.path.sep, path)
normpath = os.path.normpath(path)
return os.path.join(prefix, normpath[1:])
def _copy_file(self, in_path, out_path):
if not os.path.exists(in_path):
raise errors.AnsibleFileNotFound("file or module does not exist: %s" % in_path)
try:
shutil.copyfile(in_path, out_path)
except shutil.Error:
traceback.print_exc()
raise errors.AnsibleError("failed to copy: %s and %s are the same" % (in_path, out_path))
except IOError:
traceback.print_exc()
raise errors.AnsibleError("failed to transfer file to %s" % out_path)
out_path = self._normalize_path(out_path, self.get_zone_path())
self._copy_file(in_path, out_path)
in_path = self._normalize_path(in_path, self.get_zone_path())
self._copy_file(in_path, out_path)
