static u_char *php_parserr(u_char *cp, querybuf *answer, int type_to_fetch, int store, int raw, zval **subarray)
n = dn_expand(answer->qb2, answer->qb2+65536, cp, name, sizeof(name) - 2);
n = dn_expand(answer->qb2, answer->qb2+65536, cp, name, (sizeof name) - 2);
int ll = 0;
while (ll < dlen) {
n = cp[ll];
if ((ll + n) >= dlen) {
n = dlen - (ll + 1);
memcpy(tp + ll , cp + ll + 1, n);
add_next_index_stringl(entries, cp + ll + 1, n, 1);
ll = ll + n + 1;
tp[dlen] = '\0';
add_assoc_stringl(*subarray, "txt", tp, (dlen>0)?dlen - 1:0, 0);
n = dn_expand(answer->qb2, answer->qb2+65536, cp, name, (sizeof name) -2);
n = dn_expand(answer->qb2, answer->qb2+65536, cp, name, (sizeof name) -2);
n = dn_expand(answer->qb2, answer->qb2+65536, cp, name, (sizeof name) - 2);
n = dn_expand(answer->qb2, answer->qb2+65536, cp, name, (sizeof name) - 2);
add_assoc_stringl(*subarray, "flags", (char*)++cp, n, 1);
add_assoc_stringl(*subarray, "services", (char*)++cp, n, 1);
add_assoc_stringl(*subarray, "regex", (char*)++cp, n, 1);
n = dn_expand(answer->qb2, answer->qb2+65536, cp, name, (sizeof name) - 2);
cp = php_parserr(cp, &answer, type_to_fetch, store_results, raw, &retval);
cp = php_parserr(cp, &answer, DNS_T_ANY, authns != NULL, raw, &retval);
cp = php_parserr(cp, &answer, DNS_T_ANY, 1, raw, &retval);