sql.gsub!(':lat_ne', conn.quote_string(bounds_ne['lat'].to_s))
sql.gsub!(':lat_sw', conn.quote_string(bounds_sw['lat'].to_s))
sql.gsub!(':lon_ne', conn.quote_string(bounds_ne['lng'].to_s))
sql.gsub!(':lon_sw', conn.quote_string(bounds_sw['lng'].to_s))
sql.gsub!(':lat', conn.quote_string(@location.latitude.to_s))
sql.gsub!(':lon', conn.quote_string(@location.longitude.to_s))
sql.gsub!(':lat_ne', conn.quote_string(bounds_ne['lat'].to_s))
sql.gsub!(':lat_sw', conn.quote_string(bounds_sw['lat'].to_s))
sql.gsub!(':lon_ne', conn.quote_string(bounds_ne['lng'].to_s))
sql.gsub!(':lon_sw', conn.quote_string(bounds_sw['lng'].to_s))
sql.gsub!(':lat', conn.quote_string(@location.latitude.to_s))
sql.gsub!(':lon', conn.quote_string(@location.longitude.to_s))
result_to_hash select_using_uke_stations_sql(sql.gsub(':uke_import_id', @active_import.id.to_s).gsub(':mhz_start', conn.quote_string(first.to_s)).gsub(':mhz_end', conn.quote_string(last.to_s)))
result_to_hash select_using_uke_stations_sql(sql.gsub(':uke_import_id', @active_import.id.to_s).gsub(':mhz', conn.quote_string(Uke::Unifier::frq_string(@q).to_s)))
AND (us.location LIKE '%:like%' OR us.name LIKE '%:like%' OR uo.name LIKE '%:like%')
result_to_hash select_using_uke_stations_sql(sql.gsub(':uke_import_id', @active_import.id.to_s).gsub(':like', conn.quote_string(@q)))
result_to_hash(conn.select_all(sql.gsub(':uke_import_id', @active_import.id.to_s).gsub(':lat', conn.quote_string(@location.latitude.to_s)).gsub(':lon', conn.quote_string(@location.longitude.to_s)).gsub(':mhz', conn.quote_string(Uke::Unifier::frq_string(@q).to_s))))