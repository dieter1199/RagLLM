private DocumentReference userClassReference = new DocumentReference("xwiki", "XWiki", "XWikiUsers");
private DocumentReference userReference = new DocumentReference("xwiki", "XWiki", "Foo");
when(mockitoOldcore.getSpyXWiki().getDocument(userReference, mockitoOldcore.getXWikiContext()))
.thenReturn(userDocument);
when(userDocument.getDocumentReference()).thenReturn(userReference);
when(userDocument.getDocumentReferenceWithLocale()).thenReturn(userReference);
when(userDocument.clone()).thenReturn(userDocument);
XWikiUser user = new XWikiUser(userReference);
when(userDocument.getIntValue(userClassReference, XWikiUser.ACTIVE_PROPERTY, 1)).thenReturn(1);
assertFalse(user.isDisabled(mockitoOldcore.getXWikiContext()));
when(userDocument.getIntValue(userClassReference, XWikiUser.ACTIVE_PROPERTY, 1)).thenReturn(0);
assertTrue(user.isDisabled(mockitoOldcore.getXWikiContext()));
assertFalse(user.isDisabled(mockitoOldcore.getXWikiContext()));
assertFalse(user.isDisabled(mockitoOldcore.getXWikiContext()));
XWikiUser user = new XWikiUser(userReference);
user.setDisabled(false, mockitoOldcore.getXWikiContext());
verify(userDocument, times(1)).setIntValue(userClassReference, XWikiUser.ACTIVE_PROPERTY, 1);
verify(mockitoOldcore.getSpyXWiki(), times(1))
.saveDocument(same(userDocument), any(String.class), same(mockitoOldcore.getXWikiContext()));
XWikiUser user = new XWikiUser(userReference);
user.setDisabled(true, mockitoOldcore.getXWikiContext());
verify(userDocument, times(1)).setIntValue(userClassReference, XWikiUser.ACTIVE_PROPERTY, 0);
verify(mockitoOldcore.getSpyXWiki(), times(1))
.saveDocument(same(userDocument), any(String.class), same(mockitoOldcore.getXWikiContext()));
user.setDisabled(true, mockitoOldcore.getXWikiContext());
verify(userDocument, never())
.setIntValue(same(userClassReference), any(String.class), any(Integer.class));
verify(mockitoOldcore.getSpyXWiki(), never())
.saveDocument(any(XWikiDocument.class), any(String.class), same(mockitoOldcore.getXWikiContext()));
user.setDisabled(false, mockitoOldcore.getXWikiContext());
verify(userDocument, never())
.setIntValue(same(userClassReference), any(String.class), any(Integer.class));
verify(mockitoOldcore.getSpyXWiki(), never())
.saveDocument(any(XWikiDocument.class), any(String.class), same(mockitoOldcore.getXWikiContext()));
user.setDisabled(true, mockitoOldcore.getXWikiContext());
verify(userDocument, never())
.setIntValue(same(userClassReference), any(String.class), any(Integer.class));
verify(mockitoOldcore.getSpyXWiki(), never())
.saveDocument(any(XWikiDocument.class), any(String.class), same(mockitoOldcore.getXWikiContext()));
user.setDisabled(false, mockitoOldcore.getXWikiContext());
verify(userDocument, never())
.setIntValue(same(userClassReference), any(String.class), any(Integer.class));
verify(mockitoOldcore.getSpyXWiki(), never())
.saveDocument(any(XWikiDocument.class), any(String.class), same(mockitoOldcore.getXWikiContext()));
XWikiUser user = new XWikiUser(userReference);
when(userDocument.getIntValue(userClassReference, XWikiUser.EMAIL_CHECKED_PROPERTY, 1)).thenReturn(1);
assertTrue(user.isEmailChecked(mockitoOldcore.getXWikiContext()));
when(userDocument.getIntValue(userClassReference, XWikiUser.EMAIL_CHECKED_PROPERTY, 1)).thenReturn(0);
assertFalse(user.isEmailChecked(mockitoOldcore.getXWikiContext()));
assertTrue(user.isEmailChecked(mockitoOldcore.getXWikiContext()));
assertTrue(user.isEmailChecked(mockitoOldcore.getXWikiContext()));
XWikiUser user = new XWikiUser(userReference);
user.setEmailChecked(false, mockitoOldcore.getXWikiContext());
verify(userDocument, times(1)).setIntValue(userClassReference, XWikiUser.EMAIL_CHECKED_PROPERTY, 0);
verify(mockitoOldcore.getSpyXWiki(), times(1))
.saveDocument(same(userDocument), any(String.class), same(mockitoOldcore.getXWikiContext()));
XWikiUser user = new XWikiUser(userReference);
user.setEmailChecked(true, mockitoOldcore.getXWikiContext());
verify(userDocument, times(1)).setIntValue(userClassReference, XWikiUser.EMAIL_CHECKED_PROPERTY, 1);
verify(mockitoOldcore.getSpyXWiki(), times(1))
.saveDocument(same(userDocument), any(String.class), same(mockitoOldcore.getXWikiContext()));
user.setEmailChecked(true, mockitoOldcore.getXWikiContext());
verify(userDocument, never())
.setIntValue(same(userClassReference), any(String.class), any(Integer.class));
verify(mockitoOldcore.getSpyXWiki(), never())
.saveDocument(any(XWikiDocument.class), any(String.class), same(mockitoOldcore.getXWikiContext()));
user.setEmailChecked(false, mockitoOldcore.getXWikiContext());
verify(userDocument, never())
.setIntValue(same(userClassReference), any(String.class), any(Integer.class));
verify(mockitoOldcore.getSpyXWiki(), never())
.saveDocument(any(XWikiDocument.class), any(String.class), same(mockitoOldcore.getXWikiContext()));
user.setEmailChecked(true, mockitoOldcore.getXWikiContext());
verify(userDocument, never())
.setIntValue(same(userClassReference), any(String.class), any(Integer.class));
verify(mockitoOldcore.getSpyXWiki(), never())
.saveDocument(any(XWikiDocument.class), any(String.class), same(mockitoOldcore.getXWikiContext()));
user.setEmailChecked(false, mockitoOldcore.getXWikiContext());
verify(userDocument, never())
.setIntValue(same(userClassReference), any(String.class), any(Integer.class));
verify(mockitoOldcore.getSpyXWiki(), never())
.saveDocument(any(XWikiDocument.class), any(String.class), same(mockitoOldcore.getXWikiContext()));
