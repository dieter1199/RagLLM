c, err := s.getClusterWith403IfNotExist(ctx, q)
if err := s.enf.EnforceErr(ctx.Value("claims"), rbacpolicy.ResourceClusters, rbacpolicy.ActionGet, CreateClusterRBACObject(c.Project, q.Server)); err != nil {
return nil, err
}
c, err := s.getClusterWith403IfNotExist(ctx, &cluster.ClusterQuery{
})
// verify that user can do update inside project where cluster is located
if !s.enf.Enforce(ctx.Value("claims"), rbacpolicy.ResourceClusters, rbacpolicy.ActionUpdate, CreateClusterRBACObject(c.Project, c.Server)) {
return nil, common.PermissionDeniedAPIError
}
return nil, err
return err
return nil, status.Errorf(codes.NotFound, "failed to get cluster servers by name: %v", err)
return nil, status.Errorf(codes.PermissionDenied, "encountered permissions issue while processing request: %v", err)
return nil, status.Errorf(codes.PermissionDenied, "encountered permissions issue while processing request: %v", err)
cls, err := s.getClusterWith403IfNotExist(ctx, q)
if err := s.enf.EnforceErr(ctx.Value("claims"), rbacpolicy.ResourceClusters, rbacpolicy.ActionUpdate, CreateClusterRBACObject(cls.Project, q.Server)); err != nil {
return nil, err
}
