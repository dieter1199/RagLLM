{
    "cve_id": "CVE-2015-2963",
    "cve_description": "The thoughtbot paperclip gem before 4.2.2 for Ruby does not consider the content-type value during media-type validation, which allows remote attackers to upload HTML documents and conduct cross-site scripting (XSS) attacks via a spoofed value, as demonstrated by image/jpeg.",
    "cve_publish_date": "2015-07-10",
    "cwe_id": "CWE-79",
    "cwe_name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "cwe_description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
    "commit_message": "Fix a possible security issue with spoofing\n\nThanks to MORI Shingo of DeNA Co., Ltd. for reporting this.\n\nThere is an issue where if an HTML file is uploaded with a .html\nextension, but the content type is listed as being `image/jpeg`, this\nwill bypass a validation checking for images. But it will also pass the\nspoof check, because a file named .html and containing actual HTML\npasses the spoof check.\n\nThis change makes it so that we also check the supplied content type. So\neven if the file contains HTML and ends with .html, it doesn't match the\ncontent type of `image/jpeg` and so it fails.",
    "type_of_change": "Modification",
    "filename_of_changes": "media_type_spoof_detector.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "37",
    "number_of_lines_deleted_vulnerable_to_cve": "17",
    "vulnerable_lines": [
        "// Line_Reference 3:     def self.using(file, name)",
        "// Line_Reference 4:       new(file, name)",
        "// Line_Reference 7:     def initialize(file, name)",
        "// Line_Reference 14:         Paperclip.log(\"Content Type Spoof: Filename #{File.basename(@name)} (#{supplied_file_content_types}), content type discovered from file command: #{calculated_content_type}. See documentation to allow this combination.\")",
        "// Line_Reference 30:       ! supplied_file_media_types.include?(calculated_media_type)",
        "// Line_Reference 37:     def supplied_file_media_types",
        "// Line_Reference 38:       @supplied_file_media_types ||= MIME::Types.type_for(@name).collect(&:media_type)",
        "// Line_Reference 41:     def calculated_media_type",
        "// Line_Reference 42:       @calculated_media_type ||= calculated_content_type.split(\"/\").first",
        "// Line_Reference 45:     def supplied_file_content_types",
        "// Line_Reference 46:       @supplied_file_content_types ||= MIME::Types.type_for(@name).collect(&:content_type)",
        "// Line_Reference 49:     def calculated_content_type",
        "// Line_Reference 50:       @calculated_content_type ||= type_from_file_command.chomp",
        "// Line_Reference 53:     def mapped_content_type",
        "// Line_Reference 54:       Paperclip.options[:content_type_mappings][filename_extension]",
        "// Line_Reference 57:     def filename_extension",
        "// Line_Reference 58:       File.extname(@name.to_s.downcase).sub(/^\\./, '').to_sym"
    ]
}
