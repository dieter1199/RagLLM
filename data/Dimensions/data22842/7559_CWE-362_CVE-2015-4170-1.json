{
    "cve_id": "CVE-2015-4170",
    "cve_description": "Race condition in the ldsem_cmpxchg function in drivers/tty/tty_ldsem.c in the Linux kernel before 3.13-rc4-next-20131218 allows local users to cause a denial of service (ldsem_down_read and ldsem_down_write deadlock) by establishing a new tty thread during shutdown of a previous tty thread.",
    "cve_publish_date": "2016-05-02",
    "cwe_id": "CWE-362",
    "cwe_name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
    "cwe_description": "The product contains a code sequence that can run concurrently with other code, and the code sequence requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence that is operating concurrently.",
    "commit_message": "tty: Fix hang at ldsem_down_read()\n\nWhen a controlling tty is being hung up and the hang up is\nwaiting for a just-signalled tty reader or writer to exit, and a new tty\nreader/writer tries to acquire an ldisc reference concurrently with the\nldisc reference release from the signalled reader/writer, the hangup\ncan hang. The new reader/writer is sleeping in ldsem_down_read() and the\nhangup is sleeping in ldsem_down_write() [1].\n\nThe new reader/writer fails to wakeup the waiting hangup because the\nwrong lock count value is checked (the old lock count rather than the new\nlock count) to see if the lock is unowned.\n\nChange helper function to return the new lock count if the cmpxchg was\nsuccessful; document this behavior.\n\n[1] edited dmesg log from reporter\n\nSysRq : Show Blocked State\n  task                        PC stack   pid father\nsystemd         D ffff88040c4f0000     0     1      0 0x00000000\n ffff88040c49fbe0 0000000000000046 ffff88040c4a0000 ffff88040c49ffd8\n 00000000001d3980 00000000001d3980 ffff88040c4a0000 ffff88040593d840\n ffff88040c49fb40 ffffffff810a4cc0 0000000000000006 0000000000000023\nCall Trace:\n [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f/0xe4\n [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f/0xe4\n [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f/0xe4\n [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f/0xe4\n [<ffffffff817a6649>] schedule+0x24/0x5e\n [<ffffffff817a588b>] schedule_timeout+0x15b/0x1ec\n [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f/0xe4\n [<ffffffff817aa691>] ? _raw_spin_unlock_irq+0x24/0x26\n [<ffffffff817aa10c>] down_read_failed+0xe3/0x1b9\n [<ffffffff817aa26d>] ldsem_down_read+0x8b/0xa5\n [<ffffffff8142b5ca>] ? tty_ldisc_ref_wait+0x1b/0x44\n [<ffffffff8142b5ca>] tty_ldisc_ref_wait+0x1b/0x44\n [<ffffffff81423f5b>] tty_write+0x7d/0x28a\n [<ffffffff814241f5>] redirected_tty_write+0x8d/0x98\n [<ffffffff81424168>] ? tty_write+0x28a/0x28a\n [<ffffffff8115d03f>] do_loop_readv_writev+0x56/0x79\n [<ffffffff8115e604>] do_readv_writev+0x1b0/0x1ff\n [<ffffffff8116ea0b>] ? do_vfs_ioctl+0x32a/0x489\n [<ffffffff81167d9d>] ? final_putname+0x1d/0x3a\n [<ffffffff8115e6c7>] vfs_writev+0x2e/0x49\n [<ffffffff8115e7d3>] SyS_writev+0x47/0xaa\n [<ffffffff817ab822>] system_call_fastpath+0x16/0x1b\nbash            D ffffffff81c104c0     0  5469   5302 0x00000082\n ffff8800cf817ac0 0000000000000046 ffff8804086b22a0 ffff8800cf817fd8\n 00000000001d3980 00000000001d3980 ffff8804086b22a0 ffff8800cf817a48\n 000000000000b9a0 ffff8800cf817a78 ffffffff81004675 ffff8800cf817a44\nCall Trace:\n [<ffffffff81004675>] ? dump_trace+0x165/0x29c\n [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f/0xe4\n [<ffffffff8100edda>] ? save_stack_trace+0x26/0x41\n [<ffffffff817a6649>] schedule+0x24/0x5e\n [<ffffffff817a588b>] schedule_timeout+0x15b/0x1ec\n [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f/0xe4\n [<ffffffff817a9f03>] ? down_write_failed+0xa3/0x1c9\n [<ffffffff817aa691>] ? _raw_spin_unlock_irq+0x24/0x26\n [<ffffffff817a9f0b>] down_write_failed+0xab/0x1c9\n [<ffffffff817aa300>] ldsem_down_write+0x79/0xb1\n [<ffffffff817aada3>] ? tty_ldisc_lock_pair_timeout+0xa5/0xd9\n [<ffffffff817aada3>] tty_ldisc_lock_pair_timeout+0xa5/0xd9\n [<ffffffff8142bf33>] tty_ldisc_hangup+0xc4/0x218\n [<ffffffff81423ab3>] __tty_hangup+0x2e2/0x3ed\n [<ffffffff81424a76>] disassociate_ctty+0x63/0x226\n [<ffffffff81078aa7>] do_exit+0x79f/0xa11\n [<ffffffff81086bdb>] ? get_signal_to_deliver+0x206/0x62f\n [<ffffffff810b4bfb>] ? lock_release_holdtime.part.8+0xf/0x16e\n [<ffffffff81079b05>] do_group_exit+0x47/0xb5\n [<ffffffff81086c16>] get_signal_to_deliver+0x241/0x62f\n [<ffffffff810020a7>] do_signal+0x43/0x59d\n [<ffffffff810f2af7>] ? __audit_syscall_exit+0x21a/0x2a8\n [<ffffffff810b4bfb>] ? lock_release_holdtime.part.8+0xf/0x16e\n [<ffffffff81002655>] do_notify_resume+0x54/0x6c\n [<ffffffff817abaf8>] int_signal+0x12/0x17\n\nReported-by: Sami Farin <sami.farin@gmail.com>\nCc: <stable@vger.kernel.org> # 3.12.x\nSigned-off-by: Peter Hurley <peter@hurleysoftware.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "tty_ldsem.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "13",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 91: \tlong tmp = *old;",
        "// Line_Reference 92: \t*old = atomic_long_cmpxchg(&sem->count, *old, new);",
        "// Line_Reference 93: \treturn *old == tmp;"
    ]
}
