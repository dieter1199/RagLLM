{
    "cve_id": "CVE-2017-8066",
    "cve_description": "drivers/net/can/usb/gs_usb.c in the Linux kernel 4.9.x and 4.10.x before 4.10.2 interacts incorrectly with the CONFIG_VMAP_STACK option, which allows local users to cause a denial of service (system crash or memory corruption) or possibly have unspecified other impact by leveraging use of more than one virtual page for a DMA scatterlist.",
    "cve_publish_date": "2017-04-23",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "can: gs_usb: Don't use stack memory for USB transfers\n\nFixes: 05ca5270005c can: gs_usb: add ethtool set_phys_id callback to locate physical device\n\nThe gs_usb driver is performing USB transfers using buffers allocated on\nthe stack. This causes the driver to not function with vmapped stacks.\nInstead, allocate memory for the transfer buffers.\n\nSigned-off-by: Ethan Zonca <e@ethanzonca.com>\nCc: linux-stable <stable@vger.kernel.org> # >= v4.8\nSigned-off-by: Marc Kleine-Budde <mkl@pengutronix.de>",
    "type_of_change": "Modification",
    "filename_of_changes": "gs_usb.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "29",
    "number_of_lines_deleted_vulnerable_to_cve": "11",
    "vulnerable_lines": [
        "// Line_Reference 911: \tstruct gs_host_config hconf = {",
        "// Line_Reference 912: \t\t.byte_order = 0x0000beef,",
        "// Line_Reference 913: \t};",
        "// Line_Reference 914: \tstruct gs_device_config dconf;",
        "// Line_Reference 923: \t\t\t     &hconf,",
        "// Line_Reference 924: \t\t\t     sizeof(hconf),",
        "// Line_Reference 940: \t\t\t     &dconf,",
        "// Line_Reference 941: \t\t\t     sizeof(dconf),",
        "// Line_Reference 949: \ticount = dconf.icount + 1;",
        "// Line_Reference 960: \tif (!dev)",
        "// Line_Reference 970: \t\tdev->canch[i] = gs_make_candev(i, intf, &dconf);"
    ]
}
