{
    "cve_id": "CVE-2023-0459",
    "cve_description": "Copy_from_user on 64-bit versions of the Linux kernel does not implement the __uaccess_begin_nospec allowing a user to bypass the \"access_ok\" check and pass a kernel pointer to copy_from_user(). This would allow an attacker to leak information. We recommend upgrading beyond commitÂ 74e19ef0ff8061ef55957c3abd71614ef0f42f47",
    "cve_publish_date": "2023-05-25",
    "cwe_id": "CWE-763",
    "cwe_name": "Release of Invalid Pointer or Reference",
    "cwe_description": "The product attempts to return a memory resource to the system, but it calls the wrong release function or calls the appropriate release function incorrectly.",
    "commit_message": "x86: get rid of small constant size cases in raw_copy_{to,from}_user()\n\nVery few call sites where that would be triggered remain, and none\nof those is anywhere near hot enough to bother.\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
    "type_of_change": "Modification",
    "filename_of_changes": "uaccess.h",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "0",
    "number_of_lines_deleted_vulnerable_to_cve": "12",
    "vulnerable_lines": [
        "// Line_Reference 381: #define __get_user_asm_nozero(x, addr, err, itype, rtype, ltype, errret)\t\\",
        "// Line_Reference 382: \tasm volatile(\"\\n\"\t\t\t\t\t\t\\",
        "// Line_Reference 383: \t\t     \"1:\tmov\"itype\" %2,%\"rtype\"1\\n\"\t\t\\",
        "// Line_Reference 384: \t\t     \"2:\\n\"\t\t\t\t\t\t\\",
        "// Line_Reference 385: \t\t     \".section .fixup,\\\"ax\\\"\\n\"\t\t\t\t\\",
        "// Line_Reference 386: \t\t     \"3:\tmov %3,%0\\n\"\t\t\t\t\\",
        "// Line_Reference 387: \t\t     \"\tjmp 2b\\n\"\t\t\t\t\t\\",
        "// Line_Reference 388: \t\t     \".previous\\n\"\t\t\t\t\t\\",
        "// Line_Reference 389: \t\t     _ASM_EXTABLE_UA(1b, 3b)\t\t\t\t\\",
        "// Line_Reference 390: \t\t     : \"=r\" (err), ltype(x)\t\t\t\t\\",
        "// Line_Reference 391: \t\t     : \"m\" (__m(addr)), \"i\" (errret), \"0\" (err))",
        "// Line_Reference 392: "
    ]
}
