{
    "cve_id": "CVE-2015-5707",
    "cve_description": "Integer overflow in the sg_start_req function in drivers/scsi/sg.c in the Linux kernel 2.6.x through 4.x before 4.1 allows local users to cause a denial of service or possibly have unspecified other impact via a large iov_count value in a write request.",
    "cve_publish_date": "2015-10-19",
    "cwe_id": "CWE-190",
    "cwe_name": "Integer Overflow or Wraparound",
    "cwe_description": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
    "commit_message": "sg_start_req(): use import_iovec()\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
    "type_of_change": "Modification",
    "filename_of_changes": "sg.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "5",
    "number_of_lines_deleted_vulnerable_to_cve": "11",
    "vulnerable_lines": [
        "// Line_Reference 1747: \tif (unlikely(iov_count > MAX_UIOVEC))",
        "// Line_Reference 1748: \t\treturn -EINVAL;",
        "// Line_Reference 1749: ",
        "// Line_Reference 1751: \t\tint size = sizeof(struct iovec) * iov_count;",
        "// Line_Reference 1752: \t\tstruct iovec *iov;",
        "// Line_Reference 1755: \t\tiov = memdup_user(hp->dxferp, size);",
        "// Line_Reference 1756: \t\tif (IS_ERR(iov))",
        "// Line_Reference 1757: \t\t\treturn PTR_ERR(iov);",
        "// Line_Reference 1759: \t\tiov_iter_init(&i, rw, iov, iov_count,",
        "// Line_Reference 1760: \t\t\t      min_t(size_t, hp->dxfer_len,",
        "// Line_Reference 1761: \t\t\t\t    iov_length(iov, iov_count)));"
    ]
}
