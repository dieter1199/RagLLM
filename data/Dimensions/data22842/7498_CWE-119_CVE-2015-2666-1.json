{
    "cve_id": "CVE-2015-2666",
    "cve_description": "Stack-based buffer overflow in the get_matching_model_microcode function in arch/x86/kernel/cpu/microcode/intel_early.c in the Linux kernel before 4.0 allows context-dependent attackers to gain privileges by constructing a crafted microcode header and leveraging root privileges for write access to the initrd.",
    "cve_publish_date": "2015-05-27",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "x86/microcode/intel: Guard against stack overflow in the loader\n\nmc_saved_tmp is a static array allocated on the stack, we need to make\nsure mc_saved_count stays within its bounds, otherwise we're overflowing\nthe stack in _save_mc(). A specially crafted microcode header could lead\nto a kernel crash or potentially kernel execution.\n\nSigned-off-by: Quentin Casasnovas <quentin.casasnovas@oracle.com>\nCc: \"H. Peter Anvin\" <hpa@zytor.com>\nCc: Fenghua Yu <fenghua.yu@intel.com>\nLink: http://lkml.kernel.org/r/1422964824-22056-1-git-send-email-quentin.casasnovas@oracle.com\nSigned-off-by: Borislav Petkov <bp@suse.de>",
    "type_of_change": "Modification",
    "filename_of_changes": "intel_early.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 324: \twhile (leftover) {"
    ]
}
