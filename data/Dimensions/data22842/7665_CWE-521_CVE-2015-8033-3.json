{
    "cve_id": "CVE-2015-8033",
    "cve_description": "In Textpattern 4.5.7, the password-reset feature does not securely tether a hash to a user account.",
    "cve_publish_date": "2020-08-14",
    "cwe_id": "CWE-521",
    "cwe_name": "Weak Password Requirements",
    "cwe_description": "The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.",
    "commit_message": "Security improvements part 1. See Issue #565\n\n* No more emailing plaintext passwords out: password changes and reset requests are dealt with immediately on the login/admin panels.\n* Stronger cryptographic hashes for confirmation links that don't leak user ID information.\n* Hashes are securely tethered to the user account and auto-expire when logging in or generating a new request. Timeout window of 20 minutes by default for answering reset requests.\n* Password input boxes are unmaskable. Saves having a separate confirmation box, simplifies code logic and is better UX.\n* Dedicated txp_token table introduced for handling token-based storage and retrieval. Better for plugin authors than abusing txp_discuss_nonce.\n\nMore on the way including strength meter and improvements to setup passwords...",
    "type_of_change": "Modification",
    "filename_of_changes": "txplib_admin.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "66",
    "number_of_lines_deleted_vulnerable_to_cve": "25",
    "vulnerable_lines": [
        "// Line_Reference 36:  * @param  string $RealName The real name",
        "// Line_Reference 37:  * @param  string $name     The login name",
        "// Line_Reference 38:  * @param  string $email    The email address",
        "// Line_Reference 39:  * @param  string $password The password",
        "// Line_Reference 40:  * @return bool FALSE on error.",
        "// Line_Reference 41:  * @see    send_new_password()",
        "// Line_Reference 73:  * @param  string $password The new password",
        "// Line_Reference 74:  * @param  string $email    The email address",
        "// Line_Reference 75:  * @param  string $name     The login name",
        "// Line_Reference 76:  * @return bool FALSE on error.",
        "// Line_Reference 77:  * @see    send_password()",
        "// Line_Reference 78:  * @see    reset_author_pass()",
        "// Line_Reference 108:  * doesn't exist. Though an error message could be thrown when user isn't found,",
        "// Line_Reference 109:  * this is done due to security. This prevents the function from leaking",
        "// Line_Reference 110:  * existing account names.",
        "// Line_Reference 124:     $rs = safe_row(\"email, nonce\", 'txp_users', \"name = '\".doSlash($name).\"'\");",
        "// Line_Reference 129:         $confirm = bin2hex(pack('H*', substr(md5($nonce), 0, 10)).$name);",
        "// Line_Reference 132: ",
        "// Line_Reference 133:             n.n.gTxt('password_reset_confirmation').': '.",
        "// Line_Reference 135: ",
        "// Line_Reference 154:  * @param  int $length The length of the password",
        "// Line_Reference 155:  * @return string Random plain-text password",
        "// Line_Reference 156:  * @see    PASSWORD_SYMBOLS",
        "// Line_Reference 157:  * @see    PASSWORD_LENGTH",
        "// Line_Reference 190:  * The old password replaced with a new random-generated one."
    ]
}
