{
    "cve_id": "CVE-2017-9605",
    "cve_description": "The vmw_gb_surface_define_ioctl function (accessible via DRM_IOCTL_VMW_GB_SURFACE_CREATE) in drivers/gpu/drm/vmwgfx/vmwgfx_surface.c in the Linux kernel through 4.11.4 defines a backup_handle variable but does not give it an initial value. If one attempts to create a GB surface, with a previously allocated DMA buffer to be used as a backup buffer, the backup_handle variable does not get written to and is then later returned to user space, allowing local users to obtain sensitive information from uninitialized kernel memory via a crafted ioctl call.",
    "cve_publish_date": "2017-06-13",
    "cwe_id": "CWE-200",
    "cwe_name": "Exposure of Sensitive Information to an Unauthorized Actor",
    "cwe_description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
    "commit_message": "drm/vmwgfx: Make sure backup_handle is always valid\n\nWhen vmw_gb_surface_define_ioctl() is called with an existing buffer,\nwe end up returning an uninitialized variable in the backup_handle.\n\nThe fix is to first initialize backup_handle to 0 just to be sure, and\nsecond, when a user-provided buffer is found, we will use the\nreq->buffer_handle as the backup_handle.\n\nCc: <stable@vger.kernel.org>\nReported-by: Murray McAllister <murray.mcallister@insomniasec.com>\nSigned-off-by: Sinclair Yeh <syeh@vmware.com>\nReviewed-by: Deepak Rawat <drawat@vmware.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "vmwgfx_surface.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "11",
    "number_of_lines_deleted_vulnerable_to_cve": "7",
    "vulnerable_lines": [
        "// Line_Reference 1277: \tuint32_t backup_handle;",
        "// Line_Reference 1320: \t\tif (ret == 0 && res->backup->base.num_pages * PAGE_SIZE <",
        "// Line_Reference 1321: \t\t    res->backup_size) {",
        "// Line_Reference 1322: \t\t\tDRM_ERROR(\"Surface backup buffer is too small.\\n\");",
        "// Line_Reference 1323: \t\t\tvmw_dmabuf_unreference(&res->backup);",
        "// Line_Reference 1324: \t\t\tret = -EINVAL;",
        "// Line_Reference 1325: \t\t\tgoto out_unlock;"
    ]
}
