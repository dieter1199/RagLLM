{
    "cve_id": "CVE-2021-4213",
    "cve_description": "A flaw was found in JSS, where it did not properly free up all memory. Over time, the wasted memory builds up in the server memory, saturating the serverâ€™s RAM. This flaw allows an attacker to force the invocation of an out-of-memory process, causing a denial of service.",
    "cve_publish_date": "2022-08-24",
    "cwe_id": "CWE-401",
    "cwe_name": "Missing Release of Memory after Effective Lifetime",
    "cwe_description": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.",
    "commit_message": "Fix memory leak on each TLS connection\n\nEach TLS connection is leaking a bunch of data that isn't in the heap\nand so after 25k requests Tomcat uses about 2.5GB resident memory.\n\nThere are large number of relationships that point at each other and we\nneed to break the cycle so JSSEngineReferenceImpl's finalizer can run\nand clear all the native resources these point at.\n\nThe lowest impact place to break the cycle was at SSLAlertEvent.engine.\nThis relationship doesn't seem to be used anywhere.  Once the cycle is\nbroken, JSSEngineReferenceImpl can be garbage collected and the\nfinalizer can run.\n\nSigned-off-by: Chris Kelley <ckelley@redhat.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "GlobalRefProxy.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 15:     protected synchronized void releaseNativeResources() {",
        "// Line_Reference 16:         clear();",
        "// Line_Reference 17:     }"
    ]
}
