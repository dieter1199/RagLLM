{
    "cve_id": "CVE-2017-8064",
    "cve_description": "drivers/media/usb/dvb-usb-v2/dvb_usb_core.c in the Linux kernel 4.9.x and 4.10.x before 4.10.12 interacts incorrectly with the CONFIG_VMAP_STACK option, which allows local users to cause a denial of service (system crash or memory corruption) or possibly have unspecified other impact by leveraging use of more than one virtual page for a DMA scatterlist.",
    "cve_publish_date": "2017-04-23",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "[media] dvb-usb-v2: avoid use-after-free\n\nI ran into a stack frame size warning because of the on-stack copy of\nthe USB device structure:\n\ndrivers/media/usb/dvb-usb-v2/dvb_usb_core.c: In function 'dvb_usbv2_disconnect':\ndrivers/media/usb/dvb-usb-v2/dvb_usb_core.c:1029:1: error: the frame size of 1104 bytes is larger than 1024 bytes [-Werror=frame-larger-than=]\n\nCopying a device structure like this is wrong for a number of other reasons\ntoo aside from the possible stack overflow. One of them is that the\ndev_info() call will print the name of the device later, but AFAICT\nwe have only copied a pointer to the name earlier and the actual name\nhas been freed by the time it gets printed.\n\nThis removes the on-stack copy of the device and instead copies the\ndevice name using kstrdup(). I'm ignoring the possible failure here\nas both printk() and kfree() are able to deal with NULL pointers.\n\nSigned-off-by: Arnd Bergmann <arnd@arndb.de>\nSigned-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "dvb_usb_core.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "5",
    "number_of_lines_deleted_vulnerable_to_cve": "4",
    "vulnerable_lines": [
        "// Line_Reference 1015: \tconst char *name = d->name;",
        "// Line_Reference 1016: \tstruct device dev = d->udev->dev;",
        "// Line_Reference 1026: \tdev_info(&dev, \"%s: '%s' successfully deinitialized and disconnected\\n\",",
        "// Line_Reference 1027: \t\t\tKBUILD_MODNAME, name);"
    ]
}
