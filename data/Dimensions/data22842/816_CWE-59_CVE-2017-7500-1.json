{
    "cve_id": "CVE-2017-7500",
    "cve_description": "It was found that rpm did not properly handle RPM installations when a destination path was a symbolic link to a directory, possibly changing ownership and permissions of an arbitrary directory, and RPM files being placed in an arbitrary destination. An attacker, with write access to a directory in which a subdirectory will be installed, could redirect that directory to an arbitrary location and gain root privilege.",
    "cve_publish_date": "2018-08-13",
    "cwe_id": "CWE-59",
    "cwe_name": "Improper Link Resolution Before File Access ('Link Following')",
    "cwe_description": "The product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.",
    "commit_message": "Make verification match the new restricted directory symlink behavior\n\nOnly follow directory symlinks owned by target directory owner or root\nduring verification to match the behavior of fsmVerify() in the new\nCVE-2017-7500 world order.\n\nThe code is klunkier than it should and the logic should use common code\nwith fsmVerify() instead of duplicating it here, but that needs more\nchanges than is comfortable to backport so starting with this.\n\nAlso worth noting that the previous \"follow the link\" logic from\ncommit 3ccd774255b8215733e0bdfdf5a683da9dd10923 was not quite right,\nit'd fail with RPMVERIFY_LSTATFAIL on a broken symlink when it should've\nran verification on the symlink itself. This behavior is fixed here too.\n\nFinally, once again fakechroot gets in the way and forces the related\nverify testcase to be changed to be able to create a valid link. Reuse\nthe replacement testcase for the purpose and add another case for\nverifying an invalid link.",
    "type_of_change": "Modification",
    "filename_of_changes": "verify.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "12",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 97:     if (S_ISDIR(fmode) && S_ISLNK(sb.st_mode) && stat(fn, &sb) != 0) {",
        "// Line_Reference 98: \tvfy |= RPMVERIFY_LSTATFAIL;",
        "// Line_Reference 99: \tgoto exit;"
    ]
}
