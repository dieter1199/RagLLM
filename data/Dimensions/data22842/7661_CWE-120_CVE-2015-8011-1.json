{
    "cve_id": "CVE-2015-8011",
    "cve_description": "Buffer overflow in the lldp_decode function in daemon/protocols/lldp.c in lldpd before 0.8.0 allows remote attackers to cause a denial of service (daemon crash) and possibly execute arbitrary code via vectors involving large management addresses and TLV boundaries.",
    "cve_publish_date": "2020-01-28",
    "cwe_id": "CWE-120",
    "cwe_name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
    "cwe_description": "The product copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow.",
    "commit_message": "lldp: fix a buffer overflow when handling management address TLV\n\nWhen a remote device was advertising a too large management address\nwhile still respecting TLV boundaries, lldpd would crash due to a buffer\noverflow. However, the buffer being a static one, this buffer overflow\nis not exploitable if hardening was not disabled. This bug exists since\nversion 0.5.6.",
    "type_of_change": "Modification",
    "filename_of_changes": "lldp.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "7",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 737: ",
        "// Line_Reference 755: \t\t\tCHECK_TLV_SIZE(4, \"Organisational\");"
    ]
}
