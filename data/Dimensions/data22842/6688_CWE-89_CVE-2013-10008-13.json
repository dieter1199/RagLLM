{
    "cve_id": "CVE-2013-10008",
    "cve_description": "A vulnerability was found in sheilazpy eShop. It has been classified as critical. Affected is an unknown function. The manipulation leads to sql injection. The name of the patch is e096c5849c4dc09e1074104531014a62a5413884. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-217572.",
    "cve_publish_date": "2023-01-06",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "some sql injection vulnerabilities fixes\n\n+ some sql injection vulnerabilities fixes\n+ new sql injection safe methods in mysql wrapper",
    "type_of_change": "ModificationType.RENAME",
    "filename_of_changes": "operatorUserLoginWindow.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "13",
    "number_of_lines_deleted_vulnerable_to_cve": "17",
    "vulnerable_lines": [
        "// Line_Reference 17: ",
        "// Line_Reference 18: import database_management.MySQLdbManager;",
        "// Line_Reference 41: \tpublic static String loggedUserNames = \"\";",
        "// Line_Reference 43: \tprivate final JLabel newPasswordAgainLabel = new JLabel();",
        "// Line_Reference 44: \tprivate final JPasswordField newPasswordPasswordAgainField = new JPasswordField();",
        "// Line_Reference 177: \t\t\t\t//FIXME prone to sql injection",
        "// Line_Reference 178: ",
        "// Line_Reference 183: \t\t\t\t\trs = databaseConnectWindow.dbPortal.executeQuery(\"SELECT operator_id, operator_first_name, operator_last_name FROM operators WHERE\" +",
        "// Line_Reference 184: \t\t\t\t\t\t\" operator_username='\" + loginUsernameTextField.getText() + \"' AND operator_password='\" +",
        "// Line_Reference 185: \t\t\t\t\t\tMd5hashcalc.calculateMD5hash(password) + \"'\");",
        "// Line_Reference 271: \t\t\t\t\t//FIXME prone to sql injection",
        "// Line_Reference 272: \t\t\t\t\tResultSet rs = databaseConnectWindow.dbPortal.executeQuery(\"SELECT COUNT(*) FROM operators WHERE operator_username='\" +",
        "// Line_Reference 273: \t\t\t\t\t\t\tnewUsernameTextField.getText() + \"'\");",
        "// Line_Reference 286: \t\t\t\t\t\t//FIXME prone to sql injection",
        "// Line_Reference 287: \t\t\t\t\t\tif (databaseConnectWindow.dbPortal.executeNonQuery(\"INSERT INTO operators(operator_username, operator_password, \" +",
        "// Line_Reference 288: \t\t\t\t\t\t\t\t\"operator_first_name, operator_last_name) VALUES('\" + newUsernameTextField.getText() + \"', '\" +",
        "// Line_Reference 289: \t\t\t\t\t\t\t\tencryptedPassword + \"', '\" + newFirstNameTextField.getText() + \"', '\" + newLastNameTextField.getText() + \"')\") != 1) {"
    ]
}
