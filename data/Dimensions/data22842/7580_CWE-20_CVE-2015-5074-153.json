{
    "cve_id": "CVE-2015-5074",
    "cve_description": "Incomplete blacklist vulnerability in the FileUploadsFilter class in protected/components/filters/FileUploadsFilter.php in X2Engine X2CRM before 5.0.9 allows remote authenticated users to execute arbitrary PHP code by uploading a file with a .pht extension.",
    "cve_publish_date": "2015-09-29",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "Release v5.0.9; see CHANGELOG for details.",
    "type_of_change": "Modification",
    "filename_of_changes": "TagBehavior.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "53",
    "number_of_lines_deleted_vulnerable_to_cve": "26",
    "vulnerable_lines": [
        "// Line_Reference 82:             if (!in_array($tag, $oldTags)) { // don't add duplicates if there are already tags",
        "// Line_Reference 84:                 $tagModel->tag = $tag;  // includes the #",
        "// Line_Reference 141:             $tags = array_merge($matches[1], $tags);",
        "// Line_Reference 147:     // Finds all tag matches",
        "// Line_Reference 162:         $exp = '/(?:^|\\s|\\.)(#\\w+[-\\w]+\\w+|#\\w+)(?:$|[^\\'\"])/u';",
        "// Line_Reference 167:         return $matches;",
        "// Line_Reference 171:      * Looks up the tags associated with the owner model.",
        "// Line_Reference 172:      * Uses {@link $tags} as a cache to prevent repeated queries.",
        "// Line_Reference 173:      *",
        "// Line_Reference 174:      * @return array an array of tags",
        "// Line_Reference 176:     public function getTags($refreshCache = false) {",
        "// Line_Reference 177:         if ($this->_tags === null || $refreshCache) {",
        "// Line_Reference 178:             $this->_tags = Yii::app()->db->createCommand()",
        "// Line_Reference 179:                     ->select('tag')",
        "// Line_Reference 180:                     ->from(CActiveRecord::model('Tags')->tableName())",
        "// Line_Reference 181:                     ->where('type=:type AND itemId=:itemId', array(':type' => get_class($this->getOwner()), ':itemId' => $this->getOwner()->id))",
        "// Line_Reference 182:                     ->queryColumn();",
        "// Line_Reference 183:         }",
        "// Line_Reference 184:         return $this->_tags;",
        "// Line_Reference 216:             if (!in_array($tagName, $this->getTags())) { // check for duplicate tag",
        "// Line_Reference 218:                 $tag->tag = '#' . ltrim($tagName, '#');",
        "// Line_Reference 230:                     throw new CHttpException(422, 'Failed saving tag due to errors: ' . json_encode($tag->errors));",
        "// Line_Reference 262:             if (in_array($tag, $this->getTags()) &&",
        "// Line_Reference 263:                     CActiveRecord::model('Tags')->deleteAllByAttributes($attributes) > 0) {",
        "// Line_Reference 288:                     'type' => get_class($this->getOwner()),",
        "// Line_Reference 289:                     'itemId' => $this->getOwner()->id)"
    ]
}
