{
    "cve_id": "CVE-2016-4557",
    "cve_description": "The replace_map_fd_with_map_ptr function in kernel/bpf/verifier.c in the Linux kernel before 4.5.5 does not properly maintain an fd data structure, which allows local users to gain privileges or cause a denial of service (use-after-free) via crafted BPF instructions that reference an incorrect file descriptor.",
    "cve_publish_date": "2016-05-23",
    "cwe_id": "NVD-CWE-Other",
    "cwe_name": "Other",
    "cwe_description": "NVD is only using a subset of CWE for mapping instead of the entire CWE, and the weakness type is not covered by that subset.",
    "commit_message": "bpf: fix double-fdput in replace_map_fd_with_map_ptr()\n\nWhen bpf(BPF_PROG_LOAD, ...) was invoked with a BPF program whose bytecode\nreferences a non-map file descriptor as a map file descriptor, the error\nhandling code called fdput() twice instead of once (in __bpf_map_get() and\nin replace_map_fd_with_map_ptr()). If the file descriptor table of the\ncurrent task is shared, this causes f_count to be decremented too much,\nallowing the struct file to be freed while it is still in use\n(use-after-free). This can be exploited to gain root privileges by an\nunprivileged user.\n\nThis bug was introduced in\ncommit 0246e64d9a5f (\"bpf: handle pseudo BPF_LD_IMM64 insn\"), but is only\nexploitable since\ncommit 1be7f75d1668 (\"bpf: enable non-root eBPF programs\") because\npreviously, CAP_SYS_ADMIN was required to reach the vulnerable code.\n\n(posted publicly according to request by maintainer)\n\nSigned-off-by: Jann Horn <jannh@google.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nAcked-by: Alexei Starovoitov <ast@kernel.org>\nAcked-by: Daniel Borkmann <daniel@iogearbox.net>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "type_of_change": "Modification",
    "filename_of_changes": "verifier.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "0",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 2033: \t\t\t\tfdput(f);"
    ]
}
