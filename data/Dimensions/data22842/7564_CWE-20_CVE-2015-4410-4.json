{
    "cve_id": "CVE-2015-4410",
    "cve_description": "The Moped::BSON::ObjecId.legal? method in rubygem-moped before commit dd5a7c14b5d2e466f7875d079af71ad19774609b allows remote attackers to cause a denial of service (worker resource consumption) or perform a cross-site scripting (XSS) attack via a crafted string.",
    "cve_publish_date": "2020-02-20",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "Merge Replica Set Refactor\n\n* Removes Server, and Socket; replaced with Node, and Connection.\n\n  Replica sets are now much more robustly supported, including failover\n  and discovery.\n\n* Refactors specs.\n\n  Internal APIs are now tested with integration specs through the public\n  APIs.\n\n* More documentation.",
    "type_of_change": "Modification",
    "filename_of_changes": "collection_spec.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "19",
    "number_of_lines_deleted_vulnerable_to_cve": "72",
    "vulnerable_lines": [
        "// Line_Reference 4: ",
        "// Line_Reference 6:     mock(Moped::Session)",
        "// Line_Reference 7:   end",
        "// Line_Reference 8: ",
        "// Line_Reference 9:   let(:database) do",
        "// Line_Reference 10:     mock(Moped::Database, session: session, name: \"moped\")",
        "// Line_Reference 11:   end",
        "// Line_Reference 12: ",
        "// Line_Reference 13:   let(:collection) do",
        "// Line_Reference 14:     described_class.new database, :users",
        "// Line_Reference 17:   describe \"#initialize\" do",
        "// Line_Reference 18: ",
        "// Line_Reference 19:     it \"stores the database\" do",
        "// Line_Reference 20:       collection.database.should eq database",
        "// Line_Reference 21:     end",
        "// Line_Reference 22: ",
        "// Line_Reference 23:     it \"stores the collection name\" do",
        "// Line_Reference 24:       collection.name.should eq :users",
        "// Line_Reference 25:     end",
        "// Line_Reference 26:   end",
        "// Line_Reference 27: ",
        "// Line_Reference 28:   describe \"#indexes\" do",
        "// Line_Reference 29:     it \"returns a new indexes instance\" do",
        "// Line_Reference 30:       collection.indexes.should be_an_instance_of Moped::Indexes",
        "// Line_Reference 31:     end",
        "// Line_Reference 32:   end",
        "// Line_Reference 35: ",
        "// Line_Reference 36:     it \"drops the collection\" do",
        "// Line_Reference 37:       database.should_receive(:command).with(drop: :users)",
        "// Line_Reference 38:       collection.drop",
        "// Line_Reference 39:     end",
        "// Line_Reference 40:   end",
        "// Line_Reference 41: ",
        "// Line_Reference 42:   describe \"#find\" do",
        "// Line_Reference 43: ",
        "// Line_Reference 44:     let(:selector) do",
        "// Line_Reference 45:       Hash[ a: 1 ]",
        "// Line_Reference 46:     end",
        "// Line_Reference 47: ",
        "// Line_Reference 48:     let(:query) do",
        "// Line_Reference 49:       mock(Moped::Query)",
        "// Line_Reference 50:     end",
        "// Line_Reference 51: ",
        "// Line_Reference 52:     it \"returns a new Query\" do",
        "// Line_Reference 53:       Moped::Query.should_receive(:new).",
        "// Line_Reference 54:         with(collection, selector).and_return(query)",
        "// Line_Reference 55:       collection.find(selector).should eq query",
        "// Line_Reference 58:     it \"defaults to an empty selector\" do",
        "// Line_Reference 59:       Moped::Query.should_receive(:new).",
        "// Line_Reference 60:         with(collection, {}).and_return(query)",
        "// Line_Reference 61:       collection.find.should eq query",
        "// Line_Reference 66: ",
        "// Line_Reference 67:     before do",
        "// Line_Reference 68:       session.should_receive(:with, :consistency => :strong).and_yield(session)",
        "// Line_Reference 69:       session.stub safe?: false",
        "// Line_Reference 70:     end",
        "// Line_Reference 71: ",
        "// Line_Reference 72:     context \"when passed a single document\" do",
        "// Line_Reference 73: ",
        "// Line_Reference 74:       it \"inserts the document\" do",
        "// Line_Reference 75:         session.should_receive(:execute).with do |insert|",
        "// Line_Reference 76:           insert.documents.should eq [{a: 1}]",
        "// Line_Reference 77:         end",
        "// Line_Reference 78:         collection.insert(a: 1)",
        "// Line_Reference 79:       end",
        "// Line_Reference 82:     context \"when passed multiple documents\" do",
        "// Line_Reference 84:       it \"inserts the documents\" do",
        "// Line_Reference 85:         session.should_receive(:execute).with do |insert|",
        "// Line_Reference 86:           insert.documents.should eq [{a: 1}, {b: 2}]",
        "// Line_Reference 87:         end",
        "// Line_Reference 88:         collection.insert([{a: 1}, {b: 2}])",
        "// Line_Reference 89:       end"
    ]
}
