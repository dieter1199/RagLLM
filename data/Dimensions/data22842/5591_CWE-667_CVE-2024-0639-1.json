{
    "cve_id": "CVE-2024-0639",
    "cve_description": "A denial of service vulnerability due to a deadlock was found in sctp_auto_asconf_init in net/sctp/socket.c in the Linux kernelâ€™s SCTP subsystem. This flaw allows guests with local user privileges to trigger a deadlock and potentially crash the system.",
    "cve_publish_date": "2024-01-17",
    "cwe_id": "CWE-667",
    "cwe_name": "Improper Locking",
    "cwe_description": "The product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.",
    "commit_message": "sctp: fix potential deadlock on &net->sctp.addr_wq_lock\n\nAs &net->sctp.addr_wq_lock is also acquired by the timer\nsctp_addr_wq_timeout_handler() in protocal.c, the same lock acquisition\nat sctp_auto_asconf_init() seems should disable irq since it is called\nfrom sctp_accept() under process context.\n\nPossible deadlock scenario:\nsctp_accept()\n    -> sctp_sock_migrate()\n    -> sctp_auto_asconf_init()\n    -> spin_lock(&net->sctp.addr_wq_lock)\n        <timer interrupt>\n        -> sctp_addr_wq_timeout_handler()\n        -> spin_lock_bh(&net->sctp.addr_wq_lock); (deadlock here)\n\nThis flaw was found using an experimental static analysis tool we are\ndeveloping for irq-related deadlock.\n\nThe tentative patch fix the potential deadlock by spin_lock_bh().\n\nSigned-off-by: Chengfeng Ye <dg573847474@gmail.com>\nFixes: 34e5b0118685 (\"sctp: delay auto_asconf init until binding the first addr\")\nAcked-by: Xin Long <lucien.xin@gmail.com>\nLink: https://lore.kernel.org/r/20230627120340.19432-1-dg573847474@gmail.com\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "socket.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "2",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 367: \t\tspin_lock(&net->sctp.addr_wq_lock);",
        "// Line_Reference 369: \t\tspin_unlock(&net->sctp.addr_wq_lock);"
    ]
}
