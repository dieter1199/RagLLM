{
    "cve_id": "CVE-2014-4943",
    "cve_description": "The PPPoL2TP feature in net/l2tp/l2tp_ppp.c in the Linux kernel through 3.15.6 allows local users to gain privileges by leveraging data-structure differences between an l2tp socket and an inet socket.",
    "cve_publish_date": "2014-07-19",
    "cwe_id": "CWE-269",
    "cwe_name": "Improper Privilege Management",
    "cwe_description": "The product does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor.",
    "commit_message": "net/l2tp: don't fall back on UDP [get|set]sockopt\n\nThe l2tp [get|set]sockopt() code has fallen back to the UDP functions\nfor socket option levels != SOL_PPPOL2TP since day one, but that has\nnever actually worked, since the l2tp socket isn't an inet socket.\n\nAs David Miller points out:\n\n  \"If we wanted this to work, it'd have to look up the tunnel and then\n   use tunnel->sk, but I wonder how useful that would be\"\n\nSince this can never have worked so nobody could possibly have depended\non that functionality, just remove the broken code and return -EINVAL.\n\nReported-by: Sasha Levin <sasha.levin@oracle.com>\nAcked-by: James Chapman <jchapman@katalix.com>\nAcked-by: David Miller <davem@davemloft.net>\nCc: Phil Turnbull <phil.turnbull@oracle.com>\nCc: Vegard Nossum <vegard.nossum@oracle.com>\nCc: Willy Tarreau <w@1wt.eu>\nCc: stable@vger.kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "l2tp_ppp.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "2",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 1368: \t\treturn udp_prot.setsockopt(sk, level, optname, optval, optlen);",
        "// Line_Reference 1494: \t\treturn udp_prot.getsockopt(sk, level, optname, optval, optlen);"
    ]
}
