{
    "cve_id": "CVE-2012-1617",
    "cve_description": "Directory traversal vulnerability in combine.php in OSClass before 2.3.6 allows remote attackers to read and write arbitrary files via a .. (dot dot) in the type parameter.  NOTE: this vulnerability can be leveraged to upload arbitrary files.",
    "cve_publish_date": "2012-09-26",
    "cwe_id": "CWE-22",
    "cwe_name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
    "cwe_description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
    "commit_message": "show http 403 forbidden error if the type parameter is not js or css",
    "type_of_change": "Modification",
    "filename_of_changes": "combine.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "71",
    "number_of_lines_deleted_vulnerable_to_cve": "77",
    "vulnerable_lines": [
        "// Line_Reference 27: ",
        "// Line_Reference 28:     $cache       = true;",
        "// Line_Reference 30:     $base = dirname(__FILE__);",
        "// Line_Reference 32:     $type = $_GET['type'];",
        "// Line_Reference 34: ",
        "// Line_Reference 37:     while (list(,$element) = each($elements)) {",
        "// Line_Reference 38:         $path = realpath($base . '/' . $element);",
        "// Line_Reference 39: ",
        "// Line_Reference 40:         if (($type == 'js' && substr($path, -3) != '.js') ||",
        "// Line_Reference 41:             ($type == 'css' && substr($path, -4) != '.css')) {",
        "// Line_Reference 42:             header (\"HTTP/1.0 403 Forbidden\");",
        "// Line_Reference 43:             exit;",
        "// Line_Reference 45: ",
        "// Line_Reference 50: ",
        "// Line_Reference 57: ",
        "// Line_Reference 58:     if (isset($_SERVER['HTTP_IF_NONE_MATCH']) &&",
        "// Line_Reference 59:         stripslashes($_SERVER['HTTP_IF_NONE_MATCH']) == '\"' . $hash . '\"')",
        "// Line_Reference 60:     {",
        "// Line_Reference 62:         header (\"HTTP/1.0 304 Not Modified\");",
        "// Line_Reference 63:         header ('Content-Length: 0');",
        "// Line_Reference 64:     }",
        "// Line_Reference 65:     else",
        "// Line_Reference 66:     {",
        "// Line_Reference 68:         if ($cache)",
        "// Line_Reference 69:         {",
        "// Line_Reference 71:             $gzip = strstr($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip');",
        "// Line_Reference 72:             $deflate = strstr($_SERVER['HTTP_ACCEPT_ENCODING'], 'deflate');",
        "// Line_Reference 73: ",
        "// Line_Reference 75:             $encoding = $gzip ? 'gzip' : ($deflate ? 'deflate' : 'none');",
        "// Line_Reference 76: ",
        "// Line_Reference 78:             if (!strstr($_SERVER['HTTP_USER_AGENT'], 'Opera') &&",
        "// Line_Reference 79:                 preg_match('/^Mozilla\\/4\\.0 \\(compatible; MSIE ([0-9]\\.[0-9])/i', $_SERVER['HTTP_USER_AGENT'], $matches)) {",
        "// Line_Reference 80:                 $version = floatval($matches[1]);",
        "// Line_Reference 81: ",
        "// Line_Reference 82:                 if ($version < 6)",
        "// Line_Reference 84: ",
        "// Line_Reference 85:                 if ($version == 6 && !strstr($_SERVER['HTTP_USER_AGENT'], 'EV1'))",
        "// Line_Reference 88: ",
        "// Line_Reference 90:             $cachefile = 'cache-' . $hash . '.' . $type . ($encoding != 'none' ? '.' . $encoding : '');",
        "// Line_Reference 91: ",
        "// Line_Reference 92:             if (file_exists($cachedir . '/' . $cachefile)) {",
        "// Line_Reference 93:                 if ($fp = fopen($cachedir . '/' . $cachefile, 'rb')) {",
        "// Line_Reference 95:                     if ($encoding != 'none') {",
        "// Line_Reference 96:                         header (\"Content-Encoding: \" . $encoding);",
        "// Line_Reference 98: ",
        "// Line_Reference 99:                     header (\"Content-Type: text/\" . $type);",
        "// Line_Reference 100:                     header (\"Content-Length: \" . filesize($cachedir . '/' . $cachefile));",
        "// Line_Reference 101: ",
        "// Line_Reference 102:                     fpassthru($fp);",
        "// Line_Reference 103:                     fclose($fp);",
        "// Line_Reference 104:                     exit;",
        "// Line_Reference 108: ",
        "// Line_Reference 110:         $contents = '';",
        "// Line_Reference 111:         reset($elements);",
        "// Line_Reference 112:         while (list(,$element) = each($elements)) {",
        "// Line_Reference 113:             $path = realpath($base . '/' . $element);",
        "// Line_Reference 114:             $contents .= \"\\n\\n\" . file_get_contents($path);",
        "// Line_Reference 116: ",
        "// Line_Reference 118:         header (\"Content-Type: text/\" . $type);",
        "// Line_Reference 119: ",
        "// Line_Reference 120:         if (isset($encoding) && $encoding != 'none')",
        "// Line_Reference 121:         {",
        "// Line_Reference 123:             $contents = gzencode($contents, 9, $gzip ? FORCE_GZIP : FORCE_DEFLATE);",
        "// Line_Reference 124:             header (\"Content-Encoding: \" . $encoding);",
        "// Line_Reference 125:             header ('Content-Length: ' . strlen($contents));",
        "// Line_Reference 126:             echo $contents;",
        "// Line_Reference 127:         }",
        "// Line_Reference 128:         else",
        "// Line_Reference 129:         {",
        "// Line_Reference 131:             header ('Content-Length: ' . strlen($contents));",
        "// Line_Reference 132:             echo $contents;",
        "// Line_Reference 136:         if ($cache) {",
        "// Line_Reference 137:             if ($fp = fopen($cachedir . '/' . $cachefile, 'wb')) {",
        "// Line_Reference 138:                 fwrite($fp, $contents);",
        "// Line_Reference 139:                 fclose($fp);",
        "// Line_Reference 142:     }",
        "// Line_Reference 143: "
    ]
}
