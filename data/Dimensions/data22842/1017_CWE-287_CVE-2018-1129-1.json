{
    "cve_id": "CVE-2018-1129",
    "cve_description": "A flaw was found in the way signature calculation was handled by cephx authentication protocol. An attacker having access to ceph cluster network who is able to alter the message payload was able to bypass signature checks done by cephx protocol. Ceph branches master, mimic, luminous and jewel are believed to be vulnerable.",
    "cve_publish_date": "2018-07-10",
    "cwe_id": "CWE-287",
    "cwe_name": "Improper Authentication",
    "cwe_description": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
    "commit_message": "auth/cephx/CephxSessionHandler: implement CEPHX_V2 calculation mode\n\nDerive the signature from the entire buffer (both cipher blocks).\n\nSigned-off-by: Sage Weil <sage@redhat.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "CephxSessionHandler.cc",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "78",
    "number_of_lines_deleted_vulnerable_to_cve": "32",
    "vulnerable_lines": [
        "// Line_Reference 32:   // optimized signature calculation",
        "// Line_Reference 33:   // - avoid temporary allocated buffers from encode_encrypt[_enc_bl]",
        "// Line_Reference 34:   // - skip the leading 4 byte wrapper from encode_encrypt",
        "// Line_Reference 35:   struct {",
        "// Line_Reference 36:     __u8 v;",
        "// Line_Reference 37:     __le64 magic;",
        "// Line_Reference 38:     __le32 len;",
        "// Line_Reference 39:     __le32 header_crc;",
        "// Line_Reference 40:     __le32 front_crc;",
        "// Line_Reference 41:     __le32 middle_crc;",
        "// Line_Reference 42:     __le32 data_crc;",
        "// Line_Reference 43:   } __attribute__ ((packed)) sigblock = {",
        "// Line_Reference 44:     1, mswab(AUTH_ENC_MAGIC), mswab<uint32_t>(4*4),",
        "// Line_Reference 45:     mswab<uint32_t>(header.crc), mswab<uint32_t>(footer.front_crc),",
        "// Line_Reference 46:     mswab<uint32_t>(footer.middle_crc), mswab<uint32_t>(footer.data_crc)",
        "// Line_Reference 47:   };",
        "// Line_Reference 48: ",
        "// Line_Reference 49:   char exp_buf[CryptoKey::get_max_outbuf_size(sizeof(sigblock))];",
        "// Line_Reference 50: ",
        "// Line_Reference 51:   try {",
        "// Line_Reference 52:     const CryptoKey::in_slice_t in {",
        "// Line_Reference 53:       sizeof(sigblock),",
        "// Line_Reference 54:       reinterpret_cast<const unsigned char*>(&sigblock)",
        "// Line_Reference 56:     const CryptoKey::out_slice_t out {",
        "// Line_Reference 57:       sizeof(exp_buf),",
        "// Line_Reference 58:       reinterpret_cast<unsigned char*>(&exp_buf)",
        "// Line_Reference 61:     key.encrypt(cct, in, out);",
        "// Line_Reference 62:   } catch (std::exception& e) {",
        "// Line_Reference 63:     lderr(cct) << __func__ << \" failed to encrypt signature block\" << dendl;",
        "// Line_Reference 64:     return -1;",
        "// Line_Reference 65:   }",
        "// Line_Reference 67:   *psig = *reinterpret_cast<__le64*>(exp_buf);"
    ]
}
