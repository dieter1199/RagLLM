{
    "cve_id": "CVE-2024-2397",
    "cve_description": "Due to a bug in packet data buffers management, the PPP printer in tcpdump can enter an infinite loop when reading a crafted DLT_PPP_SERIAL .pcap savefile.  This problem does not affect any tcpdump release, but it affected the git master branch from 2023-06-05 to 2024-03-21.",
    "cve_publish_date": "2024-04-12",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "ppp: use the buffer stack for the de-escaping buffer.\n\nThis both saves the buffer for freeing later and saves the packet\npointer and snapend to be restored when packet processing is complete,\neven if an exception is thrown with longjmp.\n\nThis means that the hex/ASCII printing in pretty_print_packet()\nprocesses the packet data as captured or read from the savefile, rather\nthan as modified by the PPP printer, so that the bounds checking is\ncorrect.\n\nThat fixes CVE-2024-2397, which was caused by an exception being thrown\nby the hex/ASCII printer (which should only happen if those routines are\ncalled by a packet printer, not if they're called for the -X/-x/-A\nflag), which jumps back to the setjmp() that surrounds the packet\nprinter.  Hilarity^Winfinite looping ensues.\n\nAlso, restore ndo->ndo_packetp before calling the hex/ASCII printing\nroutine, in case nd_pop_all_packet_info() didn't restore it.",
    "type_of_change": "Modification",
    "filename_of_changes": "print-ppp.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "17",
    "number_of_lines_deleted_vulnerable_to_cve": "14",
    "vulnerable_lines": [
        "// Line_Reference 1361: \tconst void *sb, *se;",
        "// Line_Reference 1369: \tb = (u_char *)nd_malloc(ndo, caplen);",
        "// Line_Reference 1370: \tif (b == NULL)",
        "// Line_Reference 1371: \t\treturn;",
        "// Line_Reference 1392: \t * Change the end pointer, so bounds checks work.",
        "// Line_Reference 1393: \t * Change the pointer to packet data to help debugging.",
        "// Line_Reference 1395: \tsb = ndo->ndo_packetp;",
        "// Line_Reference 1396: \tse = ndo->ndo_snapend;",
        "// Line_Reference 1397: \tndo->ndo_packetp = b;",
        "// Line_Reference 1398: \tndo->ndo_snapend = t;",
        "// Line_Reference 1440: \tndo->ndo_packetp = sb;",
        "// Line_Reference 1441: \tndo->ndo_snapend = se;",
        "// Line_Reference 1445: \tndo->ndo_packetp = sb;",
        "// Line_Reference 1446: \tndo->ndo_snapend = se;"
    ]
}
