{
    "cve_id": "CVE-2017-18249",
    "cve_description": "The add_free_nid function in fs/f2fs/node.c in the Linux kernel before 4.12 does not properly track an allocated nid, which allows local users to cause a denial of service (race condition) or possibly have unspecified other impact via concurrent threads.",
    "cve_publish_date": "2018-03-26",
    "cwe_id": "CWE-362",
    "cwe_name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
    "cwe_description": "The product contains a code sequence that can run concurrently with other code, and the code sequence requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence that is operating concurrently.",
    "commit_message": "f2fs: fix race condition in between free nid allocator/initializer\n\nIn below concurrent case, allocated nid can be loaded into free nid cache\nand be allocated again.\n\nThread A\t\t\t\tThread B\n- f2fs_create\n - f2fs_new_inode\n  - alloc_nid\n   - __insert_nid_to_list(ALLOC_NID_LIST)\n\t\t\t\t\t- f2fs_balance_fs_bg\n\t\t\t\t\t - build_free_nids\n\t\t\t\t\t  - __build_free_nids\n\t\t\t\t\t   - scan_nat_page\n\t\t\t\t\t    - add_free_nid\n\t\t\t\t\t     - __lookup_nat_cache\n - f2fs_add_link\n  - init_inode_metadata\n   - new_inode_page\n    - new_node_page\n     - set_node_addr\n - alloc_nid_done\n  - __remove_nid_from_list(ALLOC_NID_LIST)\n\t\t\t\t\t     - __insert_nid_to_list(FREE_NID_LIST)\n\nThis patch makes nat cache lookup and free nid list operation being atomical\nto avoid this race condition.\n\nSigned-off-by: Jaegeuk Kim <jaegeuk@kernel.org>\nSigned-off-by: Chao Yu <yuchao0@huawei.com>\nSigned-off-by: Jaegeuk Kim <jaegeuk@kernel.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "node.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "45",
    "number_of_lines_deleted_vulnerable_to_cve": "18",
    "vulnerable_lines": [
        "// Line_Reference 1764: \tstruct free_nid *i;",
        "// Line_Reference 1766: \tint err;",
        "// Line_Reference 1772: \tif (build) {",
        "// Line_Reference 1773: \t\t/* do not add allocated nids */",
        "// Line_Reference 1774: \t\tne = __lookup_nat_cache(nm_i, nid);",
        "// Line_Reference 1775: \t\tif (ne && (!get_nat_flag(ne, IS_CHECKPOINTED) ||",
        "// Line_Reference 1776: \t\t\t\tnat_get_blkaddr(ne) != NULL_ADDR))",
        "// Line_Reference 1777: \t\t\treturn false;",
        "// Line_Reference 1778: \t}",
        "// Line_Reference 1779: ",
        "// Line_Reference 1784: \tif (radix_tree_preload(GFP_NOFS)) {",
        "// Line_Reference 1785: \t\tkmem_cache_free(free_nid_slab, i);",
        "// Line_Reference 1786: \t\treturn true;",
        "// Line_Reference 1787: \t}",
        "// Line_Reference 1793: \tif (err) {",
        "// Line_Reference 1795: \t\treturn true;",
        "// Line_Reference 1796: \t}",
        "// Line_Reference 1797: \treturn true;"
    ]
}
