{
    "cve_id": "CVE-2021-21409",
    "cve_description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.61.Final there is a vulnerability that enables request smuggling. The content-length header is not correctly validated if the request only uses a single Http2HeaderFrame with the endStream set to to true. This could lead to request smuggling if the request is proxied to a remote peer and translated to HTTP/1.1. This is a followup of GHSA-wm47-8v5p-wjpj/CVE-2021-21295 which did miss to fix this one case. This was fixed as part of 4.1.61.Final.",
    "cve_publish_date": "2021-03-30",
    "cwe_id": "CWE-444",
    "cwe_name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')",
    "cwe_description": "The product acts as an intermediary HTTP agent\n         (such as a proxy or firewall) in the data flow between two\n         entities such as a client and server, but it does not\n         interpret malformed HTTP requests or responses in ways that\n         are consistent with how the messages will be processed by\n         those entities that are at the ultimate destination.",
    "commit_message": "Merge pull request from GHSA-f256-j965-7f32\n\nMotivation:\n\nWe also need to ensure that all the header validation is done when a single header with the endStream flag is received\n\nModifications:\n\n- Adjust code to always enforce the validation\n- Add more unit tests\n\nResult:\n\nAlways correctly validate",
    "type_of_change": "Modification",
    "filename_of_changes": "DefaultHttp2ConnectionDecoder.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "4",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 397:             if (!stream.isHeadersReceived()) {"
    ]
}
