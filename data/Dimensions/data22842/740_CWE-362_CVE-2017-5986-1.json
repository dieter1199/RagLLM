{
    "cve_id": "CVE-2017-5986",
    "cve_description": "Race condition in the sctp_wait_for_sndbuf function in net/sctp/socket.c in the Linux kernel before 4.9.11 allows local users to cause a denial of service (assertion failure and panic) via a multithreaded application that peels off an association in a certain buffer-full state.",
    "cve_publish_date": "2017-02-18",
    "cwe_id": "CWE-362",
    "cwe_name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
    "cwe_description": "The product contains a code sequence that can run concurrently with other code, and the code sequence requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence that is operating concurrently.",
    "commit_message": "sctp: avoid BUG_ON on sctp_wait_for_sndbuf\n\nAlexander Popov reported that an application may trigger a BUG_ON in\nsctp_wait_for_sndbuf if the socket tx buffer is full, a thread is\nwaiting on it to queue more data and meanwhile another thread peels off\nthe association being used by the first thread.\n\nThis patch replaces the BUG_ON call with a proper error handling. It\nwill return -EPIPE to the original sendmsg call, similarly to what would\nhave been done if the association wasn't found in the first place.\n\nAcked-by: Alexander Popov <alex.popov@linux.com>\nSigned-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>\nReviewed-by: Xin Long <lucien.xin@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "type_of_change": "Modification",
    "filename_of_changes": "socket.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "2",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 7429: \t\tBUG_ON(sk != asoc->base.sk);"
    ]
}
