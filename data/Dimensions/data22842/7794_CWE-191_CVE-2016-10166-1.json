{
    "cve_id": "CVE-2016-10166",
    "cve_description": "Integer underflow in the _gdContributionsAlloc function in gd_interpolation.c in the GD Graphics Library (aka libgd) before 2.2.4 allows remote attackers to have unspecified impact via vectors related to decrementing the u variable.",
    "cve_publish_date": "2017-03-15",
    "cwe_id": "CWE-191",
    "cwe_name": "Integer Underflow (Wrap or Wraparound)",
    "cwe_description": "The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.",
    "commit_message": "Fix potential unsigned underflow\n\nNo need to decrease `u`, so we don't do it. While we're at it, we also factor\nout the overflow check of the loop, what improves performance and readability.\n\nThis issue has been reported by Stefan Esser to security@libgd.org.",
    "type_of_change": "Modification",
    "filename_of_changes": "gd_interpolation.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "10",
    "number_of_lines_deleted_vulnerable_to_cve": "9",
    "vulnerable_lines": [
        "// Line_Reference 832: \tint overflow_error = 0;",
        "// Line_Reference 850: \t\tif (overflow2(windows_size, sizeof(double))) {",
        "// Line_Reference 851: \t\t\toverflow_error = 1;",
        "// Line_Reference 852: \t\t} else {",
        "// Line_Reference 853: \t\t\tres->ContribRow[u].Weights = (double *) gdMalloc(windows_size * sizeof(double));",
        "// Line_Reference 854: \t\t}",
        "// Line_Reference 855: \t\tif (overflow_error == 1 || res->ContribRow[u].Weights == NULL) {",
        "// Line_Reference 857: \t\t\tu--;",
        "// Line_Reference 858: \t\t\tfor (i=0;i<=u;i++) {"
    ]
}
