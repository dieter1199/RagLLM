{
    "cve_id": "CVE-2017-9984",
    "cve_description": "The snd_msnd_interrupt function in sound/isa/msnd/msnd_pinnacle.c in the Linux kernel through 4.11.7 allows local users to cause a denial of service (over-boundary access) or possibly have unspecified other impact by changing the value of a message queue head pointer between two kernel reads of that value, aka a \"double fetch\" vulnerability.",
    "cve_publish_date": "2017-06-28",
    "cwe_id": "CWE-125",
    "cwe_name": "Out-of-bounds Read",
    "cwe_description": "The product reads data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "ALSA: msnd: Optimize / harden DSP and MIDI loops\n\nThe ISA msnd drivers have loops fetching the ring-buffer head, tail\nand size values inside the loops.  Such codes are inefficient and\nfragile.\n\nThis patch optimizes it, and also adds the sanity check to avoid the\nendless loops.\n\nBugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=196131\nBugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=196133\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
    "type_of_change": "Modification",
    "filename_of_changes": "msnd_midi.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "15",
    "number_of_lines_deleted_vulnerable_to_cve": "15",
    "vulnerable_lines": [
        "// Line_Reference 125: \twhile (readw(mpu->dev->MIDQ + JQS_wTail) !=",
        "// Line_Reference 126: \t       readw(mpu->dev->MIDQ + JQS_wHead)) {",
        "// Line_Reference 127: \t\tu16 wTmp, val;",
        "// Line_Reference 128: \t\tval = readw(pwMIDQData + 2 * readw(mpu->dev->MIDQ + JQS_wHead));",
        "// Line_Reference 129: ",
        "// Line_Reference 130: \t\t\tif (test_bit(MSNDMIDI_MODE_BIT_INPUT_TRIGGER,",
        "// Line_Reference 131: \t\t\t\t     &mpu->mode))",
        "// Line_Reference 132: \t\t\t\tsnd_rawmidi_receive(mpu->substream_input,",
        "// Line_Reference 133: \t\t\t\t\t\t    (unsigned char *)&val, 1);",
        "// Line_Reference 134: ",
        "// Line_Reference 135: \t\twTmp = readw(mpu->dev->MIDQ + JQS_wHead) + 1;",
        "// Line_Reference 136: \t\tif (wTmp > readw(mpu->dev->MIDQ + JQS_wSize))",
        "// Line_Reference 137: \t\t\twritew(0,  mpu->dev->MIDQ + JQS_wHead);",
        "// Line_Reference 138: \t\telse",
        "// Line_Reference 139: \t\t\twritew(wTmp,  mpu->dev->MIDQ + JQS_wHead);"
    ]
}
