{
    "cve_id": "CVE-2017-9527",
    "cve_description": "The mark_context_stack function in gc.c in mruby through 1.2.0 allows attackers to cause a denial of service (heap-based use-after-free and application crash) or possibly have unspecified other impact via a crafted .rb file.",
    "cve_publish_date": "2017-06-11",
    "cwe_id": "CWE-416",
    "cwe_name": "Use After Free",
    "cwe_description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
    "commit_message": "Clear unused stack region that may refer freed objects; fix #3596",
    "type_of_change": "Modification",
    "filename_of_changes": "gc.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "7",
    "number_of_lines_deleted_vulnerable_to_cve": "6",
    "vulnerable_lines": [
        "// Line_Reference 556:       if (mrb_basic_ptr(v)->tt == MRB_TT_FREE) {",
        "// Line_Reference 557:         c->stbase[i] = mrb_nil_value();",
        "// Line_Reference 558:       }",
        "// Line_Reference 559:       else {",
        "// Line_Reference 560:         mrb_gc_mark(mrb, mrb_basic_ptr(v));",
        "// Line_Reference 561:       }"
    ]
}
