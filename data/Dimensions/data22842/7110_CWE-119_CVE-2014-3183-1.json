{
    "cve_id": "CVE-2014-3183",
    "cve_description": "Heap-based buffer overflow in the logi_dj_ll_raw_request function in drivers/hid/hid-logitech-dj.c in the Linux kernel before 3.16.2 allows physically proximate attackers to cause a denial of service (system crash) or possibly execute arbitrary code via a crafted device that specifies a large report size for an LED report.",
    "cve_publish_date": "2014-09-28",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "HID: logitech: fix bounds checking on LED report size\n\nThe check on report size for REPORT_TYPE_LEDS in logi_dj_ll_raw_request()\nis wrong; the current check doesn't make any sense -- the report allocated\nby HID core in hid_hw_raw_request() can be much larger than\nDJREPORT_SHORT_LENGTH, and currently logi_dj_ll_raw_request() doesn't\nhandle this properly at all.\n\nFix the check by actually trimming down the report size properly if it is\ntoo large.\n\nCc: stable@vger.kernel.org\nReported-by: Ben Hawkes <hawkes@google.com>\nReviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>",
    "type_of_change": "Modification",
    "filename_of_changes": "hid-logitech-dj.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 560: \tif (count < DJREPORT_SHORT_LENGTH - 2)"
    ]
}
