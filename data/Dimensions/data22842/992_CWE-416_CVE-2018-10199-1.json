{
    "cve_id": "CVE-2018-10199",
    "cve_description": "In versions of mruby up to and including 1.4.0, a use-after-free vulnerability exists in src/io.c::File#initilialize_copy(). An attacker that can cause Ruby code to be run can possibly use this to execute arbitrary code.",
    "cve_publish_date": "2018-04-18",
    "cwe_id": "CWE-416",
    "cwe_name": "Use After Free",
    "cwe_description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
    "commit_message": "Fix `use after free in File#initilialize_copy`; fix #4001\n\nThe bug and the fix were reported by https://hackerone.com/pnoltof",
    "type_of_change": "Modification",
    "filename_of_changes": "io.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 570:   fptr_orig = io_get_open_fptr(mrb, orig);"
    ]
}
