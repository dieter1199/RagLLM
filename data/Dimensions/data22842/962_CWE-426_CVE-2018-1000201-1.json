{
    "cve_id": "CVE-2018-1000201",
    "cve_description": "ruby-ffi version 1.9.23 and earlier has a DLL loading issue which can be hijacked on Windows OS, when a Symbol is used as DLL name instead of a String This vulnerability appears to have been fixed in v1.9.24 and later.",
    "cve_publish_date": "2018-06-22",
    "cwe_id": "CWE-426",
    "cwe_name": "Untrusted Search Path",
    "cwe_description": "The product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control.",
    "commit_message": "Don't search in hardcoded paths on Windows\n\nNative Windows apps don't use \"/usr\" path to store system dlls.\nIt's even more harm than good to search through these directories,\nsince they are used in Cygwin and it can lead to accidentaly loading\nCygwin DLLs into native Windows apps.\n\nHardcoded paths are disabled for MINGW and MSWIN environments only.\nThey are still present on Cygwin and MSYS2, because these POSIX-API\nbased environments don't use LoadLibrary() but dl_open() to load DLLs.",
    "type_of_change": "Modification",
    "filename_of_changes": "library.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 128:                 unless libname.start_with?(\"/\")"
    ]
}
