{
    "cve_id": "CVE-2013-2016",
    "cve_description": "A flaw was found in the way qemu v1.3.0 and later (virtio-rng) validates addresses when guest accesses the config space of a virtio device. If the virtio device has zero/small sized config space, such as virtio-rng, a privileged guest user could use this flaw to access the matching host's qemu address space and thus increase their privileges on the host.",
    "cve_publish_date": "2019-12-30",
    "cwe_id": "CWE-269",
    "cwe_name": "Improper Privilege Management",
    "cwe_description": "The product does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor.",
    "commit_message": "virtio: properly validate address before accessing config\n\nThere are several several issues in the current checking:\n\n- The check was based on the minus of unsigned values which can overflow\n- It was done after .{set|get}_config() which can lead crash when config_len\n  is zero since vdev->config is NULL\n\nFix this by:\n\n- Validate the address in virtio_pci_config_{read|write}() before\n  .{set|get}_config\n- Use addition instead minus to do the validation\n\nCc: Michael S. Tsirkin <mst@redhat.com>\nCc: Petr Matousek <pmatouse@redhat.com>\nSigned-off-by: Jason Wang <jasowang@redhat.com>\nAcked-by: Michael S. Tsirkin <mst@redhat.com>\nAcked-by: Petr Matousek <pmatouse@redhat.com>\nMessage-id: 1367905369-10765-1-git-send-email-jasowang@redhat.com\nSigned-off-by: Anthony Liguori <aliguori@us.ibm.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "virtio.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "18",
    "number_of_lines_deleted_vulnerable_to_cve": "12",
    "vulnerable_lines": [
        "// Line_Reference 571:     k->get_config(vdev, vdev->config);",
        "// Line_Reference 572: ",
        "// Line_Reference 573:     if (addr > (vdev->config_len - sizeof(val)))",
        "// Line_Reference 585:     k->get_config(vdev, vdev->config);",
        "// Line_Reference 586: ",
        "// Line_Reference 587:     if (addr > (vdev->config_len - sizeof(val)))",
        "// Line_Reference 599:     k->get_config(vdev, vdev->config);",
        "// Line_Reference 600: ",
        "// Line_Reference 601:     if (addr > (vdev->config_len - sizeof(val)))",
        "// Line_Reference 613:     if (addr > (vdev->config_len - sizeof(val)))",
        "// Line_Reference 628:     if (addr > (vdev->config_len - sizeof(val)))",
        "// Line_Reference 643:     if (addr > (vdev->config_len - sizeof(val)))"
    ]
}
