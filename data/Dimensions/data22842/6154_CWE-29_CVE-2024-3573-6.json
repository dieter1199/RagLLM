{
    "cve_id": "CVE-2024-3573",
    "cve_description": "mlflow/mlflow is vulnerable to Local File Inclusion (LFI) due to improper parsing of URIs, allowing attackers to bypass checks and read arbitrary files on the system. The issue arises from the 'is_local_uri' function's failure to properly handle URIs with empty or 'file' schemes, leading to the misclassification of URIs as non-local. Attackers can exploit this by crafting malicious model versions with specially crafted 'source' parameters, enabling the reading of sensitive files within at least two directory levels from the server's root.",
    "cve_publish_date": "2024-04-16",
    "cwe_id": "CWE-29",
    "cwe_name": "Path Traversal: '\\..\\filename'",
    "cwe_description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '\\..\\filename' (leading backslash dot dot) sequences that can resolve to a location that is outside of that directory.",
    "commit_message": "Fix local uri (#10651)\n\nSigned-off-by: Serena Ruan <serena.rxy@gmail.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "test_rest_tracking.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "2",
    "number_of_lines_deleted_vulnerable_to_cve": "26",
    "vulnerable_lines": [
        "// Line_Reference 1392:     assert response.status_code == 400",
        "// Line_Reference 1393:     assert \"MLflow tracking server doesn't allow\" in response.json()[\"message\"]",
        "// Line_Reference 1394: ",
        "// Line_Reference 1395: ",
        "// Line_Reference 1396: def test_create_model_version_with_file_uri_env_var(tmp_path):",
        "// Line_Reference 1397:     backend_uri = tmp_path.joinpath(\"file\").as_uri()",
        "// Line_Reference 1398:     with _init_server(",
        "// Line_Reference 1399:         backend_uri,",
        "// Line_Reference 1400:         root_artifact_uri=tmp_path.as_uri(),",
        "// Line_Reference 1401:         extra_env={\"MLFLOW_ALLOW_FILE_URI_AS_MODEL_VERSION_SOURCE\": \"true\"},",
        "// Line_Reference 1402:     ) as url:",
        "// Line_Reference 1403:         mlflow_client = MlflowClient(url)",
        "// Line_Reference 1404: ",
        "// Line_Reference 1405:         name = \"test\"",
        "// Line_Reference 1406:         mlflow_client.create_registered_model(name)",
        "// Line_Reference 1407:         exp_id = mlflow_client.create_experiment(\"test\")",
        "// Line_Reference 1408:         run = mlflow_client.create_run(experiment_id=exp_id)",
        "// Line_Reference 1409:         response = requests.post(",
        "// Line_Reference 1410:             f\"{mlflow_client.tracking_uri}/api/2.0/mlflow/model-versions/create\",",
        "// Line_Reference 1411:             json={",
        "// Line_Reference 1412:                 \"name\": name,",
        "// Line_Reference 1413:                 \"source\": \"file://123.456.789.123/path/to/source\",",
        "// Line_Reference 1414:                 \"run_id\": run.info.run_id,",
        "// Line_Reference 1415:             },",
        "// Line_Reference 1416:         )",
        "// Line_Reference 1417:         assert response.status_code == 200"
    ]
}
