{
    "cve_id": "CVE-2024-29029",
    "cve_description": "memos is a privacy-first, lightweight note-taking service. In memos 0.13.2, an SSRF vulnerability exists at the /o/get/image that allows unauthenticated users to enumerate the internal network and retrieve images. The response from the image request is then copied into the response of the current server request, causing a reflected XSS vulnerability.",
    "cve_publish_date": "2024-04-19",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "chore: retire legacy api",
    "type_of_change": "Modification",
    "filename_of_changes": "presign_link.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "15",
    "number_of_lines_deleted_vulnerable_to_cve": "23",
    "vulnerable_lines": [
        "// Line_Reference 5: \t\"encoding/json\"",
        "// Line_Reference 13: \tapiv1 \"github.com/usememos/memos/server/route/api/v1\"",
        "// Line_Reference 98: \tsystemSettingStorageServiceID, err := dataStore.GetWorkspaceSetting(ctx, &store.FindWorkspaceSetting{Name: apiv1.SystemSettingStorageServiceIDName.String()})",
        "// Line_Reference 100: \t\treturn nil, errors.Wrap(err, \"Failed to find SystemSettingStorageServiceIDName\")",
        "// Line_Reference 102: ",
        "// Line_Reference 103: \tstorageServiceID := apiv1.DefaultStorage",
        "// Line_Reference 104: \tif systemSettingStorageServiceID != nil {",
        "// Line_Reference 105: \t\terr = json.Unmarshal([]byte(systemSettingStorageServiceID.Value), &storageServiceID)",
        "// Line_Reference 106: \t\tif err != nil {",
        "// Line_Reference 107: \t\t\treturn nil, errors.Wrap(err, \"Failed to unmarshal storage service id\")",
        "// Line_Reference 108: \t\t}",
        "// Line_Reference 110: \tstorage, err := dataStore.GetStorage(ctx, &store.FindStorage{ID: &storageServiceID})",
        "// Line_Reference 112: \t\treturn nil, errors.Wrap(err, \"Failed to find StorageServiceID\")",
        "// Line_Reference 114: ",
        "// Line_Reference 116: \t\treturn nil, nil // storage not configured - not an error, just return empty ref",
        "// Line_Reference 118: \tstorageMessage, err := apiv1.ConvertStorageFromStore(storage)",
        "// Line_Reference 120: \tif err != nil {",
        "// Line_Reference 121: \t\treturn nil, errors.Wrap(err, \"Failed to ConvertStorageFromStore\")",
        "// Line_Reference 122: \t}",
        "// Line_Reference 123: \tif storageMessage.Type != apiv1.StorageS3 {",
        "// Line_Reference 127: \ts3Config := storageMessage.Config.S3Config",
        "// Line_Reference 134: \t\tURLPrefix: s3Config.URLPrefix,",
        "// Line_Reference 135: \t\tURLSuffix: s3Config.URLSuffix,"
    ]
}
