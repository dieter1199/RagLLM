{
    "cve_id": "CVE-2017-5985",
    "cve_description": "lxc-user-nic in Linux Containers (LXC) allows local users with a lxc-usernet allocation to create network interfaces on the host and choose the name of those interfaces by leveraging lack of netns ownership check.",
    "cve_publish_date": "2017-03-14",
    "cwe_id": "CWE-862",
    "cwe_name": "Missing Authorization",
    "cwe_description": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
    "commit_message": "CVE-2017-5985: Ensure target netns is caller-owned\n\nBefore this commit, lxc-user-nic could potentially have been tricked into\noperating on a network namespace over which the caller did not hold privilege.\n\nThis commit ensures that the caller is privileged over the network namespace by\ntemporarily dropping privilege.\n\nLaunchpad: https://bugs.launchpad.net/ubuntu/+source/lxc/+bug/1654676\nReported-by: Jann Horn <jannh@google.com>\nSigned-off-by: Christian Brauner <christian.brauner@ubuntu.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "lxc_user_nic.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "87",
    "number_of_lines_deleted_vulnerable_to_cve": "32",
    "vulnerable_lines": [
        "// Line_Reference 673: ",
        "// Line_Reference 676: \tint fd = -1, ofd = -1, ret, ifindex = -1;",
        "// Line_Reference 681: \t\tfprintf(stderr, \"Failed opening network namespace path for '%d'.\", getpid());",
        "// Line_Reference 682: \t\treturn -1;",
        "// Line_Reference 687: \t\tfprintf(stderr, \"Failed opening network namespace path for '%d'.\", pid);",
        "// Line_Reference 688: \t\treturn -1;",
        "// Line_Reference 691: \tif (setns(fd, 0) < 0) {",
        "// Line_Reference 692: \t\tfprintf(stderr, \"setns to container network namespace\\n\");",
        "// Line_Reference 693: \t\tgoto out_err;",
        "// Line_Reference 695: \tclose(fd); fd = -1;",
        "// Line_Reference 699: \t\tif (!(ifindex = if_nametoindex(oldname))) {",
        "// Line_Reference 700: \t\t\tfprintf(stderr, \"failed to get netdev index\\n\");",
        "// Line_Reference 701: \t\t\tgoto out_err;",
        "// Line_Reference 704: \tif ((ret = lxc_netdev_rename_by_name(oldname, *newnamep)) < 0) {",
        "// Line_Reference 705: \t\tfprintf(stderr, \"Error %d renaming netdev %s to %s in container\\n\", ret, oldname, *newnamep);",
        "// Line_Reference 706: \t\tgoto out_err;",
        "// Line_Reference 709: \t\tchar ifname[IFNAMSIZ], *namep = ifname;",
        "// Line_Reference 711: \t\t\tfprintf(stderr, \"Failed to get new netdev name\\n\");",
        "// Line_Reference 712: \t\t\tgoto out_err;",
        "// Line_Reference 716: \t\t\tgoto out_err;",
        "// Line_Reference 718: \tif (setns(ofd, 0) < 0) {",
        "// Line_Reference 719: \t\tfprintf(stderr, \"Error returning to original netns\\n\");",
        "// Line_Reference 720: \t\tclose(ofd);",
        "// Line_Reference 721: \t\treturn -1;",
        "// Line_Reference 723: \tclose(ofd);",
        "// Line_Reference 725: \treturn 0;",
        "// Line_Reference 727: out_err:",
        "// Line_Reference 728: \tif (ofd >= 0)",
        "// Line_Reference 729: \t\tclose(ofd);",
        "// Line_Reference 730: \tif (setns(ofd, 0) < 0)",
        "// Line_Reference 731: \t\tfprintf(stderr, \"Error returning to original network namespace\\n\");",
        "// Line_Reference 734: \treturn -1;"
    ]
}
