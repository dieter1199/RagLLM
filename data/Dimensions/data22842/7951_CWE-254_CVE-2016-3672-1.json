{
    "cve_id": "CVE-2016-3672",
    "cve_description": "The arch_pick_mmap_layout function in arch/x86/mm/mmap.c in the Linux kernel through 4.5.2 does not properly randomize the legacy base address, which makes it easier for local users to defeat the intended restrictions on the ADDR_NO_RANDOMIZE flag, and bypass the ASLR protection mechanism for a setuid or setgid program, by disabling stack-consumption resource limits.",
    "cve_publish_date": "2016-04-27",
    "cwe_id": "CWE-254",
    "cwe_name": "7PK - Security Features",
    "cwe_description": "Software security is not security software. Here we're concerned with topics like authentication, access control, confidentiality, cryptography, and privilege management.",
    "commit_message": "x86/mm/32: Enable full randomization on i386 and X86_32\n\nCurrently on i386 and on X86_64 when emulating X86_32 in legacy mode, only\nthe stack and the executable are randomized but not other mmapped files\n(libraries, vDSO, etc.). This patch enables randomization for the\nlibraries, vDSO and mmap requests on i386 and in X86_32 in legacy mode.\n\nBy default on i386 there are 8 bits for the randomization of the libraries,\nvDSO and mmaps which only uses 1MB of VA.\n\nThis patch preserves the original randomness, using 1MB of VA out of 3GB or\n4GB. We think that 1MB out of 3GB is not a big cost for having the ASLR.\n\nThe first obvious security benefit is that all objects are randomized (not\nonly the stack and the executable) in legacy mode which highly increases\nthe ASLR effectiveness, otherwise the attackers may use these\nnon-randomized areas. But also sensitive setuid/setgid applications are\nmore secure because currently, attackers can disable the randomization of\nthese applications by setting the ulimit stack to \"unlimited\". This is a\nvery old and widely known trick to disable the ASLR in i386 which has been\nallowed for too long.\n\nAnother trick used to disable the ASLR was to set the ADDR_NO_RANDOMIZE\npersonality flag, but fortunately this doesn't work on setuid/setgid\napplications because there is security checks which clear Security-relevant\nflags.\n\nThis patch always randomizes the mmap_legacy_base address, removing the\npossibility to disable the ASLR by setting the stack to \"unlimited\".\n\nSigned-off-by: Hector Marco-Gisbert <hecmargi@upv.es>\nAcked-by: Ismael Ripoll Ripoll <iripoll@upv.es>\nAcked-by: Kees Cook <keescook@chromium.org>\nAcked-by: Arjan van de Ven <arjan@linux.intel.com>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: akpm@linux-foundation.org\nCc: kees Cook <keescook@chromium.org>\nLink: http://lkml.kernel.org/r/1457639460-5242-1-git-send-email-hecmargi@upv.es\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "mmap.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "13",
    "vulnerable_lines": [
        "// Line_Reference 96: /*",
        "// Line_Reference 97:  * Bottom-up (legacy) layout on X86_32 did not support randomization, X86_64",
        "// Line_Reference 98:  * does, but not when emulating X86_32",
        "// Line_Reference 99:  */",
        "// Line_Reference 100: static unsigned long mmap_legacy_base(unsigned long rnd)",
        "// Line_Reference 101: {",
        "// Line_Reference 102: \tif (mmap_is_ia32())",
        "// Line_Reference 103: \t\treturn TASK_UNMAPPED_BASE;",
        "// Line_Reference 104: \telse",
        "// Line_Reference 105: \t\treturn TASK_UNMAPPED_BASE + rnd;",
        "// Line_Reference 106: }",
        "// Line_Reference 107: ",
        "// Line_Reference 119: \tmm->mmap_legacy_base = mmap_legacy_base(random_factor);"
    ]
}
