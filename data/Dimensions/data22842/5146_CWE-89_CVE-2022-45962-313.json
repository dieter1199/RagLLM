{
    "cve_id": "CVE-2022-45962",
    "cve_description": "Open Solutions for Education, Inc openSIS Community Edition v8.0 and earlier is vulnerable to SQL Injection via CalendarModal.php.",
    "cve_publish_date": "2023-02-13",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "Version 9.0 release\n\nOlder version shifted to branch: Version_8.0",
    "type_of_change": "ModificationType.ADD",
    "filename_of_changes": "StudentGrades.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "104",
    "number_of_lines_deleted_vulnerable_to_cve": "104",
    "vulnerable_lines": [
        "// Line_Reference 51: if (isset($_REQUEST['student_id'])) {",
        "// Line_Reference 53: ",
        "// Line_Reference 54:     $count_student_RET = DBGet(DBQuery('SELECT COUNT(*) AS NUM FROM students'));",
        "// Line_Reference 55:     if ($count_student_RET[1]['NUM'] > 1) {",
        "// Line_Reference 56:        DrawHeaderHome( ''._selectedStudent.':: '.$RET[1]['FIRST_NAME'].'&nbsp;'.($RET[1]['MIDDLE_NAME']?$RET[1]['MIDDLE_NAME'].' ':'').$RET[1]['LAST_NAME'].'&nbsp;'.$RET[1]['NAME_SUFFIX'].' (<A HREF=Side.php?student_id=new&modcat='.$_REQUEST['modcat'].'><font color=red>'._selectedStudent.':</font></A>) | <A HREF=Modules.php?modname='.$_REQUEST['modname'].'&search_modfunc=list&next_modname=students/Student.php&ajax=true&bottom_back=true&return_session=true target=body>'._selectedStudent.':</A>');",
        "// Line_Reference 57:     } else if ($count_student_RET[1]['NUM'] == 1) {",
        "// Line_Reference 58:       DrawHeaderHome( ''._selectedStudent.':: '.$RET[1]['FIRST_NAME'].'&nbsp;'.($RET[1]['MIDDLE_NAME']?$RET[1]['MIDDLE_NAME'].' ':'').$RET[1]['LAST_NAME'].'&nbsp;'.$RET[1]['NAME_SUFFIX'].' (<A HREF=Side.php?student_id=new&modcat='.$_REQUEST['modcat'].'><font color=red>'._selectedStudent.':</font></A>) ');",
        "// Line_Reference 59:     }",
        "// Line_Reference 66:         DrawHeader(_totals, \"<span class=\\\"heading-text\\\"><A HREF=Modules.php?modname=$_REQUEST[modname]&id=all><i class=\\\"icon-menu-open\\\"></i> &nbsp; \"._expandAll.\"</A></span>\");",
        "// Line_Reference 70:             $LO_columns = array('TITLE' =>_courseTitle,",
        "// Line_Reference 71:              'TEACHER' =>_teacher,",
        "// Line_Reference 72:              'PERCENT' =>_percent,",
        "// Line_Reference 73:              'GRADE' =>_letter,",
        "// Line_Reference 74:              'UNGRADED' =>_ungraded,",
        "// Line_Reference 75:              ) + ($do_stats ? array('BAR1' =>  ''._gradeRange.'(%)',",
        "// Line_Reference 76:              'BAR2' =>_classRank,",
        "// Line_Reference 77:              ) : array());",
        "// Line_Reference 79:             $LO_columns = array('TITLE' =>_courseTitle,",
        "// Line_Reference 80:              'TEACHER' =>_teacher,",
        "// Line_Reference 81:              'PERCENT' =>_percent,",
        "// Line_Reference 82:              'GRADE' =>_letter,",
        "// Line_Reference 83:              'UNGRADED' =>_ungraded,",
        "// Line_Reference 84:              ) + ($do_stats ? array('BAR1' =>  ''._gradeRange.'(%)',",
        "// Line_Reference 85:              ) : array());",
        "// Line_Reference 111:                         $config_RET = DBGet(DBQuery('SELECT TITLE,VALUE FROM program_user_config WHERE USER_ID=\\'' . User('STAFF_ID') . '\\' AND SCHOOL_ID=\\'' . UserSchool() . '\\' AND PROGRAM=\\'Gradebook\\' AND VALUE LIKE \\'%_' . $course_period_id . '\\''), array(), array('TITLE'));",
        "// Line_Reference 114:                         if (count($config_RET))",
        "// Line_Reference 117:                         if ($title == 'ANOMALOUS_MAX') {",
        "// Line_Reference 118:                         $arr = explode('_', $value[1]['VALUE']);",
        "// Line_Reference 120:                         $programconfig[User('STAFF_ID')][$title] = $arr[0];",
        "// Line_Reference 121:                         } elseif (substr($title, 0, 3) == 'SEM' || substr($title, 0, 1) == 'Q' || substr($title, 0, 1) == 'FY') {",
        "// Line_Reference 122:                         $arr = explode('_', $value[1]['VALUE']);",
        "// Line_Reference 124:                         $programconfig[User('STAFF_ID')][$title] = $arr[0];",
        "// Line_Reference 125:                         } else {",
        "// Line_Reference 126:                         $unused_var = explode('_', $value[1]['VALUE']);",
        "// Line_Reference 127:                         $programconfig[User('STAFF_ID')][$title] = $unused_var[0];",
        "// Line_Reference 128:                         //\t\t\t$programconfig[User('STAFF_ID')][$title] = rtrim($value[1]['VALUE'],'_'.UserCoursePeriod());",
        "// Line_Reference 130:                         } else",
        "// Line_Reference 150:                 }",
        "// Line_Reference 151:                 else {",
        "// Line_Reference 156: //'gg.POINTS','\\'-1\\' OR gg.POINTS IS NULL OR (ga.due_date < (select DISTINCT ssm.start_date  from student_enrollment ssm where ssm.STUDENT_ID=s.STUDENT_ID AND ssm.SYEAR=\\''.UserSyear().'\\' AND ssm.SCHOOL_ID='.UserSchool().' AND (ssm.START_DATE IS NOT NULL AND (CURRENT_DATE<=ssm.END_DATE OR CURRENT_DATE>=ssm.END_DATE OR  ssm.END_DATE IS NULL)) order by ssm.start_date desc limit 1) ) ',\"'0'\",'ga.POINTS'",
        "// Line_Reference 159:                      $points_RET = DBGet(DBQuery('SELECT \\'-1\\' AS ASSIGNMENT_TYPE_ID,sum(' . db_case(array('gg.POINTS', \"'-1'\", \"'0'\", 'gg.POINTS')) . ') AS PARTIAL_POINTS,sum(' . db_case(array('gg.POINTS', '\\'-1\\' OR gg.POINTS IS NULL OR (ga.due_date < (select DISTINCT ssm.start_date  from student_enrollment ssm,students s where ssm.STUDENT_ID=s.STUDENT_ID AND s.STUDENT_ID=\\'' . UserStudentID() . '\\' AND ssm.SYEAR=\\'' . UserSyear() . '\\' AND ssm.SCHOOL_ID=' . UserSchool() . ' AND (ssm.START_DATE IS NOT NULL AND (CURRENT_DATE<=ssm.END_DATE OR CURRENT_DATE>=ssm.END_DATE OR  ssm.END_DATE IS NULL)) order by ssm.start_date desc limit 1) ) ', \"'0'\", 'ga.POINTS')) . ') AS PARTIAL_TOTAL,\\'1\\' AS FINAL_GRADE_PERCENT,sum(' . db_case(array('gg.POINTS', \"''\", \"1\", \"0\")) . ') AS UNGRADED FROM gradebook_assignments ga LEFT OUTER JOIN gradebook_grades gg ON (gg.COURSE_PERIOD_ID=\\'' . $course_period_id . '\\' AND gg.STUDENT_ID=\\'' . UserStudentID() . '\\' AND gg.ASSIGNMENT_ID=ga.ASSIGNMENT_ID) WHERE (ga.COURSE_PERIOD_ID=\\'' . $course_period_id . '\\' OR ga.COURSE_ID=\\'' . $course_id . '\\' AND ga.STAFF_ID=\\'' . $staff_id . '\\') AND ga.MARKING_PERIOD_ID IN (' . $mp . ') AND (ga.ASSIGNED_DATE IS NOT NULL ) GROUP BY  FINAL_GRADE_PERCENT'));",
        "// Line_Reference 169: //                                $Class_Rank = DBGet(DBQuery(' SELECT FOUND_ROWS() as TOTAL_STUDENT')) ;",
        "// Line_Reference 222:                     $avg_percent += $total;",
        "// Line_Reference 231:                 $avg_percent /= count($all_RET);",
        "// Line_Reference 234:                 $w1 = round(100 * $min_percent / $scale);",
        "// Line_Reference 241:                     $w2 = round(100 * ($avg_percent - $min_percent) / $scale);",
        "// Line_Reference 243:                     $w4 = round(100 * ($max_percent - $percent) / $scale);",
        "// Line_Reference 246:                 $w5 = round(100 * (1.0 - $max_percent / $scale));",
        "// Line_Reference 251:                 rsort($Rank_Pos);",
        "// Line_Reference 253:                         if (number_format(100 * $percent, 1) == $val)",
        "// Line_Reference 280:             ListOutput($LO_ret, $LO_columns,  _course, _courses, $link, array(), array('center' =>false, 'save' =>false, 'search' =>false));",
        "// Line_Reference 284:     }",
        "// Line_Reference 285: ",
        "// Line_Reference 286:     else {",
        "// Line_Reference 287: ",
        "// Line_Reference 294:             $val1 = '<div class=\"panel-heading\"><h6 class=\"panel-title\">'._assignmentDetails.'</h6></div>';",
        "// Line_Reference 300:             $val1 .= '<label class=\"control-label col-lg-4\">'._title.'</label>';",
        "// Line_Reference 306:             $val1 .= '<label class=\"control-label col-lg-4\">'._assignedDate.'</label>';",
        "// Line_Reference 312:             $val1 .= '<label class=\"control-label col-lg-4\">'._dueDate.'</label>';",
        "// Line_Reference 317: ",
        "// Line_Reference 321:             $val1 .= '<label class=\"control-label col-lg-4\">'._assignementType.'</label>';",
        "// Line_Reference 327:             $val1 .= '<label class=\"control-label col-lg-4\">'._points.'</label>';",
        "// Line_Reference 333:             $val1 .= '<label class=\"control-label col-lg-4\">'._description.'</label>';",
        "// Line_Reference 339: ",
        "// Line_Reference 357:         }",
        "// Line_Reference 358:         else {",
        "// Line_Reference 359:             $courses_RET = DBGet(DBQuery('SELECT c.TITLE AS COURSE_TITLE,cp.TITLE,cp.COURSE_PERIOD_ID,cp.COURSE_ID,cp.TEACHER_ID AS STAFF_ID FROM course_periods cp,courses c WHERE cp.COURSE_PERIOD_ID=\\'' . clean_param($_REQUEST[id], PARAM_INT) . '\\' AND c.COURSE_ID=cp.COURSE_ID'));",
        "// Line_Reference 361:             DrawHeader('<span class=\"text-pink\"><b>' . $courses_RET[1]['COURSE_TITLE'] . '</b> - ' . substr($courses_RET[1]['TITLE'].'</span>', strrpos(str_replace(' - ', ' ^ ', $courses_RET[1]['TITLE']), '^') + 2), \"<span class=\\\"heading-text\\\"><A HREF=Modules.php?modname=$_REQUEST[modname]><i class=\\\"icon-square-left\\\"></i> &nbsp; Back to Totals</A></span>\");",
        "// Line_Reference 362:             echo '</div>';",
        "// Line_Reference 363:             echo '<div class=\"panel\">';",
        "// Line_Reference 364:             DrawHeaderhome($val1);",
        "// Line_Reference 382:                                                   ON (gg.COURSE_PERIOD_ID=\\'' . $course[COURSE_PERIOD_ID] . '\\' AND gg.ASSIGNMENT_ID=ga.ASSIGNMENT_ID AND gg.STUDENT_ID=\\'' . UserStudentID() . '\\'),gradebook_assignment_types at",
        "// Line_Reference 383:                                                   WHERE (ga.COURSE_PERIOD_ID=\\'' . $course[COURSE_PERIOD_ID] . '\\' OR ga.COURSE_ID=\\'' . $course[COURSE_ID] . '\\' AND ga.STAFF_ID=\\'' . $staff_id . '\\') AND ga.MARKING_PERIOD_ID IN (' . GetAllMP($MP_TYPE, UserMP()) . ')",
        "// Line_Reference 389:             $stu_enroll_date = $stu_enroll_date[1][START_DATE];",
        "// Line_Reference 391: ",
        "// Line_Reference 395:                     DrawHeader('<span class=\"text-pink\"><b>' . $course['COURSE_TITLE'] . '</b> - ' . substr($course['TITLE'], strrpos(str_replace(' - ', ' ^ ', $course['TITLE']), '^') + 2).'</span>', \"<span class=\\\"heading-text\\\"><A HREF=Modules.php?modname=$_REQUEST[modname]><i class=\\\"icon-square-left\\\"></i> &nbsp; Back to Totals</A></span>\");",
        "// Line_Reference 402:                     $LO_columns = array('TITLE' =>_title,",
        "// Line_Reference 403:                      'CATEGORY' =>_category,",
        "// Line_Reference 404:                      'POINTS' =>_pointsPossible,",
        "// Line_Reference 405:                      'PERCENT' =>_percent,",
        "// Line_Reference 406:                      'LETTER' =>_letter,",
        "// Line_Reference 407:                      'ASSIGNED_DATE' =>_assignedDate,",
        "// Line_Reference 408:                      'DUE_DATE' =>_dueDate,",
        "// Line_Reference 409:                      ) + ($do_stats ? array('BAR1' =>_gradeRange,",
        "// Line_Reference 410:                      'BAR2' =>_classRank,",
        "// Line_Reference 411:                      ) : array());",
        "// Line_Reference 413:                     $LO_columns = array('TITLE' =>_title,",
        "// Line_Reference 414:                      'CATEGORY' =>_category,",
        "// Line_Reference 415:                      'POINTS' =>_pointsPossible,",
        "// Line_Reference 416:                      'PERCENT' =>_percent,",
        "// Line_Reference 417:                      'LETTER' =>_letter,",
        "// Line_Reference 418:                      'ASSIGNED_DATE' =>_assignedDate,",
        "// Line_Reference 419:                      'DUE_DATE' =>_dueDate,",
        "// Line_Reference 420:                      ) + ($do_stats ? array('BAR1' =>_gradeRange,",
        "// Line_Reference 421:                      ) : array());",
        "// Line_Reference 427:                     $days_left = floor((strtotime($assignment[DUE], 0) - strtotime($stu_enroll_date, 0)) / 86400);",
        "// Line_Reference 434:                                 $all_RET1 = DBGet(DBQuery('SELECT g.ASSIGNMENT_ID,g.POINTS  FROM gradebook_grades g where g.COURSE_PERIOD_ID=\\'' . $course[COURSE_PERIOD_ID] . '\\' '));",
        "// Line_Reference 452:                                             $ranknew = $k;",
        "// Line_Reference 453:                                     ;",
        "// Line_Reference 492:                 ListOutput($LO_ret, $LO_columns,  _assignment, _assignments, array(), array(), array('center' =>false, 'save' => $_REQUEST['id'] != 'all', 'search' =>false));",
        "// Line_Reference 501: function _makeTipTitle($value, $column) {",
        "// Line_Reference 505:         $tip_title = '<A HREF=Modules.php?modname=grades/StudentGrades.php&id=' . $_REQUEST['id'] . '&modfun=assgn_detail&assignment_id=' . $THIS_RET['ASSIGNMENT_ID'].'>' . $value . '</A>';",
        "// Line_Reference 511: ",
        "// Line_Reference 512: ?>"
    ]
}
