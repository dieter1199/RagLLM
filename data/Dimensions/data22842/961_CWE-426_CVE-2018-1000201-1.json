{
    "cve_id": "CVE-2018-1000201",
    "cve_description": "ruby-ffi version 1.9.23 and earlier has a DLL loading issue which can be hijacked on Windows OS, when a Symbol is used as DLL name instead of a String This vulnerability appears to have been fixed in v1.9.24 and later.",
    "cve_publish_date": "2018-06-22",
    "cwe_id": "CWE-426",
    "cwe_name": "Untrusted Search Path",
    "cwe_description": "The product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control.",
    "commit_message": "Don't treat Symbol args different to Strings in ffi_lib\n\nSymbols were sent directly to FFI::DynamicLibrary.open in the first\nattempt, resulting in a TypeError, so that only the mangled library\nname was actually loaded.\n\nThis moves conversion to String to the front, so that subsequent\ncalls can assume Strings only.",
    "type_of_change": "Modification",
    "filename_of_changes": "library.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 46:     lib = lib.to_s unless lib.kind_of?(String)",
        "// Line_Reference 106:           libnames = (name.is_a?(::Array) ? name : [ name ]).map { |n| [ n, FFI.map_library_name(n) ].uniq }.flatten.compact",
        "// Line_Reference 129:                 libname = libname.to_s"
    ]
}
