{
    "cve_id": "CVE-2024-23829",
    "cve_description": "aiohttp is an asynchronous HTTP client/server framework for asyncio and Python. Security-sensitive parts of the Python HTTP parser retained minor differences in allowable character sets, that must trigger error handling to robustly match frame boundaries of proxies in order to protect against injection of additional requests. Additionally, validation could trigger exceptions that were not handled consistently with processing of other malformed input.  Being more lenient than internet standards require could, depending on deployment environment, assist in request smuggling. The unhandled exception could cause excessive resource consumption on the application server and/or its logging facilities. This vulnerability exists due to an incomplete fix for CVE-2023-47627. Version 3.9.2 fixes this vulnerability.",
    "cve_publish_date": "2024-01-29",
    "cwe_id": "CWE-444",
    "cwe_name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')",
    "cwe_description": "The product acts as an intermediary HTTP agent\n         (such as a proxy or firewall) in the data flow between two\n         entities such as a client and server, but it does not\n         interpret malformed HTTP requests or responses in ways that\n         are consistent with how the messages will be processed by\n         those entities that are at the ultimate destination.",
    "commit_message": "Improve validation in HTTP parser (#8074)\n\nCo-authored-by: Paul J. Dorn <pajod@users.noreply.github.com>\r\nCo-authored-by: Sviatoslav Sydorenko (Святослав Сидоренко) <sviat@redhat.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "test_http_parser.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "140",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 6: from typing import Any, List",
        "// Line_Reference 762: def test_http_request_parser_bad_method(parser: Any) -> None:",
        "// Line_Reference 764:         parser.feed_data(b'G=\":<>(e),[T];?\" /get HTTP/1.1\\r\\n\\r\\n')"
    ]
}
