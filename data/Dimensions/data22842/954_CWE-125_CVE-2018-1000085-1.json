{
    "cve_id": "CVE-2018-1000085",
    "cve_description": "ClamAV version version 0.99.3 contains a Out of bounds heap memory read vulnerability in XAR parser, function xar_hash_check() that can result in Leaking of memory, may help in developing exploit chains.. This attack appear to be exploitable via The victim must scan a crafted XAR file. This vulnerability appears to have been fixed in after commit d96a6b8bcc7439fa7e3876207aa0a8e79c8451b6.",
    "cve_publish_date": "2018-03-13",
    "cwe_id": "CWE-125",
    "cwe_name": "Out-of-bounds Read",
    "cwe_description": "The product reads data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "bb11588 - fix out of bounds read.",
    "type_of_change": "Modification",
    "filename_of_changes": "xar.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "50",
    "number_of_lines_deleted_vulnerable_to_cve": "29",
    "vulnerable_lines": [
        "// Line_Reference 74: static int xar_get_numeric_from_xml_element(xmlTextReaderPtr reader, long * value)",
        "// Line_Reference 80:             *value = atol((const char *)numstr);",
        "// Line_Reference 81:             if (*value < 0) {",
        "// Line_Reference 126:             *cksum = xmlStrdup(xmlval);",
        "// Line_Reference 127:             cli_dbgmsg(\"cli_scanxar: checksum value is %s.\\n\", *cksum);",
        "// Line_Reference 152: static int xar_get_toc_data_values(xmlTextReaderPtr reader, long *length, long *offset, long *size, int *encoding,",
        "// Line_Reference 389:         len = SHA1_HASH_SIZE;",
        "// Line_Reference 392:         len = CLI_HASH_MD5;",
        "// Line_Reference 420:     long length, offset, size, at;",
        "// Line_Reference 560:         cli_dbgmsg(\"cli_scanxar: decompress into temp file:\\n%s, size %li,\\n\"",
        "// Line_Reference 561:                    \"from xar heap offset %li length %li\\n\",",
        "// Line_Reference 641:                 unsigned long in_remaining = length;",
        "// Line_Reference 645: ",
        "// Line_Reference 658:                     cli_dbgmsg(\"cli_scanxar: Can't read %li bytes @ %li, errno:%s.\\n\",",
        "// Line_Reference 659:                                length, at, errbuff);",
        "// Line_Reference 696:                                    length, at, errbuff);",
        "// Line_Reference 761:                 unsigned long write_len;",
        "// Line_Reference 762: ",
        "// Line_Reference 764:                     write_len = MIN((size_t)(ctx->engine->maxfilesize), (size_t)length);",
        "// Line_Reference 765:                 else",
        "// Line_Reference 766:                     write_len = length;",
        "// Line_Reference 768:                 if (!(blockp = (void*)fmap_need_off_once(map, at, length))) {",
        "// Line_Reference 771:                     cli_dbgmsg(\"cli_scanxar: Can't read %li bytes @ %li, errno:%s.\\n\",",
        "// Line_Reference 772:                                length, at, errbuff);",
        "// Line_Reference 778:                     xar_hash_update(a_hash_ctx, blockp, length, a_hash);",
        "// Line_Reference 780:                 if (cli_writen(fd, blockp, write_len) < 0) {",
        "// Line_Reference 781:                     cli_dbgmsg(\"cli_scanxar: cli_writen error %li bytes @ %li.\\n\", length, at);",
        "// Line_Reference 787:         }",
        "// Line_Reference 874:         cli_warnmsg(\"cli_scanxar: %u checksum errors and %u extraction errors, use --debug for more info.\\n\","
    ]
}
