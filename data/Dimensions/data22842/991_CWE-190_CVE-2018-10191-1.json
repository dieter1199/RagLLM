{
    "cve_id": "CVE-2018-10191",
    "cve_description": "In versions of mruby up to and including 1.4.0, an integer overflow exists in src/vm.c::mrb_vm_exec() when handling OP_GETUPVAR in the presence of deep scope nesting, resulting in a use-after-free. An attacker that can cause Ruby code to be run can use this to possibly execute arbitrary code.",
    "cve_publish_date": "2018-04-17",
    "cwe_id": "CWE-190",
    "cwe_name": "Integer Overflow or Wraparound",
    "cwe_description": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
    "commit_message": "Check length of env stack before accessing upvar; fix #3995",
    "type_of_change": "Modification",
    "filename_of_changes": "vm.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "3",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 1204:       if (!e) {",
        "// Line_Reference 1205:         *regs_a = mrb_nil_value();",
        "// Line_Reference 1208:         *regs_a = e->stack[b];"
    ]
}
