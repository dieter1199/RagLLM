{
    "cve_id": "CVE-2022-39342",
    "cve_description": "OpenFGA is an authorization/permission engine. Versions prior to version 0.2.4 are vulnerable to authorization bypass under certain conditions. Users whose model has a relation defined as a tupleset (the right hand side of a ‘from’ statement) that involves anything other than a direct relationship (e.g. ‘as self’) are vulnerable. Version 0.2.4 contains a patch for this issue.",
    "cve_publish_date": "2022-10-25",
    "cwe_id": "NVD-CWE-Other",
    "cwe_name": "Other",
    "cwe_description": "NVD is only using a subset of CWE for mapping instead of the entire CWE, and the weakness type is not covered by that subset.",
    "commit_message": "Merge pull request from GHSA-f4mm-2r69-mg5f",
    "type_of_change": "Modification",
    "filename_of_changes": "write_authzmodel.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "181",
    "number_of_lines_deleted_vulnerable_to_cve": "16",
    "vulnerable_lines": [
        "// Line_Reference 12: \t\"github.com/openfga/openfga/server/errors\"",
        "// Line_Reference 112: \t\t\terr: errors.ExceededEntityLimit(\"type definitions in an authorization model\", datastore.MaxTypesInTypeDefinition()),",
        "// Line_Reference 154: \t\t\terr: errors.InvalidAuthorizationModelInput(typesystem.ErrDuplicateTypes),",
        "// Line_Reference 169: \t\t\terr: errors.InvalidAuthorizationModelInput(typesystem.InvalidRelationError(\"repo\", \"owner\")),",
        "// Line_Reference 191: \t\t\terr: errors.InvalidAuthorizationModelInput(typesystem.RelationDoesNotExistError(\"repo\", \"owner\")),",
        "// Line_Reference 218: \t\t\terr: errors.InvalidAuthorizationModelInput(typesystem.RelationDoesNotExistError(\"\", \"owner\")),",
        "// Line_Reference 253: \t\t\terr: errors.InvalidAuthorizationModelInput(typesystem.RelationDoesNotExistError(\"repo\", \"owner\")),",
        "// Line_Reference 288: \t\t\terr: errors.InvalidAuthorizationModelInput(typesystem.RelationDoesNotExistError(\"repo\", \"owner\")),",
        "// Line_Reference 323: \t\t\terr: errors.InvalidAuthorizationModelInput(typesystem.RelationDoesNotExistError(\"repo\", \"owner\")),",
        "// Line_Reference 352: \t\t\terr: errors.InvalidAuthorizationModelInput(typesystem.RelationDoesNotExistError(\"repo\", \"owner\")),",
        "// Line_Reference 381: \t\t\terr: errors.InvalidAuthorizationModelInput(typesystem.RelationDoesNotExistError(\"\", \"owner\")),",
        "// Line_Reference 417: \t\t\terr: errors.InvalidAuthorizationModelInput(typesystem.RelationDoesNotExistError(\"bar\", \"writer\")),",
        "// Line_Reference 450: \t\t\terr: errors.InvalidAuthorizationModelInput(typesystem.RelationDoesNotExistError(\"repo\", \"owner\")),",
        "// Line_Reference 480: \t\t\terr: errors.InvalidAuthorizationModelInput(typesystem.InvalidRelationError(\"repo\", \"viewer\")),",
        "// Line_Reference 507: \t\t\terr: errors.InvalidAuthorizationModelInput(typesystem.InvalidRelationError(\"repo\", \"viewer\")),",
        "// Line_Reference 533: \t\t\terr: errors.InvalidAuthorizationModelInput(typesystem.InvalidRelationError(\"repo\", \"viewer\")),"
    ]
}
