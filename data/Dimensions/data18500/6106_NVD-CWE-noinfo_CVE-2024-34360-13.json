{
    "cve_id": "CVE-2024-34360",
    "cve_description": "go-spacemesh is a Go implementation of the Spacemesh protocol full node. Nodes can publish activations transactions (ATXs) which reference the incorrect previous ATX of the Smesher that created the ATX. ATXs are expected to form a single chain from the newest to the first ATX ever published by an identity. Allowing Smeshers to reference an earlier (but not the latest) ATX as previous breaks this protocol rule and can serve as an attack vector where Nodes are rewarded for holding their PoST data for less than one epoch but still being eligible for rewards. This vulnerability is fixed in go-spacemesh 1.5.2-hotfix1 and Spacemesh API 1.37.1.",
    "cve_publish_date": "2024-05-14",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Verify that previous ATX points to correct ATX when handling incoming ATXs (#27)\n\n---------\n\nCo-authored-by: Bartosz Różański <bartek.roza@gmail.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "node.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "9",
    "number_of_lines_deleted_vulnerable_to_cve": "47",
    "vulnerable_lines": [
        "// Line_Reference 39: \t\"github.com/spacemeshos/go-spacemesh/activation/wire\"",
        "// Line_Reference 78: \t\"github.com/spacemeshos/go-spacemesh/sql/builder\"",
        "// Line_Reference 1936: \t// uncomment to verify ATXs signatures",
        "// Line_Reference 1937: \t// app.verifyDB(ctx)",
        "// Line_Reference 1938: ",
        "// Line_Reference 1949: // verifyDB performs a verification of ATX signatures in the database.",
        "// Line_Reference 1950: //",
        "// Line_Reference 1951: //lint:ignore U1000 This function is currently unused but is left here for future use.",
        "// Line_Reference 1952: func (app *App) verifyDB(ctx context.Context) {",
        "// Line_Reference 1953: \tapp.eg.Go(func() error {",
        "// Line_Reference 1954: \t\tapp.log.Info(\"checking ATX signatures\")",
        "// Line_Reference 1955: \t\tcount := 0",
        "// Line_Reference 1956: ",
        "// Line_Reference 1957: \t\t// check ATX signatures",
        "// Line_Reference 1958: \t\tatxs.IterateAtxsOps(app.cachedDB, builder.Operations{}, func(atx *types.VerifiedActivationTx) bool {",
        "// Line_Reference 1959: \t\t\tselect {",
        "// Line_Reference 1960: \t\t\tcase <-ctx.Done():",
        "// Line_Reference 1961: \t\t\t\t// stop on context cancellation",
        "// Line_Reference 1962: \t\t\t\treturn false",
        "// Line_Reference 1963: \t\t\tdefault:",
        "// Line_Reference 1964: \t\t\t}",
        "// Line_Reference 1965: ",
        "// Line_Reference 1966: \t\t\t// verify atx signature",
        "// Line_Reference 1967: \t\t\t// TODO: use atx handler to verify signature",
        "// Line_Reference 1968: \t\t\tif !app.edVerifier.Verify(",
        "// Line_Reference 1969: \t\t\t\tsigning.ATX,",
        "// Line_Reference 1970: \t\t\t\tatx.SmesherID, wire.ActivationTxToWireV1(atx.ActivationTx).SignedBytes(),",
        "// Line_Reference 1971: \t\t\t\tatx.Signature,",
        "// Line_Reference 1972: \t\t\t) {",
        "// Line_Reference 1973: \t\t\t\tapp.log.With().Error(\"ATX signature verification failed\",",
        "// Line_Reference 1974: \t\t\t\t\tlog.Stringer(\"atx_id\", atx.ID()),",
        "// Line_Reference 1975: \t\t\t\t\tlog.Stringer(\"smesher\", atx.SmesherID),",
        "// Line_Reference 1976: \t\t\t\t)",
        "// Line_Reference 1977: \t\t\t}",
        "// Line_Reference 1978: ",
        "// Line_Reference 1979: \t\t\tcount++",
        "// Line_Reference 1980: \t\t\tif count%1000 == 0 {",
        "// Line_Reference 1981: \t\t\t\tapp.log.With().Info(\"verifying ATX signatures\", log.Int(\"count\", count))",
        "// Line_Reference 1982: \t\t\t}",
        "// Line_Reference 1983: \t\t\treturn true",
        "// Line_Reference 1984: \t\t})",
        "// Line_Reference 1985: ",
        "// Line_Reference 1986: \t\tapp.log.With().Info(\"ATX signatures verified\", log.Int(\"count\", count))",
        "// Line_Reference 1987: \t\treturn nil",
        "// Line_Reference 1988: \t})",
        "// Line_Reference 1989: }",
        "// Line_Reference 1990: "
    ]
}
