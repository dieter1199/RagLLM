{
    "cve_id": "CVE-2023-5572",
    "cve_description": "Server-Side Request Forgery (SSRF) in GitHub repository vriteio/vrite prior to 0.3.0.",
    "cve_publish_date": "2023-10-13",
    "cwe_id": "CWE-918",
    "cwe_name": "Server-Side Request Forgery (SSRF)",
    "cwe_description": "The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
    "commit_message": "Vrite v0.3 (#45)\n\n- Replace wrapper with element;\r\n- Add XML-like syntax for elements;\r\n- Redesign editor block menus;\r\n- Add MDX extension;\r\n- Allow CORS API access;\r\n- Restructure @vrite/backend;",
    "type_of_change": "Modification",
    "filename_of_changes": "view.tsx",
    "code_language": "TypeScript",
    "number_of_lines_added_for_mitigation": "81",
    "number_of_lines_deleted_vulnerable_to_cve": "98",
    "vulnerable_lines": [
        "// Line_Reference 9: import { Card, Icon, Loader } from \"#components/primitives\";",
        "// Line_Reference 16:   const [currentSrc, setCurrentSrc] = createRef(\"\");",
        "// Line_Reference 41:     if (objectURL()) {",
        "// Line_Reference 59:     try {",
        "// Line_Reference 60:       if (!src) {",
        "// Line_Reference 61:         setError(false);",
        "// Line_Reference 62:         setLoading(false);",
        "// Line_Reference 63: ",
        "// Line_Reference 64:         return;",
        "// Line_Reference 65:       }",
        "// Line_Reference 66: ",
        "// Line_Reference 67:       if (!validateURL(src)) {",
        "// Line_Reference 68:         setError(true);",
        "// Line_Reference 69:         setLoading(false);",
        "// Line_Reference 70: ",
        "// Line_Reference 71:         return;",
        "// Line_Reference 72:       }",
        "// Line_Reference 73: ",
        "// Line_Reference 74:       const response = await fetch(",
        "// Line_Reference 75:         src.startsWith(window.env.PUBLIC_ASSETS_URL) ? src : `/proxy?url=${encodeURIComponent(src)}`",
        "// Line_Reference 76:       );",
        "// Line_Reference 77: ",
        "// Line_Reference 78:       if (!response.ok) {",
        "// Line_Reference 79:         setError(true);",
        "// Line_Reference 80:         setLoading(false);",
        "// Line_Reference 81: ",
        "// Line_Reference 82:         return;",
        "// Line_Reference 83:       }",
        "// Line_Reference 85:       const blob = await response.blob();",
        "// Line_Reference 86:       const objectURL = URL.createObjectURL(blob);",
        "// Line_Reference 88:       setCurrentSrc(src);",
        "// Line_Reference 89:       setObjectURL(objectURL);",
        "// Line_Reference 90:     } catch (error) {",
        "// Line_Reference 92:     } finally {",
        "// Line_Reference 136:     <NodeViewWrapper class={clsx(!options().cover && \"my-5\")}>",
        "// Line_Reference 146:             options().cover ? \"border-b-2\" : \"border-2 rounded-t-2xl\"",
        "// Line_Reference 149:           <Show",
        "// Line_Reference 150:             when={objectURL()}",
        "// Line_Reference 151:             fallback={",
        "// Line_Reference 152:               <div",
        "// Line_Reference 153:                 class={clsx(",
        "// Line_Reference 154:                   \"w-full bg-gradient-to-tr flex justify-center items-center relative\",",
        "// Line_Reference 155:                   options().cover ? \"min-h-48\" : \"rounded-t-2xl\"",
        "// Line_Reference 156:                 )}",
        "// Line_Reference 157:                 style={{",
        "// Line_Reference 158:                   \"padding-top\": getPaddingTop()",
        "// Line_Reference 159:                 }}",
        "// Line_Reference 160:               >",
        "// Line_Reference 161:                 <div class=\"absolute flex flex-col items-center justify-center font-bold text-white transform -translate-y-1/2 top-1/2\">",
        "// Line_Reference 162:                   <Show when={!loading()} fallback={<Loader class=\"w-8 h-8\" />}>",
        "// Line_Reference 163:                     <Show",
        "// Line_Reference 164:                       when={!error()}",
        "// Line_Reference 165:                       fallback={",
        "// Line_Reference 166:                         <>",
        "// Line_Reference 167:                           <Icon path={mdiAlertCircle} class=\"w-16 h-16\" />",
        "// Line_Reference 168:                           <span class=\"absolute top-full\">Error</span>",
        "// Line_Reference 169:                         </>",
        "// Line_Reference 170:                       }",
        "// Line_Reference 171:                     >",
        "// Line_Reference 172:                       <Icon path={mdiImage} class=\"w-16 h-16\" />",
        "// Line_Reference 173:                     </Show>",
        "// Line_Reference 174:                   </Show>",
        "// Line_Reference 175:                 </div>",
        "// Line_Reference 176:               </div>",
        "// Line_Reference 177:             }",
        "// Line_Reference 181:                 \"w-full border-gray-200 dark:border-gray-700 flex justify-center items-center overflow-hidden bg-gray-100 dark:bg-gray-800 relative\",",
        "// Line_Reference 182:                 !options().cover && \"rounded-t-2xl\"",
        "// Line_Reference 185:               <div",
        "// Line_Reference 186:                 class={clsx(",
        "// Line_Reference 187:                   \"overflow-hidden min-w-40 !h-full\",",
        "// Line_Reference 188:                   state().editor.isEditable && \"resize\"",
        "// Line_Reference 189:                 )}",
        "// Line_Reference 190:                 ref={handleNewImageContainer}",
        "// Line_Reference 191:                 style={{ width: attrs().width }}",
        "// Line_Reference 192:               >",
        "// Line_Reference 193:                 <img",
        "// Line_Reference 194:                   alt={attrs().alt}",
        "// Line_Reference 195:                   src={objectURL()}",
        "// Line_Reference 196:                   data-src={currentSrc()}",
        "// Line_Reference 197:                   class={clsx(\"object-contain w-full m-0 transition-opacity duration-300\")}",
        "// Line_Reference 198:                   onLoad={(event) => {",
        "// Line_Reference 199:                     const image = event.currentTarget;",
        "// Line_Reference 200:                     const w = image.naturalWidth;",
        "// Line_Reference 201:                     const h = image.naturalHeight;",
        "// Line_Reference 202:                     const aspectRatio = w / h;",
        "// Line_Reference 203: ",
        "// Line_Reference 204:                     updateAspectRatio.clear();",
        "// Line_Reference 205:                     updateAspectRatio(`${aspectRatio}`);",
        "// Line_Reference 206:                   }}",
        "// Line_Reference 207:                   onError={() => {",
        "// Line_Reference 208:                     removeImage();",
        "// Line_Reference 209:                     setError(true);",
        "// Line_Reference 210:                   }}",
        "// Line_Reference 211:                 />",
        "// Line_Reference 216:         <Card",
        "// Line_Reference 218:             \"m-0 border-0 border-b-2 rounded-t-none\",",
        "// Line_Reference 219:             options().cover ? \"rounded-none\" : \"border-x-2\"",
        "// Line_Reference 223:         </Card>"
    ]
}
