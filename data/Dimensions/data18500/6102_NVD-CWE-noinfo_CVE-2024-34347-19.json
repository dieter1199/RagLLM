{
    "cve_id": "CVE-2024-34347",
    "cve_description": "@hoppscotch/cli is a CLI to run Hoppscotch Test Scripts in CI environments. Prior to 0.8.0, the @hoppscotch/js-sandbox package provides a Javascript sandbox that uses the Node.js vm module. However, the vm module is not safe for sandboxing untrusted Javascript code. This is because code inside the vm context can break out if it can get a hold of any reference to an object created outside of the vm. In the case of @hoppscotch/js-sandbox, multiple references to external objects are passed into the vm context to allow pre-request scripts interactions with environment variables and more. But this also allows the pre-request script to escape the sandbox. This vulnerability is fixed in 0.8.0.",
    "cve_publish_date": "2024-05-08",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "chore: migrate `Node.js` implementation for `js-sandbox` to `isolated-vm` (#3973)\n\nCo-authored-by: Andrew Bastin <andrewbastin.k@gmail.com>",
    "type_of_change": "ModificationType.RENAME",
    "filename_of_changes": "shared-utils.ts",
    "code_language": "TypeScript",
    "number_of_lines_added_for_mitigation": "54",
    "number_of_lines_deleted_vulnerable_to_cve": "11",
    "vulnerable_lines": [
        "// Line_Reference 219:     let assertion = expectVal === expectedVal",
        "// Line_Reference 226:     const message = `Expected '${expectVal}' to${",
        "// Line_Reference 243:     const parsedExpectVal = parseInt(expectVal)",
        "// Line_Reference 263:       const message = `Expected ${level}-level status but could not parse value '${expectVal}'`",
        "// Line_Reference 291:       let assertion = typeof expectVal === expectedType",
        "// Line_Reference 298:       const message = `Expected '${expectVal}' to${",
        "// Line_Reference 319:     if (!(Array.isArray(expectVal) || typeof expectVal === \"string\")) {",
        "// Line_Reference 331:       let assertion = expectVal.length === expectedLength",
        "// Line_Reference 358:     if (!(Array.isArray(expectVal) || typeof expectVal === \"string\")) {",
        "// Line_Reference 385:     let assertion = expectVal.includes(needle)",
        "// Line_Reference 391:     const expectValPretty = JSON.stringify(expectVal)"
    ]
}
