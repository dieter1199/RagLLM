{
    "cve_id": "CVE-2021-29608",
    "cve_description": "TensorFlow is an end-to-end open source platform for machine learning. Due to lack of validation in `tf.raw_ops.RaggedTensorToTensor`, an attacker can exploit an undefined behavior if input arguments are empty. The implementation(https://github.com/tensorflow/tensorflow/blob/656e7673b14acd7835dc778867f84916c6d1cac2/tensorflow/core/kernels/ragged_tensor_to_tensor_op.cc#L356-L360) only checks that one of the tensors is not empty, but does not check for the other ones. There are multiple `DCHECK` validations to prevent heap OOB, but these are no-op in release builds, hence they don't prevent anything. The fix will be included in TensorFlow 2.5.0. We will also cherrypick these commits on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.",
    "cve_publish_date": "2021-05-14",
    "cwe_id": "CWE-131",
    "cwe_name": "Incorrect Calculation of Buffer Size",
    "cwe_description": "The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.",
    "commit_message": "Fix `tf.raw_ops.RaggedTensorToTensor` failing CHECK.\n\nPiperOrigin-RevId: 368706628\nChange-Id: I5c9ea4833f38835ee183ca50d63251dc89c9f3bc",
    "type_of_change": "Modification",
    "filename_of_changes": "ragged_tensor_to_tensor_op.cc",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "11",
    "number_of_lines_deleted_vulnerable_to_cve": "9",
    "vulnerable_lines": [
        "// Line_Reference 211:       const RowPartitionTensor& row_split,",
        "// Line_Reference 236:       DCHECK_EQ(result->size(), row_split(row_split_size - 1));",
        "// Line_Reference 262:       const RowPartitionTensor& value_rowids,",
        "// Line_Reference 296:     DCHECK_EQ(result->size(), value_rowids.size());",
        "// Line_Reference 310:             row_partition_tensor, parent_output_index, output_index_multiplier,",
        "// Line_Reference 311:             output_size, result);",
        "// Line_Reference 314:         CalculateOutputIndexRowSplit(row_partition_tensor, parent_output_index,",
        "// Line_Reference 315:                                      output_index_multiplier, output_size,",
        "// Line_Reference 316:                                      result);"
    ]
}
