{
    "cve_id": "CVE-2022-3873",
    "cve_description": "Cross-site Scripting (XSS) - DOM in GitHub repository jgraph/drawio prior to 20.5.2.",
    "cve_publish_date": "2022-11-07",
    "cwe_id": "CWE-79",
    "cwe_name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "cwe_description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
    "commit_message": "20.5.2 release",
    "type_of_change": "Modification",
    "filename_of_changes": "Minimal.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "79",
    "vulnerable_lines": [
        "// Line_Reference 360: ",
        "// Line_Reference 361:     // Adds context menu items",
        "// Line_Reference 362:     var menuCreatePopupMenu = Menus.prototype.createPopupMenu;",
        "// Line_Reference 363: ",
        "// Line_Reference 364:     Menus.prototype.createPopupMenu = function(menu, cell, evt)",
        "// Line_Reference 365:     {",
        "// Line_Reference 366:         var graph = this.editorUi.editor.graph;",
        "// Line_Reference 367:         menu.smartSeparators = true;",
        "// Line_Reference 368:         menuCreatePopupMenu.apply(this, arguments);",
        "// Line_Reference 369: ",
        "// Line_Reference 370: \t\tif (graph.getSelectionCount() == 1)",
        "// Line_Reference 371: \t\t{",
        "// Line_Reference 372: \t\t\tif (graph.isCellFoldable(graph.getSelectionCell()))",
        "// Line_Reference 373: \t\t\t{",
        "// Line_Reference 374: \t\t\t\tthis.addMenuItems(menu, (graph.isCellCollapsed(cell)) ? ['expand'] : ['collapse'], null, evt);",
        "// Line_Reference 375: \t\t\t}",
        "// Line_Reference 376: ",
        "// Line_Reference 377: \t\t\tthis.addMenuItems(menu, ['collapsible', '-', 'lockUnlock', 'enterGroup'], null, evt);",
        "// Line_Reference 378: \t\t\tmenu.addSeparator();",
        "// Line_Reference 379: \t\t\tthis.addSubmenu('layout', menu);",
        "// Line_Reference 380: \t\t}",
        "// Line_Reference 381: \t\telse if (graph.isSelectionEmpty() && graph.isEnabled())",
        "// Line_Reference 382: \t\t{",
        "// Line_Reference 383: \t\t\tmenu.addSeparator();",
        "// Line_Reference 384: \t\t\tthis.addMenuItems(menu, ['editData'], null, evt);",
        "// Line_Reference 385: \t\t\tmenu.addSeparator();",
        "// Line_Reference 386: \t\t\tthis.addSubmenu('layout', menu);",
        "// Line_Reference 387: \t\t\tthis.addSubmenu('insert', menu);",
        "// Line_Reference 388: \t\t\tthis.addMenuItems(menu, ['-', 'exitGroup'], null, evt);",
        "// Line_Reference 389: \t\t}",
        "// Line_Reference 390: \t\telse if (graph.isEnabled())",
        "// Line_Reference 391: \t\t{",
        "// Line_Reference 392: \t\t\tthis.addMenuItems(menu, ['-', 'lockUnlock'], null, evt);",
        "// Line_Reference 393: \t\t}",
        "// Line_Reference 394: \t};",
        "// Line_Reference 395: ",
        "// Line_Reference 396: \t// Adds copy as image after paste for empty selection",
        "// Line_Reference 397: \tvar menuAddPopupMenuEditItems = Menus.prototype.addPopupMenuEditItems;",
        "// Line_Reference 399: \t/**",
        "// Line_Reference 400: \t * Creates the keyboard event handler for the current graph and history.",
        "// Line_Reference 401: \t */",
        "// Line_Reference 402: \tMenus.prototype.addPopupMenuEditItems = function(menu, cell, evt)",
        "// Line_Reference 403: \t{",
        "// Line_Reference 404: \t\tmenuAddPopupMenuEditItems.apply(this, arguments);",
        "// Line_Reference 405: ",
        "// Line_Reference 406: \t\tif (this.editorUi.editor.graph.isSelectionEmpty())",
        "// Line_Reference 407: \t\t{",
        "// Line_Reference 408: \t\t\tthis.addMenuItems(menu, ['copyAsImage'], null, evt);",
        "// Line_Reference 409: \t\t}",
        "// Line_Reference 410: \t};",
        "// Line_Reference 411: ",
        "// Line_Reference 412: ",
        "// Line_Reference 522: \t\t// Adds submenu for edit items",
        "// Line_Reference 523: \t\tvar addPopupMenuCellEditItems = this.addPopupMenuCellEditItems;",
        "// Line_Reference 524: ",
        "// Line_Reference 525: \t\tthis.put('editCell', new Menu(mxUtils.bind(this, function(menu, parent)",
        "// Line_Reference 526: \t\t{",
        "// Line_Reference 527: \t\t\tvar graph = this.editorUi.editor.graph;",
        "// Line_Reference 528: \t\t\tvar cell = graph.getSelectionCell();",
        "// Line_Reference 529: \t\t\taddPopupMenuCellEditItems.call(this, menu, cell, null, parent);",
        "// Line_Reference 530: ",
        "// Line_Reference 531: \t\t\tthis.addMenuItems(menu, ['editTooltip'], parent);",
        "// Line_Reference 532: ",
        "// Line_Reference 533: \t\t\tif (graph.model.isVertex(cell))",
        "// Line_Reference 534: \t\t\t{",
        "// Line_Reference 535: \t\t\t\tthis.addMenuItems(menu, ['editGeometry'], parent);",
        "// Line_Reference 536: \t\t\t}",
        "// Line_Reference 537: ",
        "// Line_Reference 538: \t\t\tthis.addMenuItems(menu, ['-', 'edit'], parent);",
        "// Line_Reference 539: \t\t})));",
        "// Line_Reference 540: ",
        "// Line_Reference 541: \t\tthis.addPopupMenuCellEditItems = function(menu, cell, evt, parent)",
        "// Line_Reference 542: \t\t{",
        "// Line_Reference 543: \t\t\t// LATER: Pass-through for evt from context menu to submenu item",
        "// Line_Reference 544: \t\t\tmenu.addSeparator();",
        "// Line_Reference 545: \t\t\tthis.addSubmenu('editCell', menu, parent, mxResources.get('edit'));",
        "// Line_Reference 546: \t\t};",
        "// Line_Reference 547: ",
        "// Line_Reference 931: \t\tvar insertImage = Editor.plusImage;"
    ]
}
