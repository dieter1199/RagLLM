ui.actions.get('editDiagram').label = mxResources.get('formatXml') + '...';
ui.actions.get('createShape').label = mxResources.get('shape') + '...';
ui.actions.get('outline').label = mxResources.get('outline') + '...';
ui.actions.get('layers').label = mxResources.get('layers') + '...';
ui.actions.get('tags').label = mxResources.get('tags') + '...';
ui.actions.get('comments').label = mxResources.get('comments') + '...';
var toggleSketchModeAction = ui.actions.put('toggleSketchMode', new Action(mxResources.get('sketch'), function(e)
{
ui.setSketchMode(!Editor.sketchMode);
}));
toggleSketchModeAction.setToggleAction(true);
toggleSketchModeAction.setSelectedCallback(function() { return Editor.sketchMode; });
var action = ui.actions.put('toggleFormat', new Action(mxResources.get('format') + '...', function()
action.shortcut = ui.actions.get('formatPanel').shortcut;
ui.menus.addMenuItems(menu, ['save', 'rename',
'makeCopy', 'moveToFolder'], parent);
ui.menus.addMenuItems(menu, ['save', 'saveAs', '-', 'rename'], parent);
menu.addSeparator(parent);
if (file != null)
if (file.isRevisionHistorySupported())
{
ui.menus.addMenuItems(menu, ['revisionHistory'], parent);
}
if (file.constructor == DriveFile)
{
ui.menus.addMenuItems(menu, ['openFolder'], parent);
}
if (!mxClient.IS_CHROMEAPP && !EditorUi.isElectronApp &&
(file.constructor != LocalFile || file.fileHandle != null))
{
ui.menus.addMenuItems(menu, ['synchronize'], parent);
}
ui.menus.addMenuItems(menu, ['autosave'], parent);
menu.addSeparator(parent);
if (urlParams['sketch'] == '1' && ui.commentsSupported())
{
ui.menus.addMenuItems(menu, ['comments'], parent);
}
if ((urlParams['embed'] == '1' || urlParams['sketch'] != '1' ||
urlParams['noFileMenu'] == '1') && ui.commentsSupported())
ui.menus.addMenuItems(menu, ['-', 'comments'], parent);
ui.menus.addMenuItems(menu, ['-', 'findReplace',
'layers', 'tags', '-', 'pageSetup'], parent);
this.addMenuItems(menu, ['-', 'pageScale', '-', 'ruler'], parent);
this.formatWindow.window.setClosable(false);
this.div.style.width = '90px';
this.table.style.width = '90px';
this.div.style.left = parseInt(this.div.style.left) + 150 + 'px';
this.div.style.width = '240px';
this.table.style.width = '240px';
this.div.style.left = Math.max(0, parseInt(this.div.style.left) - 150) + 'px';
ui.menus.addMenuItems(menu, ['outline', '-', 'fullscreen', 'toggleDarkMode'], parent);
