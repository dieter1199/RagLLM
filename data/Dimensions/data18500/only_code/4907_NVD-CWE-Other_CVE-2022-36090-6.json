return getAuthService().checkAuth(context);
if (!hasAccess) {
// User is disabled: the mail address is marked as checked
} else if (user.isDisabled(context) && user.isEmailChecked(context)) {
String action = context.getAction();
/*
* Allow inactive users to see skins, ressources, SSX, JSX and downloads they could have seen as guest. The
* rational behind this behaviour is that inactive users should be able to access the same UI that guests
* are used to see, including custom icons, panels, and so on...
*/
if (!((action.equals("skin") && (doc.getSpace().equals("skins") || doc.getSpace().equals("resources")))
|| ((action.equals("skin") || action.equals("download") || action.equals("ssx") || action.equals("jsx"))
&& getRightService().hasAccessLevel("view", XWikiRightService.GUEST_USER_FULLNAME,
doc.getPrefixedFullName(), context))
|| ((action.equals("view") && doc.getFullName().equals("XWiki.AccountValidation"))))) {
Object[] args = { user.getUser() };
setPhonyDocument(reference, context, vcontext);
throw new XWikiException(XWikiException.MODULE_XWIKI_USER, XWikiException.ERROR_XWIKI_USER_DISABLED,
"User {0} account is disabled", null, args);
}
// User actually needs to activate his mail address.
} else if (user.isDisabled(context) && !user.isEmailChecked(context)) {
boolean allow = false;
String action = context.getAction();
/*
* Allow inactive users to see skins, ressources, SSX, JSX and downloads they could have seen as guest. The
* rational behind this behaviour is that inactive users should be able to access the same UI that guests
* are used to see, including custom icons, panels, and so on...
*/
if ((action.equals("skin") && (doc.getSpace().equals("skins") || doc.getSpace().equals("resources")))
|| ((action.equals("skin") || action.equals("download") || action.equals("ssx") || action.equals("jsx"))
&& getRightService().hasAccessLevel("view", XWikiRightService.GUEST_USER_FULLNAME,
doc.getPrefixedFullName(), context))
|| ((action.equals("view") && doc.getFullName().equals("XWiki.AccountValidation")))) {
allow = true;
} else {
String allowed = getConfiguration().getProperty("xwiki.inactiveuser.allowedpages", "");
if (context.getAction().equals("view") && !allowed.equals("")) {
String[] allowedList = StringUtils.split(allowed, " ,");
for (String element : allowedList) {
if (element.equals(doc.getFullName())) {
allow = true;
break;
}
}
}
}
if (!allow) {
Object[] args = { context.getUser() };
setPhonyDocument(reference, context, vcontext);
throw new XWikiException(XWikiException.MODULE_XWIKI_USER, XWikiException.ERROR_XWIKI_USER_INACTIVE,
"User {0} account is inactive", null, args);
}