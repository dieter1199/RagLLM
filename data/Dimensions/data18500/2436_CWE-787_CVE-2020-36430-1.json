{
    "cve_id": "CVE-2020-36430",
    "cve_description": "libass 0.15.x before 0.15.1 has a heap-based buffer overflow in decode_chars (called from decode_font and process_text) because the wrong integer data type is used for subtraction.",
    "cve_publish_date": "2021-07-20",
    "cwe_id": "CWE-787",
    "cwe_name": "Out-of-bounds Write",
    "cwe_description": "The product writes data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "decode_font: fix subtraction broken by change to unsigned type\n\nThis caused a one-byte buffer overwrite and an assertion failure.\n\nRegression in commit 910211f1c0078e37546f73e95306724358b89be2.\n\nDiscovered by OSS-Fuzz.\n\nFixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=26674.\nFixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=26678.",
    "type_of_change": "Modification",
    "filename_of_changes": "ass.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "2",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 860:     buf = malloc(size / 4 * 3 + FFMAX(size % 4 - 1, 0));",
        "// Line_Reference 874:     assert(dsize == size / 4 * 3 + FFMAX(size % 4 - 1, 0));"
    ]
}
