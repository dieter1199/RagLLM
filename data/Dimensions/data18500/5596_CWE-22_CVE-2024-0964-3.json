{
    "cve_id": "CVE-2024-0964",
    "cve_description": "A local file include could be remotely triggered in Gradio due to a vulnerable user-supplied JSON value in an API request.",
    "cve_publish_date": "2024-02-05",
    "cwe_id": "CWE-22",
    "cwe_name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
    "cwe_description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
    "commit_message": "Fix api event drops (#6556)\n\n* changes\r\n\r\n* changes\r\n\r\n* add changeset\r\n\r\n* changes\r\n\r\n* changes\r\n\r\n* changes\r\n\r\n* changs\r\n\r\n* chagnes\r\n\r\n* changes\r\n\r\n* changes\r\n\r\n* changes\r\n\r\n* changes\r\n\r\n* changes\r\n\r\n* changes\r\n\r\n* changes\r\n\r\n* changes\r\n\r\n* changes\r\n\r\n* changes~git push\r\n\r\n* changes\r\n\r\n* changes\r\n\r\n* changes\r\n\r\n* changes\r\n\r\n* changes\r\n\r\n* changes\r\n\r\n* changes\r\n\r\n* changes\r\n\r\n* changes\r\n\r\n* changes\r\n\r\n* changes\r\n\r\n* changes\r\n\r\n* change\r\n\r\n* changes\r\n\r\n* changes\r\n\r\n* changes\r\n\r\n* changes\r\n\r\n---------\r\n\r\nCo-authored-by: gradio-pr-bot <gradio-pr-bot@users.noreply.github.com>\r\nCo-authored-by: Ubuntu <ubuntu@ip-172-31-25-241.us-west-2.compute.internal>\r\nCo-authored-by: Abubakar Abid <abubakar@huggingface.co>",
    "type_of_change": "Modification",
    "filename_of_changes": "client.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "130",
    "number_of_lines_deleted_vulnerable_to_cve": "19",
    "vulnerable_lines": [
        "// Line_Reference 128:         self.sse_url = urllib.parse.urljoin(self.src, utils.SSE_URL)",
        "// Line_Reference 129:         self.sse_data_url = urllib.parse.urljoin(self.src, utils.SSE_DATA_URL)",
        "// Line_Reference 135:         if auth is not None:",
        "// Line_Reference 136:             self._login(auth)",
        "// Line_Reference 137:         self.config = self._get_config()",
        "// Line_Reference 142:         protocol = self.config.get(\"protocol\")",
        "// Line_Reference 143:         endpoint_class = Endpoint if protocol == \"sse\" else EndpointV3Compatibility",
        "// Line_Reference 145:             endpoint_class(self, fn_index, dependency)",
        "// Line_Reference 343:         if self.endpoints[inferred_fn_index].protocol in (\"ws\", \"sse\"):",
        "// Line_Reference 809:     def __init__(self, client: Client, fn_index: int, dependency: dict):",
        "// Line_Reference 817:         self.protocol = \"sse\"",
        "// Line_Reference 894:             result = utils.synchronize_async(self._sse_fn, data, hash_data, helper)",
        "// Line_Reference 1071:     async def _sse_fn(self, data: dict, hash_data: dict, helper: Communicator):",
        "// Line_Reference 1073:             return await utils.get_pred_from_sse(",
        "// Line_Reference 1078:                 sse_url=self.client.sse_url,",
        "// Line_Reference 1079:                 sse_data_url=self.client.sse_data_url,",
        "// Line_Reference 1080:                 headers=self.client.headers,",
        "// Line_Reference 1081:                 cookies=self.client.cookies,",
        "// Line_Reference 1088:     def __init__(self, client: Client, fn_index: int, dependency: dict):"
    ]
}
