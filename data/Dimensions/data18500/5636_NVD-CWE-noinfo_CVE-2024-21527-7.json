{
    "cve_id": "CVE-2024-21527",
    "cve_description": "Versions of the package github.com/gotenberg/gotenberg/v8/pkg/gotenberg before 8.1.0; versions of the package github.com/gotenberg/gotenberg/v8/pkg/modules/chromium before 8.1.0; versions of the package github.com/gotenberg/gotenberg/v8/pkg/modules/webhook before 8.1.0 are vulnerable to Server-side Request Forgery (SSRF) via the /convert/html endpoint when a request is made to a file via localhost, such as <iframe src=\"\\\\localhost/etc/passwd\">. By exploiting this vulnerability, an attacker can achieve local file inclusion, allowing of sensitive files read on the host system.\r\r Workaround\rAn alternative is using either or both --chromium-deny-list and --chromium-allow-list flags.",
    "cve_publish_date": "2024-07-19",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "fix(chromium): better default deny list regexp",
    "type_of_change": "Modification",
    "filename_of_changes": "middleware_test.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "55",
    "number_of_lines_deleted_vulnerable_to_cve": "30",
    "vulnerable_lines": [
        "// Line_Reference 14: \t\"regexp\"",
        "// Line_Reference 50: \t\t\tallowList:      regexp.MustCompile(\"\"),",
        "// Line_Reference 51: \t\t\tdenyList:       regexp.MustCompile(\"\"),",
        "// Line_Reference 52: \t\t\terrorAllowList: regexp.MustCompile(\"\"),",
        "// Line_Reference 53: \t\t\terrorDenyList:  regexp.MustCompile(\"\"),",
        "// Line_Reference 104: \t\t\t\tmod.allowList = regexp.MustCompile(\"bar\")",
        "// Line_Reference 121: \t\t\t\tmod.denyList = regexp.MustCompile(\"foo\")",
        "// Line_Reference 138: \t\t\t\tmod.errorAllowList = regexp.MustCompile(\"foo\")",
        "// Line_Reference 155: \t\t\t\tmod.errorDenyList = regexp.MustCompile(\"bar\")",
        "// Line_Reference 257: \t\t\tctx := &api.ContextMock{Context: &api.Context{}}",
        "// Line_Reference 258: \t\t\tctx.SetEchoContext(c)",
        "// Line_Reference 259: ",
        "// Line_Reference 260: \t\t\tc.Set(\"context\", ctx.Context)",
        "// Line_Reference 261: \t\t\tc.Set(\"cancel\", func() context.CancelFunc {",
        "// Line_Reference 262: \t\t\t\treturn func() {",
        "// Line_Reference 263: \t\t\t\t\treturn",
        "// Line_Reference 264: \t\t\t\t}",
        "// Line_Reference 265: \t\t\t}())",
        "// Line_Reference 323: \t\t\tallowList:      regexp.MustCompile(\"\"),",
        "// Line_Reference 324: \t\t\tdenyList:       regexp.MustCompile(\"\"),",
        "// Line_Reference 325: \t\t\terrorAllowList: regexp.MustCompile(\"\"),",
        "// Line_Reference 326: \t\t\terrorDenyList:  regexp.MustCompile(\"\"),",
        "// Line_Reference 429: \t\t\tctx := &api.ContextMock{Context: &api.Context{}}",
        "// Line_Reference 434: \t\t\tc.Set(\"cancel\", func() context.CancelFunc {",
        "// Line_Reference 435: \t\t\t\treturn func() {",
        "// Line_Reference 436: \t\t\t\t\treturn",
        "// Line_Reference 437: \t\t\t\t}",
        "// Line_Reference 438: \t\t\t}())",
        "// Line_Reference 443: ",
        "// Line_Reference 444: \t\t\trand.Seed(time.Now().UnixNano())"
    ]
}
