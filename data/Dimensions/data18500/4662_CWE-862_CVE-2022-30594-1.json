{
    "cve_id": "CVE-2022-30594",
    "cve_description": "The Linux kernel before 5.17.2 mishandles seccomp permissions. The PTRACE_SEIZE code path allows attackers to bypass intended restrictions on setting the PT_SUSPEND_SECCOMP flag.",
    "cve_publish_date": "2022-05-12",
    "cwe_id": "CWE-862",
    "cwe_name": "Missing Authorization",
    "cwe_description": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
    "commit_message": "ptrace: Check PTRACE_O_SUSPEND_SECCOMP permission on PTRACE_SEIZE\n\nSetting PTRACE_O_SUSPEND_SECCOMP is supposed to be a highly privileged\noperation because it allows the tracee to completely bypass all seccomp\nfilters on kernels with CONFIG_CHECKPOINT_RESTORE=y. It is only supposed to\nbe settable by a process with global CAP_SYS_ADMIN, and only if that\nprocess is not subject to any seccomp filters at all.\n\nHowever, while these permission checks were done on the PTRACE_SETOPTIONS\npath, they were missing on the PTRACE_SEIZE path, which also sets\nuser-specified ptrace flags.\n\nMove the permissions checks out into a helper function and let both\nptrace_attach() and ptrace_setoptions() call it.\n\nCc: stable@kernel.org\nFixes: 13c4a90119d2 (\"seccomp: add ptrace options for suspend/resume\")\nSigned-off-by: Jann Horn <jannh@google.com>\nLink: https://lkml.kernel.org/r/20220319010838.1386861-1-jannh@google.com\nSigned-off-by: Eric W. Biederman <ebiederm@xmission.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "ptrace.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "32",
    "number_of_lines_deleted_vulnerable_to_cve": "15",
    "vulnerable_lines": [
        "// Line_Reference 658: \tif (data & ~(unsigned long)PTRACE_O_MASK)",
        "// Line_Reference 659: \t\treturn -EINVAL;",
        "// Line_Reference 660: ",
        "// Line_Reference 661: \tif (unlikely(data & PTRACE_O_SUSPEND_SECCOMP)) {",
        "// Line_Reference 662: \t\tif (!IS_ENABLED(CONFIG_CHECKPOINT_RESTORE) ||",
        "// Line_Reference 663: \t\t    !IS_ENABLED(CONFIG_SECCOMP))",
        "// Line_Reference 664: \t\t\treturn -EINVAL;",
        "// Line_Reference 665: ",
        "// Line_Reference 666: \t\tif (!capable(CAP_SYS_ADMIN))",
        "// Line_Reference 667: \t\t\treturn -EPERM;",
        "// Line_Reference 668: ",
        "// Line_Reference 669: \t\tif (seccomp_mode(&current->seccomp) != SECCOMP_MODE_DISABLED ||",
        "// Line_Reference 670: \t\t    current->ptrace & PT_SUSPEND_SECCOMP)",
        "// Line_Reference 671: \t\t\treturn -EPERM;",
        "// Line_Reference 672: \t}"
    ]
}
