{
    "cve_id": "CVE-2023-5572",
    "cve_description": "Server-Side Request Forgery (SSRF) in GitHub repository vriteio/vrite prior to 0.3.0.",
    "cve_publish_date": "2023-10-13",
    "cwe_id": "CWE-918",
    "cwe_name": "Server-Side Request Forgery (SSRF)",
    "cwe_description": "The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
    "commit_message": "Vrite v0.3 (#45)\n\n- Replace wrapper with element;\r\n- Add XML-like syntax for elements;\r\n- Redesign editor block menus;\r\n- Add MDX extension;\r\n- Allow CORS API access;\r\n- Restructure @vrite/backend;",
    "type_of_change": "Modification",
    "filename_of_changes": "workspaces.ts",
    "code_language": "TypeScript",
    "number_of_lines_added_for_mitigation": "14",
    "number_of_lines_deleted_vulnerable_to_cve": "18",
    "vulnerable_lines": [
        "// Line_Reference 1: import { procedure, router } from \"../lib/trpc\";",
        "// Line_Reference 2: import { isAuthenticated, isAuthenticatedUser } from \"../lib/middleware\";",
        "// Line_Reference 3: import { zodId } from \"../lib\";",
        "// Line_Reference 5: import * as errors from \"#lib/errors\";",
        "// Line_Reference 6: import { Workspace, getWorkspacesCollection, workspace } from \"#database/workspaces\";",
        "// Line_Reference 7: import { createEventPublisher, createEventSubscription } from \"#lib/pub-sub\";",
        "// Line_Reference 8: import { createWorkspace, deleteWorkspace } from \"#lib/workspace\";",
        "// Line_Reference 9: import { getUsersCollection } from \"#database\";",
        "// Line_Reference 11: type WorkspaceEvent =",
        "// Line_Reference 12:   | { action: \"update\"; data: Partial<Workspace> & { id: string } }",
        "// Line_Reference 13:   | { action: \"delete\"; data: { id: string } };",
        "// Line_Reference 14: ",
        "// Line_Reference 15: const publishEvent = createEventPublisher<WorkspaceEvent>((workspaceId) => {",
        "// Line_Reference 16:   return `workspace:${workspaceId}`;",
        "// Line_Reference 17: });",
        "// Line_Reference 45:     return createEventSubscription<WorkspaceEvent>(ctx, `workspace:${ctx.auth.workspaceId}`);",
        "// Line_Reference 64:       publishEvent(ctx, `${ctx.auth.workspaceId}`, {",
        "// Line_Reference 97:       publishEvent(ctx, `${ctx.auth.workspaceId}`, {"
    ]
}
