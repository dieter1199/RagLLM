{
    "cve_id": "CVE-2022-37298",
    "cve_description": "Shinken Solutions Shinken Monitoring Version 2.4.3 affected is vulnerable to Incorrect Access Control. The SafeUnpickler class found in shinken/safepickle.py implements a weak authentication scheme when unserializing objects passed from monitoring nodes to the Shinken monitoring server.",
    "cve_publish_date": "2022-10-20",
    "cwe_id": "CWE-287",
    "cwe_name": "Improper Authentication",
    "cwe_description": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
    "commit_message": "Fix: Dailymotion team (Nicolas Perraud) found a way to bypass pickle.loads protection and execute code from daemon if you can exchange with it's internal port. Now we whitelist allowed class only :)\n\nBonus: update the changelog, Thanks & setup.py so we can release soon :)",
    "type_of_change": "Modification",
    "filename_of_changes": "safepickle.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "78",
    "number_of_lines_deleted_vulnerable_to_cve": "11",
    "vulnerable_lines": [
        "// Line_Reference 29: ",
        "// Line_Reference 30: # Unpickle but strip and remove all __reduce__ things",
        "// Line_Reference 31: # so we don't allow external code to be executed",
        "// Line_Reference 35:         'copy_reg': set(['_reconstructor']),",
        "// Line_Reference 36:         '__builtin__': set(['object', 'set']),",
        "// Line_Reference 38: ",
        "// Line_Reference 39: ",
        "// Line_Reference 42:         if module not in cls.PICKLE_SAFE and not module.startswith('shinken.'):",
        "// Line_Reference 46:         if not module.startswith('shinken.') and name not in cls.PICKLE_SAFE[module]:",
        "// Line_Reference 50: ",
        "// Line_Reference 51: "
    ]
}
