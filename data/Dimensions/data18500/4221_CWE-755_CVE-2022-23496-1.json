{
    "cve_id": "CVE-2022-23496",
    "cve_description": " Yet Another UserAgent Analyzer (Yauaa) is a java library that tries to parse and analyze the useragent string and extract as many relevant attributes as possible. Applications using the Client Hints analysis feature introduced with 7.0.0 can crash because the Yauaa library throws an ArrayIndexOutOfBoundsException. If uncaught the exception will result in a program crash. Applications that do not use this feature are not affected. Users are advised to upgrade to version 7.9.0. Users unable to upgrade may catch and discard any ArrayIndexOutOfBoundsException thrown by the Yauaa library.",
    "cve_publish_date": "2022-12-08",
    "cwe_id": "CWE-755",
    "cwe_name": "Improper Handling of Exceptional Conditions",
    "cwe_description": "The product does not handle or incorrectly handles an exceptional condition.",
    "commit_message": "feat: Better clienthint handling, ignore Kamo tags.",
    "type_of_change": "Modification",
    "filename_of_changes": "ClientHintsAnalyzer.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "140",
    "number_of_lines_deleted_vulnerable_to_cve": "134",
    "vulnerable_lines": [
        "// Line_Reference 300:     private static final Set<String> CHROMIUM = new HashSet<>();",
        "// Line_Reference 301:     static {",
        "// Line_Reference 302:         CHROMIUM.add(\"Chromium\");",
        "// Line_Reference 303:         CHROMIUM.add(\"Chrome\");",
        "// Line_Reference 308:         List<Brand> fullVersionList = clientHints.getFullVersionList();",
        "// Line_Reference 309:         if (fullVersionList != null && !fullVersionList.isEmpty()) {",
        "// Line_Reference 310:             String version;",
        "// Line_Reference 311:             String majorVersion;",
        "// Line_Reference 312: ",
        "// Line_Reference 313:             String agentName;",
        "// Line_Reference 314:             for (Brand brand : fullVersionList) {",
        "// Line_Reference 315:                 String[] versionSplits;",
        "// Line_Reference 316:                 switch (brand.getName()) {",
        "// Line_Reference 317:                     case \"Chromium\":",
        "// Line_Reference 318:                         version = brand.getVersion();",
        "// Line_Reference 319:                         versionSplits = version.split(\"\\\\.\");",
        "// Line_Reference 320:                         if (versionSplits.length == 4) {",
        "// Line_Reference 321:                             if (!\"0\".equals(versionSplits[1])) {",
        "// Line_Reference 322:                                 continue;",
        "// Line_Reference 323:                             }",
        "// Line_Reference 324:                         }",
        "// Line_Reference 325:                         version = versionSplits[0] + '.' + versionSplits[1];",
        "// Line_Reference 326:                         majorVersion = versionSplits[0];",
        "// Line_Reference 327:                         overrideValue(userAgent.get(LAYOUT_ENGINE_NAME), \"Blink\");",
        "// Line_Reference 328:                         overrideValue(userAgent.get(LAYOUT_ENGINE_VERSION), version);",
        "// Line_Reference 329:                         overrideValue(userAgent.get(LAYOUT_ENGINE_NAME_VERSION), \"Blink \" + version);",
        "// Line_Reference 330:                         overrideValue(userAgent.get(LAYOUT_ENGINE_VERSION_MAJOR), majorVersion);",
        "// Line_Reference 331:                         overrideValue(userAgent.get(LAYOUT_ENGINE_NAME_VERSION_MAJOR), \"Blink \"+ majorVersion);",
        "// Line_Reference 332: ",
        "// Line_Reference 333:                         if (fullVersionList.size() == 1) { // NOTE: The grease was filtered out !",
        "// Line_Reference 334:                             // So we have \"Chromium\" and not \"Chrome\" or \"Edge\" or something else",
        "// Line_Reference 335:                             if (CHROMIUM.contains(userAgent.getValue(AGENT_NAME))) {",
        "// Line_Reference 336:                                 agentName = \"Chromium\";",
        "// Line_Reference 337:                                 version = brand.getVersion();",
        "// Line_Reference 338:                                 overrideValue(userAgent.get(AGENT_NAME), agentName);",
        "// Line_Reference 339:                                 overrideValue(userAgent.get(AGENT_VERSION), version);",
        "// Line_Reference 340:                                 overrideValue(userAgent.get(AGENT_NAME_VERSION), agentName + \" \" + version);",
        "// Line_Reference 341:                                 overrideValue(userAgent.get(AGENT_VERSION_MAJOR), majorVersion);",
        "// Line_Reference 342:                                 overrideValue(userAgent.get(AGENT_NAME_VERSION_MAJOR), agentName + \" \" + majorVersion);",
        "// Line_Reference 343:                             }",
        "// Line_Reference 344:                         }",
        "// Line_Reference 345: ",
        "// Line_Reference 346:                         break;",
        "// Line_Reference 347: ",
        "// Line_Reference 348:                     case \"Google Chrome\":",
        "// Line_Reference 349:                     case \"Chrome\":",
        "// Line_Reference 350:                         agentName = \"Chrome\";",
        "// Line_Reference 351:                         version = brand.getVersion();",
        "// Line_Reference 352:                         versionSplits = version.split(\"\\\\.\");",
        "// Line_Reference 353:                         if (versionSplits.length == 4) {",
        "// Line_Reference 354:                             if (!\"0\".equals(versionSplits[1])) {",
        "// Line_Reference 355:                                 continue;",
        "// Line_Reference 356:                             }",
        "// Line_Reference 357:                         }",
        "// Line_Reference 358:                         majorVersion = versionSplits[0];",
        "// Line_Reference 359: ",
        "// Line_Reference 360:                         overrideValue(userAgent.get(AGENT_NAME), agentName);",
        "// Line_Reference 361:                         overrideValue(userAgent.get(AGENT_VERSION), version);",
        "// Line_Reference 362:                         overrideValue(userAgent.get(AGENT_NAME_VERSION), agentName + \" \" + version);",
        "// Line_Reference 363:                         overrideValue(userAgent.get(AGENT_VERSION_MAJOR), majorVersion);",
        "// Line_Reference 364:                         overrideValue(userAgent.get(AGENT_NAME_VERSION_MAJOR), agentName + \" \" + majorVersion);",
        "// Line_Reference 365:                         break;",
        "// Line_Reference 366: ",
        "// Line_Reference 367:                     case \"Microsoft Edge\":",
        "// Line_Reference 368:                     case \"Edge\":",
        "// Line_Reference 369:                         agentName = \"Edge\";",
        "// Line_Reference 370:                         version = brand.getVersion();",
        "// Line_Reference 371:                         versionSplits = version.split(\"\\\\.\");",
        "// Line_Reference 372:                         if (versionSplits.length == 4) {",
        "// Line_Reference 373:                             if (!\"0\".equals(versionSplits[1])) {",
        "// Line_Reference 374:                                 continue;",
        "// Line_Reference 375:                             }",
        "// Line_Reference 376:                         }",
        "// Line_Reference 377:                         majorVersion = versionSplits[0];",
        "// Line_Reference 378: ",
        "// Line_Reference 379:                         overrideValue(userAgent.get(AGENT_NAME), agentName);",
        "// Line_Reference 380:                         overrideValue(userAgent.get(AGENT_VERSION), version);",
        "// Line_Reference 381:                         overrideValue(userAgent.get(AGENT_NAME_VERSION), agentName + \" \" + version);",
        "// Line_Reference 382:                         overrideValue(userAgent.get(AGENT_VERSION_MAJOR), majorVersion);",
        "// Line_Reference 383:                         overrideValue(userAgent.get(AGENT_NAME_VERSION_MAJOR), agentName + \" \" + majorVersion);",
        "// Line_Reference 384:                         break;",
        "// Line_Reference 385:                     default:",
        "// Line_Reference 386:                         // Ignore",
        "// Line_Reference 387:                 }",
        "// Line_Reference 388:             }",
        "// Line_Reference 389:         } else {",
        "// Line_Reference 390:             // No full versions available, only the major versions",
        "// Line_Reference 391:             ArrayList<Brand> brands = clientHints.getBrands();",
        "// Line_Reference 392:             if (brands == null) {",
        "// Line_Reference 393:                 return;",
        "// Line_Reference 394:             }",
        "// Line_Reference 396:             if (brands.size() == 1) { // NOTE: The grease was filtered out !",
        "// Line_Reference 397:                 Brand brand = brands.get(0);",
        "// Line_Reference 398:                 if (\"Chromium\".equals(brand.getName())) {",
        "// Line_Reference 399:                     // So we have \"Chromium\" and not \"Chrome\", \"Edge\", \"Opera\" or something else",
        "// Line_Reference 400:                     String version = brand.getVersion();",
        "// Line_Reference 401:                     // NOTE: No full version available, only the major version",
        "// Line_Reference 402:                     // We trust the Client hints more than the version we derived from the User-Agent.",
        "// Line_Reference 404:                     overrideValue(userAgent.get(LAYOUT_ENGINE_NAME), \"Blink\");",
        "// Line_Reference 405:                     overrideValue(userAgent.get(LAYOUT_ENGINE_VERSION), version);",
        "// Line_Reference 406:                     overrideValue(userAgent.get(LAYOUT_ENGINE_NAME_VERSION), \"Blink \" + version);",
        "// Line_Reference 407:                     overrideValue(userAgent.get(LAYOUT_ENGINE_VERSION_MAJOR), version);",
        "// Line_Reference 408:                     overrideValue(userAgent.get(LAYOUT_ENGINE_NAME_VERSION_MAJOR), \"Blink \" + version);",
        "// Line_Reference 410:                     // So we have \"Chromium\" and not \"Chrome\" or \"Edge\" or something else",
        "// Line_Reference 411:                     if (CHROMIUM.contains(userAgent.getValue(AGENT_NAME))) {",
        "// Line_Reference 413:                         overrideValue(userAgent.get(AGENT_VERSION), version);",
        "// Line_Reference 414:                         overrideValue(userAgent.get(AGENT_NAME_VERSION), \"Chromium \" + version);",
        "// Line_Reference 415:                         overrideValue(userAgent.get(AGENT_VERSION_MAJOR), version);",
        "// Line_Reference 416:                         overrideValue(userAgent.get(AGENT_NAME_VERSION_MAJOR), \"Chromium \" + version);",
        "// Line_Reference 422:             for (Brand brand : brands) {",
        "// Line_Reference 423:                 String[] versionSplits;",
        "// Line_Reference 424:                 switch (brand.getName()) {",
        "// Line_Reference 425:                     case \"Microsoft Edge\":",
        "// Line_Reference 426:                     case \"Edge\":",
        "// Line_Reference 427:                         MutableAgentField agentName = userAgent.get(AGENT_NAME);",
        "// Line_Reference 428:                         if (agentName.getValue().equals(\"Edge\")) {",
        "// Line_Reference 429:                             continue;",
        "// Line_Reference 430:                         }",
        "// Line_Reference 431:                         String version = brand.getVersion();",
        "// Line_Reference 432:                         versionSplits = version.split(\"\\\\.\");",
        "// Line_Reference 433:                         if (versionSplits.length == 4) {",
        "// Line_Reference 434:                             if (!\"0\".equals(versionSplits[1])) {",
        "// Line_Reference 435:                                 continue;",
        "// Line_Reference 436:                             }",
        "// Line_Reference 437:                         }",
        "// Line_Reference 438:                         String majorVersion = versionSplits[0];",
        "// Line_Reference 439: ",
        "// Line_Reference 440:                         overrideValue(agentName, \"Edge\");",
        "// Line_Reference 441:                         overrideValue(userAgent.get(AGENT_VERSION), version);",
        "// Line_Reference 442:                         overrideValue(userAgent.get(AGENT_NAME_VERSION), \"Edge \" + version);",
        "// Line_Reference 443:                         overrideValue(userAgent.get(AGENT_VERSION_MAJOR), majorVersion);",
        "// Line_Reference 444:                         overrideValue(userAgent.get(AGENT_NAME_VERSION_MAJOR), \"Edge \" + majorVersion);",
        "// Line_Reference 445:                         break;",
        "// Line_Reference 446:                     default:"
    ]
}
