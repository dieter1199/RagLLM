{
    "cve_id": "CVE-2022-4860",
    "cve_description": "A vulnerability was found in KBase Metrics. It has been classified as critical. This affects the function upload_user_data of the file source/daily_cron_jobs/methods_upload_user_stats.py. The manipulation leads to sql injection. The patch is named 959dfb6b05991e30b0fa972a1ecdcaae8e1dae6d. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217059.",
    "cve_publish_date": "2022-12-30",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "fixed sql update to avoid sql injection",
    "type_of_change": "Modification",
    "filename_of_changes": "methods_upload_user_stats.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "4",
    "number_of_lines_deleted_vulnerable_to_cve": "26",
    "vulnerable_lines": [
        "// Line_Reference 613:     #print(\"dev_tokens_users: \" + str(dev_tokens_users))",
        "// Line_Reference 614: ",
        "// Line_Reference 615:     ####################",
        "// Line_Reference 616:     # TRIED DO UPDATE WITH PASSED LIST NONE OF THIS WORKED",
        "// Line_Reference 617:     # HAD To build up the entire string",
        "// Line_Reference 618:     #    update_new_dev_tokens_statement = (",
        "// Line_Reference 619:     #        \"update user_info set dev_token_first_seen = now() \"",
        "// Line_Reference 620:     #        \"where dev_token_first_seen is null and \"",
        "// Line_Reference 621:     #        \"username in (%s)\"",
        "// Line_Reference 622:     #        )",
        "// Line_Reference 623:     #    sql_params = \",\".join(dev_tokens_users)",
        "// Line_Reference 624:     #    sql_params = (dev_tokens_users,)",
        "// Line_Reference 625:     #    sql_params = ([str(dev_tokens_users)])",
        "// Line_Reference 626:     #    cursor.execute(update_new_dev_tokens_statement, [sql_params])",
        "// Line_Reference 627:     #    cursor.execute(\"update user_info set dev_token_first_seen = now() \"",
        "// Line_Reference 628:     #                   \"where dev_token_first_seen is null and \"",
        "// Line_Reference 629:     #                   \"username in (%s)\" % ', '.join('?' * len(dev_tokens_users)), dev_tokens_users)",
        "// Line_Reference 630:     #    update_new_dev_tokens_statement = (",
        "// Line_Reference 631:     #        \"update user_info set dev_token_first_seen = now() \"",
        "// Line_Reference 632:     #        \"where dev_token_first_seen is null and \"",
        "// Line_Reference 633:     #        \"username in (%s)\" % ', '.join('?' * len(dev_tokens_users)), dev_tokens_users",
        "// Line_Reference 634:     #        )",
        "// Line_Reference 635:     #    cursor.execute(\"SELECT foo.y FROM foo WHERE foo.x in (%s)\" % ', '.join('?' * len(s)), s)",
        "// Line_Reference 636:     dev_tokens_string = \"', '\".join(dev_tokens_users)",
        "// Line_Reference 640:         \"username in ('\" + dev_tokens_string + \"')\"",
        "// Line_Reference 642:     cursor.execute(update_new_dev_tokens_statement)"
    ]
}
