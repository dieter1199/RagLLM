{
    "cve_id": "CVE-2022-2166",
    "cve_description": "Improper Restriction of Excessive Authentication Attempts in GitHub repository mastodon/mastodon prior to 4.0.0.",
    "cve_publish_date": "2022-11-16",
    "cwe_id": "CWE-307",
    "cwe_name": "Improper Restriction of Excessive Authentication Attempts",
    "cwe_description": "The product does not implement sufficient measures to prevent multiple failed authentication attempts within a short time frame, making it more susceptible to brute force attacks.",
    "commit_message": "Fix rate limiting for paths with formats (#20675)",
    "type_of_change": "Modification",
    "filename_of_changes": "rack_attack.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "30",
    "number_of_lines_deleted_vulnerable_to_cve": "19",
    "vulnerable_lines": [
        "// Line_Reference 54:     req.remote_ip if req.api_request? && req.unauthenticated?",
        "// Line_Reference 58:     req.authenticated_user_id if req.post? && req.path.match?('^/api/v\\d+/media')",
        "// Line_Reference 62:     req.remote_ip if req.path.start_with?('/media_proxy')",
        "// Line_Reference 66:     req.remote_ip if req.post? && req.path == '/api/v1/accounts'",
        "// Line_Reference 74:     req.remote_ip if req.paging_request? && req.unauthenticated?",
        "// Line_Reference 77:   API_DELETE_REBLOG_REGEX = /\\A\\/api\\/v1\\/statuses\\/[\\d]+\\/unreblog/.freeze",
        "// Line_Reference 78:   API_DELETE_STATUS_REGEX = /\\A\\/api\\/v1\\/statuses\\/[\\d]+/.freeze",
        "// Line_Reference 85:     if req.post? && req.path == '/auth'",
        "// Line_Reference 86:       addr = req.remote_ip",
        "// Line_Reference 87:       addr = IPAddr.new(addr) if addr.is_a?(String)",
        "// Line_Reference 88:       addr = addr.mask(64) if addr.ipv6?",
        "// Line_Reference 89:       addr.to_s",
        "// Line_Reference 90:     end",
        "// Line_Reference 94:     req.remote_ip if req.post? && req.path == '/auth/password'",
        "// Line_Reference 98:     req.params.dig('user', 'email').presence if req.post? && req.path == '/auth/password'",
        "// Line_Reference 102:     req.remote_ip if req.post? && %w(/auth/confirmation /api/v1/emails/confirmations).include?(req.path)",
        "// Line_Reference 106:     if req.post? && req.path == '/auth/password'",
        "// Line_Reference 114:     req.remote_ip if req.post? && req.path == '/auth/sign_in'",
        "// Line_Reference 118:     req.session[:attempt_user_id] || req.params.dig('user', 'email').presence if req.post? && req.path == '/auth/sign_in'"
    ]
}
