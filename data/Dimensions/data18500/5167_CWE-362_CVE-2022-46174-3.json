{
    "cve_id": "CVE-2022-46174",
    "cve_description": "efs-utils is a set of Utilities for Amazon Elastic File System (EFS). A potential race condition issue exists within the Amazon EFS mount helper in efs-utils versions v1.34.3 and below. When using TLS to mount file systems, the mount helper allocates a local port for stunnel to receive NFS connections prior to applying the TLS tunnel. In affected versions, concurrent mount operations can allocate the same local port, leading to either failed mount operations or an inappropriate mapping from an EFS customer’s local mount points to that customer’s EFS file systems. This issue is patched in version v1.34.4. There is no recommended work around. We recommend affected users update the installed version of efs-utils to v1.34.4 or later.",
    "cve_publish_date": "2022-12-28",
    "cwe_id": "CWE-362",
    "cwe_name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
    "cwe_description": "The product contains a code sequence that can run concurrently with other code, and the code sequence requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence that is operating concurrently.",
    "commit_message": "Fix potential tlsport selection collision by using state file as\ntlsport lock file\n\nThis removes all potential concurrency issues during tls port selection\nand ensures that concurrent mounts will never select the same port.",
    "type_of_change": "Modification",
    "filename_of_changes": "test_choose_tls_port.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "46",
    "number_of_lines_deleted_vulnerable_to_cve": "13",
    "vulnerable_lines": [
        "// Line_Reference 6: ",
        "// Line_Reference 48: def test_choose_tls_port_first_try(mocker):",
        "// Line_Reference 54:     tls_port_sock = mount_efs.choose_tls_port_and_get_bind_sock(_get_config(), options)",
        "// Line_Reference 59: def test_choose_tls_port_second_try(mocker):",
        "// Line_Reference 67:     tls_port_sock = mount_efs.choose_tls_port_and_get_bind_sock(_get_config(), options)",
        "// Line_Reference 75: def test_choose_tls_port_never_succeeds(mocker, capsys):",
        "// Line_Reference 83:         mount_efs.choose_tls_port_and_get_bind_sock(_get_config(), options)",
        "// Line_Reference 96: def test_choose_tls_port_option_specified(mocker):",
        "// Line_Reference 102:     tls_port_sock = mount_efs.choose_tls_port_and_get_bind_sock(_get_config(), options)",
        "// Line_Reference 108: def test_choose_tls_port_option_specified_unavailable(mocker, capsys):",
        "// Line_Reference 116:         mount_efs.choose_tls_port_and_get_bind_sock(_get_config(), options)",
        "// Line_Reference 126: def test_choose_tls_port_under_netns(mocker, capsys):",
        "// Line_Reference 132:     mount_efs.choose_tls_port_and_get_bind_sock(_get_config(), options)"
    ]
}
