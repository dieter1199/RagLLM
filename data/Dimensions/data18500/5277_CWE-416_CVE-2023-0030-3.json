{
    "cve_id": "CVE-2023-0030",
    "cve_description": "A use-after-free flaw was found in the Linux kernelâ€™s nouveau driver in how a user triggers a memory overflow that causes the nvkm_vma_tail function to fail. This flaw allows a local user to crash or potentially escalate their privileges on the system.",
    "cve_publish_date": "2023-03-08",
    "cwe_id": "CWE-416",
    "cwe_name": "Use After Free",
    "cwe_description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
    "commit_message": "drm/nouveau/mmu: add more general vmm free/node handling functions\n\nAside from being a nice cleanup, these will to allow the upcoming direct\npage mapping interfaces to play nicely with normal mappings.\n\nSigned-off-by: Ben Skeggs <bskeggs@redhat.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "uvmm.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "4",
    "number_of_lines_deleted_vulnerable_to_cve": "17",
    "vulnerable_lines": [
        "// Line_Reference 137: \t\tif (vma->addr != addr) {",
        "// Line_Reference 138: \t\t\tconst u64 tail = vma->size + vma->addr - addr;",
        "// Line_Reference 139: \t\t\tif (ret = -ENOMEM, !(vma = nvkm_vma_tail(vma, tail)))",
        "// Line_Reference 140: \t\t\t\tgoto fail;",
        "// Line_Reference 141: \t\t\tvma->part = true;",
        "// Line_Reference 142: \t\t\tnvkm_vmm_node_insert(vmm, vma);",
        "// Line_Reference 143: \t\t}",
        "// Line_Reference 144: ",
        "// Line_Reference 145: \t\tif (vma->size != size) {",
        "// Line_Reference 146: \t\t\tconst u64 tail = vma->size - size;",
        "// Line_Reference 147: \t\t\tstruct nvkm_vma *tmp;",
        "// Line_Reference 148: \t\t\tif (ret = -ENOMEM, !(tmp = nvkm_vma_tail(vma, tail))) {",
        "// Line_Reference 149: \t\t\t\tnvkm_vmm_unmap_region(vmm, vma);",
        "// Line_Reference 150: \t\t\t\tgoto fail;",
        "// Line_Reference 151: \t\t\t}",
        "// Line_Reference 152: \t\t\ttmp->part = true;",
        "// Line_Reference 153: \t\t\tnvkm_vmm_node_insert(vmm, tmp);"
    ]
}
