{
    "cve_id": "CVE-2024-2032",
    "cve_description": "A race condition vulnerability exists in zenml-io/zenml versions up to and including 0.55.3, which allows for the creation of multiple users with the same username when requests are sent in parallel. This issue was fixed in version 0.55.5. The vulnerability arises due to insufficient handling of concurrent user creation requests, leading to data inconsistencies and potential authentication problems. Specifically, concurrent processes may overwrite or corrupt user data, complicating user identification and posing security risks. This issue is particularly concerning for APIs that rely on usernames as input parameters, such as PUT /api/v1/users/test_race, where it could lead to further complications.",
    "cve_publish_date": "2024-06-06",
    "cwe_id": "CWE-366",
    "cwe_name": "Race Condition within a Thread",
    "cwe_description": "If two threads of execution use a resource simultaneously, there exists the possibility that resources may be used while invalid, in turn making the state of execution undefined.",
    "commit_message": "Uniquely constrained users table (#2483)\n\n* use db constrains for users\r\n\r\n* lint a bit\r\n\r\n* coderabbitai\r\n\r\n* set rate limits for login api\r\n\r\n* Revert \"set rate limits for login api\"\r\n\r\nThis reverts commit 78ce40e738e73ce7d9398c73559f3d29a502c24f.\r\n\r\n* bring checks back\r\n\r\n* Auto-update of Starter template\r\n\r\n* Auto-update of NLP template\r\n\r\n* review suggestions\r\n\r\n* resolve branching\r\n\r\n* Auto-update of Starter template\r\n\r\n* Auto-update of NLP template\r\n\r\n* lint\r\n\r\n---------\r\n\r\nCo-authored-by: GitHub Actions <actions@github.com>",
    "type_of_change": "ModificationType.ADD",
    "filename_of_changes": "sql_zen_store.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "35",
    "number_of_lines_deleted_vulnerable_to_cve": "31",
    "vulnerable_lines": [
        "// Line_Reference 5155:             # Check if a service account with the given name already",
        "// Line_Reference 5156:             # exists",
        "// Line_Reference 5157:             service_accounts = session.execute(",
        "// Line_Reference 5158:                 select(UserSchema).where(",
        "// Line_Reference 5159:                     UserSchema.name == service_account.name,",
        "// Line_Reference 5160:                     UserSchema.is_service_account.is_(True),  # type: ignore[attr-defined]",
        "// Line_Reference 5161:                 )",
        "// Line_Reference 5162:             ).fetchall()",
        "// Line_Reference 5163:             if len(service_accounts) == 1:",
        "// Line_Reference 5164:                 session.commit()",
        "// Line_Reference 5165:             else:",
        "// Line_Reference 5166:                 raise EntityExistsError(",
        "// Line_Reference 5167:                     f\"Unable to create service account with name \"",
        "// Line_Reference 5168:                     f\"'{service_account.name}': Found existing service \"",
        "// Line_Reference 5169:                     \"account with this name.\"",
        "// Line_Reference 5170:                 )",
        "// Line_Reference 7363: ",
        "// Line_Reference 7364:             # Check if a user account with the given name already exists",
        "// Line_Reference 7365:             users = session.execute(",
        "// Line_Reference 7366:                 select(UserSchema).where(",
        "// Line_Reference 7367:                     UserSchema.name == user.name,",
        "// Line_Reference 7368:                     UserSchema.is_service_account.is_(False),  # type: ignore[attr-defined]",
        "// Line_Reference 7369:                 )",
        "// Line_Reference 7370:             ).fetchall()",
        "// Line_Reference 7371:             if len(users) == 1:",
        "// Line_Reference 7372:                 session.commit()",
        "// Line_Reference 7373:             else:",
        "// Line_Reference 7374:                 raise EntityExistsError(",
        "// Line_Reference 7375:                     f\"Unable to create user with name '{user.name}': \"",
        "// Line_Reference 7376:                     f\"Found an existing user account with this name.\"",
        "// Line_Reference 7377:                 )"
    ]
}
