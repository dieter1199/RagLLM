{
    "cve_id": "CVE-2017-18204",
    "cve_description": "The ocfs2_setattr function in fs/ocfs2/file.c in the Linux kernel before 4.14.2 allows local users to cause a denial of service (deadlock) via DIO requests.",
    "cve_publish_date": "2018-02-27",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "ocfs2: should wait dio before inode lock in ocfs2_setattr()\n\nwe should wait dio requests to finish before inode lock in\nocfs2_setattr(), otherwise the following deadlock will happen:\n\nprocess 1                  process 2                    process 3\ntruncate file 'A'          end_io of writing file 'A'   receiving the bast messages\nocfs2_setattr\n ocfs2_inode_lock_tracker\n  ocfs2_inode_lock_full\n inode_dio_wait\n  __inode_dio_wait\n  -->waiting for all dio\n  requests finish\n                                                        dlm_proxy_ast_handler\n                                                         dlm_do_local_bast\n                                                          ocfs2_blocking_ast\n                                                           ocfs2_generic_handle_bast\n                                                            set OCFS2_LOCK_BLOCKED flag\n                        dio_end_io\n                         dio_bio_end_aio\n                          dio_complete\n                           ocfs2_dio_end_io\n                            ocfs2_dio_end_io_write\n                             ocfs2_inode_lock\n                              __ocfs2_cluster_lock\n                               ocfs2_wait_for_mask\n                               -->waiting for OCFS2_LOCK_BLOCKED\n                               flag to be cleared, that is waiting\n                               for 'process 1' unlocking the inode lock\n                           inode_dio_end\n                           -->here dec the i_dio_count, but will never\n                           be called, so a deadlock happened.\n\nLink: http://lkml.kernel.org/r/59F81636.70508@huawei.com\nSigned-off-by: Alex Chen <alex.chen@huawei.com>\nReviewed-by: Jun Piao <piaojun@huawei.com>\nReviewed-by: Joseph Qi <jiangqi903@gmail.com>\nAcked-by: Changwei Ge <ge.changwei@h3c.com>\nCc: Mark Fasheh <mfasheh@versity.com>\nCc: Joel Becker <jlbec@evilplan.org>\nCc: Junxiao Bi <junxiao.bi@oracle.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "file.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "7",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 1203: \t\tinode_dio_wait(inode);",
        "// Line_Reference 1204: "
    ]
}
