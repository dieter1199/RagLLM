{
    "cve_id": "CVE-2024-29199",
    "cve_description": "Nautobot is a Network Source of Truth and Network Automation Platform. A number of Nautobot URL endpoints were found to be improperly accessible to unauthenticated (anonymous) users. These endpoints will not disclose any Nautobot data to an unauthenticated user unless the Nautobot configuration variable EXEMPT_VIEW_PERMISSIONS is changed from its default value (an empty list) to permit access to specific data by unauthenticated users. This vulnerability is fixed in 1.6.16 and 2.1.9.",
    "cve_publish_date": "2024-03-26",
    "cwe_id": "NVD-CWE-noinfo",
    "commit_message": "View authentication and permission fixes (#5464)",
    "type_of_change": "Modification",
    "filename_of_changes": "test_views.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "22",
    "number_of_lines_deleted_vulnerable_to_cve": "16",
    "vulnerable_lines": [
        "// Line_Reference 318:     @override_settings(BANNER_TOP=\"Hello, Banner Top\", BANNER_BOTTOM=\"Hello, Banner Bottom\")",
        "// Line_Reference 319:     def test_routes_redirect_back_to_login_unauthenticated(self):",
        "// Line_Reference 320:         \"\"\"Assert that api docs and graphql redirects to login page if user is unauthenticated.\"\"\"",
        "// Line_Reference 323:         urls = [reverse(\"api_docs\"), reverse(\"graphql\")]",
        "// Line_Reference 325:             response = self.client.get(url, follow=True, **headers)",
        "// Line_Reference 326:             self.assertHttpStatus(response, 200)",
        "// Line_Reference 327:             redirect_chain = [(f\"/login/?next={url}\", 302)]",
        "// Line_Reference 328:             self.assertEqual(response.redirect_chain, redirect_chain)",
        "// Line_Reference 329:             response_content = response.content.decode(response.charset).replace(\"\\n\", \"\")",
        "// Line_Reference 330:             # Assert Footer items(`self.footer_elements`), Banner and Banner Top is hidden",
        "// Line_Reference 331:             for footer_text in self.footer_elements:",
        "// Line_Reference 332:                 self.assertNotIn(footer_text, response_content)",
        "// Line_Reference 333:             # Only API Docs implements BANNERS",
        "// Line_Reference 334:             if url == urls[0]:",
        "// Line_Reference 335:                 self.assertNotIn(\"Hello, Banner Top\", response_content)",
        "// Line_Reference 336:                 self.assertNotIn(\"Hello, Banner Bottom\", response_content)"
    ]
}
