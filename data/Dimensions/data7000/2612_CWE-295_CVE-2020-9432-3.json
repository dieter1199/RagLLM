{
    "cve_id": "CVE-2020-9432",
    "cve_description": "openssl_x509_check_host in lua-openssl 0.7.7-1 mishandles X.509 certificate validation because it uses lua_pushboolean for certain non-boolean return values.",
    "cve_publish_date": "2020-02-27",
    "cwe_id": "CWE-295",
    "cwe_name": "Improper Certificate Validation",
    "cwe_description": "The product does not validate, or incorrectly validates, a certificate.",
    "commit_message": "fix security: GSL-2020-026",
    "type_of_change": "Modification",
    "filename_of_changes": "x509.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "88",
    "number_of_lines_deleted_vulnerable_to_cve": "32",
    "vulnerable_lines": [
        "// Line_Reference 764:   if (lua_isstring(L, 2))",
        "// Line_Reference 765:   {",
        "// Line_Reference 766:     const char *hostname = lua_tostring(L, 2);",
        "// Line_Reference 767:     lua_pushboolean(L, X509_check_host(cert, hostname, strlen(hostname), 0, NULL));",
        "// Line_Reference 768:   }",
        "// Line_Reference 769:   else",
        "// Line_Reference 770:   {",
        "// Line_Reference 771:     lua_pushboolean(L, 0);",
        "// Line_Reference 772:   }",
        "// Line_Reference 773:   return 1;",
        "// Line_Reference 784:   if (lua_isstring(L, 2))",
        "// Line_Reference 785:   {",
        "// Line_Reference 786:     const char *email = lua_tostring(L, 2);",
        "// Line_Reference 787:     lua_pushboolean(L, X509_check_email(cert, email, strlen(email), 0));",
        "// Line_Reference 788:   }",
        "// Line_Reference 789:   else",
        "// Line_Reference 790:   {",
        "// Line_Reference 791:     lua_pushboolean(L, 0);",
        "// Line_Reference 792:   }",
        "// Line_Reference 793:   return 1;",
        "// Line_Reference 802: static LUA_FUNCTION(openssl_x509_check_ip_asc)",
        "// Line_Reference 805:   if (lua_isstring(L, 2))",
        "// Line_Reference 806:   {",
        "// Line_Reference 807:     const char *ip_asc = lua_tostring(L, 2);",
        "// Line_Reference 808:     lua_pushboolean(L, X509_check_ip_asc(cert, ip_asc, 0));",
        "// Line_Reference 809:   }",
        "// Line_Reference 810:   else",
        "// Line_Reference 811:   {",
        "// Line_Reference 812:     lua_pushboolean(L, 0);",
        "// Line_Reference 813:   }",
        "// Line_Reference 814:   return 1;",
        "// Line_Reference 1363:   {\"check_ip_asc\", openssl_x509_check_ip_asc},"
    ]
}
