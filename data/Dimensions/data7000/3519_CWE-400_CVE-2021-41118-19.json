{
    "cve_id": "CVE-2021-41118",
    "cve_description": "The DynamicPageList3 extension is a reporting tool for MediaWiki, listing category members and intersections with various formats and details. In affected versions unsanitised input of regular expression date within the parameters of the DPL parser function, allowed for the possibility of ReDoS (Regex Denial of Service). This has been resolved in version 3.3.6. If you are unable to update you may also set `$wgDplSettings['functionalRichness'] = 0;` or disable DynamicPageList3 to mitigate.",
    "cve_publish_date": "2021-10-04",
    "cwe_id": "CWE-400",
    "cwe_name": "Uncontrolled Resource Consumption",
    "cwe_description": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
    "commit_message": "Major cleanup (#57)",
    "type_of_change": "Modification",
    "filename_of_changes": "UserFormatList.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "55",
    "number_of_lines_deleted_vulnerable_to_cve": "54",
    "vulnerable_lines": [
        "// Line_Reference 2: /**",
        "// Line_Reference 3:  * DynamicPageList3",
        "// Line_Reference 4:  * DPL UserFormatList Class",
        "// Line_Reference 5:  *",
        "// Line_Reference 6:  * @license\t\tGPL-2.0-or-later",
        "// Line_Reference 7:  * @package\t\tDynamicPageList3",
        "// Line_Reference 8:  *",
        "// Line_Reference 9:  */",
        "// Line_Reference 19: \t * @var constant",
        "// Line_Reference 31: \t * Main Constructor",
        "// Line_Reference 32: \t *",
        "// Line_Reference 33: \t * @access\tpublic",
        "// Line_Reference 34: \t * @param\tobject\t\\DPL\\Parameters",
        "// Line_Reference 35: \t * @param\tobject\tMediaWiki \\Parser",
        "// Line_Reference 36: \t * @return\tvoid",
        "// Line_Reference 38: \tpublic function __construct( \\DPL\\Parameters $parameters, \\Parser $parser ) {",
        "// Line_Reference 59: \t * @access\tpublic",
        "// Line_Reference 60: \t * @param\tarray\tList of \\DPL\\Article",
        "// Line_Reference 61: \t * @param\tinteger\tStart position of the array to process.",
        "// Line_Reference 62: \t * @param\tinteger\tTotal objects from the array to process.",
        "// Line_Reference 63: \t * @return\tstring\tFormatted list.",
        "// Line_Reference 89: \t\t$sortColumn\t= $this->getTableSortColumn();",
        "// Line_Reference 117: \t\t\t$this->sort($rowsKey, $sortColumn);",
        "// Line_Reference 131: \t * @access\tpublic",
        "// Line_Reference 132: \t * @param\tarray\tTable column data",
        "// Line_Reference 133: \t * @param\tint\t\tIndex of the column to sort",
        "// Line_Reference 134: \t * @return\tvoid",
        "// Line_Reference 136: \tprotected function sort(&$rowsKey, $sortColumn) {",
        "// Line_Reference 138: ",
        "// Line_Reference 139: \t\tif ($sortColumn < 0) {",
        "// Line_Reference 140: \t\t\tswitch ($sortMethod) {",
        "// Line_Reference 143:                     uasort($rowsKey, function($first, $second) {",
        "// Line_Reference 144:                     \treturn strnatcmp($second, $first);",
        "// Line_Reference 145: \t\t\t\t\t});",
        "// Line_Reference 149: \t\t\t\t\tarsort($rowsKey);",
        "// Line_Reference 153: \t\t\tswitch ($sortMethod) {",
        "// Line_Reference 155: \t\t\t\tnatsort($rowsKey);",
        "// Line_Reference 156: \t\t\t\tbreak;",
        "// Line_Reference 157: \t\t\tcase 'standard':",
        "// Line_Reference 158: \t\t\tdefault:",
        "// Line_Reference 159: \t\t\t\tasort($rowsKey);",
        "// Line_Reference 160: \t\t\t\tbreak;",
        "// Line_Reference 168: \t * @access\tpublic",
        "// Line_Reference 169: \t * @param\tobject\tDPL\\Article",
        "// Line_Reference 170: \t * @param\tstring\t[Optional] Page text to include.",
        "// Line_Reference 171: \t * @return\tstring\tItem HTML",
        "// Line_Reference 177: \t\t\t//Include parsed/processed wiki markup content after each item before the closing tag.",
        "// Line_Reference 191: \t * @access\tpublic",
        "// Line_Reference 192: \t * @return\tstring\tItem Start",
        "// Line_Reference 201: \t * @access\tpublic",
        "// Line_Reference 202: \t * @return\tstring\tItem End",
        "// Line_Reference 211: \t * @access\tpublic",
        "// Line_Reference 212: \t * @param\tarray\tItems as formatted by formatItem().",
        "// Line_Reference 213: \t * @return\tstring\tImploded items."
    ]
}
