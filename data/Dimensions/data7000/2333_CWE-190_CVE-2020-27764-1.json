{
    "cve_id": "CVE-2020-27764",
    "cve_description": "In /MagickCore/statistic.c, there are several areas in ApplyEvaluateOperator() where a size_t cast should have been a ssize_t cast, which causes out-of-range values under some circumstances when a crafted input file is processed by ImageMagick. Red Hat Product Security marked this as Low severity because although it could potentially lead to an impact to application availability, no specific impact was shown in this case. This flaw affects ImageMagick versions prior to 6.9.10-69.",
    "cve_publish_date": "2020-12-03",
    "cwe_id": "CWE-190",
    "cwe_name": "Integer Overflow or Wraparound",
    "cwe_description": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
    "commit_message": "https://github.com/ImageMagick/ImageMagick/issues/1735",
    "type_of_change": "Modification",
    "filename_of_changes": "statistic.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "5",
    "number_of_lines_deleted_vulnerable_to_cve": "5",
    "vulnerable_lines": [
        "// Line_Reference 262:       result=(MagickRealType) ((size_t) pixel & (size_t) (value+0.5));",
        "// Line_Reference 302:       result=(MagickRealType) ((size_t) pixel << (size_t) (value+0.5));",
        "// Line_Reference 345:       result=(MagickRealType) ((size_t) pixel | (size_t) (value+0.5));",
        "// Line_Reference 362:       result=(MagickRealType) ((size_t) pixel >> (size_t) (value+0.5));",
        "// Line_Reference 416:       result=(MagickRealType) ((size_t) pixel ^ (size_t) (value+0.5));"
    ]
}
