{
    "cve_id": "CVE-2020-8416",
    "cve_description": "IKTeam BearFTP before 0.2.0 allows remote attackers to achieve denial of service via a large volume of connections to the PASV mode port.",
    "cve_publish_date": "2020-01-29",
    "cwe_id": "CWE-770",
    "cwe_name": "Allocation of Resources Without Limits or Throttling",
    "cwe_description": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
    "commit_message": "CVE-2020-8416 DoS fix and antispam system improvement. Official v0.2.0",
    "type_of_change": "ModificationType.ADD",
    "filename_of_changes": "Program.cs",
    "code_language": "C#",
    "number_of_lines_added_for_mitigation": "168",
    "number_of_lines_deleted_vulnerable_to_cve": "31",
    "vulnerable_lines": [
        "// Line_Reference 45:         public static string _VERSION = \"v0.1.0 BETA\";",
        "// Line_Reference 328:                         int error = 10;",
        "// Line_Reference 329:                         string hostname = ((IPEndPoint)client.Client.RemoteEndPoint).Address.ToString();",
        "// Line_Reference 346:                         catch {",
        "// Line_Reference 350: ",
        "// Line_Reference 356:                             LogWrite(\"220 \"+config.Banner.Replace(\"%host%\", Hostname)+\"\\r\\n\", sw, hostname);",
        "// Line_Reference 357: ",
        "// Line_Reference 364: ",
        "// Line_Reference 382:                                 if (answ.Length > 3) //We dont want dummies to spam/DDoS.",
        "// Line_Reference 396:                                     var a = ReportAsync(hostname, \"[\"+DateTime.Now.ToString(\"MM/dd/yyyy HH:mm:ss\") + \"] \" + \"System scanning (Proxy judging) using CONNECT or GET requests\", false, false, true, true, false);",
        "// Line_Reference 398: ",
        "// Line_Reference 399: ",
        "// Line_Reference 401:                                 if (answ.Length > 64)",
        "// Line_Reference 552:                                            //Encoding.ASCII.GetChars(file);",
        "// Line_Reference 681:                                     error--;",
        "// Line_Reference 682:                                     if (error <= 0)",
        "// Line_Reference 684:                                         client.Close();",
        "// Line_Reference 703:                                     var a = ReportAsync(hostname, \"[\"+DateTime.Now.ToString(\"MM/dd/yyyy HH:mm:ss\") + \"] \" + \"RCE Attempt at 21 port using ProFTPd exploit\", true, false, false, false, false);",
        "// Line_Reference 705: ",
        "// Line_Reference 706: ",
        "// Line_Reference 745:                     string hostname = \"\";",
        "// Line_Reference 756:                                 if (cl.hostname == ((IPEndPoint)client.Client.RemoteEndPoint).Address.ToString() && cl.Connected)",
        "// Line_Reference 761:                             Connectivity ca = new Connectivity();",
        "// Line_Reference 762:                             ca.sr = sr;",
        "// Line_Reference 763:                             ca.sw = sw;",
        "// Line_Reference 764:                             ca.tcp = client;",
        "// Line_Reference 765:                             passives.Add(c, ca);",
        "// Line_Reference 766:                             while (client.Connected)",
        "// Line_Reference 768:                                 Thread.Sleep(3000);",
        "// Line_Reference 770:                             client.Close();",
        "// Line_Reference 771:                             passives.Remove(c);"
    ]
}
