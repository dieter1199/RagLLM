{
    "cve_id": "CVE-2021-31590",
    "cve_description": "PwnDoc all versions until 0.4.0 (2021-08-23) has incorrect JSON Webtoken handling, leading to incorrect access control. With a valid JSON Webtoken that is used for authentication and authorization, a user can keep his admin privileges even if he is downgraded to the \"user\" privilege. Even after a user's account is deleted, the user can still access the administration panel (and add or delete users) and has complete access to the system.",
    "cve_publish_date": "2021-07-19",
    "cwe_id": "NVD-CWE-Other",
    "cwe_name": "Other",
    "cwe_description": "NVD is only using a subset of CWE for mapping instead of the entire CWE, and the weakness type is not covered by that subset.",
    "commit_message": "Update Session management using refresh token\n\nAdded refresh token with lifetime of 7 days\nToken has now a lifetime of 15min\nRefresh token is updated on the frontend each time application is loaded or every 14min\nEach refresh token is associated with a sessionId allowing to have multiple sessions on different devices",
    "type_of_change": "Modification",
    "filename_of_changes": "user.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "9",
    "number_of_lines_deleted_vulnerable_to_cve": "10",
    "vulnerable_lines": [
        "// Line_Reference 101:             var token = jwt.sign(payload, auth.jwtSecret, {expiresIn: '24h'});",
        "// Line_Reference 142:             var username = decoded.username",
        "// Line_Reference 152:         var query = this.findOne({username: username})",
        "// Line_Reference 188:                     newRefreshToken = jwt.sign({sessionId: sessionId, username: username}, auth.jwtRefreshSecret, {expiresIn: '7 days'})",
        "// Line_Reference 192:                     newRefreshToken = jwt.sign({sessionId: sessionId, username: username, exp: expiration}, auth.jwtRefreshSecret)",
        "// Line_Reference 198:                 reject({fn: 'NotFound', message: 'User not found'})",
        "// Line_Reference 213: UserSchema.statics.removeSession = function (username, sessionId) {",
        "// Line_Reference 215:         var query = this.findOne({username: username})",
        "// Line_Reference 246:         var token = \"\"",
        "// Line_Reference 251:                 var refreshToken = jwt.sign({sessionId: null, username: row.username}, auth.jwtRefreshSecret)"
    ]
}
