{
    "cve_id": "CVE-2022-0155",
    "cve_description": "follow-redirects is vulnerable to Exposure of Private Personal Information to an Unauthorized Actor",
    "cve_publish_date": "2022-01-10",
    "cwe_id": "CWE-359",
    "cwe_name": "Exposure of Private Personal Information to an Unauthorized Actor",
    "cwe_description": "The product does not properly prevent a person's private, personal information from being accessed by actors who either (1) are not explicitly authorized to access the information or (2) do not have the implicit consent of the person about whom the information is collected.",
    "commit_message": "Drop Cookie header across domains.\n\nFixes https://github.com/follow-redirects/follow-redirects/issues/183",
    "type_of_change": "Modification",
    "filename_of_changes": "test.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "173",
    "number_of_lines_deleted_vulnerable_to_cve": "180",
    "vulnerable_lines": [
        "// Line_Reference 1322:   describe(\"when the client passes an Authorization header\", function () {",
        "// Line_Reference 1323:     it(\"ignores it when null\", function () {",
        "// Line_Reference 1324:       app.get(\"/a\", redirectsTo(302, \"http://localhost:3600/b\"));",
        "// Line_Reference 1325:       app.get(\"/b\", function (req, res) {",
        "// Line_Reference 1326:         res.end(JSON.stringify(req.headers));",
        "// Line_Reference 1327:       });",
        "// Line_Reference 1328: ",
        "// Line_Reference 1329:       var opts = url.parse(\"http://127.0.0.1:3600/a\");",
        "// Line_Reference 1330:       opts.headers = {",
        "// Line_Reference 1331:         host: \"localhost\",",
        "// Line_Reference 1332:         authorization: null,",
        "// Line_Reference 1333:       };",
        "// Line_Reference 1334: ",
        "// Line_Reference 1335:       return server.start(app)",
        "// Line_Reference 1336:         .then(asPromise(function (resolve, reject) {",
        "// Line_Reference 1337:           http.get(opts, resolve).on(\"error\", reject);",
        "// Line_Reference 1338:         }))",
        "// Line_Reference 1339:         .then(asPromise(function (resolve, reject, res) {",
        "// Line_Reference 1340:           res.pipe(concat({ encoding: \"string\" }, resolve)).on(\"error\", reject);",
        "// Line_Reference 1341:         }))",
        "// Line_Reference 1342:         .then(function (str) {",
        "// Line_Reference 1343:           var body = JSON.parse(str);",
        "// Line_Reference 1344:           assert.equal(body.host, \"localhost:3600\");",
        "// Line_Reference 1345:           assert.equal(body.authorization, undefined);",
        "// Line_Reference 1347:     });",
        "// Line_Reference 1349:     it(\"keeps the header when redirected to the same host\", function () {",
        "// Line_Reference 1350:       app.get(\"/a\", redirectsTo(302, \"/b\"));",
        "// Line_Reference 1351:       app.get(\"/b\", function (req, res) {",
        "// Line_Reference 1352:         res.end(JSON.stringify(req.headers));",
        "// Line_Reference 1353:       });",
        "// Line_Reference 1355:       var opts = url.parse(\"http://localhost:3600/a\");",
        "// Line_Reference 1356:       opts.headers = {",
        "// Line_Reference 1357:         authorization: \"bearer my-token-1234\",",
        "// Line_Reference 1358:       };",
        "// Line_Reference 1360:       return server.start(app)",
        "// Line_Reference 1361:         .then(asPromise(function (resolve, reject) {",
        "// Line_Reference 1362:           http.get(opts, resolve).on(\"error\", reject);",
        "// Line_Reference 1363:         }))",
        "// Line_Reference 1364:         .then(asPromise(function (resolve, reject, res) {",
        "// Line_Reference 1365:           res.pipe(concat({ encoding: \"string\" }, resolve)).on(\"error\", reject);",
        "// Line_Reference 1366:         }))",
        "// Line_Reference 1367:         .then(function (str) {",
        "// Line_Reference 1368:           var body = JSON.parse(str);",
        "// Line_Reference 1369:           assert.equal(body.host, \"localhost:3600\");",
        "// Line_Reference 1370:           assert.equal(body.authorization, \"bearer my-token-1234\");",
        "// Line_Reference 1372:     });",
        "// Line_Reference 1374:     it(\"keeps the header when redirected to the same host via header\", function () {",
        "// Line_Reference 1375:       app.get(\"/a\", redirectsTo(302, \"http://localhost:3600/b\"));",
        "// Line_Reference 1376:       app.get(\"/b\", function (req, res) {",
        "// Line_Reference 1377:         res.end(JSON.stringify(req.headers));",
        "// Line_Reference 1378:       });",
        "// Line_Reference 1380:       var opts = url.parse(\"http://127.0.0.1:3600/a\");",
        "// Line_Reference 1381:       opts.headers = {",
        "// Line_Reference 1382:         host: \"localhost:3600\",",
        "// Line_Reference 1383:         authorization: \"bearer my-token-1234\",",
        "// Line_Reference 1384:       };",
        "// Line_Reference 1386:       return server.start(app)",
        "// Line_Reference 1387:         .then(asPromise(function (resolve, reject) {",
        "// Line_Reference 1388:           http.get(opts, resolve).on(\"error\", reject);",
        "// Line_Reference 1389:         }))",
        "// Line_Reference 1390:         .then(asPromise(function (resolve, reject, res) {",
        "// Line_Reference 1391:           res.pipe(concat({ encoding: \"string\" }, resolve)).on(\"error\", reject);",
        "// Line_Reference 1392:         }))",
        "// Line_Reference 1393:         .then(function (str) {",
        "// Line_Reference 1394:           var body = JSON.parse(str);",
        "// Line_Reference 1395:           assert.equal(body.host, \"localhost:3600\");",
        "// Line_Reference 1396:           assert.equal(body.authorization, \"bearer my-token-1234\");",
        "// Line_Reference 1398:     });",
        "// Line_Reference 1400:     it(\"keeps the header when redirected to the same host via header\", function () {",
        "// Line_Reference 1401:       app.get(\"/a\", redirectsTo(302, \"http://localhost:3600/b\"));",
        "// Line_Reference 1402:       app.get(\"/b\", function (req, res) {",
        "// Line_Reference 1403:         res.end(JSON.stringify(req.headers));",
        "// Line_Reference 1404:       });",
        "// Line_Reference 1406:       var opts = url.parse(\"http://127.0.0.1:3600/a\");",
        "// Line_Reference 1407:       opts.headers = {",
        "// Line_Reference 1408:         host: \"localhost:3600\",",
        "// Line_Reference 1409:         authorization: \"bearer my-token-1234\",",
        "// Line_Reference 1410:       };",
        "// Line_Reference 1412:       return server.start(app)",
        "// Line_Reference 1413:         .then(asPromise(function (resolve, reject) {",
        "// Line_Reference 1414:           http.get(opts, resolve).on(\"error\", reject);",
        "// Line_Reference 1415:         }))",
        "// Line_Reference 1416:         .then(asPromise(function (resolve, reject, res) {",
        "// Line_Reference 1417:           res.pipe(concat({ encoding: \"string\" }, resolve)).on(\"error\", reject);",
        "// Line_Reference 1418:         }))",
        "// Line_Reference 1419:         .then(function (str) {",
        "// Line_Reference 1420:           var body = JSON.parse(str);",
        "// Line_Reference 1421:           assert.equal(body.host, \"localhost:3600\");",
        "// Line_Reference 1422:           assert.equal(body.authorization, \"bearer my-token-1234\");",
        "// Line_Reference 1424:     });",
        "// Line_Reference 1426:     it(\"keeps the header when redirected to a subdomain\", function () {",
        "// Line_Reference 1427:       app.get(\"/a\", redirectsTo(302, \"http://sub.localhost:3600/b\"));",
        "// Line_Reference 1428:       app.get(\"/b\", function (req, res) {",
        "// Line_Reference 1429:         res.end(JSON.stringify(req.headers));",
        "// Line_Reference 1430:       });",
        "// Line_Reference 1432:       var opts = url.parse(\"http://localhost:3600/a\");",
        "// Line_Reference 1433:       opts.headers = {",
        "// Line_Reference 1434:         authorization: \"bearer my-token-1234\",",
        "// Line_Reference 1435:       };",
        "// Line_Reference 1436:       // Intercept the hostname, as no DNS entry is defined for it",
        "// Line_Reference 1437:       opts.beforeRedirect = function (options) {",
        "// Line_Reference 1438:         assert.equal(options.hostname, \"sub.localhost\");",
        "// Line_Reference 1439:         options.hostname = \"localhost\";",
        "// Line_Reference 1440:       };",
        "// Line_Reference 1442:       return server.start(app)",
        "// Line_Reference 1443:         .then(asPromise(function (resolve, reject) {",
        "// Line_Reference 1444:           http.get(opts, resolve).on(\"error\", reject);",
        "// Line_Reference 1445:         }))",
        "// Line_Reference 1446:         .then(asPromise(function (resolve, reject, res) {",
        "// Line_Reference 1447:           res.pipe(concat({ encoding: \"string\" }, resolve)).on(\"error\", reject);",
        "// Line_Reference 1448:         }))",
        "// Line_Reference 1449:         .then(function (str) {",
        "// Line_Reference 1450:           var body = JSON.parse(str);",
        "// Line_Reference 1451:           assert.equal(body.host, \"localhost:3600\");",
        "// Line_Reference 1452:           assert.equal(body.authorization, \"bearer my-token-1234\");",
        "// Line_Reference 1454:     });",
        "// Line_Reference 1456:     it(\"drops the header when redirected to a different host (same hostname and different port)\", function () {",
        "// Line_Reference 1457:       app.get(\"/a\", redirectsTo(302, \"http://localhost:3600/b\"));",
        "// Line_Reference 1458:       app.get(\"/b\", function (req, res) {",
        "// Line_Reference 1459:         res.end(JSON.stringify(req.headers));",
        "// Line_Reference 1460:       });",
        "// Line_Reference 1462:       var opts = url.parse(\"http://127.0.0.1:3600/a\");",
        "// Line_Reference 1463:       opts.headers = {",
        "// Line_Reference 1464:         host: \"localhost\",",
        "// Line_Reference 1465:         authorization: \"bearer my-token-1234\",",
        "// Line_Reference 1466:       };",
        "// Line_Reference 1468:       return server.start(app)",
        "// Line_Reference 1469:         .then(asPromise(function (resolve, reject) {",
        "// Line_Reference 1470:           http.get(opts, resolve).on(\"error\", reject);",
        "// Line_Reference 1471:         }))",
        "// Line_Reference 1472:         .then(asPromise(function (resolve, reject, res) {",
        "// Line_Reference 1473:           res.pipe(concat({ encoding: \"string\" }, resolve)).on(\"error\", reject);",
        "// Line_Reference 1474:         }))",
        "// Line_Reference 1475:         .then(function (str) {",
        "// Line_Reference 1476:           var body = JSON.parse(str);",
        "// Line_Reference 1477:           assert.equal(body.host, \"localhost:3600\");",
        "// Line_Reference 1478:           assert.equal(body.authorization, undefined);",
        "// Line_Reference 1480:     });",
        "// Line_Reference 1482:     it(\"drops the header when redirected to a different host\", function () {",
        "// Line_Reference 1483:       app.get(\"/a\", redirectsTo(302, \"http://127.0.0.1:3600/b\"));",
        "// Line_Reference 1484:       app.get(\"/b\", function (req, res) {",
        "// Line_Reference 1485:         res.end(JSON.stringify(req.headers));",
        "// Line_Reference 1486:       });",
        "// Line_Reference 1488:       var opts = url.parse(\"http://localhost:3600/a\");",
        "// Line_Reference 1489:       opts.headers = {",
        "// Line_Reference 1490:         authorization: \"bearer my-token-1234\",",
        "// Line_Reference 1491:       };",
        "// Line_Reference 1493:       return server.start(app)",
        "// Line_Reference 1494:         .then(asPromise(function (resolve, reject) {",
        "// Line_Reference 1495:           http.get(opts, resolve).on(\"error\", reject);",
        "// Line_Reference 1496:         }))",
        "// Line_Reference 1497:         .then(asPromise(function (resolve, reject, res) {",
        "// Line_Reference 1498:           res.pipe(concat({ encoding: \"string\" }, resolve)).on(\"error\", reject);",
        "// Line_Reference 1499:         }))",
        "// Line_Reference 1500:         .then(function (str) {",
        "// Line_Reference 1501:           var body = JSON.parse(str);",
        "// Line_Reference 1502:           assert.equal(body.host, \"127.0.0.1:3600\");",
        "// Line_Reference 1503:           assert.equal(body.authorization, undefined);",
        "// Line_Reference 1505:     });",
        "// Line_Reference 1507:     it(\"drops the header when redirected from a different host via header\", function () {",
        "// Line_Reference 1508:       app.get(\"/a\", redirectsTo(302, \"http://127.0.0.1:3600/b\"));",
        "// Line_Reference 1509:       app.get(\"/b\", function (req, res) {",
        "// Line_Reference 1510:         res.end(JSON.stringify(req.headers));",
        "// Line_Reference 1511:       });",
        "// Line_Reference 1513:       var opts = url.parse(\"http://127.0.0.1:3600/a\");",
        "// Line_Reference 1514:       opts.headers = {",
        "// Line_Reference 1515:         host: \"localhost\",",
        "// Line_Reference 1516:         authorization: \"bearer my-token-1234\",",
        "// Line_Reference 1517:       };",
        "// Line_Reference 1519:       return server.start(app)",
        "// Line_Reference 1520:         .then(asPromise(function (resolve, reject) {",
        "// Line_Reference 1521:           http.get(opts, resolve).on(\"error\", reject);",
        "// Line_Reference 1522:         }))",
        "// Line_Reference 1523:         .then(asPromise(function (resolve, reject, res) {",
        "// Line_Reference 1524:           res.pipe(concat({ encoding: \"string\" }, resolve)).on(\"error\", reject);",
        "// Line_Reference 1525:         }))",
        "// Line_Reference 1526:         .then(function (str) {",
        "// Line_Reference 1527:           var body = JSON.parse(str);",
        "// Line_Reference 1528:           assert.equal(body.host, \"127.0.0.1:3600\");",
        "// Line_Reference 1529:           assert.equal(body.authorization, undefined);"
    ]
}
