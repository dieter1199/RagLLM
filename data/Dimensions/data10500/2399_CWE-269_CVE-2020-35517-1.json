{
    "cve_id": "CVE-2020-35517",
    "cve_description": "A flaw was found in qemu. A host privilege escalation issue was found in the virtio-fs shared file system daemon where a privileged guest user is able to create a device special file in the shared directory and use it to r/w access host devices.",
    "cve_publish_date": "2021-01-28",
    "cwe_id": "CWE-269",
    "cwe_name": "Improper Privilege Management",
    "cwe_description": "The product does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor.",
    "commit_message": "virtiofsd: avoid /proc/self/fd tempdir\n\nIn order to prevent /proc/self/fd escapes a temporary directory is\ncreated where /proc/self/fd is bind-mounted. This doesn't work on\nread-only file systems.\n\nAvoid the temporary directory by bind-mounting /proc/self/fd over /proc.\nThis does not affect other processes since we remounted / with MS_REC |\nMS_SLAVE. /proc must exist and virtiofsd does not use it so it's safe to\ndo this.\n\nPath traversal can be tested with the following function:\n\n  static void test_proc_fd_escape(struct lo_data *lo)\n  {\n      int fd;\n      int level = 0;\n      ino_t last_ino = 0;\n\n      fd = lo->proc_self_fd;\n      for (;;) {\n          struct stat st;\n\n          if (fstat(fd, &st) != 0) {\n              perror(\"fstat\");\n              return;\n          }\n          if (last_ino && st.st_ino == last_ino) {\n              fprintf(stderr, \"inode number unchanged, stopping\\n\");\n              return;\n          }\n          last_ino = st.st_ino;\n\n          fprintf(stderr, \"Level %d dev %lu ino %lu\\n\", level,\n                  (unsigned long)st.st_dev,\n                  (unsigned long)last_ino);\n          fd = openat(fd, \"..\", O_PATH | O_DIRECTORY | O_NOFOLLOW);\n          level++;\n      }\n  }\n\nBefore and after this patch only Level 0 is displayed. Without\n/proc/self/fd bind-mount protection it is possible to traverse parent\ndirectories.\n\nFixes: 397ae982f4df4 (\"virtiofsd: jail lo->proc_self_fd\")\nCc: Miklos Szeredi <mszeredi@redhat.com>\nCc: Jens Freimann <jfreimann@redhat.com>\nSigned-off-by: Stefan Hajnoczi <stefanha@redhat.com>\nMessage-Id: <20201006095826.59813-1-stefanha@redhat.com>\nReviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>\nTested-by: Jens Freimann <jfreimann@redhat.com>\nReviewed-by: Jens Freimann <jfreimann@redhat.com>\nSigned-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "passthrough_ll.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "11",
    "number_of_lines_deleted_vulnerable_to_cve": "23",
    "vulnerable_lines": [
        "// Line_Reference 2396:     char template[] = \"virtiofsd-XXXXXX\";",
        "// Line_Reference 2397:     char *tmpdir;",
        "// Line_Reference 2461:     tmpdir = mkdtemp(template);",
        "// Line_Reference 2462:     if (!tmpdir) {",
        "// Line_Reference 2463:         fuse_log(FUSE_LOG_ERR, \"tmpdir(%s): %m\\n\", template);",
        "// Line_Reference 2464:         exit(1);",
        "// Line_Reference 2465:     }",
        "// Line_Reference 2466: ",
        "// Line_Reference 2467:     if (mount(\"/proc/self/fd\", tmpdir, NULL, MS_BIND, NULL) < 0) {",
        "// Line_Reference 2468:         fuse_log(FUSE_LOG_ERR, \"mount(/proc/self/fd, %s, MS_BIND): %m\\n\",",
        "// Line_Reference 2469:                  tmpdir);",
        "// Line_Reference 2473:     /* Now we can get our /proc/self/fd directory file descriptor */",
        "// Line_Reference 2474:     lo->proc_self_fd = open(tmpdir, O_PATH);",
        "// Line_Reference 2476:         fuse_log(FUSE_LOG_ERR, \"open(%s, O_PATH): %m\\n\", tmpdir);",
        "// Line_Reference 2479: ",
        "// Line_Reference 2480:     if (umount2(tmpdir, MNT_DETACH) < 0) {",
        "// Line_Reference 2481:         fuse_log(FUSE_LOG_ERR, \"umount2(%s, MNT_DETACH): %m\\n\", tmpdir);",
        "// Line_Reference 2482:         exit(1);",
        "// Line_Reference 2483:     }",
        "// Line_Reference 2484: ",
        "// Line_Reference 2485:     if (rmdir(tmpdir) < 0) {",
        "// Line_Reference 2486:         fuse_log(FUSE_LOG_ERR, \"rmdir(%s): %m\\n\", tmpdir);",
        "// Line_Reference 2487:     }"
    ]
}
