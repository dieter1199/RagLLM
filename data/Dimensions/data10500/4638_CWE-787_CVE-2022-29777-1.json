{
    "cve_id": "CVE-2022-29777",
    "cve_description": "Onlyoffice Document Server v6.0.0 and below and Core 6.1.0.26 and below were discovered to contain a heap overflow via the component DesktopEditor/fontengine/fontconverter/FontFileBase.h.",
    "cve_publish_date": "2022-06-02",
    "cwe_id": "CWE-787",
    "cwe_name": "Out-of-bounds Write",
    "cwe_description": "The product writes data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "Fix 34, 35, 37",
    "type_of_change": "Modification",
    "filename_of_changes": "FontFileBase.h",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "27",
    "number_of_lines_deleted_vulnerable_to_cve": "26",
    "vulnerable_lines": [
        "// Line_Reference 64:             m_nLen = nLen;",
        "// Line_Reference 65:             m_bFreeFileData = bFreeFileData;",
        "// Line_Reference 97:         int          GetS8    (int nPos, bool *pbSuccess)",
        "// Line_Reference 101:             if ( nPos < 0 || nPos >= m_nLen )",
        "// Line_Reference 112:         int          GetU8    (int nPos, bool *pbSuccess)",
        "// Line_Reference 115:             if ( nPos < 0 || nPos >= m_nLen )",
        "// Line_Reference 123:         int          GetS16BE (int nPos, bool *pbSuccess)",
        "// Line_Reference 127:             if ( nPos < 0 || nPos + 1 >= m_nLen )",
        "// Line_Reference 139:         int          GetU16BE (int nPos, bool *pbSuccess)",
        "// Line_Reference 143:             if ( nPos < 0 || nPos + 1 >= m_nLen)",
        "// Line_Reference 153:         int          GetS32BE (int nPos, bool *pbSuccess)",
        "// Line_Reference 157:             if ( nPos < 0 || nPos + 3 >= m_nLen )",
        "// Line_Reference 172:         unsigned int GetU32BE (int nPos, bool *pbSuccess)",
        "// Line_Reference 176:             if ( nPos < 0 || nPos + 3 >= m_nLen )",
        "// Line_Reference 187:         unsigned int GetU32LE (int nPos, bool *pbSuccess)",
        "// Line_Reference 191:             if ( nPos < 0 || nPos + 3 >= m_nLen )",
        "// Line_Reference 202:         unsigned int GetUVarBE(int nPos, int nSize, bool *pbSuccess)",
        "// Line_Reference 206:             if ( nPos < 0 || nPos + nSize > m_nLen )",
        "// Line_Reference 218:         bool         CheckRegion(int nPos, int nSize)",
        "// Line_Reference 220:             return (nPos >= 0 && nPos + nSize >= nPos && nPos + nSize <= m_nLen);",
        "// Line_Reference 242:         int          Read(void* pDestBuffer, int nSize)",
        "// Line_Reference 244:             if ( m_nPos + nSize >= m_nLen )",
        "// Line_Reference 245:                 nSize = m_nLen - m_nPos - 1;",
        "// Line_Reference 257:         int            m_nLen;",
        "// Line_Reference 259:         int            m_nPos;",
        "// Line_Reference 260: "
    ]
}
