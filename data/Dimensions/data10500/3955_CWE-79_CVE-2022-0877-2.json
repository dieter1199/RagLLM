{
    "cve_id": "CVE-2022-0877",
    "cve_description": "Cross-site Scripting (XSS) - Stored in GitHub repository bookstackapp/bookstack prior to v22.02.3.",
    "cve_publish_date": "2022-03-08",
    "cwe_id": "CWE-79",
    "cwe_name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "cwe_description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
    "commit_message": "Updated CSP with frame-src rules\n\n- Configurable via 'ALLOWED_IFRAME_SOURCES' .env option.\n- Also updated how CSP rules are set, with a single header being used\n  instead of many.\n- Also applied CSP rules to HTML export outputs.\n- Updated tests to cover.\n\nFor #3314",
    "type_of_change": "Modification",
    "filename_of_changes": "CspService.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "77",
    "number_of_lines_deleted_vulnerable_to_cve": "25",
    "vulnerable_lines": [
        "// Line_Reference 6: use Symfony\\Component\\HttpFoundation\\Response;",
        "// Line_Reference 10:     /** @var string */",
        "// Line_Reference 11:     protected $nonce;",
        "// Line_Reference 27:      * Sets CSP 'script-src' headers to restrict the forms of script that can",
        "// Line_Reference 28:      * run on the page.",
        "// Line_Reference 30:     public function setScriptSrc(Response $response)",
        "// Line_Reference 33:             return;",
        "// Line_Reference 43:         $value = 'script-src ' . implode(' ', $parts);",
        "// Line_Reference 44:         $response->headers->set('Content-Security-Policy', $value, false);",
        "// Line_Reference 48:      * Sets CSP \"frame-ancestors\" headers to restrict the hosts that BookStack can be",
        "// Line_Reference 49:      * iframed within. Also adjusts the cookie samesite options so that cookies will",
        "// Line_Reference 50:      * operate in the third-party context.",
        "// Line_Reference 52:     public function setFrameAncestors(Response $response)",
        "// Line_Reference 56:         $cspValue = 'frame-ancestors ' . implode(' ', $iframeHosts);",
        "// Line_Reference 57:         $response->headers->set('Content-Security-Policy', $cspValue, false);",
        "// Line_Reference 61:      * Check if the user has configured some allowed iframe hosts.",
        "// Line_Reference 63:     public function allowedIFrameHostsConfigured(): bool",
        "// Line_Reference 65:         return count($this->getAllowedIframeHosts()) > 0;",
        "// Line_Reference 69:      * Sets CSP 'object-src' headers to restrict the types of dynamic content",
        "// Line_Reference 72:     public function setObjectSrc(Response $response)",
        "// Line_Reference 75:             return;",
        "// Line_Reference 78:         $response->headers->set('Content-Security-Policy', 'object-src \\'self\\'', false);",
        "// Line_Reference 82:      * Sets CSP 'base-uri' headers to restrict what base tags can be set on",
        "// Line_Reference 85:     public function setBaseUri(Response $response)",
        "// Line_Reference 87:         $response->headers->set('Content-Security-Policy', 'base-uri \\'self\\'', false);"
    ]
}
