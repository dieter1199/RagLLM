{
    "cve_id": "CVE-2021-23784",
    "cve_description": "This affects the package tempura before 0.4.0. If the input to the esc function is of type object (i.e an array) it is returned without being escaped/sanitized, leading to a potential Cross-Site Scripting vulnerability.",
    "cve_publish_date": "2021-11-03",
    "cwe_id": "CWE-79",
    "cwe_name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "cwe_description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
    "commit_message": "break: ensure `esc` always returns a string;\n\n- prevents a XSS attack within an array",
    "type_of_change": "Modification",
    "filename_of_changes": "$index.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "15",
    "number_of_lines_deleted_vulnerable_to_cve": "10",
    "vulnerable_lines": [
        "// Line_Reference 266: esc('should echo non-string inputs', () => {",
        "// Line_Reference 267: \t// @ts-ignore",
        "// Line_Reference 268: \tassert.is(tempura.esc(), undefined);",
        "// Line_Reference 269: \tassert.is(tempura.esc(null), null);",
        "// Line_Reference 270: \tassert.is(tempura.esc(false), false);",
        "// Line_Reference 271: \tassert.is(tempura.esc(123), 123);",
        "// Line_Reference 272: \tassert.is(tempura.esc(0), 0);",
        "// Line_Reference 273: ",
        "// Line_Reference 274: \tassert.equal(tempura.esc([1, 2, 3]), [1, 2, 3]);",
        "// Line_Reference 275: \tassert.equal(tempura.esc({ foo: 1 }), { foo: 1 });"
    ]
}
