{
    "cve_id": "CVE-2016-5843",
    "cve_description": "Multiple SQL injection vulnerabilities in the FAQ package 2.x before 2.3.6, 4.x before 4.0.5, and 5.x before 5.0.5 in Open Ticket Request System (OTRS) allow remote attackers to execute arbitrary SQL commands via crafted search parameters.",
    "cve_publish_date": "2016-09-17",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "Fixed issue with not correctly quoted search parameters.",
    "type_of_change": "Modification",
    "filename_of_changes": "FAQSearch.pm",
    "code_language": "Perl",
    "number_of_lines_added_for_mitigation": "57",
    "number_of_lines_deleted_vulnerable_to_cve": "16",
    "vulnerable_lines": [
        "// Line_Reference 300:     my $DBObject     = $Kernel::OM->Get('Kernel::System::DB');",
        "// Line_Reference 444:         my @States = map {$_} keys %{ $Param{States} };",
        "// Line_Reference 1021:     # check needed stuff",
        "// Line_Reference 1022:     for my $Key (qw(TableColumn IDRef)) {",
        "// Line_Reference 1023:         if ( !$Param{$Key} ) {",
        "// Line_Reference 1024:             $Kernel::OM->Get('Kernel::System::Log')->Log(",
        "// Line_Reference 1025:                 Priority => 'error',",
        "// Line_Reference 1026:                 Message  => \"Need $Key!\",",
        "// Line_Reference 1027:             );",
        "// Line_Reference 1029:             return;",
        "// Line_Reference 1030:         }",
        "// Line_Reference 1039:     # quote values",
        "// Line_Reference 1040:     for my $Value (@SortedIDs) {",
        "// Line_Reference 1041:         $DBObject->Quote( $Value, 'Integer' );",
        "// Line_Reference 1042:     }",
        "// Line_Reference 1052:         my $IDString = join ',', @SortedIDsPart;"
    ]
}
