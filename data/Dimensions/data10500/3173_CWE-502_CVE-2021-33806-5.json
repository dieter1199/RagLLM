{
    "cve_id": "CVE-2021-33806",
    "cve_description": "The BDew BdLib library before 1.16.1.7 for Minecraft allows remote code execution because it deserializes untrusted data in ObjectInputStream.readObject as part of its use of Java serialization.",
    "cve_publish_date": "2021-06-03",
    "cwe_id": "CWE-502",
    "cwe_name": "Deserialization of Untrusted Data",
    "cwe_description": "The product deserializes untrusted data without sufficiently verifying that the resulting data will be valid.",
    "commit_message": "reworked custom network code to not use java serialization",
    "type_of_change": "Modification",
    "filename_of_changes": "NetChannel.scala",
    "code_language": "Scala",
    "number_of_lines_added_for_mitigation": "11",
    "number_of_lines_deleted_vulnerable_to_cve": "16",
    "vulnerable_lines": [
        "// Line_Reference 3: import io.netty.buffer.{ByteBufInputStream, ByteBufOutputStream}",
        "// Line_Reference 13: import java.io.{ObjectInputStream, ObjectOutputStream}",
        "// Line_Reference 24:   private def encodeMsg[M <: Message](m: Message, p: PacketBuffer): Unit = {",
        "// Line_Reference 25:     val writer = new ObjectOutputStream(new ByteBufOutputStream(p))",
        "// Line_Reference 26:     writer.writeObject(m)",
        "// Line_Reference 27:   }",
        "// Line_Reference 28: ",
        "// Line_Reference 29:   private def decodeMsg[M <: Message](p: PacketBuffer): M = {",
        "// Line_Reference 30:     val reader = new ObjectInputStream(new ByteBufInputStream(p))",
        "// Line_Reference 31:     reader.readObject().asInstanceOf[M]",
        "// Line_Reference 38:   def regServerHandler[M <: Message](id: Int, cls: Class[M])(handler: (M, NetworkEvent.Context) => Unit): Unit = {",
        "// Line_Reference 39:     channel.registerMessage[M](id, cls, (m, p) => encodeMsg[M](m, p), m => decodeMsg(m),",
        "// Line_Reference 43:   def regServerContainerHandler[M <: Message, C <: Container](id: Int, cls: Class[M], cont: Class[C])(handler: (M, C, NetworkEvent.Context) => Unit): Unit = {",
        "// Line_Reference 44:     regServerHandler(id, cls) { (msg, ctx) =>",
        "// Line_Reference 49:   def regClientHandler[M <: Message](id: Int, cls: Class[M])(handler: M => Unit): Unit = {",
        "// Line_Reference 50:     channel.registerMessage[M](id, cls, (m, p) => encodeMsg[M](m, p), m => decodeMsg(m),"
    ]
}
