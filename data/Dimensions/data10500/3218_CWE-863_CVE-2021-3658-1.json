{
    "cve_id": "CVE-2021-3658",
    "cve_description": "bluetoothd from bluez incorrectly saves adapters' Discoverable status when a device is powered down, and restores it when powered up. If a device is powered down while discoverable, it will be discoverable when powered on again. This could lead to inadvertent exposure of the bluetooth stack to physically nearby attackers.",
    "cve_publish_date": "2022-03-02",
    "cwe_id": "CWE-863",
    "cwe_name": "Incorrect Authorization",
    "cwe_description": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check. This allows attackers to bypass intended access restrictions.",
    "commit_message": "adapter: Fix storing discoverable setting\n\ndiscoverable setting shall only be store when changed via Discoverable\nproperty and not when discovery client set it as that be considered\ntemporary just for the lifetime of the discovery.",
    "type_of_change": "Modification",
    "filename_of_changes": "adapter.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "22",
    "number_of_lines_deleted_vulnerable_to_cve": "13",
    "vulnerable_lines": [
        "// Line_Reference 563: \t\tstore_adapter_info(adapter);",
        "// Line_Reference 2165: \tGSList *l;",
        "// Line_Reference 2166: ",
        "// Line_Reference 2176: \tfor (l = adapter->discovery_list; l; l = g_slist_next(l)) {",
        "// Line_Reference 2177: \t\tstruct discovery_client *client = l->data;",
        "// Line_Reference 2179: \t\tif (!client->discovery_filter)",
        "// Line_Reference 2180: \t\t\tcontinue;",
        "// Line_Reference 2182: \t\tif (client->discovery_filter->discoverable)",
        "// Line_Reference 2183: \t\t\tbreak;",
        "// Line_Reference 2184: \t}",
        "// Line_Reference 2186: \tset_discovery_discoverable(adapter, l ? true : false);",
        "// Line_Reference 2219: \tif (adapter->discovery_discoverable)",
        "// Line_Reference 2220: \t\tset_discovery_discoverable(adapter, false);"
    ]
}
