{
    "cve_id": "CVE-2022-22984",
    "cve_description": "The package snyk before 1.1064.0; the package snyk-mvn-plugin before 2.31.3; the package snyk-gradle-plugin before 3.24.5; the package @snyk/snyk-cocoapods-plugin before 2.5.3; the package snyk-sbt-plugin before 2.16.2; the package snyk-python-plugin before 1.24.2; the package snyk-docker-plugin before 5.6.5; the package @snyk/snyk-hex-plugin before 1.1.6 are vulnerable to Command Injection due to an incomplete fix for [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK-3037342). A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags. In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline. This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated. The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",
    "cve_publish_date": "2022-11-30",
    "cwe_id": "CWE-78",
    "cwe_name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
    "cwe_description": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
    "commit_message": "fix: escape child process arguments",
    "type_of_change": "Modification",
    "filename_of_changes": "index.ts",
    "code_language": "TypeScript",
    "number_of_lines_added_for_mitigation": "12",
    "number_of_lines_deleted_vulnerable_to_cve": "27",
    "vulnerable_lines": [
        "// Line_Reference 40: const isWin = /^win/.test(os.platform());",
        "// Line_Reference 41: const quot = isWin ? '\"' : \"'\";",
        "// Line_Reference 42: ",
        "// Line_Reference 674: export function formatArgWithWhiteSpace(arg: string): string {",
        "// Line_Reference 675:   if (/\\s/.test(arg)) {",
        "// Line_Reference 676:     return quot + arg + quot;",
        "// Line_Reference 677:   }",
        "// Line_Reference 678:   return arg;",
        "// Line_Reference 679: }",
        "// Line_Reference 680: ",
        "// Line_Reference 695:     if (!fs.existsSync(path.resolve(root, targetFile))) {",
        "// Line_Reference 696:       throw new Error('File not found: \"' + targetFile + '\"');",
        "// Line_Reference 700:     const formattedTargetFile = formatArgWithWhiteSpace(targetFile);",
        "// Line_Reference 701:     args.push(formattedTargetFile);",
        "// Line_Reference 706:     args.push(",
        "// Line_Reference 707:       `-Pconfiguration=${quot}${options['configuration-matching']}${quot}`,",
        "// Line_Reference 708:     );",
        "// Line_Reference 711:     args.push(",
        "// Line_Reference 712:       `-PconfAttr=${quot}${options['configuration-attributes']}${quot}`,",
        "// Line_Reference 713:     );",
        "// Line_Reference 717:     const formattedInitScript = formatArgWithWhiteSpace(",
        "// Line_Reference 718:       path.resolve(options.initScript),",
        "// Line_Reference 719:     );",
        "// Line_Reference 741:   args.push('-I ' + initGradlePath);",
        "// Line_Reference 754:       `-Pconfiguration=${quot}^$1$$${quot}`,",
        "// Line_Reference 758:       args[i] = `-Pconfiguration=${quot}^${args[i + 1]}$${quot}`;",
        "// Line_Reference 763:   return args;"
    ]
}
