{
    "cve_id": "CVE-2019-1010263",
    "cve_description": "Perl Crypt::JWT prior to 0.023 is affected by: Incorrect Access Control. The impact is: allow attackers to bypass authentication by providing a token by crafting with hmac(). The component is: JWT.pm, line 614. The attack vector is: network connectivity. The fixed version is: after commit b98a59b42ded9f9e51b2560410106207c2152d6c.",
    "cve_publish_date": "2019-07-17",
    "cwe_id": "CWE-347",
    "cwe_name": "Improper Verification of Cryptographic Signature",
    "cwe_description": "The product does not verify, or incorrectly verifies, the cryptographic signature for data.",
    "commit_message": "fix JWS signature validation (proper jwk header + kid_keys handling)",
    "type_of_change": "Modification",
    "filename_of_changes": "JWT.pm",
    "code_language": "Perl",
    "number_of_lines_added_for_mitigation": "68",
    "number_of_lines_deleted_vulnerable_to_cve": "28",
    "vulnerable_lines": [
        "// Line_Reference 79:   $kid_keys = eval { decode_json($kid_keys) } unless ref $kid_keys;",
        "// Line_Reference 80:   return undef unless ref $kid_keys eq 'HASH';",
        "// Line_Reference 433:   #REMOVED: $header->{typ} = 'JWT' if !exists $header->{typ} && $args{auto_typ};",
        "// Line_Reference 467:   my $key = defined $args{keypass} ? [$args{key}, $args{keypass}] : $args{key};",
        "// Line_Reference 468:   if ($header->{kid} && $args{kid_keys}) {",
        "// Line_Reference 470:     $key = $k if defined $k;",
        "// Line_Reference 491:   croak \"JWE: missing 'key'\" if !$key;",
        "// Line_Reference 576:   #REMOVED: $header->{typ} = 'JWT' if !exists $header->{typ} && $args{auto_typ};",
        "// Line_Reference 595:     my $aa = $args{accepted_alg};",
        "// Line_Reference 596:     if (ref($aa) eq 'Regexp') {",
        "// Line_Reference 597:       croak \"JWS: alg '$header->{alg}' does not match accepted_alg\" if $header->{alg} !~ $aa;",
        "// Line_Reference 598:     }",
        "// Line_Reference 599:     elsif ($aa && (ref($aa) eq 'ARRAY' || !ref($aa))) {",
        "// Line_Reference 600:       my %acca = ref $aa ? map { $_ => 1 } @$aa : ( $aa => 1 );",
        "// Line_Reference 601:       croak \"JWS: alg '$header->{alg}' not in accepted_alg\" if !$acca{$header->{alg}};",
        "// Line_Reference 602:     }",
        "// Line_Reference 606:     # key",
        "// Line_Reference 607:     my $key = defined $args{keypass} ? [$args{key}, $args{keypass}] : $args{key};",
        "// Line_Reference 608:     my $kid = exists $header->{kid} ? $header->{kid} : $unprotected_header->{kid};",
        "// Line_Reference 609:     if (!defined $key && defined $kid && $args{kid_keys}) {",
        "// Line_Reference 610:       my $k = _kid_lookup($kid, $args{kid_keys}, $alg);",
        "// Line_Reference 611:       $key = $k if defined $k;",
        "// Line_Reference 613:     # if no key given, try to use 'jwk' value from header",
        "// Line_Reference 614:     $key = $header->{jwk} if !$key && $header->{jwk};",
        "// Line_Reference 615:     croak \"JWS: missing 'key'\" if !$key && $alg ne 'none';",
        "// Line_Reference 616:     my $valid = _verify_jws($b64u_header, $b64u_payload, $b64u_sig, $alg, $key);",
        "// Line_Reference 617:     croak \"JWS: decode failed\" if !$valid;",
        "// Line_Reference 952: When the token header contains 'kid' item the corresponding key is looked up in C<kid_keys> list and used for token"
    ]
}
