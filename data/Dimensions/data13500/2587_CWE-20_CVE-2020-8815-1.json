{
    "cve_id": "CVE-2020-8815",
    "cve_description": "Improper connection handling in the base connection handler in IKTeam BearFTP before v0.3.1 allows a remote attacker to achieve denial of service via a Slowloris approach by sending a large volume of small packets.",
    "cve_publish_date": "2020-02-12",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "Anonymous configuration fix, base thread vulnerability fix. v0.3.1",
    "type_of_change": "Modification",
    "filename_of_changes": "Program.cs",
    "code_language": "C#",
    "number_of_lines_added_for_mitigation": "10",
    "number_of_lines_deleted_vulnerable_to_cve": "34",
    "vulnerable_lines": [
        "// Line_Reference 498:                                 //Receiving handler START",
        "// Line_Reference 499:                                 string answ = \"\";",
        "// Line_Reference 500:                                 bool flag = true;",
        "// Line_Reference 501:                                 bool upper = true;",
        "// Line_Reference 502: ",
        "// Line_Reference 503:                                 while (flag)",
        "// Line_Reference 504:                                 {",
        "// Line_Reference 505:                                     int a = sr.Read();",
        "// Line_Reference 506:                                     if (upper)",
        "// Line_Reference 507:                                     {",
        "// Line_Reference 508:                                         answ += char.ToUpper((char)a);",
        "// Line_Reference 509:                                     } else",
        "// Line_Reference 510:                                     {",
        "// Line_Reference 511:                                         answ += (char)a;",
        "// Line_Reference 512:                                     }",
        "// Line_Reference 513:                                     if (a == 13)",
        "// Line_Reference 514:                                     {",
        "// Line_Reference 515:                                         flag = false;",
        "// Line_Reference 516:                                     }",
        "// Line_Reference 517:                                     if (a == 0x20)",
        "// Line_Reference 518:                                     {",
        "// Line_Reference 519:                                         upper = false;",
        "// Line_Reference 520:                                     }",
        "// Line_Reference 521:                                     if (answ.Length > 128)",
        "// Line_Reference 522:                                     {",
        "// Line_Reference 523:                                         client.Close();",
        "// Line_Reference 524:                                     }",
        "// Line_Reference 525:                                 }",
        "// Line_Reference 526:                                 answ = answ.Trim();",
        "// Line_Reference 527:                                 //Receiving handler END",
        "// Line_Reference 561:                                     if (r.IsMatch(temp) && temp.Length < 32 && temp.Length > 1 && (temp != \"anonymous\" && !AllowAnonymous))",
        "// Line_Reference 647:                                             var bytes = default(byte[]);",
        "// Line_Reference 654:                                                 bytes = memstream.ToArray();",
        "// Line_Reference 656:                                             System.IO.File.WriteAllBytes(\"dumps/dump_i\" + rnd.Next(1, 2000000000).ToString() + \".txt\", bytes);"
    ]
}
