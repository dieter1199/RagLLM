{
    "cve_id": "CVE-2017-15274",
    "cve_description": "security/keys/keyctl.c in the Linux kernel before 4.11.5 does not consider the case of a NULL payload in conjunction with a nonzero length value, which allows local users to cause a denial of service (NULL pointer dereference and OOPS) via a crafted add_key or keyctl system call, a different vulnerability than CVE-2017-12192.",
    "cve_publish_date": "2017-10-12",
    "cwe_id": "CWE-476",
    "cwe_name": "NULL Pointer Dereference",
    "cwe_description": "The product dereferences a pointer that it expects to be valid but is NULL.",
    "commit_message": "KEYS: fix dereferencing NULL payload with nonzero length\n\nsys_add_key() and the KEYCTL_UPDATE operation of sys_keyctl() allowed a\nNULL payload with nonzero length to be passed to the key type's\n->preparse(), ->instantiate(), and/or ->update() methods.  Various key\ntypes including asymmetric, cifs.idmap, cifs.spnego, and pkcs7_test did\nnot handle this case, allowing an unprivileged user to trivially cause a\nNULL pointer dereference (kernel oops) if one of these key types was\npresent.  Fix it by doing the copy_from_user() when 'plen' is nonzero\nrather than when '_payload' is non-NULL, causing the syscall to fail\nwith EFAULT as expected when an invalid buffer is specified.\n\nCc: stable@vger.kernel.org # 2.6.10+\nSigned-off-by: Eric Biggers <ebiggers@google.com>\nSigned-off-by: David Howells <dhowells@redhat.com>\nSigned-off-by: James Morris <james.l.morris@oracle.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "keyctl.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "2",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 102: \tif (_payload) {",
        "// Line_Reference 327: \tif (_payload) {"
    ]
}
