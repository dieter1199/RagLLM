{
    "cve_id": "CVE-2017-14954",
    "cve_description": "The waitid implementation in kernel/exit.c in the Linux kernel through 4.13.4 accesses rusage data structures in unintended cases, which allows local users to obtain sensitive information, and bypass the KASLR protection mechanism, via a crafted system call.",
    "cve_publish_date": "2017-10-02",
    "cwe_id": "CWE-200",
    "cwe_name": "Exposure of Sensitive Information to an Unauthorized Actor",
    "cwe_description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
    "commit_message": "fix infoleak in waitid(2)\n\nkernel_waitid() can return a PID, an error or 0.  rusage is filled in the first\ncase and waitid(2) rusage should've been copied out exactly in that case, *not*\nwhenever kernel_waitid() has not returned an error.  Compat variant shares that\nbraino; none of kernel_wait4() callers do, so the below ought to fix it.\n\nReported-and-tested-by: Alexander Potapenko <glider@google.com>\nFixes: ce72a16fa705 (\"wait4(2)/waitid(2): separate copying rusage to userland\")\nCc: stable@vger.kernel.org # v4.13\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
    "type_of_change": "Modification",
    "filename_of_changes": "exit.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "10",
    "number_of_lines_deleted_vulnerable_to_cve": "13",
    "vulnerable_lines": [
        "// Line_Reference 1606: \t}",
        "// Line_Reference 1607: ",
        "// Line_Reference 1608: \tif (!err) {",
        "// Line_Reference 1726: \t}",
        "// Line_Reference 1727: ",
        "// Line_Reference 1728: \tif (!err && uru) {",
        "// Line_Reference 1729: \t\t/* kernel_waitid() overwrites everything in ru */",
        "// Line_Reference 1730: \t\tif (COMPAT_USE_64BIT_TIME)",
        "// Line_Reference 1731: \t\t\terr = copy_to_user(uru, &ru, sizeof(ru));",
        "// Line_Reference 1732: \t\telse",
        "// Line_Reference 1733: \t\t\terr = put_compat_rusage(&ru, uru);",
        "// Line_Reference 1734: \t\tif (err)",
        "// Line_Reference 1735: \t\t\treturn -EFAULT;"
    ]
}
