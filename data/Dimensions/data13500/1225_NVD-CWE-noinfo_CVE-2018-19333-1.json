{
    "cve_id": "CVE-2018-19333",
    "cve_description": "pkg/sentry/kernel/shm/shm.go in Google gVisor before 2018-11-01 allows attackers to overwrite memory locations in processes running as root (but not escape the sandbox) via vectors involving IPC_RMID shmctl calls, because reference counting is mishandled.",
    "cve_publish_date": "2018-11-17",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Prevent premature destruction of shm segments.\n\nShm segments can be marked for lazy destruction via shmctl(IPC_RMID),\nwhich destroys a segment once it is no longer attached to any\nprocesses. We were unconditionally decrementing the segment refcount\non shmctl(IPC_RMID) which allowed a user to force a segment to be\ndestroyed by repeatedly calling shmctl(IPC_RMID), with outstanding\nmemory maps to the segment.\n\nThis is problematic because the memory released by a segment destroyed\nthis way can be reused by a different process while remaining\naccessible by the process with outstanding maps to the segment.\n\nPiperOrigin-RevId: 219713660\nChange-Id: I443ab838322b4fb418ed87b2722c3413ead21845",
    "type_of_change": "Modification",
    "filename_of_changes": "shm.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "11",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 580: \ts.pendingDestruction = true",
        "// Line_Reference 581: \ts.DecRef()"
    ]
}
