{
global $DatabaseServer, $DatabaseUsername, $DatabasePassword, $DatabaseName, $DatabasePort, $DatabaseType;
switch ($DatabaseType) {
$connection = new mysqli($DatabaseServer, $DatabaseUsername, $DatabasePassword, $DatabaseName, $DatabasePort);
break;
if ($connection === false) {
switch ($DatabaseType) {
break;
db_show_error("", "" . _couldNotConnectToDatabase . ": $DatabaseServer", $errormessage);
{
global $DatabaseType, $_openSIS;
switch ($DatabaseType) {
$sql = par_rep("/([,\(=])[\r\n\t ]*''/", '\\1NULL', $sql);
if (preg_match_all("/'(\d\d-[A-Za-z]{3}-\d{2,4})'/", $sql, $matches)) {
foreach ($matches[1] as $match) {
$dt = date('Y-m-d', strtotime($match));
$sql = par_rep("/'$match'/", "'$dt'", $sql);
}
if (substr($sql, 0, 6) == "BEGIN;") {
$array = explode(";", $sql);
foreach ($array as $value) {
if ($value != "") {
$result = $connection->query($value);
if (!$result) {
$connection->query("ROLLBACK");
die(db_show_error($sql, _dbExecuteFailed, mysql_error()));
} else {
$result = $connection->query($sql) or die(db_show_error($sql, _dbExecuteFailed, mysql_error()));
break;
{
global $DatabaseType;
switch ($DatabaseType) {
if (is_array($return)) {
foreach ($return as $key => $value) {
if (is_int($key))
break;
return @array_change_key_case($return, CASE_UPPER);
{
global $DatabaseType;
if ($DatabaseType == 'mysqli')
$seq = "fn_" . strtolower($seqname) . "()";
{
global $DatabaseType;
$counter = 0;
if ($DatabaseType == 'mysqli') {
$array_count = count($array);
for ($i = 1; $i < $arr_count; $i++) {
if ($value == "''" && substr($string, -1) == '=') {
$string = substr($string, 0, -1);
$string .= "$value";
if ($counter == ($array_count - 2) && $array_count % 2 == 0)
$string .= " ELSE ";
elseif ($counter == ($array_count - 1))
$string .= " END ";
elseif ($counter % 2 == 0)
$string .= " WHEN $array[0]=";
elseif ($counter % 2 == 1)
$string .= " THEN ";
{
global $DatabaseType, $DatabaseUsername;
switch ($DatabaseType) {
while ($row = db_fetch_row($result)) {
$properties[strtoupper($row['FIELD'])]['TYPE'] = strtoupper($row['TYPE'], strpos($row['TYPE'], '('));
if (!$pos = strpos($row['TYPE'], ','))
$pos = strpos($row['TYPE'], ')');
$properties[strtoupper($row['FIELD'])]['SCALE'] = substr($row['TYPE'], $pos + 1);
$properties[strtoupper($row['FIELD'])]['SIZE'] = substr($row['TYPE'], strpos($row['TYPE'], '(') + 1, $pos);
if ($row['NULL'] != '')
break;
function db_show_error($sql, $failnote, $additional = '')
{
global $openSISTitle, $openSISVersion, $openSISNotifyAddress, $openSISMode;
echo "
<TD><pre>" . date("m/d/Y h:i:s") . "</pre></TD>
echo "
<TD><pre>" . date("m/d/Y h:i:s") . "</pre></TD>
if ($openSISNotifyAddress) {
$message .= "Date: " . date("m/d/Y h:i:s") . "\n";
$message .= "Page: " . $_SERVER['PHP_SELF'] . ' ' . ProgramTitle() . " \n\n";
$message .= "Request Array: \n" . ShowVar($_REQUEST, 'Y', 'N');
$message .= "\n\nSession Array: \n" . ShowVar($_SESSION, 'Y', 'N');
mail($openSISNotifyAddress, 'openSIS Database Error', $message);
$res_pass_chk = DBGet(DBQuery("SELECT * FROM login_authentication WHERE PASSWORD = '" . md5($_GET['password']) . "' AND USERNAME!='" . $_GET['usrid'] . "' AND PROFILE_ID!='" . $_GET['prof_id'] . "'"));
if ($res_pass_chk[1]['USER_ID'] != '') {
echo '1';
} else {
echo '0';
}
