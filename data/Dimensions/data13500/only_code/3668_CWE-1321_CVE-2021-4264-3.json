* Copyright (c) 2015 Aleksander Williams; Released under the MIT License */
* Decide somewhat-naively if something is a Thenable.
return elem &&
typeof elem === 'object' &&
if (context instanceof Context) {
if (typeof ctx === 'function') {
if (typeof elem === 'function') {
if (typeof elem === 'function' && !dust.isTemplateFn(elem)) {
partialContext.templateName = name;
partialContext.templateName = elem;
return this.map(function(chunk) {
thenable.then(function(data) {
if (bodies) {
chunk = chunk.section(data, context, bodies);
} else {
// Actually a reference. Self-closing sections don't render
chunk = chunk.reference(data, context, auto, filters);
}
chunk.end();
}, function(err) {
var errorBody = bodies && bodies.error;
if(errorBody) {
chunk.render(errorBody, context.push(err)).end();
} else {
dust.log('Unhandled promise rejection in `' + context.getTemplateName() + '`', INFO);
chunk.end();
}
});
var body = bodies && bodies.block,
errorBody = bodies && bodies.error;
if(errorBody) {
chunk.render(errorBody, context.push(err));
} else {
dust.log('Unhandled stream error in `' + context.getTemplateName() + '`', INFO);
}
require([name], function() {
cb();