Function Get-MaskedOutput
{
$reg = [System.Text.RegularExpressions.RegEx]::new("--masterkey|--password|--license",
[System.Text.RegularExpressions.RegexOptions]::IgnoreCase)
if(($arguments -match "--masterkey|--password|--license"))
{
for($x=0;$x -lt $arguments.count; $x++)
{
if(($arguments[$x] -match "--masterkey|--password|--license|--trust|--remove-trust|--apikey|--password|--pw|--pfx-password|--proxyPassword"))
{
$arguments[$x+1] = $arguments[$x+1] -replace ".", "*"
}
$out = $arguments
}
elseif(($arguments -match "password|pwd"))
{
$out = $arguments -replace "(password|pwd)=[^;|`"]*", "`$1=********"
}
else
{
$out = @("************************")
return $out
# todo: fix this up
if ((($cmdArgs -match "masterkey|password|license|pwd=").Count -eq 0)) {
Write-Verbose "Executing command '$octopusServerExePath $($cmdArgs -join ' ')'"
} else {
$copiedarguments = @() # hack to pass a copy of the array, not a reference
$copiedarguments += $cmdArgs
$maskedarguments = Get-MaskedOutput $copiedarguments
Write-Verbose "Executing command '$octopusServerExePath $($maskedarguments -join ' ')'"
}
# todo: fix this up
if ((($cmdArgs -match "masterkey|password|license|pwd=").Count -eq 0)) {
Write-Verbose "Executing command '$tentacleExePath $($cmdArgs -join ' ')'"
} else {
$copiedarguments = @() # hack to pass a copy of the array, not a reference
$copiedarguments += $cmdArgs
$maskedarguments = Get-MaskedOutput $copiedarguments
Write-Verbose "Executing command '$tentacleExePath $($maskedarguments -join ' ')'"
}