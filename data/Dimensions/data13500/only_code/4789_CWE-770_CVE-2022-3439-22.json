# rdiffweb, A web interface to rdiff-backup repositories
# Copyright (C) 2012-2021 rdiffweb contributors
def get_and_increment(self, token, delay):
tracker = tracker._replace(hits=tracker.hits + 1)
except (IOError, EOFError):
def check_ratelimit(delay=60, anonymous_limit=0, registered_limit=0, rate_exceed_status=429, debug=False, **conf):
Verify the ratelimit. By default return a 429 HTTP error code (Too Many Request).
Usage:
@cherrypy.tools.ratelimit(on=True, anonymous_limit=5, registered_limit=50, storage_class=FileRateLimit, storage_path='/tmp')
def index(self):
pass
"""
datastore = getattr(cherrypy, '_ratelimit_datastore', None)
cherrypy._ratelimit_datastore = datastore
token = cherrypy.request.login or cherrypy.request.remote.ip
# Get the real limit depending of user login.
limit = registered_limit if cherrypy.request.login else anonymous_limit
if limit is None or limit <= 0:
return
hits = datastore.get_and_increment(token, delay)
'check and increase rate limit for token %s, limit %s, hits %s' % (token, limit, hits), 'TOOLS.RATELIMIT'
raise cherrypy.HTTPError(rate_exceed_status)
