return (
session.get(SESSION_KEY) is not None
and session.get(LOGIN_TIME) is not None
and session[LOGIN_TIME] + datetime.timedelta(minutes=session.timeout) > session.now()
)
def run(self, login_url='/login/', logout_url='/logout', timeout=43200):
# If login is persistent, update the cookie max-age/expires
if cherrypy.session.get(LOGIN_PERSISTENT, False):
cherrypy.session.timeout = timeout
cookie = cherrypy.serving.response.cookie
cookie['session_id']['max-age'] = timeout * 60
cookie['session_id']['expires'] = httputil.HTTPDate(time.time() + timeout * 60)
else:
session_timeout = cherrypy.request.config.get('tools.sessions.timeout', 60)
cherrypy.session.timeout = session_timeout