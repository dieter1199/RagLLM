@temp_folder = "#{Pathname.new(Dir.tmpdir).realpath}/#{SecureRandom.hex}"
@folder_name = 'test'
FileUtils.mkdir(@temp_folder)
Dir.chdir(@temp_folder) do
FileUtils.mkdir_p("#{@folder_name}/a")
File.write("#{@folder_name}/hello.txt", 'hello world')
File.write("#{@folder_name}/a/inner", 'hello world inner')
after { FileUtils.rm_rf @temp_folder }
Dir.chdir(@temp_folder) do
@compressed_path = Compression::Engine.engine_for("#{@folder_name}#{extension}").compress(@temp_folder, @folder_name)
FileUtils.rm_rf("#{@folder_name}/")
it 'decompress the folder and inspect files correctly' do
engine.decompress(@temp_folder, "#{@temp_folder}/#{@folder_name}.zip", available_size)
expect(read_file("test/hello.txt")).to eq("hello world")
expect(read_file("test/a/inner")).to eq("hello world inner")
it 'decompress the folder and inspect files correctly' do
engine.decompress(@temp_folder, "#{@temp_folder}/#{@folder_name}.tar.gz", available_size)
engine.decompress(@temp_folder, "#{@temp_folder}/#{@folder_name}.tar", available_size)
File.read("#{@temp_folder}/#{relative_path}")
