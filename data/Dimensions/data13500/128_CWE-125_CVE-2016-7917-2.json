{
    "cve_id": "CVE-2016-7917",
    "cve_description": "The nfnetlink_rcv_batch function in net/netfilter/nfnetlink.c in the Linux kernel before 4.5 does not check whether a batch message's length field is large enough, which allows local users to obtain sensitive information from kernel memory or cause a denial of service (infinite loop or out-of-bounds read) by leveraging the CAP_NET_ADMIN capability.",
    "cve_publish_date": "2016-11-16",
    "cwe_id": "CWE-125",
    "cwe_name": "Out-of-bounds Read",
    "cwe_description": "The product reads data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "netfilter: nfnetlink: correctly validate length of batch messages\n\nIf nlh->nlmsg_len is zero then an infinite loop is triggered because\n'skb_pull(skb, msglen);' pulls zero bytes.\n\nThe calculation in nlmsg_len() underflows if 'nlh->nlmsg_len <\nNLMSG_HDRLEN' which bypasses the length validation and will later\ntrigger an out-of-bound read.\n\nIf the length validation does fail then the malformed batch message is\ncopied back to userspace. However, we cannot do this because the\nnlh->nlmsg_len can be invalid. This leads to an out-of-bounds read in\nnetlink_ack:\n\n    [   41.455421] ==================================================================\n    [   41.456431] BUG: KASAN: slab-out-of-bounds in memcpy+0x1d/0x40 at addr ffff880119e79340\n    [   41.456431] Read of size 4294967280 by task a.out/987\n    [   41.456431] =============================================================================\n    [   41.456431] BUG kmalloc-512 (Not tainted): kasan: bad access detected\n    [   41.456431] -----------------------------------------------------------------------------\n    ...\n    [   41.456431] Bytes b4 ffff880119e79310: 00 00 00 00 d5 03 00 00 b0 fb fe ff 00 00 00 00  ................\n    [   41.456431] Object ffff880119e79320: 20 00 00 00 10 00 05 00 00 00 00 00 00 00 00 00   ...............\n    [   41.456431] Object ffff880119e79330: 14 00 0a 00 01 03 fc 40 45 56 11 22 33 10 00 05  .......@EV.\"3...\n    [   41.456431] Object ffff880119e79340: f0 ff ff ff 88 99 aa bb 00 14 00 0a 00 06 fe fb  ................\n                                            ^^ start of batch nlmsg with\n                                               nlmsg_len=4294967280\n    ...\n    [   41.456431] Memory state around the buggy address:\n    [   41.456431]  ffff880119e79400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n    [   41.456431]  ffff880119e79480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n    [   41.456431] >ffff880119e79500: 00 00 00 00 fc fc fc fc fc fc fc fc fc fc fc fc\n    [   41.456431]                                ^\n    [   41.456431]  ffff880119e79580: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n    [   41.456431]  ffff880119e79600: fc fc fc fc fc fc fc fc fc fc fb fb fb fb fb fb\n    [   41.456431] ==================================================================\n\nFix this with better validation of nlh->nlmsg_len and by setting\nNFNL_BATCH_FAILURE if any batch message fails length validation.\n\nCAP_NET_ADMIN is required to trigger the bugs.\n\nFixes: 9ea2aa8b7dba (\"netfilter: nfnetlink: validate nfnetlink header from batch\")\nSigned-off-by: Phil Turnbull <phil.turnbull@oracle.com>\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "nfnetlink.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "6",
    "number_of_lines_deleted_vulnerable_to_cve": "4",
    "vulnerable_lines": [
        "// Line_Reference 331: \t\tif (nlmsg_len(nlh) < sizeof(struct nfgenmsg) ||",
        "// Line_Reference 332: \t\t    skb->len < nlh->nlmsg_len) {",
        "// Line_Reference 333: \t\t\terr = -EINVAL;",
        "// Line_Reference 334: \t\t\tgoto ack;"
    ]
}
