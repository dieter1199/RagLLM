{
    "cve_id": "CVE-2020-26247",
    "cve_description": "Nokogiri is a Rubygem providing HTML, XML, SAX, and Reader parsers with XPath and CSS selector support. In Nokogiri before version 1.11.0.rc4 there is an XXE vulnerability. XML Schemas parsed by Nokogiri::XML::Schema are trusted by default, allowing external resources to be accessed over the network, potentially enabling XXE or SSRF attacks. This behavior is counter to the security policy followed by Nokogiri maintainers, which is to treat all input as untrusted by default whenever possible. This is fixed in Nokogiri version 1.11.0.rc4.",
    "cve_publish_date": "2020-12-30",
    "cwe_id": "CWE-611",
    "cwe_name": "Improper Restriction of XML External Entity Reference",
    "cwe_description": "The product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",
    "commit_message": "feat: XML::Schema and RelaxNG creation accept optional ParseOptions\n\nI'm trying out a new pattern, which is that the parsed object carries\naround the ParseOptions it was created with, which should make some\ntesting a bit easier.\n\nI'm also not implementing the \"config block\" pattern in use for\nDocuments, because I think the UX is weird and I'm hoping to change\neverything to use kwargs in a 2.0 release, anyway.",
    "type_of_change": "Modification",
    "filename_of_changes": "xml_schema.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "34",
    "number_of_lines_deleted_vulnerable_to_cve": "12",
    "vulnerable_lines": [
        "// Line_Reference 96: static VALUE read_memory(VALUE klass, VALUE content)",
        "// Line_Reference 99:   xmlSchemaParserCtxtPtr ctx = xmlSchemaNewMemParserCtxt(",
        "// Line_Reference 100:       (const char *)StringValuePtr(content),",
        "// Line_Reference 101:       (int)RSTRING_LEN(content)",
        "// Line_Reference 102:   );",
        "// Line_Reference 104:   VALUE errors = rb_ary_new();",
        "// Line_Reference 112:   );",
        "// Line_Reference 167: static VALUE from_document(VALUE klass, VALUE document)",
        "// Line_Reference 177:   /* In case someone passes us a node. ugh. */",
        "// Line_Reference 178:   doc = doc->doc;",
        "// Line_Reference 229:   rb_define_singleton_method(klass, \"read_memory\", read_memory, 1);",
        "// Line_Reference 230:   rb_define_singleton_method(klass, \"from_document\", from_document, 1);"
    ]
}
