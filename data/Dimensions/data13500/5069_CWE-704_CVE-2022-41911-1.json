{
    "cve_id": "CVE-2022-41911",
    "cve_description": "TensorFlow is an open source platform for machine learning. When printing a tensor, we get it's data as a `const char*` array (since that's the underlying storage) and then we typecast it to the element type. However, conversions from `char` to `bool` are undefined if the `char` is not `0` or `1`, so sanitizers/fuzzers will crash. The issue has been patched in GitHub commit `1be74370327`. The fix will be included in TensorFlow 2.11.0. We will also cherrypick this commit on TensorFlow 2.10.1, TensorFlow 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.",
    "cve_publish_date": "2022-11-18",
    "cwe_id": "CWE-704",
    "cwe_name": "Incorrect Type Conversion or Cast",
    "cwe_description": "The product does not correctly convert an object, resource, or structure from one type to a different type.",
    "commit_message": "Resolve a sanitizer issue with invalid char -> bool conversion.\n\nWhen printing a tensor, we get it's data as a `const char*` array (since that's the underlying storage) and then we typecast it to the element type. However, conversions from `char` to `bool` are undefined if the `char` is not `0` or `1`, so sanitizers/fuzzers will crash.\n\nTo fix, we're creating a mutable `char` array to convert the chars to 0/1, according to bool rules.\n\nDiscovered via internal fuzzing.\n\nPiperOrigin-RevId: 482297563",
    "type_of_change": "Modification",
    "filename_of_changes": "tensor.cc",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "27",
    "number_of_lines_deleted_vulnerable_to_cve": "5",
    "vulnerable_lines": [
        "// Line_Reference 1186: string SummarizeArray(int64_t limit, int64_t num_elts,",
        "// Line_Reference 1187:                       const TensorShape& tensor_shape, const char* data,",
        "// Line_Reference 1188:                       const bool print_v2) {",
        "// Line_Reference 1190:   const T* array = reinterpret_cast<const T*>(data);",
        "// Line_Reference 1191: "
    ]
}
