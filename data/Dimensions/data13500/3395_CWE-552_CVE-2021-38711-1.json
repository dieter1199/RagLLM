{
    "cve_id": "CVE-2021-38711",
    "cve_description": "In gitit before 0.15.0.0, the Export feature can be exploited to leak information from files.",
    "cve_publish_date": "2021-08-16",
    "cwe_id": "CWE-552",
    "cwe_name": "Files or Directories Accessible to External Parties",
    "cwe_description": "The product makes files or directories accessible to unauthorized actors, even though they should not be.",
    "commit_message": "Remove the Export feature.\n\nThis feature is a security risk; it provided multiple\nvectors by which contents of files could be exposed.\n\nAPI change: remove Network.Gitit.Export.",
    "type_of_change": "Modification",
    "filename_of_changes": "Cache.hs",
    "code_language": "Haskell",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "11",
    "vulnerable_lines": [
        "// Line_Reference 44: -- If there is an associated exported PDF, expire it too.",
        "// Line_Reference 51:   when exists $ liftIO $ do",
        "// Line_Reference 52:     liftIO $ removeFile target",
        "// Line_Reference 53:     expireCachedPDF target (defaultExtension cfg)",
        "// Line_Reference 54: ",
        "// Line_Reference 55: expireCachedPDF :: String -> String -> IO ()",
        "// Line_Reference 56: expireCachedPDF file ext =",
        "// Line_Reference 57:   when (takeExtension file == \".\" ++ ext) $ do",
        "// Line_Reference 58:     let pdfname = file ++ \".export.pdf\"",
        "// Line_Reference 59:     exists <- doesFileExist pdfname",
        "// Line_Reference 60:     when exists $ removeFile pdfname",
        "// Line_Reference 87:     expireCachedPDF target (defaultExtension cfg)"
    ]
}
