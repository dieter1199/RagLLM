{
    "cve_id": "CVE-2021-47208",
    "cve_description": "The Mojolicious module before 9.11 for Perl has a bug in format detection that can potentially be exploited for denial of service.",
    "cve_publish_date": "2024-04-08",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Flip format detection to fix a security issue (closes #1736)",
    "type_of_change": "Modification",
    "filename_of_changes": "Tutorial.pod",
    "code_language": "Perl",
    "number_of_lines_added_for_mitigation": "8",
    "number_of_lines_deleted_vulnerable_to_cve": "25",
    "vulnerable_lines": [
        "// Line_Reference 567: generate the correct C<Content-Type> header.",
        "// Line_Reference 571:   # /detection",
        "// Line_Reference 574:   get '/detection' => sub ($c) {",
        "// Line_Reference 591: The default format is C<html>, and restrictive placeholders can be used to limit possible values.",
        "// Line_Reference 597:   get '/hello' => [format => ['json', 'txt']] => sub ($c) {",
        "// Line_Reference 598:     return $c->render(json => {hello => 'world'})",
        "// Line_Reference 599:       if $c->stash('format') eq 'json';",
        "// Line_Reference 605: Or you can just disable format detection with a special type of restrictive placeholder.",
        "// Line_Reference 606: ",
        "// Line_Reference 607:   use Mojolicious::Lite;",
        "// Line_Reference 608: ",
        "// Line_Reference 609:   # /hello",
        "// Line_Reference 610:   get '/hello' => [format => 0] => {text => 'No format detection.'};",
        "// Line_Reference 611: ",
        "// Line_Reference 612:   # Disable detection and allow the following routes to re-enable it on demand",
        "// Line_Reference 613:   under [format => 0];",
        "// Line_Reference 614: ",
        "// Line_Reference 615:   # /foo",
        "// Line_Reference 616:   get '/foo' => {text => 'No format detection again.'};",
        "// Line_Reference 617: ",
        "// Line_Reference 618:   # /bar.txt",
        "// Line_Reference 619:   get '/bar' => [format => 'txt'] => {text => ' Just one format.'};",
        "// Line_Reference 620: ",
        "// Line_Reference 621:   app->start;",
        "// Line_Reference 636:   get '/hello' => sub ($c) {"
    ]
}
