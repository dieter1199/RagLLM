{
    "cve_id": "CVE-2019-15026",
    "cve_description": "memcached 1.5.16, when UNIX sockets are used, has a stack-based buffer over-read in conn_to_str in memcached.c.",
    "cve_publish_date": "2019-08-30",
    "cwe_id": "CWE-125",
    "cwe_name": "Out-of-bounds Read",
    "cwe_description": "The product reads data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "fix strncpy call to avoid ASAN violation\n\nEnsure we're only reading to the size of the smallest buffer, since\nthey're both on the stack and could potentially overlap. Overlapping is\ndefined as ... undefined behavior. I've looked through all available\nimplementations of strncpy and they still only copy from the first \\0\nfound.\n\nWe'll also never read past the end of sun_path since we _supply_\nsun_path with a proper null terminator.",
    "type_of_change": "Modification",
    "filename_of_changes": "memcached.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "20",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 3493:                     sizeof(addr_text) - 1);",
        "// Line_Reference 3494:             addr_text[sizeof(addr_text)-1] = '\\0';"
    ]
}
