{
    "cve_id": "CVE-2024-24814",
    "cve_description": "mod_auth_openidc is an OpenID Certifiedâ„¢ authentication and authorization module for the Apache 2.x HTTP server that implements the OpenID Connect Relying Party functionality. In affected versions missing input validation on mod_auth_openidc_session_chunks cookie value makes the server vulnerable to a denial of service (DoS) attack. An internal security audit has been conducted and the reviewers found that if they manipulated the value of the mod_auth_openidc_session_chunks cookie to a very large integer, like 99999999, the server struggles with the request for a long time and finally gets back with a 500 error. Making a few requests of this kind caused our server to become unresponsive. Attackers can craft requests that would make the server work very hard (and possibly become unresponsive) and/or crash with minimal effort. This issue has been addressed in version 2.4.15.2. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "cve_publish_date": "2024-02-13",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "release 2.4.15.2: fix DoS CVE-2024-24814\n\nfix CVE-2024-24814: DoS when `OIDCSessionType client-cookie` is set and\na crafted Cookie header is supplied\nhttps://github.com/OpenIDC/mod_auth_openidc/security/advisories/GHSA-hxr6-w4gc-7vvv\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@openidc.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "util.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "17",
    "number_of_lines_deleted_vulnerable_to_cve": "16",
    "vulnerable_lines": [
        "// Line_Reference 1562: \tchar *cookieValue = NULL;",
        "// Line_Reference 1563: \tchar *chunkValue = NULL;",
        "// Line_Reference 1564: \tint i = 0;",
        "// Line_Reference 1565: \tif (chunkSize == 0) {",
        "// Line_Reference 1566: \t\tcookieValue = oidc_util_get_cookie(r, cookieName);",
        "// Line_Reference 1567: \t} else {",
        "// Line_Reference 1568: \t\tint chunkCount = oidc_util_get_chunked_count(r, cookieName);",
        "// Line_Reference 1569: \t\tif (chunkCount > 0) {",
        "// Line_Reference 1570: \t\t\tcookieValue = \"\";",
        "// Line_Reference 1571: \t\t\tfor (i = 0; i < chunkCount; i++) {",
        "// Line_Reference 1572: \t\t\t\tchunkValue = oidc_util_get_cookie(r, oidc_util_get_chunk_cookie_name(r, cookieName, i));",
        "// Line_Reference 1573: \t\t\t\tif (chunkValue != NULL)",
        "// Line_Reference 1574: \t\t\t\t\tcookieValue = apr_psprintf(r->pool, \"%s%s\", cookieValue, chunkValue);",
        "// Line_Reference 1575: \t\t\t}",
        "// Line_Reference 1576: \t\t} else {",
        "// Line_Reference 1577: \t\t\tcookieValue = oidc_util_get_cookie(r, cookieName);"
    ]
}
