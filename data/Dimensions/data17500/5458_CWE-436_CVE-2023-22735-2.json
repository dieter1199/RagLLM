{
    "cve_id": "CVE-2023-22735",
    "cve_description": "Zulip is an open-source team collaboration tool. In versions of zulip prior to commit `2f6c5a8` but after commit `04cf68b` users could upload files with arbitrary `Content-Type` which would be served from the Zulip hostname with `Content-Disposition: inline` and no `Content-Security-Policy` header, allowing them to trick other users into executing arbitrary Javascript in the context of the Zulip application.  Among other things, this enables session theft. Only deployments which use the S3 storage (not the local-disk storage) are affected, and only deployments which deployed commit 04cf68b45ebb5c03247a0d6453e35ffc175d55da, which has only been in `main`, not any numbered release. Users affected should upgrade from main again to deploy this fix. Switching from S3 storage to the local-disk storage would nominally mitigate this, but is likely more involved than upgrading to the latest `main` which addresses the issue.",
    "cve_publish_date": "2023-02-07",
    "cwe_id": "CWE-436",
    "cwe_name": "Interpretation Conflict",
    "cwe_description": "Product A handles inputs or steps differently than Product B, which causes A to perform incorrect actions based on its perception of B's state.",
    "commit_message": "CVE-2023-22735: Provide the Content-Disposition header from S3.\n\nThe Content-Type of user-provided uploads was provided by the browser\nat initial upload time, and stored in S3; however, 04cf68b45ebb\nswitched to determining the Content-Disposition merely from the\nfilename.  This makes uploads vulnerable to a stored XSS, wherein a\nfile uploaded with a content-type of `text/html` and an extension of\n`.png` would be served to browsers as `Content-Disposition: inline`,\nwhich is unsafe.\n\nThe `Content-Security-Policy` headers in the previous commit mitigate\nthis, but only for browsers which support them.\n\nRevert parts of 04cf68b45ebb, specifically by allowing S3 to provide\nthe Content-Disposition header, and using the\n`ResponseContentDisposition` argument when necessary to override it to\n`attachment`.  Because we expect S3 responses to vary based on this\nargument, we include it in the cache key; since the query parameter\nhas dashes in it, we can't use use the helper `$arg_` variables, and\nmust parse it from the query parameters manually.\n\nAdding the disposition may decrease the cache hit rate somewhat, but\ndownloads are infrequent enough that it is unlikely to have a\nnoticeable effect.  We take care to not adjust the cache key for\nrequests which do not specify the disposition.",
    "type_of_change": "Modification",
    "filename_of_changes": "upload.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "24",
    "number_of_lines_deleted_vulnerable_to_cve": "16",
    "vulnerable_lines": [
        "// Line_Reference 91: def serve_s3(request: HttpRequest, path_id: str, download: bool = False) -> HttpResponse:",
        "// Line_Reference 92:     url = get_signed_upload_url(path_id)",
        "// Line_Reference 110:     patch_disposition_header(response, path_id, download)",
        "// Line_Reference 115: def serve_local(request: HttpRequest, path_id: str, download: bool = False) -> HttpResponseBase:",
        "// Line_Reference 141:     return serve_file(request, user_profile, realm_id_str, filename, url_only=False, download=True)",
        "// Line_Reference 170:     download: bool = False,",
        "// Line_Reference 184:     mimetype, encoding = guess_type(path_id)",
        "// Line_Reference 185:     download = download or mimetype not in INLINE_MIME_TYPES",
        "// Line_Reference 186: ",
        "// Line_Reference 188:         return serve_local(request, path_id, download=download)",
        "// Line_Reference 190:         return serve_s3(request, path_id, download=download)",
        "// Line_Reference 224:     mimetype, encoding = guess_type(path_id)",
        "// Line_Reference 225:     download = mimetype not in INLINE_MIME_TYPES",
        "// Line_Reference 226: ",
        "// Line_Reference 228:         return serve_local(request, path_id, download=download)",
        "// Line_Reference 230:         return serve_s3(request, path_id, download=download)"
    ]
}
