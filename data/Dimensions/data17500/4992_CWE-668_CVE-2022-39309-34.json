{
    "cve_id": "CVE-2022-39309",
    "cve_description": "GoCD is a continuous delivery server. GoCD helps you automate and streamline the build-test-release cycle for continuous delivery of your product. GoCD versions prior to 21.1.0 leak the symmetric key used to encrypt/decrypt any secure variables/secrets in GoCD configuration to authenticated agents. A malicious/compromised agent may then expose that key from memory, and potentially allow an attacker the ability to decrypt secrets intended for other agents/environments if they also are able to obtain access to encrypted configuration values from the GoCD server. This issue is fixed in GoCD version 21.1.0. There are currently no known workarounds.",
    "cve_publish_date": "2022-10-14",
    "cwe_id": "CWE-668",
    "cwe_name": "Exposure of Resource to Wrong Sphere",
    "cwe_description": "The product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.",
    "commit_message": "SCMMaterial changes #000\n\n* SCMMaterial unlike SCMMaterialConfig objects are used for polling,\n  they do not need to encrypt the password. Hence removing the\n  encryptedPassword attribute.",
    "type_of_change": "Modification",
    "filename_of_changes": "TfsMaterialTest.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "18",
    "number_of_lines_deleted_vulnerable_to_cve": "70",
    "vulnerable_lines": [
        "// Line_Reference 71:         tfsMaterialFirstCollectionFirstProject = new TfsMaterial(goCipher, new UrlArgument(TFS_FIRST_COLLECTION_URL), USERNAME, DOMAIN, PASSWORD, TFS_FIRST_PROJECT);",
        "// Line_Reference 72:         tfsMaterialFirstCollectionSecondProject = new TfsMaterial(goCipher, new UrlArgument(TFS_FIRST_COLLECTION_URL), USERNAME, DOMAIN, PASSWORD, TFS_SECOND_PROJECT);",
        "// Line_Reference 107:         TfsMaterial tfsMaterial = new TfsMaterial(new GoCipher(), new UrlArgument(\"my-url\"), \"loser\", DOMAIN, \"foo_bar_baz\", \"/dev/null\");",
        "// Line_Reference 117:         TfsMaterial tfsMaterial = new TfsMaterial(new GoCipher(), new UrlArgument(\"my-url\"), \"loser\", DOMAIN, \"foo_bar_baz\", \"/dev/null\");",
        "// Line_Reference 127:         TfsMaterial tfsMaterial = new TfsMaterial(new GoCipher(), new UrlArgument(\"http://foo:bar@my-url.com\"), \"loser\", DOMAIN, \"foo_bar_baz\", \"/dev/null\"",
        "// Line_Reference 131:         tfsMaterial = new TfsMaterial(new GoCipher(), null, \"loser\", DOMAIN, \"foo_bar_baz\", \"/dev/null\");",
        "// Line_Reference 137:         TfsMaterial tfsMaterial = new TfsMaterial(new GoCipher(), new UrlArgument(\"http://foo:bar@my-url.com\"), \"loser\", DOMAIN, \"foo_bar_baz\", \"/dev/null\"",
        "// Line_Reference 141:         tfsMaterial = new TfsMaterial(new GoCipher(), null, \"loser\", DOMAIN, \"foo_bar_baz\", \"/dev/null\");",
        "// Line_Reference 145:     @Test",
        "// Line_Reference 146:     void shouldEncryptTfsPasswordAndMarkPasswordAsNull() throws Exception {",
        "// Line_Reference 147:         GoCipher mockGoCipher = mock(GoCipher.class);",
        "// Line_Reference 148:         when(mockGoCipher.encrypt(\"password\")).thenReturn(\"encrypted\");",
        "// Line_Reference 149: ",
        "// Line_Reference 150:         TfsMaterial tfsMaterial = new TfsMaterial(mockGoCipher, new UrlArgument(\"/foo\"), \"username\", DOMAIN, \"password\", \"\");",
        "// Line_Reference 151:         tfsMaterial.ensureEncrypted();",
        "// Line_Reference 152: ",
        "// Line_Reference 153:         assertThat(tfsMaterial.getPassword()).isNull();",
        "// Line_Reference 154:         assertThat(tfsMaterial.getEncryptedPassword()).isEqualTo(\"encrypted\");",
        "// Line_Reference 155:     }",
        "// Line_Reference 156: ",
        "// Line_Reference 157:     @Test",
        "// Line_Reference 158:     void shouldDecryptTfsPassword() throws Exception {",
        "// Line_Reference 159:         GoCipher mockGoCipher = mock(GoCipher.class);",
        "// Line_Reference 160:         when(mockGoCipher.decrypt(\"encrypted\")).thenReturn(\"password\");",
        "// Line_Reference 161: ",
        "// Line_Reference 162:         TfsMaterial tfsMaterial = new TfsMaterial(mockGoCipher, new UrlArgument(\"/foo\"), \"username\", DOMAIN, null, \"\");",
        "// Line_Reference 163: ",
        "// Line_Reference 164:         ReflectionUtil.setField(tfsMaterial, \"encryptedPassword\", \"encrypted\");",
        "// Line_Reference 165: ",
        "// Line_Reference 166:         tfsMaterial.ensureEncrypted();",
        "// Line_Reference 167:         assertThat(tfsMaterial.getPassword()).isEqualTo(\"password\");",
        "// Line_Reference 168:     }",
        "// Line_Reference 169: ",
        "// Line_Reference 176:         TfsMaterial material = new TfsMaterial(mockGoCipher, new UrlArgument(\"/foo\"), \"username\", DOMAIN, \"password\", \"\");",
        "// Line_Reference 185:     @Test",
        "// Line_Reference 186:     void shouldErrorOutIfDecryptionFails() throws CryptoException {",
        "// Line_Reference 187:         GoCipher mockGoCipher = mock(GoCipher.class);",
        "// Line_Reference 188:         String fakeCipherText = \"fake cipher text\";",
        "// Line_Reference 189:         when(mockGoCipher.decrypt(fakeCipherText)).thenThrow(new CryptoException(\"exception\"));",
        "// Line_Reference 190:         TfsMaterial material = new TfsMaterial(mockGoCipher, new UrlArgument(\"/foo\"), \"username\", DOMAIN, \"password\", \"\");",
        "// Line_Reference 191:         ReflectionUtil.setField(material, \"encryptedPassword\", fakeCipherText);",
        "// Line_Reference 192:         try {",
        "// Line_Reference 193:             material.getPassword();",
        "// Line_Reference 194:             fail(\"Should have thrown up\");",
        "// Line_Reference 195:         } catch (Exception e) {",
        "// Line_Reference 196:             assertThat(e.getMessage()).isEqualTo(\"Could not decrypt the password to get the real password\");",
        "// Line_Reference 197:         }",
        "// Line_Reference 198:     }",
        "// Line_Reference 199: ",
        "// Line_Reference 200:     @Test",
        "// Line_Reference 201:     void shouldErrorOutIfEncryptionFails() throws Exception {",
        "// Line_Reference 202:         GoCipher mockGoCipher = mock(GoCipher.class);",
        "// Line_Reference 203:         when(mockGoCipher.encrypt(\"password\")).thenThrow(new CryptoException(\"exception\"));",
        "// Line_Reference 204:         try {",
        "// Line_Reference 205:             new TfsMaterial(mockGoCipher, new UrlArgument(\"/foo\"), \"username\", DOMAIN, \"password\", \"\");",
        "// Line_Reference 206:             fail(\"Should have thrown up\");",
        "// Line_Reference 207:         } catch (Exception e) {",
        "// Line_Reference 208:             assertThat(e.getMessage()).isEqualTo(\"Password encryption failed. Please verify your cipher key.\");",
        "// Line_Reference 209:         }",
        "// Line_Reference 210:     }",
        "// Line_Reference 211: ",
        "// Line_Reference 240:         TfsMaterial material = new TfsMaterial(new GoCipher(), new UrlArgument(\"http://url/\"), \"user\", \"domain\", \"password\", \"$project/path/\");",
        "// Line_Reference 246:         TfsMaterial material = new TfsMaterial(new GoCipher(), new UrlArgument(\"http://url/\"), \"user\", \"domain\", \"password\", \"$project/path/\");",
        "// Line_Reference 256:         TfsMaterial material = new TfsMaterial(new GoCipher(), new UrlArgument(\"http://username:password@tfsrepo.com\"), \"username\", \"domain\", \"password\", \"$project/path/\");",
        "// Line_Reference 270:         TfsMaterial material = new TfsMaterial(new GoCipher(), new UrlArgument(\"http://username:password@tfsrepo.com\"), \"username\", \"domain\", \"password\", \"$project/path/\");",
        "// Line_Reference 286:             TfsMaterial tfsMaterial = new TfsMaterial(new GoCipher(), new UrlArgument(\"some-url\"), null, null, \"badger\", null);",
        "// Line_Reference 293:             TfsMaterial tfsMaterial = new TfsMaterial(new GoCipher(), new UrlArgument(\"some-url\"), null, null, \"{{SECRET:[secret_config_id][lookup_pass]}}\", null);",
        "// Line_Reference 302:             TfsMaterial tfsMaterial = new TfsMaterial(new GoCipher(), new UrlArgument(\"some-url\"), null, null, \"{{SECRET:[secret_config_id][lookup_pass]}}\", null);",
        "// Line_Reference 314:             TfsMaterial tfsMaterial = new TfsMaterial(new GoCipher(), new UrlArgument(\"some-url\"), null, null, \"{{SECRET:[secret_config_id][lookup_pass]}}\", null);",
        "// Line_Reference 342:         TfsMaterial material = new TfsMaterial(mock(GoCipher.class), new UrlArgument(TFS_FIRST_COLLECTION_URL), USERNAME, \"\", PASSWORD, TFS_FIRST_PROJECT);"
    ]
}
