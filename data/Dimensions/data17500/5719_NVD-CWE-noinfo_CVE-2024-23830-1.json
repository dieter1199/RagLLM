{
    "cve_id": "CVE-2024-23830",
    "cve_description": "MantisBT is an open source issue tracker. Prior to version 2.26.1, an unauthenticated attacker who knows a user's email address and username can hijack the user's account by poisoning the link in the password reset notification message. A patch is available in version 2.26.1. As a workaround, define `$g_path` as appropriate in `config_inc.php`.",
    "cve_publish_date": "2024-02-20",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Merge pull request from GHSA-mcqj-7p29-9528\n\n* Address host header injection vulnerability\n\n$g_path is empty by default, and should be defined in config_inc.php.\nNot doing so is a security risk, as the path will then be set based on\nheaders from the HTTP request, exposing the system to Host Header\ninjection attacks.\n\nDocument the risk in PHPDoc and Admin Guide.\n\nMove the code that initializes $g_path's default value from\nconfig_defaults_inc.php to a function in core.php.\n\nDetect if $g_path was defaulted, and if yes alert the user in:\n- Login Page (if $g_admin_checks == ON)\n- Admin Checks\n\nFixes #19381, CVE-2024-23830, GHSA-mcqj-7p29-9528\n\n* Remove dead code\n\n* Use OWASP as reference for host header injection\n\n* Link to OWASP reference page from admin guide\n\n* Invalid $g_path at install time is a hard fail\n\nEmpty $g_path remains just a warning about the security risk.\nRequest and set $g_path at install time\n\nThis is an improvement on the original patch for CVE-2024-23830.\n\nThe admin is now able to set $g_path when installing MantisBT. A default\nvalue is provided, based on the URL used to perform the installation\n(using the same logic that is applied when $g_path is empty).\n\nA check of the provided URL is performed during install stage 2, and an\nerror is reported if it is invalid. If an empty $g_path is given, then\nwe only display a warning about the security risk.\n\nThe URL is then stored as $g_path in the generated config_inc.php file\nat stage 5.\n\nThis greatly reduces the risk of the admin forgetting to set $g_path\nmanually, while still allowing them to set it to empty should they want\nto.\n\nFixes #19381\n\n* Add Reset button to path input\n\nReuse the existing functionality implemented for database prefix/suffix,\nwith the following changes\n\n- Rename `reset-prefix` selector class to `reset` to be more generic\n- Add Reset functionality markup to path input including default value\n- Add title attribute to Reset buttons\n- Adapt initialization logic to only set the default value for the\n  table-prefix fields",
    "type_of_change": "Modification",
    "filename_of_changes": "config_defaults_inc.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "21",
    "number_of_lines_deleted_vulnerable_to_cve": "74",
    "vulnerable_lines": [
        "// Line_Reference 197: $t_protocol = 'http';",
        "// Line_Reference 198: $t_host = 'localhost';",
        "// Line_Reference 199: if( isset ( $_SERVER['SCRIPT_NAME'] ) ) {",
        "// Line_Reference 200: \t$t_protocol = http_is_protocol_https() ? 'https' : 'http';",
        "// Line_Reference 201: ",
        "// Line_Reference 202: \t# $_SERVER['SERVER_PORT'] is not defined in case of php-cgi.exe",
        "// Line_Reference 203: \tif( isset( $_SERVER['SERVER_PORT'] ) ) {",
        "// Line_Reference 204: \t\t$t_port = ':' . $_SERVER['SERVER_PORT'];",
        "// Line_Reference 205: \t\tif( ( ':80' == $t_port && 'http' == $t_protocol )",
        "// Line_Reference 206: \t\t  || ( ':443' == $t_port && 'https' == $t_protocol )) {",
        "// Line_Reference 207: \t\t\t$t_port = '';",
        "// Line_Reference 208: \t\t}",
        "// Line_Reference 209: \t} else {",
        "// Line_Reference 210: \t\t$t_port = '';",
        "// Line_Reference 211: \t}",
        "// Line_Reference 212: ",
        "// Line_Reference 213: \tif( isset( $_SERVER['HTTP_X_FORWARDED_HOST'] ) ) { # Support ProxyPass",
        "// Line_Reference 214: \t\t$t_hosts = explode( ',', $_SERVER['HTTP_X_FORWARDED_HOST'] );",
        "// Line_Reference 215: \t\t$t_host = $t_hosts[0];",
        "// Line_Reference 216: \t} else if( isset( $_SERVER['HTTP_HOST'] ) ) {",
        "// Line_Reference 217: \t\t$t_host = $_SERVER['HTTP_HOST'];",
        "// Line_Reference 218: \t} else if( isset( $_SERVER['SERVER_NAME'] ) ) {",
        "// Line_Reference 219: \t\t$t_host = $_SERVER['SERVER_NAME'] . $t_port;",
        "// Line_Reference 220: \t} else if( isset( $_SERVER['SERVER_ADDR'] ) ) {",
        "// Line_Reference 221: \t\t$t_host = $_SERVER['SERVER_ADDR'] . $t_port;",
        "// Line_Reference 222: \t}",
        "// Line_Reference 223: ",
        "// Line_Reference 224: \tif( !isset( $_SERVER['SCRIPT_NAME'] )) {",
        "// Line_Reference 225: \t\techo 'Invalid server configuration detected. Please set $g_path manually in ' . $g_config_path . 'config_inc.php.';",
        "// Line_Reference 226: \t\tif( isset( $_SERVER['SERVER_SOFTWARE'] ) && ( stripos($_SERVER['SERVER_SOFTWARE'], 'nginx') !== false ) )",
        "// Line_Reference 227: \t\t\techo ' Please try to add \"fastcgi_param SCRIPT_NAME $fastcgi_script_name;\" to the nginx server configuration.';",
        "// Line_Reference 228: \t\tdie;",
        "// Line_Reference 229: \t}",
        "// Line_Reference 230: ",
        "// Line_Reference 231: \t# Prevent XSS if the path is displayed later on. This is the equivalent of",
        "// Line_Reference 232: \t# FILTER_SANITIZE_STRING, which was deprecated in PHP 8.1:",
        "// Line_Reference 233: \t# strip tags and null bytes, then encode quotes into HTML entities",
        "// Line_Reference 234: \t$t_path = preg_replace( '/\\x00|<[^>]*>?/', '', $_SERVER['SCRIPT_NAME'] );",
        "// Line_Reference 235: \t$t_path = str_replace( [\"'\", '\"'], ['&#39;', '&#34;'], $t_path );",
        "// Line_Reference 236: ",
        "// Line_Reference 237: \t$t_path = dirname( $t_path );",
        "// Line_Reference 238: \tswitch( basename( $t_path ) ) {",
        "// Line_Reference 239: \t\tcase 'admin':",
        "// Line_Reference 240: \t\t\t$t_path = dirname( $t_path );",
        "// Line_Reference 241: \t\t\tbreak;",
        "// Line_Reference 242: \t\tcase 'check':\t\t# admin checks dir",
        "// Line_Reference 243: \t\tcase 'soap':",
        "// Line_Reference 244: \t\tcase 'rest':",
        "// Line_Reference 245: \t\t\t$t_path = dirname( $t_path, 2 );",
        "// Line_Reference 246: \t\t\tbreak;",
        "// Line_Reference 247: \t\tcase 'swagger':",
        "// Line_Reference 248: \t\t\t$t_path = dirname( $t_path, 3 );",
        "// Line_Reference 249: \t\t\tbreak;",
        "// Line_Reference 250: \t}",
        "// Line_Reference 251: \t$t_path = rtrim( $t_path, '/\\\\' ) . '/';",
        "// Line_Reference 252: ",
        "// Line_Reference 253: \tif( strpos( $t_path, '&#' ) ) {",
        "// Line_Reference 254: \t\techo 'Can not safely determine $g_path. Please set $g_path manually in ' . $g_config_path . 'config_inc.php';",
        "// Line_Reference 255: \t\tdie;",
        "// Line_Reference 256: \t}",
        "// Line_Reference 257: } else {",
        "// Line_Reference 258: \t$t_path = 'mantisbt/';",
        "// Line_Reference 259: }",
        "// Line_Reference 260: ",
        "// Line_Reference 262:  * Path to your installation as seen from the web browser",
        "// Line_Reference 263:  * requires trailing /",
        "// Line_Reference 266: $g_path\t= $t_protocol . '://' . $t_host . $t_path;",
        "// Line_Reference 269:  * Short web path without the domain name",
        "// Line_Reference 270:  * requires trailing /",
        "// Line_Reference 273: $g_short_path = $t_path;",
        "// Line_Reference 5055: # Temporary variables should not remain defined in global scope",
        "// Line_Reference 5056: unset( $t_protocol, $t_host, $t_hosts, $t_port, $t_self, $t_path );",
        "// Line_Reference 5057: ",
        "// Line_Reference 5058: "
    ]
}
