{
    "cve_id": "CVE-2023-1998",
    "cve_description": "The Linux kernel allows userspace processes to enable mitigations by calling prctl with PR_SET_SPECULATION_CTRL which disables the speculation feature as well as by using seccomp. We had noticed that on VMs of at least one major cloud provider, the kernel still left the victim process exposed to attacks in some cases even after enabling the spectre-BTI mitigation with prctl. The same behavior can be observed on a bare-metal machine when forcing the mitigation to IBRS on boot command line.\n\nThis happened because when plain IBRS was enabled (not enhanced IBRS), the kernel had some logic that determined that STIBP was not needed. The IBRS bit implicitly protects against cross-thread branch target injection. However, with legacy IBRS, the IBRS bit was cleared on returning to userspace, due to performance reasons, which disabled the implicit STIBP and left userspace threads vulnerable to cross-thread branch target injection against which STIBP protects.\n\n\n",
    "cve_publish_date": "2023-04-21",
    "cwe_id": "CWE-203",
    "cwe_name": "Observable Discrepancy",
    "cwe_description": "The product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not.",
    "commit_message": "x86/speculation: Allow enabling STIBP with legacy IBRS\n\nWhen plain IBRS is enabled (not enhanced IBRS), the logic in\nspectre_v2_user_select_mitigation() determines that STIBP is not needed.\n\nThe IBRS bit implicitly protects against cross-thread branch target\ninjection. However, with legacy IBRS, the IBRS bit is cleared on\nreturning to userspace for performance reasons which leaves userspace\nthreads vulnerable to cross-thread branch target injection against which\nSTIBP protects.\n\nExclude IBRS from the spectre_v2_in_ibrs_mode() check to allow for\nenabling STIBP (through seccomp/prctl() by default or always-on, if\nselected by spectre_v2_user kernel cmdline parameter).\n\n  [ bp: Massage. ]\n\nFixes: 7c693f54c873 (\"x86/speculation: Add spectre_v2=ibrs option to support Kernel IBRS\")\nReported-by: Jos√© Oliveira <joseloliveira11@gmail.com>\nReported-by: Rodrigo Branco <rodrigo@kernelhacking.com>\nSigned-off-by: KP Singh <kpsingh@kernel.org>\nSigned-off-by: Borislav Petkov (AMD) <bp@alien8.de>\nCc: stable@vger.kernel.org\nLink: https://lore.kernel.org/r/20230220120127.1975241-1-kpsingh@kernel.org\nLink: https://lore.kernel.org/r/20230221184908.2349578-1-kpsingh@kernel.org",
    "type_of_change": "Modification",
    "filename_of_changes": "bugs.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "18",
    "number_of_lines_deleted_vulnerable_to_cve": "7",
    "vulnerable_lines": [
        "// Line_Reference 1136: static inline bool spectre_v2_in_ibrs_mode(enum spectre_v2_mitigation mode)",
        "// Line_Reference 1138: \treturn mode == SPECTRE_V2_IBRS ||",
        "// Line_Reference 1139: \t       mode == SPECTRE_V2_EIBRS ||",
        "// Line_Reference 1206: \t * If no STIBP, IBRS or enhanced IBRS is enabled, or SMT impossible,",
        "// Line_Reference 1207: \t * STIBP is not required.",
        "// Line_Reference 1211: \t    spectre_v2_in_ibrs_mode(spectre_v2_enabled))",
        "// Line_Reference 2343: \tif (spectre_v2_in_ibrs_mode(spectre_v2_enabled))"
    ]
}
