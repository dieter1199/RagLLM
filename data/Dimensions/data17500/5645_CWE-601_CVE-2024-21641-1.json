{
    "cve_id": "CVE-2024-21641",
    "cve_description": "Flarum is open source discussion platform software. Prior to version 1.8.5, the Flarum `/logout` route includes a redirect parameter that allows any third party to redirect users from a (trusted) domain of the Flarum installation to redirect to any link. For logged-in users, the logout must be confirmed. Guests are immediately redirected. This could be used by spammers to redirect to a web address using a trusted domain of a running Flarum installation. The vulnerability has been fixed and published as flarum/core v1.8.5. As a workaround, some extensions modifying the logout route can remedy this issue if their implementation is safe.",
    "cve_publish_date": "2024-01-05",
    "cwe_id": "CWE-601",
    "cwe_name": "URL Redirection to Untrusted Site ('Open Redirect')",
    "cwe_description": "A web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a Redirect. This simplifies phishing attacks.",
    "commit_message": "[1.x] fix: Logout controller allows open redirects (#3948)\n\n* fix: prevent open redirects on logout controller\r\n\r\n* use clearer config key\r\n\r\n* cast url as string, reinstate guest redirect\r\n\r\n* clean up a little\r\n\r\n* simplify\r\n\r\n* return Uri\r\n\r\n* resolve ternary always true\r\n\r\n* simplify some more\r\n\r\n* remove extra newline\r\n\r\n* handle malformed uri\r\n\r\n* chore: requested changes",
    "type_of_change": "Modification",
    "filename_of_changes": "LogOutController.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "47",
    "number_of_lines_deleted_vulnerable_to_cve": "8",
    "vulnerable_lines": [
        "// Line_Reference 66:         UrlGenerator $url",
        "// Line_Reference 85:         $url = Arr::get($request->getQueryParams(), 'return', $this->url->to('forum')->base());",
        "// Line_Reference 87:         // If there is no user logged in, return to the index.",
        "// Line_Reference 89:             return new RedirectResponse($url);",
        "// Line_Reference 97:             $return = Arr::get($request->getQueryParams(), 'return');",
        "// Line_Reference 98: ",
        "// Line_Reference 100:                 ->with('url', $this->url->to('forum')->route('logout').'?token='.$csrfToken.($return ? '&return='.urlencode($return) : ''));",
        "// Line_Reference 106:         $response = new RedirectResponse($url);"
    ]
}
