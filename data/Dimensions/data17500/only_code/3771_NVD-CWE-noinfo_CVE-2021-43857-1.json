import json, os, requests, time, pytz, pymongo
spiders = [{'name': spider, 'id': index + 1} for index, spider in enumerate(spiders)]
project['configuration'] = json.loads(project['configuration']) if project['configuration'] else None
configuration = json.dumps(data.get('configuration'), ensure_ascii=False)
project_name = re.sub('[\!\@\#\$\;\&\*\~\"\'\{\}\]\[\-\+\%\^]+', '', project_name)
cmd = ' '.join(['gerapy', 'generate', project_name])
p = Popen(cmd, shell=True, stdin=PIPE, stdout=PIPE, stderr=PIPE)
path = join(os.path.abspath(join(os.getcwd(), PROJECTS_FOLDER)), data['name'])
cmd = 'git clone {address} {target}'.format(address=address, target=join(PROJECTS_FOLDER, Path(address).stem))
p = Popen(cmd, shell=True, stdin=PIPE, stdout=PIPE, stderr=PIPE)
if stderr: logger.error(stderr)
deployed_at = timezone.datetime.fromtimestamp(int(version), tz=pytz.timezone(TIME_ZONE))
deploy, result = Deploy.objects.update_or_create(client=client, project=project, deployed_at=deployed_at)
Project(name=project_name, description=description, built_at=built_at, egg=egg).save()
args_cmd = ' '.join(
['--{arg} {value}'.format(arg=arg, value=value) for arg, value in args.items()])
logger.debug('args cmd %s', args_cmd)
cmd = 'gerapy parse {args_cmd} {project_path} {spider_name}'.format(
args_cmd=args_cmd,
project_path=project_path,
spider_name=spider_name
)
p = Popen(cmd, shell=True, stdin=PIPE, stdout=PIPE, stderr=PIPE, close_fds=True)
url = log_url(client.ip, client.port, project_name, spider_name, job_id)
data['configuration'] = json.dumps(data['configuration'], ensure_ascii=False)
configuration=json.dumps(data.get('configuration'), ensure_ascii=False),
data['configuration'] = json.dumps(data.get('configuration'), ensure_ascii=False)
DjangoJob.objects.filter(name=job_id).delete()
jobs = DjangoJob.objects.filter(name=job_id)
if not jobs: continue
job = DjangoJob.objects.get(name=job_id)
executions = serialize('json', DjangoJobExecution.objects.filter(job=job))
