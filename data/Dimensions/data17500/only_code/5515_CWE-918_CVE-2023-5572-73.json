import {
createSyncedPieces,
createInputContentProcessor,
createOutputContentProcessor,
OutputContentProcessorInput,
OutputContentProcessor,
InputContentProcessor
} from "./process-content";
import { publishGitDataEvent } from "../events";
import { Binary } from "mongodb";
import { AuthenticatedContext, isAuthenticated, isEnabled } from "#lib/middleware";
import { procedure, router } from "#lib/trpc";
import * as errors from "#lib/errors";
import { ObjectId, UnderscoreID, zodId } from "#lib";
import { publishContentGroupEvent } from "#routes/content-groups";
import { publishWorkspaceSettingsEvent } from "#routes/workspace-settings";
const inputContentProcessor = await createInputContentProcessor(ctx, gitData);
const outputContentProcessor = await createOutputContentProcessor(ctx, gitData);
const outputContentProcessor = await createOutputContentProcessor(ctx, gitData);
const outputContentProcessor = await createOutputContentProcessor(ctx, gitData);
const inputContentProcessor = await createInputContentProcessor(ctx, gitData);
export { githubRouter, createInputContentProcessor, createOutputContentProcessor };
export type { OutputContentProcessor, InputContentProcessor };