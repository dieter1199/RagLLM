import { OAuthPlugin } from "./plugins/oauth";
import { s3Plugin } from "./plugins/s3";
import { mailPlugin } from "./plugins/email";
import { sessionPlugin } from "./plugins/session";
import { pubSubPlugin } from "./plugins/pub-sub";
import { databasePlugin } from "./plugins/database";
import { ZodRawShape } from "zod";
import { gitSyncPlugin, hostConfigPlugin, searchPlugin } from "#plugins";
const createServer = async (envSchemaExtension?: ZodRawShape): Promise<FastifyInstance> => {
schema: zodToJsonSchema(envSchema.extend(envSchemaExtension || {}))
await server
.register(mongoPlugin, {
})
.register(redisPlugin, { url: server.config.REDIS_URL })
.register(redisPlugin, { url: server.config.REDIS_URL, namespace: "sub" });
await server.register(databasePlugin).register(pubSubPlugin).register(s3Plugin);
await server
.register(cookiePlugin, { secret: server.config.SECRET })
.register(jwtPlugin, {
secret: server.config.SECRET,
cookie: { cookieName: "accessToken", signed: true }
})
.register(sessionPlugin)
.register(OAuthPlugin);
await server.register(mailPlugin);
await server.register(gitSyncPlugin);
await server.register(searchPlugin);