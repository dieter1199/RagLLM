<?php
declare(strict_types=1);
use Elabftw\Services\SessionAuth;
use Symfony\Component\HttpFoundation\Session\SessionInterface;
* Provide methods to login a user
private Config $Config;
private SessionInterface $Session;
private Request $Request;
public function __construct(App $app)
$this->Config = $app->Config;
$this->Request = $app->Request;
$this->Session = $app->Session;
/**
* Increase the failed attempts counter
*/
public function increaseFailedAttempt(): void
{
if (!$this->Session->has('failed_attempt')) {
$this->Session->set('failed_attempt', 1);
} else {
$n = $this->Session->get('failed_attempt');
$n++;
$this->Session->set('failed_attempt', $n);
}
}
/**
* Check if we need to bother with authentication of current user
*
* @return bool True if we are authentified (or if we don't need to be)
*/
public function needAuth(): bool
{
// pages where you don't need to be logged in
// only the script name, not the path because we use basename() on it
$nologinArr = array(
'change-pass.php',
'index.php',
'login.php',
'LoginController.php',
'metadata.php',
'register.php',
'RegisterController.php',
'RequestHandler.php',
'ResetPasswordController.php',
);
return !in_array(basename($this->Request->getScriptName()), $nologinArr, true);
}
// if we are already logged in with the session, skip everything
// same if we don't need to be authenticated
if ($this->Session->has('is_auth')) {
return 'session';
}
case 'session':
return new SessionAuth();
