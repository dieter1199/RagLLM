return format;
}
elt.style.cssText = 'position:relative;margin-right:4px;cursor:pointer;display:' + elt.style.display;
elt.style.cssFloat = 'right';
elt.setAttribute('title', mxResources.get('changeUser'));
// icon.style.cursor = 'default';
var status = mxResources.get('realtimeCollaboration');
status += ' (' + mxResources.get('online') + ')';
status += ' (' + err.message + ')';
status += ' (' + mxResources.get('disconnected') + ')';
icon.setAttribute('title', status);
elt.style.paddingRight = '4px';
var elt = this.shareButton;
elt.style.cssText = 'display:inline-block;position:relative;box-sizing:border-box;margin-right:4px;cursor:pointer;';
elt.className = 'geToolbarButton';
elt.innerText = '';
elt.style.backgroundImage = 'url(' + Editor.shareImage + ')';
elt.style.backgroundPosition = 'center center';
elt.style.backgroundRepeat = 'no-repeat';
elt.style.backgroundSize = '24px 24px';
elt.style.height = '24px';
elt.style.width = '24px';
// Share button hidden via CSS to enable notifications button
if (urlParams['sketch'] == '1')
{
this.shareButton.style.display = 'none';
}
}
if (this.buttonContainer != null)
{
this.buttonContainer.style.marginTop = '-2px';
this.buttonContainer.style.paddingTop = '4px';
this.formatWindow.window.setVisible(false);
this.formatWindow.window.destroy();
this.actions.outlineWindow.window.setVisible(false);
this.actions.outlineWindow.window.destroy();
this.actions.layersWindow.window.setVisible(false);
this.menus.tagsWindow.window.setVisible(false);
this.menus.tagsWindow.window.destroy();
this.menus.findWindow.window.setVisible(false);
this.menus.findWindow.window.destroy();
this.menus.findReplaceWindow.window.setVisible(false);
this.menus.findReplaceWindow.window.destroy();
var graph = ui.editor.graph;
ui.actions.put('importCsv', new Action(mxResources.get('csv') + '...', function()
{
graph.popupMenuHandler.hideMenu();
ui.showImportCsvDialog();
}));
ui.actions.put('importText', new Action(mxResources.get('text') + '...', function()
{
var dlg = new ParseDialog(ui, 'Insert from Text');
ui.showDialog(dlg.container, 620, 420, true, false);
dlg.init();
}));
ui.actions.put('formatSql', new Action(mxResources.get('formatSql') + '...', function()
{
var dlg = new ParseDialog(ui, 'Insert from Text', 'formatSql');
ui.showDialog(dlg.container, 620, 420, true, false);
dlg.init();
}));
ui.actions.put('toggleShapes', new Action(mxResources.get((urlParams['sketch'] == '1') ?
'moreShapes' : 'shapes') + '...', function()
if (langMenu != null)
})));
this.put('insertAdvanced', new Menu(mxUtils.bind(this, function(menu, parent)
{
ui.menus.addMenuItems(menu, ['importText', 'plantUml', 'mermaid', '-',
'formatSql', 'importCsv', '-', 'createShape', 'editDiagram'], parent);
})));
(mxUtils.bind(this, function()
{
ui.buttonContainer.style.position = '';
ui.buttonContainer.style.paddingRight = '0px';
'box-shadow:0px 0px 3px 1px #d1d1d1;padding:6px 0px 6px 6px;border-bottom:1px solid lightgray;' +
createGroup([appElt, addMenuItem(mxResources.get('shapes'), ui.actions.get('toggleShapes').funct, null,
var elt = addMenu('insert', true, (small) ? insertImage : null);
createGroup([elt, addMenuItem(mxResources.get('delete'), ui.actions.get('delete').funct,
(small) ? Editor.trashImage : null)], (small) ? 60 : null);
if (iw >= 411)
{
createGroup([undoElt, redoElt], 60);
if (iw >= 520)
{
createGroup([fitElt,
(iw >= 640) ? addMenuItem('', zoomInAction.funct, true, mxResources.get('zoomIn') + ' (' + Editor.ctrlKey + ' +)',
(iw >= 640) ? addMenuItem('', zoomOutAction.funct, true, mxResources.get('zoomOut') + ' (' + Editor.ctrlKey + ' -)',
}
}
var langMenu = ui.menus.get('language');
elt.setAttribute('title', mxResources.get('language'));
elt.style.backgroundPosition = 'center center';
elt.style.backgroundRepeat = 'no-repeat';
elt.style.backgroundSize = '24px 24px';
elt.style.height = '24px';
elt.style.width = '24px';
elt.style.top = (urlParams['embed'] == '1') ? '12px' : '11px';
