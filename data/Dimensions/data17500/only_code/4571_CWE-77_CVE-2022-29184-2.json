import static org.hamcrest.Matchers.is;
import static org.hamcrest.Matchers.not;
private static final String REVISION_0 = "b61d12de515d82d3a377ae3aae6e8abe516a2651";
private static final String REVISION_1 = "35ff2159f303ecf986b3650fc4299a6ffe5a14e1";
private static final String REVISION_2 = "ca3ebb67f527c0ad7ed26b789056823d8b9af23f";
clientRepo =  TempDirUtils.createTempDirectoryIn(tempDir, "testHgClientRepo").toFile();
secondBranchWorkingCopy =  TempDirUtils.createTempDirectoryIn(tempDir, "second").toFile();
assertThat(clientRepo.listFiles().length > 0, is(true));
public void shouldGetLatestModifications() throws Exception {
public void shouldNotIncludeCommitFromAnotherBranchInGetLatestModifications() throws Exception {
public void shouldNotGetModificationsFromOtherBranches() throws Exception {
public void shouldThrowExceptionIfUpdateFails() throws Exception {
.isExactlyInstanceOf(RuntimeException.class);
public void shouldThrowExceptionForBadConnection() throws Exception {