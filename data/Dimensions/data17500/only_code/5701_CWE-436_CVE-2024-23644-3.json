use smartcow::SmartCow;
use smartstring::alias::String as SmartString;
use crate::Error;
use HeaderNameInner::{KnownHeader, UnknownHeader};
UnknownHeader(UnknownHeaderName(smartcow)) => {
UnknownHeader(UnknownHeaderName(smartcow.into_owned()))
}
Err(()) => UnknownHeader(UnknownHeaderName(SmartCow::Owned(s.into()))),
Err(_e) => UnknownHeader(UnknownHeaderName(SmartCow::Borrowed(s))),
if s.is_ascii() {
Ok(Self(match s.parse::<KnownHeaderName>() {
Ok(known) => KnownHeader(known),
Err(()) => UnknownHeader(UnknownHeaderName(SmartCow::Owned(SmartString::from(s)))),
}))