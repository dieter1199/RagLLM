{
    "cve_id": "CVE-2016-9178",
    "cve_description": "The __get_user_asm_ex macro in arch/x86/include/asm/uaccess.h in the Linux kernel before 4.7.5 does not initialize a certain integer variable, which allows local users to obtain sensitive information from kernel stack memory by triggering failure of a get_user_ex call.",
    "cve_publish_date": "2016-11-28",
    "cwe_id": "CWE-200",
    "cwe_name": "Exposure of Sensitive Information to an Unauthorized Actor",
    "cwe_description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
    "commit_message": "fix minor infoleak in get_user_ex()\n\nget_user_ex(x, ptr) should zero x on failure.  It's not a lot of a leak\n(at most we are leaking uninitialized 64bit value off the kernel stack,\nand in a fairly constrained situation, at that), but the fix is trivial,\nso...\n\nCc: stable@vger.kernel.org\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>\n[ This sat in different branch from the uaccess fixes since mid-August ]\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "uaccess.h",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "5",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 436: \t\t     _ASM_EXTABLE_EX(1b, 2b)\t\t\t\t\\"
    ]
}
