{
    "cve_id": "CVE-2017-1001003",
    "cve_description": "math.js before 3.17.0 had an issue where private properties such as a constructor could be replaced by using unicode characters when creating an object.",
    "cve_publish_date": "2017-11-27",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "Fixed a security issue where forbidden properties like constructor could be replaced by using unicode characters when creating an object",
    "type_of_change": "Modification",
    "filename_of_changes": "ObjectNode.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "7",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 63:         if (!isSafeProperty(node.properties, key)) {",
        "// Line_Reference 64:           throw new Error('No access to property \"' + key + '\"');",
        "// Line_Reference 67:         entries.push(stringify(key) + ': ' + compile(node.properties[key], defs, args));"
    ]
}
