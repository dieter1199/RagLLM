{
    "cve_id": "CVE-2020-5206",
    "cve_description": "In Opencast before 7.6 and 8.1, using a remember-me cookie with an arbitrary username can cause Opencast to assume proper authentication for that user even if the remember-me cookie was incorrect given that the attacked endpoint also allows anonymous access. This way, an attacker can, for example, fake a remember-me token, assume the identity of the global system administrator and request non-public content from the search service without ever providing any proper authentication. This problem is fixed in Opencast 7.6 and Opencast 8.1",
    "cve_publish_date": "2020-01-30",
    "cwe_id": "CWE-287",
    "cwe_name": "Improper Authentication",
    "cwe_description": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
    "commit_message": "Authentication Bypass For Endpoints With Anonymous Access\n\nUsing a remember-me cookie with an arbitrary username can cause Opencast\nto assume proper authentication for that user even if the remember-me\ncookie was incorrect given that the attacked endpoint also allows\nanonymous access.\n\nThis way, an attacker can, for example, fake a remember-me token, assume\nthe identity of the global system administrator and request non-public\ncontent from the search service without ever providing any proper\nauthentication.\n\nThe reason for this problem is that using a remember-me cookie will\nalways cause the user in the request context to be populated, even if\nthe cookie is invalid by now. This is usually no problem, except in\ncombination with anonymous access where anonymous authentication is\ngranted and the request may continue.\n\nIn such a case, Opencast's security service would just check that a user\nexisted in the request context and assume proper authentication of this\nuser, never checking if it's actually anonymous authentication.\n\nThis patch adds this additional check, falling back to the anonymous\nuser in case of anonymous authentication.",
    "type_of_change": "Modification",
    "filename_of_changes": "SecurityServiceSpringImpl.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "10",
    "number_of_lines_deleted_vulnerable_to_cve": "6",
    "vulnerable_lines": [
        "// Line_Reference 101:     Authentication auth = SecurityContextHolder.getContext().getAuthentication();",
        "// Line_Reference 105:       if ((principal != null) && (principal instanceof UserDetails)) {",
        "// Line_Reference 114:             logger.debug(",
        "// Line_Reference 115:                     \"Authenticated user '{}' could not be found in any of the current UserProviders. Continuing anyway...\",",
        "// Line_Reference 116:                     userDetails.getUsername());",
        "// Line_Reference 123:         Set<JaxbRole> roles = new HashSet<JaxbRole>();"
    ]
}
