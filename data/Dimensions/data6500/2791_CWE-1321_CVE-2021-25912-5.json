{
    "cve_id": "CVE-2021-25912",
    "cve_description": "Prototype pollution vulnerability in 'dotty' versions 0.0.1 through 0.1.0 allows attackers to cause a denial of service and may lead to remote code execution.",
    "cve_publish_date": "2021-02-02",
    "cwe_id": "CWE-1321",
    "cwe_name": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')",
    "cwe_description": "The product receives input from an upstream component that specifies attributes that are to be initialized or updated in an object, but it does not properly control modifications of attributes of the object prototype.",
    "commit_message": "Fix prototype pollution (#26)",
    "type_of_change": "Modification",
    "filename_of_changes": "put-test.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "62",
    "number_of_lines_deleted_vulnerable_to_cve": "37",
    "vulnerable_lines": [
        "// Line_Reference 2:     vows = require(\"vows\"),",
        "// Line_Reference 3:     assert = require(\"assert\");",
        "// Line_Reference 5: vows.describe(\"put\").addBatch({",
        "// Line_Reference 6:   \"A simple path\": {",
        "// Line_Reference 7:     \"as a string\": {",
        "// Line_Reference 8:       topic: (function() { var x = {}; dotty.put(x, \"a\", \"b\"); return x; }()),",
        "// Line_Reference 9:       \"should set the correct value\": function(res) {",
        "// Line_Reference 10:         assert.equal(res.a, \"b\");",
        "// Line_Reference 12:     },",
        "// Line_Reference 13:     \"as an array\": {",
        "// Line_Reference 14:       topic: (function() { var x = {}; dotty.put(x, [\"a\"], \"b\"); return x; }()),",
        "// Line_Reference 15:       \"should set the correct value\": function(res) {",
        "// Line_Reference 16:         assert.equal(res.a, \"b\");",
        "// Line_Reference 19:   },",
        "// Line_Reference 20:   \"A two-level path\": {",
        "// Line_Reference 21:     \"as a string\": {",
        "// Line_Reference 22:       topic: (function() { var x = {}; dotty.put(x, \"a.b\", \"c\"); return x; }()),",
        "// Line_Reference 23:       \"should set the correct value\": function(res) {",
        "// Line_Reference 24:         assert.equal(res.a.b, \"c\");",
        "// Line_Reference 26:     },",
        "// Line_Reference 27:     \"as an array\": {",
        "// Line_Reference 28:       topic: (function() { var x = {}; dotty.put(x, [\"a\", \"b\"], \"c\"); return x; }()),",
        "// Line_Reference 29:       \"should set the correct value\": function(res) {",
        "// Line_Reference 30:         assert.equal(res.a.b, \"c\");",
        "// Line_Reference 33:   },",
        "// Line_Reference 34:   \"An interrupted path\": {",
        "// Line_Reference 35:     \"as a string\": {",
        "// Line_Reference 36:       topic: (function() { var x = {a: 1}; return dotty.put(x, \"a.b\", \"c\"); }()),",
        "// Line_Reference 37:       \"should return false\": function(res) {",
        "// Line_Reference 38:         assert.isFalse(res);",
        "// Line_Reference 40:     },",
        "// Line_Reference 41:     \"as an array\": {",
        "// Line_Reference 42:       topic: (function() { var x = {a: 1}; return dotty.put(x, [\"a\", \"b\"], \"c\"); }()),",
        "// Line_Reference 43:       \"should return false\": function(res) {",
        "// Line_Reference 44:         assert.isFalse(res);",
        "// Line_Reference 47:   },",
        "// Line_Reference 48: }).export(module);"
    ]
}
