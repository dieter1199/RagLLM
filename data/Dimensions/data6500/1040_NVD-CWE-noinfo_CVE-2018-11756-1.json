{
    "cve_id": "CVE-2018-11756",
    "cve_description": "In PHP Runtime for Apache OpenWhisk, a Docker action inheriting one of the Docker tags openwhisk/action-php-v7.2:1.0.0 or openwhisk/action-php-v7.1:1.0.1 (or earlier) may allow an attacker to replace the user function inside the container if the user code is vulnerable to code exploitation.",
    "cve_publish_date": "2018-07-23",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Update tests to pick up upstream changes.",
    "type_of_change": "Modification",
    "filename_of_changes": "Php7ActionContainerTests.scala",
    "code_language": "Scala",
    "number_of_lines_added_for_mitigation": "77",
    "number_of_lines_deleted_vulnerable_to_cve": "80",
    "vulnerable_lines": [
        "// Line_Reference 30:   // note: \"out\" will not be empty as the PHP web server outputs a message when",
        "// Line_Reference 31:   // it starts up",
        "// Line_Reference 34:   lazy val phpContainerImageName = \"action-php-v7.x\"",
        "// Line_Reference 44:   testEcho(Seq {",
        "// Line_Reference 45:     (",
        "// Line_Reference 46:       \"PHP\",",
        "// Line_Reference 48:           |<?php",
        "// Line_Reference 49:           |function main(array $args) : array {",
        "// Line_Reference 50:           |    echo 'hello stdout';",
        "// Line_Reference 51:           |    error_log('hello stderr');",
        "// Line_Reference 52:           |    return $args;",
        "// Line_Reference 53:           |}",
        "// Line_Reference 54:           \"\"\".stripMargin)",
        "// Line_Reference 55:   })",
        "// Line_Reference 56: ",
        "// Line_Reference 57:   testNotReturningJson(\"\"\"",
        "// Line_Reference 59:         |function main(array $args) {",
        "// Line_Reference 60:         |    return \"not a json object\";",
        "// Line_Reference 62:         \"\"\".stripMargin)",
        "// Line_Reference 64:   testUnicode(Seq {",
        "// Line_Reference 65:     (",
        "// Line_Reference 66:       \"PHP\",",
        "// Line_Reference 75:   })",
        "// Line_Reference 77:   testEnv(",
        "// Line_Reference 78:     Seq {",
        "// Line_Reference 79:       (",
        "// Line_Reference 80:         \"PHP\",",
        "// Line_Reference 81:         \"\"\"",
        "// Line_Reference 82:          |<?php",
        "// Line_Reference 83:          |function main(array $args) : array {",
        "// Line_Reference 84:          |    return [",
        "// Line_Reference 85:          |       \"env\" => $_ENV,",
        "// Line_Reference 86:          |       \"api_host\" => $_ENV['__OW_API_HOST'],",
        "// Line_Reference 87:          |       \"api_key\" => $_ENV['__OW_API_KEY'],",
        "// Line_Reference 88:          |       \"namespace\" => $_ENV['__OW_NAMESPACE'],",
        "// Line_Reference 89:          |       \"action_name\" => $_ENV['__OW_ACTION_NAME'],",
        "// Line_Reference 90:          |       \"activation_id\" => $_ENV['__OW_ACTIVATION_ID'],",
        "// Line_Reference 91:          |       \"deadline\" => $_ENV['__OW_DEADLINE'],",
        "// Line_Reference 92:          |    ];",
        "// Line_Reference 93:          |}",
        "// Line_Reference 94:          \"\"\".stripMargin.trim)",
        "// Line_Reference 95:     },",
        "// Line_Reference 96:     enforceEmptyOutputStream)",
        "// Line_Reference 97: ",
        "// Line_Reference 98:   testInitCannotBeCalledMoreThanOnce(\"\"\"",
        "// Line_Reference 99:           |<?php",
        "// Line_Reference 100:           |function main(array $args) : array {",
        "// Line_Reference 101:           |    echo 'hello stdout';",
        "// Line_Reference 102:           |    error_log('hello stderr');",
        "// Line_Reference 103:           |    return $args;",
        "// Line_Reference 104:           |}",
        "// Line_Reference 105:           \"\"\".stripMargin)",
        "// Line_Reference 130:   it should \"fail to initialize with no code\" in {",
        "// Line_Reference 131:     val (out, err) = withPhp7Container { c =>",
        "// Line_Reference 132:       val code = \"\"",
        "// Line_Reference 133: ",
        "// Line_Reference 134:       val (initCode, error) = c.init(initPayload(code))",
        "// Line_Reference 135: ",
        "// Line_Reference 136:       initCode should not be (200)",
        "// Line_Reference 137:       error shouldBe a[Some[_]]",
        "// Line_Reference 138:       error.get shouldBe a[JsObject]",
        "// Line_Reference 139:       error.get.fields(\"error\").toString should include(\"No code to execute\")",
        "// Line_Reference 140:     }",
        "// Line_Reference 141:   }",
        "// Line_Reference 142: ",
        "// Line_Reference 470:   it should \"support actions using non-default entry point\" in {",
        "// Line_Reference 471:     val (out, err) = withPhp7Container { c =>",
        "// Line_Reference 472:       val code = \"\"\"",
        "// Line_Reference 473:             | <?php",
        "// Line_Reference 474:             | function niam(array $args) {",
        "// Line_Reference 475:             |     return [result => \"it works\"];",
        "// Line_Reference 476:             | }",
        "// Line_Reference 477:             \"\"\".stripMargin",
        "// Line_Reference 478: ",
        "// Line_Reference 479:       c.init(initPayload(code, main = \"niam\"))._1 should be(200)",
        "// Line_Reference 480:       val (runCode, runRes) = c.run(runPayload(JsObject()))",
        "// Line_Reference 481:       runRes.get.fields.get(\"result\") shouldBe Some(JsString(\"it works\"))",
        "// Line_Reference 482:     }",
        "// Line_Reference 483:   }",
        "// Line_Reference 484: "
    ]
}
