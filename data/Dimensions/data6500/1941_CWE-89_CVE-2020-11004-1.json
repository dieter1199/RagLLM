{
    "cve_id": "CVE-2020-11004",
    "cve_description": "SQL Injection was discovered in Admidio before version 3.3.13. The main cookie parameter is concatenated into a SQL query without any input validation/sanitization, thus an attacker without logging in, can send a GET request with arbitrary SQL queries appended to the cookie parameter and execute SQL queries. The vulnerability impacts the confidentiality of the system. This has been patched in version 3.3.13.",
    "cve_publish_date": "2020-04-24",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "Unauthenticated Blind SQL injection #908",
    "type_of_change": "Modification",
    "filename_of_changes": "TableAccess.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "2",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 447:             $sqlWhereCondition .= ' AND ' . $columnName . ' = \\'' . $columnValue . '\\' ';",
        "// Line_Reference 451:         $returnCode = $this->readData($sqlWhereCondition);"
    ]
}
