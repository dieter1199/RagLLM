{
    "cve_id": "CVE-2020-12141",
    "cve_description": "An out-of-bounds read in the SNMP stack in Contiki-NG 4.4 and earlier allows an attacker to cause a denial of service and potentially disclose information via crafted SNMP packets to snmp_ber_decode_string_len_buffer in os/net/app-layer/snmp/snmp-ber.c.",
    "cve_publish_date": "2021-10-19",
    "cwe_id": "CWE-125",
    "cwe_name": "Out-of-bounds Read",
    "cwe_description": "The product reads data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "Refactored SNMP engine after vulnerabilities",
    "type_of_change": "Modification",
    "filename_of_changes": "snmp.h",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "73",
    "number_of_lines_deleted_vulnerable_to_cve": "49",
    "vulnerable_lines": [
        "// Line_Reference 2:  * Copyright (C) 2019 Yago Fontoura do Rosario <yago.rosario@hotmail.com.br>",
        "// Line_Reference 35:  *      An implementation of the Simple Network Management Protocol (RFC 3411-3418)",
        "// Line_Reference 44:  * \\defgroup snmp SNMP (Simple Network Management Protocol)",
        "// Line_Reference 54: #include \"contiki-net.h\"",
        "// Line_Reference 64:  * \\defgroup SNMPDefine SNMP Defines",
        "// Line_Reference 82: /** @} */",
        "// Line_Reference 83: ",
        "// Line_Reference 84: /**",
        "// Line_Reference 85:  * \\defgroup SNMPStructs SNMP Structs",
        "// Line_Reference 86:  * @{",
        "// Line_Reference 87:  */",
        "// Line_Reference 88: ",
        "// Line_Reference 123:    * @brief Union to hold the error status or the non repeaters",
        "// Line_Reference 124:    *",
        "// Line_Reference 125:    * @remarks A union was used since these values cannot co-exist",
        "// Line_Reference 127:   union error_status_non_repeaters_u {",
        "// Line_Reference 128:     /**",
        "// Line_Reference 129:      * @brief The error status",
        "// Line_Reference 130:      */",
        "// Line_Reference 131:     uint32_t error_status;",
        "// Line_Reference 132:     /**",
        "// Line_Reference 133:      * @brief The non repeaters",
        "// Line_Reference 134:      */",
        "// Line_Reference 135:     uint32_t non_repeaters;",
        "// Line_Reference 136:   } error_status_non_repeaters;",
        "// Line_Reference 138:    * @brief Union to hold the error index or the max repetitions",
        "// Line_Reference 139:    *",
        "// Line_Reference 140:    * @remarks A union was used since these values cannot co-exist",
        "// Line_Reference 142:   union error_index_max_repetitions_u {",
        "// Line_Reference 143:     /**",
        "// Line_Reference 144:      * @brief The error index",
        "// Line_Reference 145:      */",
        "// Line_Reference 146:     uint32_t error_index;",
        "// Line_Reference 147:     /**",
        "// Line_Reference 148:      * @brief The max repetitions",
        "// Line_Reference 149:      */",
        "// Line_Reference 150:     uint32_t max_repetitions;",
        "// Line_Reference 151:   } error_index_max_repetitions;",
        "// Line_Reference 160:    *",
        "// Line_Reference 161:    * @remarks The length is configurable",
        "// Line_Reference 163:   uint32_t oid[SNMP_MSG_OID_MAX_LEN];",
        "// Line_Reference 173:   union snmp_varbind_val_u {",
        "// Line_Reference 181:     struct snmp_varbind_string_s {",
        "// Line_Reference 196:      * @brief A pointer to the beggining of a oid array",
        "// Line_Reference 198:     uint32_t *oid;",
        "// Line_Reference 202: /** @}*/",
        "// Line_Reference 203: ",
        "// Line_Reference 205:  * \\defgroup SNMPFunctions SNMP Functions",
        "// Line_Reference 206:  * @{"
    ]
}
