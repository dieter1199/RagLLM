{
    "cve_id": "CVE-2021-20230",
    "cve_description": "A flaw was found in stunnel before 5.57, where it improperly validates client certificates when it is configured to use both redirect and verifyChain options. This flaw allows an attacker with a certificate signed by a Certificate Authority, which is not the one accepted by the stunnel server, to access the tunneled service instead of being redirected to the address specified in the redirect option. The highest threat from this vulnerability is to confidentiality.",
    "cve_publish_date": "2021-02-23",
    "cwe_id": "CWE-295",
    "cwe_name": "Improper Certificate Validation",
    "cwe_description": "The product does not validate, or incorrectly validates, a certificate.",
    "commit_message": "stunnel-5.57",
    "type_of_change": "Modification",
    "filename_of_changes": "client.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "80",
    "number_of_lines_deleted_vulnerable_to_cve": "55",
    "vulnerable_lines": [
        "// Line_Reference 3:  *   Copyright (C) 1998-2019 Michal Trojnara <Michal.Trojnara@stunnel.org>",
        "// Line_Reference 686:     ssize_t num;",
        "// Line_Reference 849:             num=SSL_shutdown(c->ssl); /* send close_notify alert */",
        "// Line_Reference 851:                 err=SSL_get_error(c->ssl, (int)num);",
        "// Line_Reference 859:             case SSL_ERROR_SYSCALL: /* socket error */",
        "// Line_Reference 860:                 if(parse_socket_error(c, \"SSL_shutdown\"))",
        "// Line_Reference 861:                     break; /* a non-critical error: retry */",
        "// Line_Reference 862:                 SSL_set_shutdown(c->ssl, SSL_SENT_SHUTDOWN|SSL_RECEIVED_SHUTDOWN);",
        "// Line_Reference 863:                 shutdown_wants_read=shutdown_wants_write=0;",
        "// Line_Reference 864:                 break;",
        "// Line_Reference 865:             case SSL_ERROR_ZERO_RETURN: /* connection closed */",
        "// Line_Reference 866:                 SSL_set_shutdown(c->ssl, SSL_SENT_SHUTDOWN|SSL_RECEIVED_SHUTDOWN);",
        "// Line_Reference 867:                 shutdown_wants_read=shutdown_wants_write=0;",
        "// Line_Reference 868:                 break;",
        "// Line_Reference 890:             num=writesocket(c->sock_wfd->fd, c->ssl_buff, c->ssl_ptr);",
        "// Line_Reference 911:             num=readsocket(c->sock_rfd->fd,",
        "// Line_Reference 941:             num=SSL_write(c->ssl, c->sock_buff, (int)(c->sock_ptr));",
        "// Line_Reference 942:             switch(err=SSL_get_error(c->ssl, (int)num)) {",
        "// Line_Reference 968:                 if(num && parse_socket_error(c, \"SSL_write\"))",
        "// Line_Reference 981:             case SSL_ERROR_ZERO_RETURN: /* close_notify alert received */",
        "// Line_Reference 982:                 s_log(LOG_INFO, \"TLS closed (SSL_write)\");",
        "// Line_Reference 983:                 if(SSL_version(c->ssl)==SSL2_VERSION)",
        "// Line_Reference 984:                     SSL_set_shutdown(c->ssl, SSL_SENT_SHUTDOWN|SSL_RECEIVED_SHUTDOWN);",
        "// Line_Reference 985:                 break;",
        "// Line_Reference 986:             case SSL_ERROR_SSL:",
        "// Line_Reference 987:                 sslerror(\"SSL_write\");",
        "// Line_Reference 988:                 throw_exception(c, 1);",
        "// Line_Reference 1002:             num=SSL_read(c->ssl, c->ssl_buff+c->ssl_ptr, (int)(BUFFSIZE-c->ssl_ptr));",
        "// Line_Reference 1003:             switch(err=SSL_get_error(c->ssl, (int)num)) {",
        "// Line_Reference 1027:                 if(num && parse_socket_error(c, \"SSL_read\"))",
        "// Line_Reference 1041:             case SSL_ERROR_ZERO_RETURN: /* close_notify alert received */",
        "// Line_Reference 1042:                 s_log(LOG_INFO, \"TLS closed (SSL_read)\");",
        "// Line_Reference 1043:                 if(SSL_version(c->ssl)==SSL2_VERSION)",
        "// Line_Reference 1044:                     SSL_set_shutdown(c->ssl,",
        "// Line_Reference 1045:                         SSL_SENT_SHUTDOWN|SSL_RECEIVED_SHUTDOWN);",
        "// Line_Reference 1046:                 break;",
        "// Line_Reference 1047:             case SSL_ERROR_SSL:",
        "// Line_Reference 1048:                 sslerror(\"SSL_read\");",
        "// Line_Reference 1049:                 throw_exception(c, 1);",
        "// Line_Reference 1168: #ifdef __GNUC__",
        "// Line_Reference 1169: #if __GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6)",
        "// Line_Reference 1170: #pragma GCC diagnostic push",
        "// Line_Reference 1171: #endif /* __GNUC__>=4.6 */",
        "// Line_Reference 1172: #if __GNUC__ >= 7",
        "// Line_Reference 1173: #pragma GCC diagnostic ignored \"-Wimplicit-fallthrough\"",
        "// Line_Reference 1174: #endif /* __GNUC__>=7 */",
        "// Line_Reference 1175: #endif /* __GNUC__ */",
        "// Line_Reference 1176: ",
        "// Line_Reference 1208:         /* fall through */",
        "// Line_Reference 1217: #ifdef __GNUC__",
        "// Line_Reference 1218: #if __GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6)",
        "// Line_Reference 1219: #pragma GCC diagnostic pop",
        "// Line_Reference 1220: #endif /* __GNUC__>=4.6 */",
        "// Line_Reference 1221: #endif /* __GNUC__ */",
        "// Line_Reference 1222: "
    ]
}
