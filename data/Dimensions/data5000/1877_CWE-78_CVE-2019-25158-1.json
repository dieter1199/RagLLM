{
    "cve_id": "CVE-2019-25158",
    "cve_description": "A vulnerability has been found in pedroetb tts-api up to 2.1.4 and classified as critical. This vulnerability affects the function onSpeechDone of the file app.js. The manipulation leads to os command injection. Upgrading to version 2.2.0 is able to address this issue. The patch is identified as 29d9c25415911ea2f8b6de247cb5c4607d13d434. It is recommended to upgrade the affected component. VDB-248278 is the identifier assigned to this vulnerability.",
    "cve_publish_date": "2023-12-19",
    "cwe_id": "CWE-78",
    "cwe_name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
    "cwe_description": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
    "commit_message": "Fix command injection vulnerability and other bugs\n\nChange command execution approach, from 'child_process.exec' to\n'child_process.spawn', removing the chance to send shell commands to\nAPI. This increase code complexity, but fix a serious problem in return.\n\nImprove logging, showing errors and interactions between child\nprocesses.\nReduce google_speech and gtts verbosity.\nImprove API error responses. Set charset to responses content.\n\nUse 'gain' sox effect instead of 'overdrive'.\nAdd same sox effects used in google_speech to gtts.\nPrepare gtts to accept a future option for slow reading.",
    "type_of_change": "Modification",
    "filename_of_changes": "app.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "186",
    "number_of_lines_deleted_vulnerable_to_cve": "38",
    "vulnerable_lines": [
        "// Line_Reference 23: \t\tvar port = this.address().port;",
        "// Line_Reference 24: \t\tconsole.log('Listening at port', port);",
        "// Line_Reference 36: \t\texec = childProcess.exec,",
        "// Line_Reference 37: \t\tcmd = getCmdWithArgs(body),",
        "// Line_Reference 38: \t\tcbk = onSpeechDone.bind(this, {",
        "// Line_Reference 41: \t\t});",
        "// Line_Reference 43: \tif (!cmd) {",
        "// Line_Reference 44: \t\tcbk('Empty command generated');",
        "// Line_Reference 46: \t\texec(cmd, cbk);",
        "// Line_Reference 63: ",
        "// Line_Reference 64: \treturn '';",
        "// Line_Reference 71: \t\tspeed = fields.speed,",
        "// Line_Reference 72: ",
        "// Line_Reference 73: \t\tcmd = 'google_speech' + ' -l ' + language + ' \\\"' + text + '\\\"' + ' -e overdrive 10 speed ' + speed;",
        "// Line_Reference 74: ",
        "// Line_Reference 75: \treturn cmd;",
        "// Line_Reference 83: \t\tspeedParam = speed ? ' -s' : '',",
        "// Line_Reference 84: ",
        "// Line_Reference 85: \t\tcmd = 'gtts-cli' + ' -l ' + language + speedParam + ' --nocheck \\\"' + text + '\\\"' + ' | play -t mp3 -';",
        "// Line_Reference 86: ",
        "// Line_Reference 87: \treturn cmd;",
        "// Line_Reference 93: \t\tlanguage = fields.language,",
        "// Line_Reference 94: ",
        "// Line_Reference 95: \t\tcmd = 'echo \"' + text + '\" | festival' + ' --tts --heap 1000000 --language ' + language;",
        "// Line_Reference 96: ",
        "// Line_Reference 97: \treturn cmd;",
        "// Line_Reference 106: \t\tpitch = '70',",
        "// Line_Reference 108: \t\tcmd = 'espeak' + ' -v' + language + voiceCode + ' -s ' + speed + ' -p ' + pitch + ' \\\"' + text + '\\\"';",
        "// Line_Reference 110: \treturn cmd;",
        "// Line_Reference 113: function onSpeechDone(args, err, stdout, stderr) {",
        "// Line_Reference 115: \tvar res = args.res,",
        "// Line_Reference 116: \t\tfields = args.fields;",
        "// Line_Reference 120: \t\treturn;",
        "// Line_Reference 124: \t\t'content-type': 'text/plain'",
        "// Line_Reference 126: \tres.write('error:\\n\\n');",
        "// Line_Reference 127: \tres.write(util.inspect(err) + '\\n\\n');",
        "// Line_Reference 128: \tres.write('received data:\\n\\n');",
        "// Line_Reference 129: \tres.end(util.inspect(fields));"
    ]
}
