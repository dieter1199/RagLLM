{
    "cve_id": "CVE-2019-16058",
    "cve_description": "An issue was discovered in the pam_p11 component 0.2.0 and 0.3.0 for OpenSC. If a smart card creates a signature with a length longer than 256 bytes, this triggers a buffer overflow. This may be the case for RSA keys with 4096 bits depending on the signature scheme.",
    "cve_publish_date": "2019-09-06",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "Use EVP_PKEY_size() to allocate correct size of signature buffer. (#18)\n\nDo not use fixed buffer size for signature, EVP_SignFinal() requires\r\nbuffer for signature at least  EVP_PKEY_size(pkey) bytes in size.\r\n\r\nFixes crash when using 4K RSA signatures (https://github.com/OpenSC/pam_p11/issues/16, https://github.com/OpenSC/pam_p11/issues/15)",
    "type_of_change": "Modification",
    "filename_of_changes": "pam_p11.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "13",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 637: \tunsigned char signature[256];",
        "// Line_Reference 638: \tunsigned int siglen = sizeof signature;"
    ]
}
