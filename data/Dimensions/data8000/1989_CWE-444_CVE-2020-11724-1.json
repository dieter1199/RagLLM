{
    "cve_id": "CVE-2020-11724",
    "cve_description": "An issue was discovered in OpenResty before 1.15.8.4. ngx_http_lua_subrequest.c allows HTTP request smuggling, as demonstrated by the ngx.location.capture API.",
    "cve_publish_date": "2020-04-12",
    "cwe_id": "CWE-444",
    "cwe_name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')",
    "cwe_description": "The product acts as an intermediary HTTP agent\n         (such as a proxy or firewall) in the data flow between two\n         entities such as a client and server, but it does not\n         interpret malformed HTTP requests or responses in ways that\n         are consistent with how the messages will be processed by\n         those entities that are at the ultimate destination.",
    "commit_message": "bugfix: prevented request smuggling in the ngx.location.capture API.\n\nSigned-off-by: Yichun Zhang (agentzh) <yichun@openresty.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "ngx_http_lua_subrequest.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "68",
    "number_of_lines_deleted_vulnerable_to_cve": "128",
    "vulnerable_lines": [
        "// Line_Reference 60: static ngx_int_t ngx_http_lua_set_content_length_header(ngx_http_request_t *r,",
        "// Line_Reference 61:     off_t len);",
        "// Line_Reference 82:     ngx_http_request_t *r);",
        "// Line_Reference 637:     ngx_int_t                    rc;",
        "// Line_Reference 648:         rc = ngx_http_lua_set_content_length_header(sr,",
        "// Line_Reference 649:                                                     body->buf",
        "// Line_Reference 650:                                                     ? ngx_buf_size(body->buf)",
        "// Line_Reference 651:                                                     : 0);",
        "// Line_Reference 652: ",
        "// Line_Reference 653:         if (rc != NGX_OK) {",
        "// Line_Reference 654:             return NGX_ERROR;",
        "// Line_Reference 655:         }",
        "// Line_Reference 656: ",
        "// Line_Reference 662:         rc = ngx_http_lua_set_content_length_header(sr, 0);",
        "// Line_Reference 663:         if (rc != NGX_OK) {",
        "// Line_Reference 664:             return NGX_ERROR;",
        "// Line_Reference 665:         }",
        "// Line_Reference 666: ",
        "// Line_Reference 667: #if 1",
        "// Line_Reference 669: #endif",
        "// Line_Reference 672:         if (ngx_http_lua_copy_request_headers(sr, r) != NGX_OK) {",
        "// Line_Reference 673:             return NGX_ERROR;",
        "// Line_Reference 676:         if (sr->request_body) {",
        "// Line_Reference 680:             if (sr->request_body->temp_file) {",
        "// Line_Reference 681:                 if (ngx_http_lua_copy_in_file_request_body(sr) != NGX_OK) {",
        "// Line_Reference 682:                     return NGX_ERROR;",
        "// Line_Reference 683:                 }",
        "// Line_Reference 1137: static ngx_int_t",
        "// Line_Reference 1138: ngx_http_lua_set_content_length_header(ngx_http_request_t *r, off_t len)",
        "// Line_Reference 1139: {",
        "// Line_Reference 1140:     ngx_table_elt_t                 *h, *header;",
        "// Line_Reference 1141:     u_char                          *p;",
        "// Line_Reference 1142:     ngx_list_part_t                 *part;",
        "// Line_Reference 1143:     ngx_http_request_t              *pr;",
        "// Line_Reference 1144:     ngx_uint_t                       i;",
        "// Line_Reference 1145: ",
        "// Line_Reference 1146:     r->headers_in.content_length_n = len;",
        "// Line_Reference 1147: ",
        "// Line_Reference 1148:     if (ngx_list_init(&r->headers_in.headers, r->pool, 20,",
        "// Line_Reference 1149:                       sizeof(ngx_table_elt_t)) != NGX_OK)",
        "// Line_Reference 1150:     {",
        "// Line_Reference 1151:         return NGX_ERROR;",
        "// Line_Reference 1152:     }",
        "// Line_Reference 1153: ",
        "// Line_Reference 1154:     h = ngx_list_push(&r->headers_in.headers);",
        "// Line_Reference 1155:     if (h == NULL) {",
        "// Line_Reference 1156:         return NGX_ERROR;",
        "// Line_Reference 1157:     }",
        "// Line_Reference 1158: ",
        "// Line_Reference 1159:     h->key = ngx_http_lua_content_length_header_key;",
        "// Line_Reference 1160:     h->lowcase_key = ngx_pnalloc(r->pool, h->key.len);",
        "// Line_Reference 1161:     if (h->lowcase_key == NULL) {",
        "// Line_Reference 1162:         return NGX_ERROR;",
        "// Line_Reference 1163:     }",
        "// Line_Reference 1164: ",
        "// Line_Reference 1165:     ngx_strlow(h->lowcase_key, h->key.data, h->key.len);",
        "// Line_Reference 1166: ",
        "// Line_Reference 1167:     r->headers_in.content_length = h;",
        "// Line_Reference 1168: ",
        "// Line_Reference 1169:     p = ngx_palloc(r->pool, NGX_OFF_T_LEN);",
        "// Line_Reference 1170:     if (p == NULL) {",
        "// Line_Reference 1171:         return NGX_ERROR;",
        "// Line_Reference 1172:     }",
        "// Line_Reference 1173: ",
        "// Line_Reference 1174:     h->value.data = p;",
        "// Line_Reference 1175: ",
        "// Line_Reference 1176:     h->value.len = ngx_sprintf(h->value.data, \"%O\", len) - h->value.data;",
        "// Line_Reference 1177: ",
        "// Line_Reference 1178:     h->hash = ngx_http_lua_content_length_hash;",
        "// Line_Reference 1179: ",
        "// Line_Reference 1180: #if 0",
        "// Line_Reference 1181:     dd(\"content length hash: %lu == %lu\", (unsigned long) h->hash,",
        "// Line_Reference 1182:        ngx_hash_key_lc((u_char *) \"Content-Length\",",
        "// Line_Reference 1183:                        sizeof(\"Content-Length\") - 1));",
        "// Line_Reference 1184: #endif",
        "// Line_Reference 1185: ",
        "// Line_Reference 1186:     dd(\"r content length: %.*s\",",
        "// Line_Reference 1187:        (int) r->headers_in.content_length->value.len,",
        "// Line_Reference 1188:        r->headers_in.content_length->value.data);",
        "// Line_Reference 1189: ",
        "// Line_Reference 1190:     pr = r->parent;",
        "// Line_Reference 1191: ",
        "// Line_Reference 1192:     if (pr == NULL) {",
        "// Line_Reference 1193:         return NGX_OK;",
        "// Line_Reference 1194:     }",
        "// Line_Reference 1195: ",
        "// Line_Reference 1196:     /* forward the parent request's all other request headers */",
        "// Line_Reference 1197: ",
        "// Line_Reference 1198:     part = &pr->headers_in.headers.part;",
        "// Line_Reference 1199:     header = part->elts;",
        "// Line_Reference 1200: ",
        "// Line_Reference 1201:     for (i = 0; /* void */; i++) {",
        "// Line_Reference 1202: ",
        "// Line_Reference 1203:         if (i >= part->nelts) {",
        "// Line_Reference 1204:             if (part->next == NULL) {",
        "// Line_Reference 1205:                 break;",
        "// Line_Reference 1206:             }",
        "// Line_Reference 1207: ",
        "// Line_Reference 1208:             part = part->next;",
        "// Line_Reference 1209:             header = part->elts;",
        "// Line_Reference 1210:             i = 0;",
        "// Line_Reference 1211:         }",
        "// Line_Reference 1212: ",
        "// Line_Reference 1213:         if (header[i].key.len == sizeof(\"Content-Length\") - 1",
        "// Line_Reference 1214:             && ngx_strncasecmp(header[i].key.data, (u_char *) \"Content-Length\",",
        "// Line_Reference 1215:                                sizeof(\"Content-Length\") - 1) == 0)",
        "// Line_Reference 1216:         {",
        "// Line_Reference 1217:             continue;",
        "// Line_Reference 1218:         }",
        "// Line_Reference 1219: ",
        "// Line_Reference 1220:         if (ngx_http_lua_set_input_header(r, header[i].key,",
        "// Line_Reference 1221:                                           header[i].value, 0) == NGX_ERROR)",
        "// Line_Reference 1222:         {",
        "// Line_Reference 1223:             return NGX_ERROR;",
        "// Line_Reference 1224:         }",
        "// Line_Reference 1225:     }",
        "// Line_Reference 1226: ",
        "// Line_Reference 1227:     return NGX_OK;",
        "// Line_Reference 1228: }",
        "// Line_Reference 1229: ",
        "// Line_Reference 1230: ",
        "// Line_Reference 1745: ngx_http_lua_copy_request_headers(ngx_http_request_t *sr, ngx_http_request_t *r)",
        "// Line_Reference 1747:     ngx_table_elt_t                 *header;",
        "// Line_Reference 1757:     dd(\"before: parent req headers count: %d\",",
        "// Line_Reference 1758:        (int) r->headers_in.headers.part.nelts);",
        "// Line_Reference 1760:     part = &r->headers_in.headers.part;",
        "// Line_Reference 1775:         dd(\"setting request header %.*s: %.*s\", (int) header[i].key.len,",
        "// Line_Reference 1787:        (int) r->headers_in.headers.part.nelts);"
    ]
}
