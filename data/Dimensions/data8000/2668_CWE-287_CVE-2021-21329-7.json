{
    "cve_id": "CVE-2021-21329",
    "cve_description": "RATCF is an open-source framework for hosting Cyber-Security Capture the Flag events. In affected versions of RATCF users with multi factor authentication enabled are able to log in without a valid token. This is fixed in commit cebb67b.",
    "cve_publish_date": "2021-03-08",
    "cwe_id": "CWE-287",
    "cwe_name": "Improper Authentication",
    "cwe_description": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
    "commit_message": "Refactor 2FA and prepare for fido support",
    "type_of_change": "ModificationType.ADD",
    "filename_of_changes": "views.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "67",
    "number_of_lines_deleted_vulnerable_to_cve": "22",
    "vulnerable_lines": [
        "// Line_Reference 2: import string",
        "// Line_Reference 5: import pyotp",
        "// Line_Reference 13: from rest_framework.authtoken.views import ObtainAuthToken",
        "// Line_Reference 22: from backend import renderers",
        "// Line_Reference 29: from team.models import Team",
        "// Line_Reference 30: from authentication.models import InviteCode, PasswordResetToken",
        "// Line_Reference 33: hide_password = method_decorator(sensitive_post_parameters(\"password\",))",
        "// Line_Reference 40:     renderer_classes = (renderers.RACTFJSONRenderer,)",
        "// Line_Reference 82:         totp_secret = pyotp.random_base32()",
        "// Line_Reference 83:         request.user.totp_secret = totp_secret",
        "// Line_Reference 84:         request.user.totp_status = TOTPStatus.VERIFYING",
        "// Line_Reference 85:         request.user.save()",
        "// Line_Reference 87:         return FormattedResponse({\"totp_secret\": totp_secret})",
        "// Line_Reference 95:         totp = pyotp.TOTP(request.user.totp_secret)",
        "// Line_Reference 96:         valid = totp.verify(request.data[\"otp\"], valid_window=1)",
        "// Line_Reference 97:         if valid:",
        "// Line_Reference 98:             request.user.totp_status = TOTPStatus.ENABLED",
        "// Line_Reference 99:             request.user.save()",
        "// Line_Reference 101:         return FormattedResponse({\"valid\": valid})",
        "// Line_Reference 109:         request.user.totp_status = TOTPStatus.DISABLED",
        "// Line_Reference 268:             for i in range(active_codes, serializer.validated_data[\"amount\"]+active_codes):",
        "// Line_Reference 269:                 code = f\"{''.join([random.choice(string.ascii_letters+string.digits) for _ in range(8)])}{hex(i)[2:]}\""
    ]
}
