{
    "cve_id": "CVE-2021-43799",
    "cve_description": "Zulip is an open-source team collaboration tool. Zulip Server installs RabbitMQ for internal message passing. In versions of Zulip Server prior to 4.9, the initial installation (until first reboot, or restart of RabbitMQ) does not successfully limit the default ports which RabbitMQ opens; this includes port 25672, the RabbitMQ distribution port, which is used as a management port. RabbitMQ's default \"cookie\" which protects this port is generated using a weak PRNG, which limits the entropy of the password to at most 36 bits; in practicality, the seed for the randomizer is biased, resulting in approximately 20 bits of entropy. If other firewalls (at the OS or network level) do not protect port 25672, a remote attacker can brute-force the 20 bits of entropy in the \"cookie\" and leverage it for arbitrary execution of code as the rabbitmq user. They can also read all data which is sent through RabbitMQ, which includes all message traffic sent by users. Version 4.9 contains a patch for this vulnerability. As a workaround, ensure that firewalls prevent access to ports 5672 and 25672 from outside the Zulip server.",
    "cve_publish_date": "2022-01-25",
    "cwe_id": "CWE-338",
    "cwe_name": "Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)",
    "cwe_description": "The product uses a Pseudo-Random Number Generator (PRNG) in a security context, but the PRNG's algorithm is not cryptographically strong.",
    "commit_message": "CVE-2021-43799: Set a secure Erlang cookie.\n\nThe RabbitMQ docs state ([1]):\n\n    RabbitMQ nodes and CLI tools (e.g. rabbitmqctl) use a cookie to\n    determine whether they are allowed to communicate with each\n    other. [...] The cookie is just a string of alphanumeric\n    characters up to 255 characters in size. It is usually stored in a\n    local file.\n\n...and goes on to state (emphasis ours):\n\n    If the file does not exist, Erlang VM will try to create one with\n    a randomly generated value when the RabbitMQ server starts\n    up. Using such generated cookie files are **appropriate in\n    development environments only.**\n\nThe auto-generated cookie does not use cryptographic sources of\nrandomness, and generates 20 characters of `[A-Z]`.  Because of a\nsemi-predictable seed, the entropy of this password is thus less than\nthe idealized 26^20 = 94 bits of entropy; in actuality, it is 36 bits\nof entropy, or potentially as low as 20 if the performance of the\nserver is known.\n\nThese sizes are well within the scope of remote brute-force attacks.\n\nOn provision, install, and upgrade, replace the default insecure\n20-character Erlang cookie with a cryptographically secure\n255-character string (the max length allowed).\n\n[1] https://www.rabbitmq.com/clustering.html#erlang-cookie",
    "type_of_change": "Modification",
    "filename_of_changes": "upgrade-zulip-stage-2",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "29",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 16: from typing import TYPE_CHECKING",
        "// Line_Reference 125:         \"To fix the above security issue, re-run the upgrade without --skip-puppet \"",
        "// Line_Reference 127:         \"necessary services.  Running zulip-puppet-apply by itself is not sufficient.\""
    ]
}
