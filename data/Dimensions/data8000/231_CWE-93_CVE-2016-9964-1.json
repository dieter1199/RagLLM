{
    "cve_id": "CVE-2016-9964",
    "cve_description": "redirect() in bottle.py in bottle 0.12.10 doesn't filter a \"\\r\\n\" sequence, which leads to a CRLF attack, as demonstrated by a redirect(\"233\\r\\nSet-Cookie: name=salt\") call.",
    "cve_publish_date": "2016-12-16",
    "cwe_id": "CWE-93",
    "cwe_name": "Improper Neutralization of CRLF Sequences ('CRLF Injection')",
    "cwe_description": "The product uses CRLF (carriage return line feeds) as a special element, e.g. to separate lines or records, but it does not neutralize or incorrectly neutralizes CRLF sequences from inputs.",
    "commit_message": "fix #913: Harden bottle against malformed headers.\n\nBottle now checks against certain control characters (\\n, \\r and \\0) in header names or values and raises a ValueError if the application tries to set an invalid header.",
    "type_of_change": "Modification",
    "filename_of_changes": "bottle.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "14",
    "number_of_lines_deleted_vulnerable_to_cve": "11",
    "vulnerable_lines": [
        "// Line_Reference 1576: def _hkey(s):",
        "// Line_Reference 1577:     return s.title().replace('_', '-')",
        "// Line_Reference 1578: ",
        "// Line_Reference 2173: ",
        "// Line_Reference 2192:         self.dict[_hkey(key)] = [value if isinstance(value, unicode) else",
        "// Line_Reference 2193:                                  str(value)]",
        "// Line_Reference 2196:         self.dict.setdefault(_hkey(key), []).append(",
        "// Line_Reference 2197:             value if isinstance(value, unicode) else str(value))",
        "// Line_Reference 2200:         self.dict[_hkey(key)] = [value if isinstance(value, unicode) else",
        "// Line_Reference 2201:                                  str(value)]",
        "// Line_Reference 2210:         for name in [_hkey(n) for n in names]:"
    ]
}
