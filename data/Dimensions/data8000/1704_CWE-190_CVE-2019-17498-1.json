{
    "cve_id": "CVE-2019-17498",
    "cve_description": "In libssh2 v1.9.0 and earlier versions, the SSH_MSG_DISCONNECT logic in packet.c has an integer overflow in a bounds check, enabling an attacker to specify an arbitrary (out-of-bounds) offset for a subsequent memory read. A crafted SSH server may be able to disclose sensitive information or cause a denial of service condition on the client system when a user connects to the server.",
    "cve_publish_date": "2019-10-21",
    "cwe_id": "CWE-190",
    "cwe_name": "Integer Overflow or Wraparound",
    "cwe_description": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
    "commit_message": "packet.c: improve message parsing (#402)\n\n* packet.c: improve parsing of packets\r\n\r\nfile: packet.c\r\n\r\nnotes:\r\nUse _libssh2_get_string API in SSH_MSG_DEBUG/SSH_MSG_DISCONNECT. Additional uint32 bounds check in SSH_MSG_GLOBAL_REQUEST.",
    "type_of_change": "Modification",
    "filename_of_changes": "packet.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "29",
    "number_of_lines_deleted_vulnerable_to_cve": "39",
    "vulnerable_lines": [
        "// Line_Reference 422:     char *message = NULL;",
        "// Line_Reference 423:     char *language = NULL;",
        "// Line_Reference 475:                 size_t reason = _libssh2_ntohu32(data + 1);",
        "// Line_Reference 477:                 if(datalen >= 9) {",
        "// Line_Reference 478:                     message_len = _libssh2_ntohu32(data + 5);",
        "// Line_Reference 480:                     if(message_len < datalen-13) {",
        "// Line_Reference 481:                         /* 9 = packet_type(1) + reason(4) + message_len(4) */",
        "// Line_Reference 482:                         message = (char *) data + 9;",
        "// Line_Reference 483: ",
        "// Line_Reference 484:                         language_len =",
        "// Line_Reference 485:                             _libssh2_ntohu32(data + 9 + message_len);",
        "// Line_Reference 486:                         language = (char *) data + 9 + message_len + 4;",
        "// Line_Reference 487: ",
        "// Line_Reference 488:                         if(language_len > (datalen-13-message_len)) {",
        "// Line_Reference 489:                             /* bad input, clear info */",
        "// Line_Reference 490:                             language = message = NULL;",
        "// Line_Reference 491:                             language_len = message_len = 0;",
        "// Line_Reference 492:                         }",
        "// Line_Reference 493:                     }",
        "// Line_Reference 494:                     else",
        "// Line_Reference 495:                         /* bad size, clear it */",
        "// Line_Reference 496:                         message_len = 0;",
        "// Line_Reference 497:                 }",
        "// Line_Reference 499:                     LIBSSH2_DISCONNECT(session, reason, message,",
        "// Line_Reference 500:                                        message_len, language, language_len);",
        "// Line_Reference 542:                     message_len = _libssh2_ntohu32(data + 2);",
        "// Line_Reference 543: ",
        "// Line_Reference 544:                     if(message_len <= (datalen - 10)) {",
        "// Line_Reference 545:                         /* 6 = packet_type(1) + display(1) + message_len(4) */",
        "// Line_Reference 546:                         message = (char *) data + 6;",
        "// Line_Reference 547:                         language_len = _libssh2_ntohu32(data + 6 +",
        "// Line_Reference 548:                                                         message_len);",
        "// Line_Reference 549: ",
        "// Line_Reference 550:                         if(language_len <= (datalen - 10 - message_len))",
        "// Line_Reference 551:                             language = (char *) data + 10 + message_len;",
        "// Line_Reference 552:                     }",
        "// Line_Reference 556:                     LIBSSH2_DEBUG(session, always_display, message,",
        "// Line_Reference 557:                                   message_len, language, language_len);",
        "// Line_Reference 582:                 if(datalen >= (6 + len)) {"
    ]
}
