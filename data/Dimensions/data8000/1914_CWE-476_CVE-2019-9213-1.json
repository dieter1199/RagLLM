{
    "cve_id": "CVE-2019-9213",
    "cve_description": "In the Linux kernel before 4.20.14, expand_downwards in mm/mmap.c lacks a check for the mmap minimum address, which makes it easier for attackers to exploit kernel NULL pointer dereferences on non-SMAP platforms. This is related to a capability check for the wrong task.",
    "cve_publish_date": "2019-03-05",
    "cwe_id": "CWE-476",
    "cwe_name": "NULL Pointer Dereference",
    "cwe_description": "The product dereferences a pointer that it expects to be valid but is NULL.",
    "commit_message": "mm: enforce min addr even if capable() in expand_downwards()\n\nsecurity_mmap_addr() does a capability check with current_cred(), but\nwe can reach this code from contexts like a VFS write handler where\ncurrent_cred() must not be used.\n\nThis can be abused on systems without SMAP to make NULL pointer\ndereferences exploitable again.\n\nFixes: 8869477a49c3 (\"security: protect from stack expansion into low vm addresses\")\nCc: stable@kernel.org\nSigned-off-by: Jann Horn <jannh@google.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "mmap.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "3",
    "number_of_lines_deleted_vulnerable_to_cve": "4",
    "vulnerable_lines": [
        "// Line_Reference 2429: \tint error;",
        "// Line_Reference 2432: \terror = security_mmap_addr(address);",
        "// Line_Reference 2433: \tif (error)",
        "// Line_Reference 2434: \t\treturn error;"
    ]
}
