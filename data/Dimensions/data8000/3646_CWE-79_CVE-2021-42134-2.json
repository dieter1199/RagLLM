{
    "cve_id": "CVE-2021-42134",
    "cve_description": "The Unicorn framework before 0.36.1 for Django allows XSS via a component. NOTE: this issue exists because of an incomplete fix for CVE-2021-42053.",
    "cve_publish_date": "2021-10-11",
    "cwe_id": "CWE-79",
    "cwe_name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "cwe_description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
    "commit_message": "More complete handling for preventing XSS attacks.",
    "type_of_change": "Modification",
    "filename_of_changes": "test_component.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "0",
    "number_of_lines_deleted_vulnerable_to_cve": "33",
    "vulnerable_lines": [
        "// Line_Reference 85: def test_get_frontend_context_variables_xss(component):",
        "// Line_Reference 86:     # Set component.name to a potential XSS attack",
        "// Line_Reference 87:     component.name = '<a><style>@keyframes x{}</style><a style=\"animation-name:x\" onanimationend=\"alert(1)\"></a>'",
        "// Line_Reference 88: ",
        "// Line_Reference 89:     frontend_context_variables = component.get_frontend_context_variables()",
        "// Line_Reference 90:     frontend_context_variables_dict = orjson.loads(frontend_context_variables)",
        "// Line_Reference 91:     assert len(frontend_context_variables_dict) == 1",
        "// Line_Reference 92:     assert (",
        "// Line_Reference 93:         frontend_context_variables_dict.get(\"name\")",
        "// Line_Reference 94:         == \"&lt;a&gt;&lt;style&gt;@keyframes x{}&lt;/style&gt;&lt;a style=&quot;animation-name:x&quot; onanimationend=&quot;alert(1)&quot;&gt;&lt;/a&gt;\"",
        "// Line_Reference 95:     )",
        "// Line_Reference 96: ",
        "// Line_Reference 97: ",
        "// Line_Reference 98: def test_get_frontend_context_variables_safe(component):",
        "// Line_Reference 99:     # Set component.name to a potential XSS attack",
        "// Line_Reference 100:     component.name = '<a><style>@keyframes x{}</style><a style=\"animation-name:x\" onanimationend=\"alert(1)\"></a>'",
        "// Line_Reference 101: ",
        "// Line_Reference 102:     class Meta:",
        "// Line_Reference 103:         safe = [",
        "// Line_Reference 104:             \"name\",",
        "// Line_Reference 105:         ]",
        "// Line_Reference 106: ",
        "// Line_Reference 107:     setattr(component, \"Meta\", Meta())",
        "// Line_Reference 108: ",
        "// Line_Reference 109:     frontend_context_variables = component.get_frontend_context_variables()",
        "// Line_Reference 110:     frontend_context_variables_dict = orjson.loads(frontend_context_variables)",
        "// Line_Reference 111:     assert len(frontend_context_variables_dict) == 1",
        "// Line_Reference 112:     assert (",
        "// Line_Reference 113:         frontend_context_variables_dict.get(\"name\")",
        "// Line_Reference 114:         == '<a><style>@keyframes x{}</style><a style=\"animation-name:x\" onanimationend=\"alert(1)\"></a>'",
        "// Line_Reference 115:     )",
        "// Line_Reference 116: ",
        "// Line_Reference 117: "
    ]
}
