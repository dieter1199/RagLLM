{
    "cve_id": "CVE-2021-38209",
    "cve_description": "net/netfilter/nf_conntrack_standalone.c in the Linux kernel before 5.12.2 allows observation of changes in any net namespace because these changes are leaked into all other net namespaces. This is related to the NF_SYSCTL_CT_MAX, NF_SYSCTL_CT_EXPECT_MAX, and NF_SYSCTL_CT_BUCKETS sysctls.",
    "cve_publish_date": "2021-08-08",
    "cwe_id": "CWE-203",
    "cwe_name": "Observable Discrepancy",
    "cwe_description": "The product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not.",
    "commit_message": "netfilter: conntrack: Make global sysctls readonly in non-init netns\n\nThese sysctls point to global variables:\n- NF_SYSCTL_CT_MAX (&nf_conntrack_max)\n- NF_SYSCTL_CT_EXPECT_MAX (&nf_ct_expect_max)\n- NF_SYSCTL_CT_BUCKETS (&nf_conntrack_htable_size_user)\n\nBecause their data pointers are not updated to point to per-netns\nstructures, they must be marked read-only in a non-init_net ns.\nOtherwise, changes in any net namespace are reflected in (leaked into)\nall other net namespaces. This problem has existed since the\nintroduction of net namespaces.\n\nThe current logic marks them read-only only if the net namespace is\nowned by an unprivileged user (other than init_user_ns).\n\nCommit d0febd81ae77 (\"netfilter: conntrack: re-visit sysctls in\nunprivileged namespaces\") \"exposes all sysctls even if the namespace is\nunpriviliged.\" Since we need to mark them readonly in any case, we can\nforego the unprivileged user check altogether.\n\nFixes: d0febd81ae77 (\"netfilter: conntrack: re-visit sysctls in unprivileged namespaces\")\nSigned-off-by: Jonathon Reinhart <Jonathon.Reinhart@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "type_of_change": "Modification",
    "filename_of_changes": "nf_conntrack_standalone.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "2",
    "number_of_lines_deleted_vulnerable_to_cve": "8",
    "vulnerable_lines": [
        "// Line_Reference 1063: \t/* Don't allow unprivileged users to alter certain sysctls */",
        "// Line_Reference 1064: \tif (net->user_ns != &init_user_ns) {",
        "// Line_Reference 1067: \t\ttable[NF_SYSCTL_CT_HELPER].mode = 0444;",
        "// Line_Reference 1068: #ifdef CONFIG_NF_CONNTRACK_EVENTS",
        "// Line_Reference 1069: \t\ttable[NF_SYSCTL_CT_EVENTS].mode = 0444;",
        "// Line_Reference 1070: #endif",
        "// Line_Reference 1071: \t\ttable[NF_SYSCTL_CT_BUCKETS].mode = 0444;",
        "// Line_Reference 1072: \t} else if (!net_eq(&init_net, net)) {"
    ]
}
