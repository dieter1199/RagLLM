{
    "cve_id": "CVE-2018-19824",
    "cve_description": "In the Linux kernel through 4.19.6, a local user could exploit a use-after-free in the ALSA driver by supplying a malicious USB Sound device (with zero interfaces) that is mishandled in usb_audio_probe in sound/usb/card.c.",
    "cve_publish_date": "2018-12-03",
    "cwe_id": "CWE-416",
    "cwe_name": "Use After Free",
    "cwe_description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
    "commit_message": "ALSA: usb-audio: Fix UAF decrement if card has no live interfaces in card.c\n\nIf a USB sound card reports 0 interfaces, an error condition is triggered\nand the function usb_audio_probe errors out. In the error path, there was a\nuse-after-free vulnerability where the memory object of the card was first\nfreed, followed by a decrement of the number of active chips. Moving the\ndecrement above the atomic_dec fixes the UAF.\n\n[ The original problem was introduced in 3.1 kernel, while it was\n  developed in a different form.  The Fixes tag below indicates the\n  original commit but it doesn't mean that the patch is applicable\n  cleanly. -- tiwai ]\n\nFixes: 362e4e49abe5 (\"ALSA: usb-audio - clear chip->probing on error exit\")\nReported-by: Hui Peng <benquike@gmail.com>\nReported-by: Mathias Payer <mathias.payer@nebelwelt.net>\nSigned-off-by: Hui Peng <benquike@gmail.com>\nSigned-off-by: Mathias Payer <mathias.payer@nebelwelt.net>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
    "type_of_change": "Modification",
    "filename_of_changes": "card.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "4",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 687: \t\tatomic_dec(&chip->active);"
    ]
}
