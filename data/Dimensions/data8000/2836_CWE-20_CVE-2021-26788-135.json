{
    "cve_id": "CVE-2021-26788",
    "cve_description": "Oryx Embedded CycloneTCP 1.7.6 to 2.0.0, fixed in 2.0.2, is affected by incorrect input validation, which may cause a denial of service (DoS). To exploit the vulnerability, an attacker needs to have TCP connectivity to the target system. Receiving a maliciously crafted TCP packet from an unauthenticated endpoint is sufficient to trigger the bug.",
    "cve_publish_date": "2021-03-08",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "Version 2.0.2",
    "type_of_change": "Modification",
    "filename_of_changes": "ksz8851_driver.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "84",
    "number_of_lines_deleted_vulnerable_to_cve": "71",
    "vulnerable_lines": [
        "// Line_Reference 9:  * Copyright (C) 2010-2020 Oryx Embedded SARL. All rights reserved.",
        "// Line_Reference 28:  * @version 2.0.0",
        "// Line_Reference 90:    TRACE_DEBUG(\"CIDER=0x%04\" PRIX16 \"\\r\\n\", ksz8851ReadReg(interface, KSZ8851_REG_CIDER));",
        "// Line_Reference 91:    TRACE_DEBUG(\"PHY1ILR=0x%04\" PRIX16 \"\\r\\n\", ksz8851ReadReg(interface, KSZ8851_REG_PHY1ILR));",
        "// Line_Reference 92:    TRACE_DEBUG(\"PHY1IHR=0x%04\" PRIX16 \"\\r\\n\", ksz8851ReadReg(interface, KSZ8851_REG_PHY1IHR));",
        "// Line_Reference 95:    if(ksz8851ReadReg(interface, KSZ8851_REG_CIDER) != KSZ8851_REV_A3_ID)",
        "// Line_Reference 122:    ksz8851WriteReg(interface, KSZ8851_REG_MARH, htons(interface->macAddr.w[0]));",
        "// Line_Reference 123:    ksz8851WriteReg(interface, KSZ8851_REG_MARM, htons(interface->macAddr.w[1]));",
        "// Line_Reference 124:    ksz8851WriteReg(interface, KSZ8851_REG_MARL, htons(interface->macAddr.w[2]));",
        "// Line_Reference 126:    //Packets shorter than 64 bytes are padded and the CRC is automatically generated",
        "// Line_Reference 127:    ksz8851WriteReg(interface, KSZ8851_REG_TXCR, TXCR_TXFCE | TXCR_TXPE | TXCR_TXCE);",
        "// Line_Reference 129:    ksz8851WriteReg(interface, KSZ8851_REG_TXFDPR, TXFDPR_TXFPAI);",
        "// Line_Reference 132:    ksz8851WriteReg(interface, KSZ8851_REG_RXCR1,",
        "// Line_Reference 133:       RXCR1_RXPAFMA | RXCR1_RXFCE | RXCR1_RXBE | RXCR1_RXME | RXCR1_RXUE);",
        "// Line_Reference 136:    ksz8851WriteReg(interface, KSZ8851_REG_RXCR2,",
        "// Line_Reference 137:       RXCR2_SRDBL2 | RXCR2_IUFFP | RXCR2_RXIUFCEZ);",
        "// Line_Reference 140:    ksz8851WriteReg(interface, KSZ8851_REG_RXQCR, RXQCR_RXFCTE | RXQCR_ADRFE);",
        "// Line_Reference 142:    ksz8851WriteReg(interface, KSZ8851_REG_RXFDPR, RXFDPR_RXFPAI);",
        "// Line_Reference 144:    ksz8851WriteReg(interface, KSZ8851_REG_RXFCTR, 1);",
        "// Line_Reference 147:    ksz8851ClearBit(interface, KSZ8851_REG_P1CR, P1CR_FORCE_DUPLEX);",
        "// Line_Reference 149:    ksz8851SetBit(interface, KSZ8851_REG_P1CR, P1CR_RESTART_AN);",
        "// Line_Reference 152:    ksz8851SetBit(interface, KSZ8851_REG_ISR, ISR_LCIS | ISR_TXIS |",
        "// Line_Reference 153:       ISR_RXIS | ISR_RXOIS | ISR_TXPSIS | ISR_RXPSIS | ISR_TXSAIS |",
        "// Line_Reference 154:       ISR_RXWFDIS | ISR_RXMPDIS | ISR_LDIS | ISR_EDIS | ISR_SPIBEIS);",
        "// Line_Reference 157:    ksz8851SetBit(interface, KSZ8851_REG_IER, IER_LCIE | IER_TXIE | IER_RXIE);",
        "// Line_Reference 160:    ksz8851SetBit(interface, KSZ8851_REG_TXCR, TXCR_TXE);",
        "// Line_Reference 162:    ksz8851SetBit(interface, KSZ8851_REG_RXCR1, RXCR1_RXE);",
        "// Line_Reference 228:    ier = ksz8851ReadReg(interface, KSZ8851_REG_IER);",
        "// Line_Reference 230:    ksz8851WriteReg(interface, KSZ8851_REG_IER, 0);",
        "// Line_Reference 233:    isr = ksz8851ReadReg(interface, KSZ8851_REG_ISR);",
        "// Line_Reference 236:    if((isr & ISR_LCIS) != 0)",
        "// Line_Reference 239:       ier &= ~IER_LCIE;",
        "// Line_Reference 248:    if((isr & ISR_TXIS) != 0)",
        "// Line_Reference 251:       ksz8851WriteReg(interface, KSZ8851_REG_ISR, ISR_TXIS);",
        "// Line_Reference 254:       n = ksz8851ReadReg(interface, KSZ8851_REG_TXMIR) & TXMIR_TXMA_MASK;",
        "// Line_Reference 265:    if((isr & ISR_RXIS) != 0)",
        "// Line_Reference 268:       ier &= ~IER_RXIE;",
        "// Line_Reference 277:    ksz8851WriteReg(interface, KSZ8851_REG_IER, ier);",
        "// Line_Reference 295:    status = ksz8851ReadReg(interface, KSZ8851_REG_ISR);",
        "// Line_Reference 298:    if((status & ISR_LCIS) != 0)",
        "// Line_Reference 301:       ksz8851WriteReg(interface, KSZ8851_REG_ISR, ISR_LCIS);",
        "// Line_Reference 303:       status = ksz8851ReadReg(interface, KSZ8851_REG_P1SR);",
        "// Line_Reference 306:       if((status & P1SR_LINK_GOOD) != 0)",
        "// Line_Reference 309:          if((status & P1SR_OPERATION_SPEED) != 0)",
        "// Line_Reference 319:          if((status & P1SR_OPERATION_DUPLEX) != 0)",
        "// Line_Reference 342:    if((status & ISR_RXIS) != 0)",
        "// Line_Reference 345:       ksz8851WriteReg(interface, KSZ8851_REG_ISR, ISR_RXIS);",
        "// Line_Reference 347:       frameCount = MSB(ksz8851ReadReg(interface, KSZ8851_REG_RXFCTR));",
        "// Line_Reference 360:    ksz8851SetBit(interface, KSZ8851_REG_IER, IER_LCIE | IER_RXIE);",
        "// Line_Reference 398:    n = ksz8851ReadReg(interface, KSZ8851_REG_TXMIR) & TXMIR_TXMA_MASK;",
        "// Line_Reference 410:    header.controlWord = htole16(TX_CTRL_TXIC | (context->frameId++ & TX_CTRL_TXFID));",
        "// Line_Reference 415:    ksz8851SetBit(interface, KSZ8851_REG_RXQCR, RXQCR_SDA);",
        "// Line_Reference 421:    ksz8851ClearBit(interface, KSZ8851_REG_RXQCR, RXQCR_SDA);",
        "// Line_Reference 424:    ksz8851SetBit(interface, KSZ8851_REG_TXQCR, TXQCR_METFE);",
        "// Line_Reference 427:    n = ksz8851ReadReg(interface, KSZ8851_REG_TXMIR) & TXMIR_TXMA_MASK;",
        "// Line_Reference 458:    status = ksz8851ReadReg(interface, KSZ8851_REG_RXFHSR);",
        "// Line_Reference 461:    if((status & RXFHSR_RXFV) != 0)",
        "// Line_Reference 464:       if((status & (RXFHSR_RXMR | RXFHSR_RXFTL | RXFHSR_RXRF | RXFHSR_RXCE)) == 0)",
        "// Line_Reference 467:          n = ksz8851ReadReg(interface, KSZ8851_REG_RXFHBCR) & RXFHBCR_RXBC_MASK;",
        "// Line_Reference 473:             ksz8851WriteReg(interface, KSZ8851_REG_RXFDPR, RXFDPR_RXFPAI);",
        "// Line_Reference 475:             ksz8851SetBit(interface, KSZ8851_REG_RXQCR, RXQCR_SDA);",
        "// Line_Reference 479:             ksz8851ClearBit(interface, KSZ8851_REG_RXQCR, RXQCR_SDA);",
        "// Line_Reference 493:    ksz8851SetBit(interface, KSZ8851_REG_RXQCR, RXQCR_RRXEF);",
        "// Line_Reference 539:    ksz8851WriteReg(interface, KSZ8851_REG_MAHTR0, hashTable[0]);",
        "// Line_Reference 540:    ksz8851WriteReg(interface, KSZ8851_REG_MAHTR1, hashTable[1]);",
        "// Line_Reference 541:    ksz8851WriteReg(interface, KSZ8851_REG_MAHTR2, hashTable[2]);",
        "// Line_Reference 542:    ksz8851WriteReg(interface, KSZ8851_REG_MAHTR3, hashTable[3]);",
        "// Line_Reference 545:    TRACE_DEBUG(\"  MAHTR0 = %04\" PRIX16 \"\\r\\n\", ksz8851ReadReg(interface, KSZ8851_REG_MAHTR0));",
        "// Line_Reference 546:    TRACE_DEBUG(\"  MAHTR1 = %04\" PRIX16 \"\\r\\n\", ksz8851ReadReg(interface, KSZ8851_REG_MAHTR1));",
        "// Line_Reference 547:    TRACE_DEBUG(\"  MAHTR2 = %04\" PRIX16 \"\\r\\n\", ksz8851ReadReg(interface, KSZ8851_REG_MAHTR2));",
        "// Line_Reference 548:    TRACE_DEBUG(\"  MAHTR3 = %04\" PRIX16 \"\\r\\n\", ksz8851ReadReg(interface, KSZ8851_REG_MAHTR3));"
    ]
}
