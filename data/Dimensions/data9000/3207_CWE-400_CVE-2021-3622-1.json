{
    "cve_id": "CVE-2021-3622",
    "cve_description": "A flaw was found in the hivex library. This flaw allows an attacker to input a specially crafted Windows Registry (hive) file, which would cause hivex to recursively call the _get_children() function, leading to a stack overflow. The highest threat from this vulnerability is to system availability.",
    "cve_publish_date": "2021-12-23",
    "cwe_id": "CWE-400",
    "cwe_name": "Uncontrolled Resource Consumption",
    "cwe_description": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
    "commit_message": "lib/node.c: Limit recursion in ri-records (CVE-2021-3622)\n\nWindows Registry hive \"ri\"-records are arbitrarily nested B-tree-like\nstructures:\n\n  +-------------+\n  | ri          |\n  |-------------|\n  | nr_offsets  |\n  |   offset[0] ------>  points to another lf/lh/li/ri block\n  |   offset[1] ------>\n  |   offset[2] ------>\n  +-------------+\n\nIt is possible to construct a hive with a very deeply nested tree of\nri-records, causing the internal _get_children function to recurse to\nany depth which can cause programs linked to hivex to crash with a\nstack overflow.\n\nSince it is not thought that deeply nested ri-records occur in real\nhives, limit recursion depth.  If you hit this limit you will see the\nfollowing error and the operation will return an error instead of\ncrashing:\n\n  \\> ls\n  hivex: _get_children: returning EINVAL because: ri-record nested to depth >= 32\n  ls: Invalid argument\n\nThanks to Jeremy Galindo for finding and reporting this bug.\n\nReported-by: Jeremy Galindo, Sr Security Engineer, Datto.com\nSigned-off-by: Richard W.M. Jones <rjones@redhat.com>\nFixes: CVE-2021-3622\nFixes: https://bugzilla.redhat.com/show_bug.cgi?id=1975489\n(cherry picked from commit 781a12c4a49dd81365c9c567c5aa5e19e894ba0e)",
    "type_of_change": "Modification",
    "filename_of_changes": "node.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "14",
    "number_of_lines_deleted_vulnerable_to_cve": "4",
    "vulnerable_lines": [
        "// Line_Reference 206:                           int flags);",
        "// Line_Reference 338:   if (_get_children (h, subkey_lf, &children, &blocks, flags) == -1)",
        "// Line_Reference 386:                int flags)",
        "// Line_Reference 489:       if (_get_children (h, offset, children, blocks, flags) == -1)"
    ]
}
