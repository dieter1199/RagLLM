{
    "cve_id": "CVE-2021-20230",
    "cve_description": "A flaw was found in stunnel before 5.57, where it improperly validates client certificates when it is configured to use both redirect and verifyChain options. This flaw allows an attacker with a certificate signed by a Certificate Authority, which is not the one accepted by the stunnel server, to access the tunneled service instead of being redirected to the address specified in the redirect option. The highest threat from this vulnerability is to confidentiality.",
    "cve_publish_date": "2021-02-23",
    "cwe_id": "CWE-295",
    "cwe_name": "Improper Certificate Validation",
    "cwe_description": "The product does not validate, or incorrectly validates, a certificate.",
    "commit_message": "stunnel-5.57",
    "type_of_change": "Modification",
    "filename_of_changes": "stunnel.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "45",
    "number_of_lines_deleted_vulnerable_to_cve": "42",
    "vulnerable_lines": [
        "// Line_Reference 3:  *   Copyright (C) 1998-2019 Michal Trojnara <Michal.Trojnara@stunnel.org>",
        "// Line_Reference 125:     options_defaults();",
        "// Line_Reference 126:     options_apply();",
        "// Line_Reference 154:     if(cmdline_status) /* cannot proceed */",
        "// Line_Reference 156:     options_apply();",
        "// Line_Reference 161:     if(bind_ports())",
        "// Line_Reference 167:     if(change_root())",
        "// Line_Reference 171:     if(drop_privileges(1))",
        "// Line_Reference 176:     if(log_open(SINK_OUTFILE))",
        "// Line_Reference 274:     log_flush(LOG_MODE_ERROR);",
        "// Line_Reference 459: void unbind_ports(void) {",
        "// Line_Reference 464:     CRYPTO_THREAD_write_lock(stunnel_locks[LOCK_SECTIONS]);",
        "// Line_Reference 465: ",
        "// Line_Reference 466:     opt=service_options.next;",
        "// Line_Reference 467:     service_options.next=NULL;",
        "// Line_Reference 468:     service_free(&service_options);",
        "// Line_Reference 469: ",
        "// Line_Reference 470:     while(opt) {",
        "// Line_Reference 475:         /* exec+connect service */",
        "// Line_Reference 483:         /* purge session cache of the old SSL_CTX object */",
        "// Line_Reference 484:         /* this workaround won't be needed anymore after */",
        "// Line_Reference 485:         /* delayed deallocation calls SSL_CTX_free()     */",
        "// Line_Reference 486:         if(opt->ctx)",
        "// Line_Reference 487:             SSL_CTX_flush_sessions(opt->ctx,",
        "// Line_Reference 488:                 (long)time(NULL)+opt->session_timeout+1);",
        "// Line_Reference 489:         s_log(LOG_DEBUG, \"Service [%s] closed\", opt->servname);",
        "// Line_Reference 491:         {",
        "// Line_Reference 492:             SERVICE_OPTIONS *garbage=opt;",
        "// Line_Reference 493:             opt=opt->next;",
        "// Line_Reference 494:             garbage->next=NULL;",
        "// Line_Reference 495:             service_free(garbage);",
        "// Line_Reference 496:         }",
        "// Line_Reference 498: ",
        "// Line_Reference 499:     CRYPTO_THREAD_unlock(stunnel_locks[LOCK_SECTIONS]);",
        "// Line_Reference 536: int bind_ports(void) {",
        "// Line_Reference 833:     static int delay=10; /* 10ms */",
        "// Line_Reference 855:     options_free();",
        "// Line_Reference 856:     options_apply();",
        "// Line_Reference 863:     if(bind_ports() | exec_connect_start()) {",
        "// Line_Reference 867:         if(delay > 10000) /* 10s */",
        "// Line_Reference 869:     } else {",
        "// Line_Reference 870:         delay=10; /* 10ms */"
    ]
}
