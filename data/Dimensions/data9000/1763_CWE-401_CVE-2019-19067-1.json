{
    "cve_id": "CVE-2019-19067",
    "cve_description": "Four memory leaks in the acp_hw_init() function in drivers/gpu/drm/amd/amdgpu/amdgpu_acp.c in the Linux kernel before 5.3.8 allow attackers to cause a denial of service (memory consumption) by triggering mfd_add_hotplug_devices() or pm_genpd_add_device() failures, aka CID-57be09c6e874. NOTE: third parties dispute the relevance of this because the attacker must already have privileges for module loading",
    "cve_publish_date": "2019-11-18",
    "cwe_id": "CWE-401",
    "cwe_name": "Missing Release of Memory after Effective Lifetime",
    "cwe_description": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.",
    "commit_message": "drm/amdgpu: fix multiple memory leaks in acp_hw_init\n\nIn acp_hw_init there are some allocations that needs to be released in\ncase of failure:\n\n1- adev->acp.acp_genpd should be released if any allocation attemp for\nadev->acp.acp_cell, adev->acp.acp_res or i2s_pdata fails.\n2- all of those allocations should be released if\nmfd_add_hotplug_devices or pm_genpd_add_device fail.\n3- Release is needed in case of time out values expire.\n\nReviewed-by: Christian KÃ¶nig <christian.koenig@amd.com>\nSigned-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>\nSigned-off-by: Alex Deucher <alexander.deucher@amd.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "amdgpu_acp.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "22",
    "number_of_lines_deleted_vulnerable_to_cve": "12",
    "vulnerable_lines": [
        "// Line_Reference 192: \tstruct i2s_platform_data *i2s_pdata;",
        "// Line_Reference 234: \tif (adev->acp.acp_cell == NULL)",
        "// Line_Reference 235: \t\treturn -ENOMEM;",
        "// Line_Reference 239: \t\tkfree(adev->acp.acp_cell);",
        "// Line_Reference 240: \t\treturn -ENOMEM;",
        "// Line_Reference 245: \t\tkfree(adev->acp.acp_res);",
        "// Line_Reference 246: \t\tkfree(adev->acp.acp_cell);",
        "// Line_Reference 247: \t\treturn -ENOMEM;",
        "// Line_Reference 344: \t\treturn r;",
        "// Line_Reference 351: \t\t\treturn r;",
        "// Line_Reference 370: \t\t\treturn -ETIMEDOUT;",
        "// Line_Reference 387: \t\t\treturn -ETIMEDOUT;"
    ]
}
