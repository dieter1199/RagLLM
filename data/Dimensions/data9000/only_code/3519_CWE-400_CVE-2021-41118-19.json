/**
* DynamicPageList3
* DPL UserFormatList Class
*
* @license		GPL-2.0-or-later
* @package		DynamicPageList3
*
*/
* @var constant
* Main Constructor
*
* @access	public
* @param	object	\DPL\Parameters
* @param	object	MediaWiki \Parser
* @return	void
public function __construct( \DPL\Parameters $parameters, \Parser $parser ) {
* @access	public
* @param	array	List of \DPL\Article
* @param	integer	Start position of the array to process.
* @param	integer	Total objects from the array to process.
* @return	string	Formatted list.
$sortColumn	= $this->getTableSortColumn();
$this->sort($rowsKey, $sortColumn);
* @access	public
* @param	array	Table column data
* @param	int		Index of the column to sort
* @return	void
protected function sort(&$rowsKey, $sortColumn) {
if ($sortColumn < 0) {
switch ($sortMethod) {
uasort($rowsKey, function($first, $second) {
return strnatcmp($second, $first);
});
arsort($rowsKey);
switch ($sortMethod) {
natsort($rowsKey);
break;
case 'standard':
default:
asort($rowsKey);
break;
* @access	public
* @param	object	DPL\Article
* @param	string	[Optional] Page text to include.
* @return	string	Item HTML
//Include parsed/processed wiki markup content after each item before the closing tag.
* @access	public
* @return	string	Item Start
* @access	public
* @return	string	Item End
* @access	public
* @param	array	Items as formatted by formatItem().
* @return	string	Imploded items.
