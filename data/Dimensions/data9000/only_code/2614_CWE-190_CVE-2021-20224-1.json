pixel=(unsigned char) *indexes++;
pixel=(unsigned char) *indexes++;
pixel=(unsigned char) *indexes++;
pixel=(unsigned char) *indexes++;
pixel=(unsigned char) *indexes++;
pixel=(unsigned char) *indexes++;
pixel=(unsigned char) *indexes++;
pixel=(unsigned char) *indexes++;
pixel=(unsigned char) *indexes++;
pixel=(unsigned char) *indexes++;
pixel=(unsigned char) *indexes++;
pixel=(unsigned char) *indexes++;
pixel=(unsigned char) *indexes++;
pixel=(unsigned char) *indexes++;
pixel=(unsigned char) *indexes++;
pixel=(unsigned char) *indexes++;
pixel=(unsigned char) *indexes++;
pixel=(unsigned char) *indexes++;
pixel=(unsigned char) (16*QuantumScale*((Quantum) (QuantumRange-
GetPixelOpacity(p)))+0.5);
q=PopShortPixel(quantum_info->endian,(unsigned short) GetPixelIndex(indexes+x),q);
q=PopShortPixel(quantum_info->endian,(unsigned short) GetPixelIndex(indexes+x),q);
q=PopLongPixel(quantum_info->endian,(unsigned int) GetPixelIndex(indexes+x),q);
q=PopQuantumPixel(quantum_info,
GetPixelIndex(indexes+x),q);
q=PopQuantumPixel(quantum_info,
ScaleQuantumToAny((Quantum) (GetPixelAlpha(p)),range),q);
q=PopQuantumPixel(quantum_info,
ScaleQuantumToAny(GetPixelRed(p),range),q);
q=PopShortPixel(quantum_info->endian,(unsigned short) (pixel << 4),q);
q=PopShortPixel(quantum_info->endian,(unsigned short) (pixel << 4),q);
q=PopShortPixel(quantum_info->endian,(unsigned short) (pixel << 4),q);