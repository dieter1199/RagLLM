LOAD,
bytes_data_ptr,
length_mismatch = left.typ.maxlen != right.typ.maxlen
left_over_32 = left.typ.maxlen > 32
right_over_32 = right.typ.maxlen > 32
if length_mismatch or left_over_32 or right_over_32:
left_keccak = keccak256_helper(self.expr, left, self.context)
right_keccak = keccak256_helper(self.expr, right, self.context)
if op == "eq" or op == "ne":
return IRnode.from_list([op, left_keccak, right_keccak], typ="bool")
else:
return
def load_bytearray(side):
return LOAD(bytes_data_ptr(side))
return IRnode.from_list(
# CMC 2022-03-24 TODO investigate this.
[op, load_bytearray(left), load_bytearray(right)],
typ="bool",
)
