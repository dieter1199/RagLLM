{
    "cve_id": "CVE-2024-4287",
    "cve_description": "In mintplex-labs/anything-llm, a vulnerability exists due to improper input validation in the workspace update process. Specifically, the application fails to validate or format JSON data sent in an HTTP POST request to `/api/workspace/:workspace-slug/update`, allowing it to be executed as part of a database query without restrictions. This flaw enables users with a manager role to craft a request that includes nested write operations, effectively allowing them to create new Administrator accounts.",
    "cve_publish_date": "2024-05-20",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "Enable per-workspace provider/model combination (#1042)\n\n* Enable per-workspace provider/model combination\r\n\r\n* cleanup\r\n\r\n* remove resetWorkspaceChatModels and wipeWorkspaceModelPreference to prevent workspace from resetting model\r\n\r\n* add space\r\n\r\n---------\r\n\r\nCo-authored-by: shatfield4 <seanhatfield5@gmail.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "index.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "18",
    "number_of_lines_deleted_vulnerable_to_cve": "17",
    "vulnerable_lines": [
        "// Line_Reference 33: function getLLMProvider(modelPreference = null) {",
        "// Line_Reference 34:   const vectorSelection = process.env.LLM_PROVIDER || \"openai\";",
        "// Line_Reference 36:   switch (vectorSelection) {",
        "// Line_Reference 39:       return new OpenAiLLM(embedder, modelPreference);",
        "// Line_Reference 42:       return new AzureOpenAiLLM(embedder, modelPreference);",
        "// Line_Reference 45:       return new AnthropicLLM(embedder, modelPreference);",
        "// Line_Reference 48:       return new GeminiLLM(embedder, modelPreference);",
        "// Line_Reference 51:       return new LMStudioLLM(embedder, modelPreference);",
        "// Line_Reference 54:       return new LocalAiLLM(embedder, modelPreference);",
        "// Line_Reference 57:       return new OllamaAILLM(embedder, modelPreference);",
        "// Line_Reference 60:       return new TogetherAiLLM(embedder, modelPreference);",
        "// Line_Reference 63:       return new PerplexityLLM(embedder, modelPreference);",
        "// Line_Reference 66:       return new OpenRouterLLM(embedder, modelPreference);",
        "// Line_Reference 69:       return new MistralLLM(embedder, modelPreference);",
        "// Line_Reference 72:       return new NativeLLM(embedder, modelPreference);",
        "// Line_Reference 75:       return new HuggingFaceLLM(embedder, modelPreference);",
        "// Line_Reference 78:       return new GroqLLM(embedder, modelPreference);"
    ]
}
