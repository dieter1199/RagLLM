{
    "cve_id": "CVE-2018-25066",
    "cve_description": "A vulnerability was found in PeterMu nodebatis up to 2.1.x. It has been classified as critical. Affected is an unknown function. The manipulation leads to sql injection. Upgrading to version 2.2.0 is able to address this issue. The patch is identified as 6629ff5b7e3d62ad8319007a54589ec1f62c7c35. It is recommended to upgrade the affected component. VDB-217554 is the identifier assigned to this vulnerability.",
    "cve_publish_date": "2023-01-06",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "fix bug of sql injection in sqlBuilder",
    "type_of_change": "Modification",
    "filename_of_changes": "nodebatis.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "17",
    "number_of_lines_deleted_vulnerable_to_cve": "17",
    "vulnerable_lines": [
        "// Line_Reference 59:             var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(key, data, transationConn) {",
        "// Line_Reference 94:             var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(key, data, transationConn) {",
        "// Line_Reference 122:             var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(tableName, data, transationConn) {",
        "// Line_Reference 165:             var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(tableName, data, idKey, transationConn) {",
        "// Line_Reference 208:             var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(tableName, id, idKey, transationConn) {",
        "// Line_Reference 254:             var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee13() {",
        "// Line_Reference 271:                                         var _ref7 = _asyncToGenerator(regeneratorRuntime.mark(function _callee6(key, data) {",
        "// Line_Reference 295:                                         var _ref8 = _asyncToGenerator(regeneratorRuntime.mark(function _callee7(key, data) {",
        "// Line_Reference 319:                                         var _ref9 = _asyncToGenerator(regeneratorRuntime.mark(function _callee8(tableName, data) {",
        "// Line_Reference 343:                                         var _ref10 = _asyncToGenerator(regeneratorRuntime.mark(function _callee9(tableName, data, idKey) {",
        "// Line_Reference 367:                                         var _ref11 = _asyncToGenerator(regeneratorRuntime.mark(function _callee10(tableName, id, idKey) {",
        "// Line_Reference 391:                                         var _ref12 = _asyncToGenerator(regeneratorRuntime.mark(function _callee11() {",
        "// Line_Reference 435:                                         var _ref13 = _asyncToGenerator(regeneratorRuntime.mark(function _callee12() {",
        "// Line_Reference 498:             var _ref14 = _asyncToGenerator(regeneratorRuntime.mark(function _callee15() {",
        "// Line_Reference 514:                                     var _ref15 = _asyncToGenerator(regeneratorRuntime.mark(function _callee14(key, data) {",
        "// Line_Reference 556:             var _ref16 = _asyncToGenerator(regeneratorRuntime.mark(function _callee16(conn) {",
        "// Line_Reference 584:             var _ref17 = _asyncToGenerator(regeneratorRuntime.mark(function _callee17(conn) {"
    ]
}
