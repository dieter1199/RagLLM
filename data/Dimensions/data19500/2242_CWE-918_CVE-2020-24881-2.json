{
    "cve_id": "CVE-2020-24881",
    "cve_description": "SSRF exists in osTicket before 1.14.3, where an attacker can add malicious file to server or perform port scanning.",
    "cve_publish_date": "2020-11-02",
    "cwe_id": "CWE-918",
    "cwe_name": "Server-Side Request Forgery (SSRF)",
    "cwe_description": "The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
    "commit_message": "ssrf: External Inline Images\n\nThis mitigates an SSRF security vulnerability reported by [Talat\nMehmood](https://twitter.com/Blackbatsecuri1) where we do not check if the\nsrc URL for external inline images contain a valid image extension when\ndisplaying. This means if someone puts something like `<img\nsrc=\"mymalicioussite.com/badscript.js\">` in the body of their message, when\nsomeone clicks Show Images or when the ticket is printed the server will\ncall the src URL to get the \"image\" data for display. This is a problem as\nthis could load malicious code/scripts in the browser. This adds a new\nsetting called `Allow External Images` and if Disabled we will not allow any\nexternal images in Threads. If this setting is Enabled (default), we will\nonly allow `<img>` src URLs with valid image extensions\n(`png`,`jpg`,`jpeg`,`gif`).",
    "type_of_change": "Modification",
    "filename_of_changes": "class.thread.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "4",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 2893:             return Format::clickableurls($this->body);"
    ]
}
