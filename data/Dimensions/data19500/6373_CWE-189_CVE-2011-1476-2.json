{
    "cve_id": "CVE-2011-1476",
    "cve_description": "Integer underflow in the Open Sound System (OSS) subsystem in the Linux kernel before 2.6.39 on unspecified non-x86 platforms allows local users to cause a denial of service (memory corruption) by leveraging write access to /dev/sequencer.",
    "cve_publish_date": "2012-06-21",
    "cwe_id": "CWE-189",
    "cwe_name": "Numeric Errors",
    "cwe_description": "Weaknesses in this category are related to improper calculation or conversion of numbers.",
    "commit_message": "sound/oss: remove offset from load_patch callbacks\n\nWas: [PATCH] sound/oss/midi_synth: prevent underflow, use of\nuninitialized value, and signedness issue\n\nThe offset passed to midi_synth_load_patch() can be essentially\narbitrary.  If it's greater than the header length, this will result in\na copy_from_user(dst, src, negative_val).  While this will just return\n-EFAULT on x86, on other architectures this may cause memory corruption.\nAdditionally, the length field of the sysex_info structure may not be\ninitialized prior to its use.  Finally, a signed comparison may result\nin an unintentionally large loop.\n\nOn suggestion by Takashi Iwai, version two removes the offset argument\nfrom the load_patch callbacks entirely, which also resolves similar\nissues in opl3.  Compile tested only.\n\nv3 adjusts comments and hopefully gets copy offsets right.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
    "type_of_change": "Modification",
    "filename_of_changes": "midi_synth.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "13",
    "number_of_lines_deleted_vulnerable_to_cve": "17",
    "vulnerable_lines": [
        "// Line_Reference 479: \t\t      int offs, int count, int pmgr_flag)",
        "// Line_Reference 495: \t{",
        "// Line_Reference 496: /*\t\t  printk(\"MIDI Error: Invalid patch format (key) 0x%x\\n\", format);*/",
        "// Line_Reference 498: \t}",
        "// Line_Reference 500: \t{",
        "// Line_Reference 501: /*\t\tprintk(\"MIDI Error: Patch header too short\\n\");*/",
        "// Line_Reference 503: \t}",
        "// Line_Reference 507: \t * Copy the header from user space but ignore the first bytes which have",
        "// Line_Reference 508: \t * been transferred already.",
        "// Line_Reference 511: \tif(copy_from_user(&((char *) &sysex)[offs], &(addr)[offs], hdr_size - offs))",
        "// Line_Reference 513: ",
        "// Line_Reference 514:  \tif (count < sysex.len)",
        "// Line_Reference 515: \t{",
        "// Line_Reference 516: /*\t\tprintk(KERN_WARNING \"MIDI Warning: Sysex record too short (%d<%d)\\n\", count, (int) sysex.len);*/",
        "// Line_Reference 518: \t}",
        "// Line_Reference 519:   \tleft = sysex.len;",
        "// Line_Reference 520:   \tsrc_offs = 0;"
    ]
}
