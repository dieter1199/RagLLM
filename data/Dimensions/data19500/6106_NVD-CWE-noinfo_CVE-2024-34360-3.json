{
    "cve_id": "CVE-2024-34360",
    "cve_description": "go-spacemesh is a Go implementation of the Spacemesh protocol full node. Nodes can publish activations transactions (ATXs) which reference the incorrect previous ATX of the Smesher that created the ATX. ATXs are expected to form a single chain from the newest to the first ATX ever published by an identity. Allowing Smeshers to reference an earlier (but not the latest) ATX as previous breaks this protocol rule and can serve as an attack vector where Nodes are rewarded for holding their PoST data for less than one epoch but still being eligible for rewards. This vulnerability is fixed in go-spacemesh 1.5.2-hotfix1 and Spacemesh API 1.37.1.",
    "cve_publish_date": "2024-05-14",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Verify that previous ATX points to correct ATX when handling incoming ATXs (#27)\n\n---------\n\nCo-authored-by: Bartosz Różański <bartek.roza@gmail.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "distributed_post_verification_test.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "12",
    "number_of_lines_deleted_vulnerable_to_cve": "6",
    "vulnerable_lines": [
        "// Line_Reference 265: \tlogger.Info(\"waiting for malfeasance proof\")",
        "// Line_Reference 266: \terr = malfeasanceStream(ctx, cl.Client(0), logger, func(malfeasance *pb.MalfeasanceStreamResponse) (bool, error) {",
        "// Line_Reference 269: \t\trequire.Equal(t, malfeasance.GetProof().GetSmesherId().Id, signer.NodeID().Bytes())",
        "// Line_Reference 270: \t\trequire.Equal(t, pb.MalfeasanceProof_MALFEASANCE_POST_INDEX, malfeasance.GetProof().GetKind())",
        "// Line_Reference 273: \t\trequire.NoError(t, codec.Decode(malfeasance.Proof.Proof, &proof))",
        "// Line_Reference 289: \t\terr = verifier.Verify(ctx, (*shared.Proof)(invalidAtx.NIPost.Post), meta)"
    ]
}
