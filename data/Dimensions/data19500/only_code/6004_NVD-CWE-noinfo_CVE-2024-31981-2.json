import org.xwiki.model.reference.DocumentReferenceResolver;
import org.xwiki.model.reference.EntityReferenceSerializer;
org.xwiki.xml.internal.XMLReaderFactoryComponent.class,
public class PdfExportImplTest
/**
* Verify that PDF Export can apply some CSS on the XHTML when that XHTML already has some style defined and in
* shorthand notation.
*/
@Test
public void applyCSSWhenExistingStyleDefinedUsingShorthandNotation() throws Exception
this.oldcore.getMocker().registerMockComponent(DocumentReferenceResolver.TYPE_STRING, "currentmixed");
this.oldcore.getMocker().registerMockComponent(EntityReferenceSerializer.TYPE_STRING);
this.oldcore.getMocker().registerMockComponent(DocumentAccessBridge.class);
this.oldcore.getMocker().registerMockComponent(DocumentAccessBridge.class);
this.oldcore.getMocker().registerMockComponent(VelocityManager.class);
PdfExportImpl pdfExport = new PdfExportImpl();
String html = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
+ "\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n"
String css = "span { color:red; }";
XWikiContext xcontext = this.oldcore.getXWikiContext();
when(doc.getExternalURL("view", xcontext)).thenReturn("http://localhost:8080/export");
xcontext.setDoc(doc);
+ "\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">"
+ "<html xmlns=\"http://www.w3.org/1999/xhtml\"><head>\n"
+ "      <p><span style=\"color: #f00; background-color: #fff; background-image: none; "
+ "background-position: 0% 0%; background-size: auto auto; background-origin: padding-box; "
+ "background-clip: border-box; background-repeat: repeat repeat; "
+ "background-attachment: scroll; \">Hello Cl√©ment</span></p>\n"
assertEquals(expected, pdfExport.applyCSS(html, css, xcontext));
