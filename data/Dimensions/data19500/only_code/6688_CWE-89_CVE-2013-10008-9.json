import javax.swing.JButton;
EventQueue.invokeLater(new Runnable() {
});
setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
dbPortal.finallize();
}
dbPortal.finallize();
JOptionPane.showMessageDialog(this, "  !     MySQL   !",
dbPortal.finallize();
if (dbPortal.executeNonQuery("CREATE DATABASE " + mysqlDatabaseNameTextField.getText()) != 1) {
"     !", JOptionPane.ERROR_MESSAGE);
dbPortal.disconnect();
dbPortal.finallize();
if (dbPortal.executeNonQuery("CREATE TABLE operators (operator_id int NOT NULL AUTO_INCREMENT primary key," +
"operator_username nvarchar(20) NOT NULL, operator_password nvarchar(20) NOT NULL," +
"operator_first_name nvarchar(20) NOT NULL, operator_last_name nvarchar(20) NOT NULL)") == 0) {
dbPortal.finallize();
if (dbPortal.executeNonQuery("CREATE TABLE orders (order_id int NOT NULL AUTO_INCREMENT primary key," +
"CONSTRAINT FK_OPERATORS FOREIGN KEY (order_operator_id) REFERENCES operators(operator_id) ON DELETE CASCADE ON UPDATE CASCADE)") == 0) {
dbPortal.disconnect();
dbPortal.finallize();
return false;
}
if (dbPortal.executeNonQuery("CREATE TABLE products (product_id int NOT NULL AUTO_INCREMENT primary key," +
"product_name nvarchar(30) NOT NULL, product_quantity int NOT NULL,	product_price decimal(10,2) NOT NULL)") == 0) {
dbPortal.disconnect();
dbPortal.finallize();
return false;
}
if (dbPortal.executeNonQuery("CREATE TABLE order_details (order_detail_id int NOT NULL AUTO_INCREMENT primary key," +
"CONSTRAINT FK_PRODUCTS FOREIGN KEY (order_detail_product_id) REFERENCES products(product_id) ON DELETE CASCADE ON UPDATE CASCADE)") == 0) {
dbPortal.disconnect();
dbPortal.finallize();
return false;
}
