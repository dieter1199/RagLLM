import { SNYK_CLI_PATH, SNYK_HAS_AUTHENTICATED, SNYK_LANGUAGE_SERVER_NAME } from '../constants/languageServer';
this.client.onNotification(SNYK_HAS_AUTHENTICATED, ({ token }: { token: string }) => {
this.authenticationService.updateToken(token).catch((error: Error) => {
ErrorHandler.handle(error, this.logger, error.message);
});
});
this.client.onNotification(SNYK_CLI_PATH, ({ cliPath }: { cliPath: string }) => {
if (!cliPath) {
ErrorHandler.handle(
new Error("CLI path wasn't provided by language server on $/snyk.isAvailableCli notification " + cliPath),
this.logger,
"CLI path wasn't provided by language server on notification",
);
return;
}
const currentCliPath = this.configuration.getCliPath();
if (currentCliPath != cliPath) {
this.logger.info('Setting Snyk CLI path to: ' + cliPath);
void this.configuration
.setCliPath(cliPath)
.then(() => {
this.cliReady$.next(cliPath);
})
.catch((error: Error) => {
ErrorHandler.handle(error, this.logger, error.message);
});
}
});
