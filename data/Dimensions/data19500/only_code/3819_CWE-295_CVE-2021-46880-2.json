/* $OpenBSD: x509_verify.c,v 1.53 2021/11/14 08:21:47 jsing Exp $ */
* Bring back the failure case we wanted to the xsc if
* we saved one.
if (!x509_verify_ctx_restore_xsc_error(ctx))
goto err;
* Safety net:
* We could not find a validated chain, and for some reason do not
* have an error set.
if (ctx->chains_count == 0 && ctx->error == X509_V_OK) {
ctx->error = X509_V_ERR_UNSPECIFIED;
if (ctx->xsc != NULL && ctx->xsc->error != X509_V_OK)
ctx->error = ctx->xsc->error;
}
/* Clear whatever errors happened if we have any validated chain */
if (ctx->chains_count > 0)
ctx->error = X509_V_OK;
if (ctx->xsc != NULL) {
ctx->xsc->error = ctx->error;
if (ctx->chains_count > 0) {
/* Take the first chain we found. */
if (!x509_verify_ctx_set_xsc_chain(ctx, ctx->chains[0],
1, 1))
goto err;
ctx->xsc->error = X509_V_OK;
/*
* Call the callback indicating success up our already
* verified chain. The callback could still tell us to
* fail.
*/
if(!x509_vfy_callback_indicate_success(ctx->xsc)) {
/* The callback can change the error code */
ctx->error = ctx->xsc->error;
goto err;
}
} else {
/*
* We had a failure, indicate the failure, but
* allow the callback to override at depth 0
*/
if (ctx->xsc->verify_cb(0, ctx->xsc)) {
ctx->xsc->error = X509_V_OK;
return 1;
}
return (ctx->chains_count);
if (ctx->xsc != NULL)
ctx->xsc->error = ctx->error;