{
    "cve_id": "CVE-2017-11171",
    "cve_description": "Bad reference counting in the context of accept_ice_connection() in gsm-xsmp-server.c in old versions of gnome-session up until version 2.29.92 allows a local attacker to establish ICE connections to gnome-session with invalid authentication data (an invalid magic cookie). Each failed authentication attempt will leak a file descriptor in gnome-session. When the maximum number of file descriptors is exhausted in the gnome-session process, it will enter an infinite loop trying to communicate without success, consuming 100% of the CPU. The graphical session associated with the gnome-session process will stop working correctly, because communication with gnome-session is no longer possible.",
    "cve_publish_date": "2017-07-11",
    "cwe_id": "CWE-835",
    "cwe_name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
    "cwe_description": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.",
    "commit_message": "[gsm] Delay the creation of the GsmXSMPClient until it really exists\n\nWe used to create the GsmXSMPClient before the XSMP connection is really\naccepted. This can lead to some issues, though. An example is:\nhttps://bugzilla.gnome.org/show_bug.cgi?id=598211#c19. Quoting:\n\n \"What is happening is that a new client (probably metacity in your\n case) is opening an ICE connection in the GSM_MANAGER_PHASE_END_SESSION\n phase, which causes a new GsmXSMPClient to be added to the client\n store. The GSM_MANAGER_PHASE_EXIT phase then begins before the client\n has had a chance to establish a xsmp connection, which means that\n client->priv->conn will not be initialized at the point that xsmp_stop\n is called on the new unregistered client.\"\n\nThe fix is to create the GsmXSMPClient object when there's a real XSMP\nconnection. This implies moving the timeout that makes sure we don't\nhave an empty client to the XSMP server.\n\nhttps://bugzilla.gnome.org/show_bug.cgi?id=598211",
    "type_of_change": "Modification",
    "filename_of_changes": "gsm-xsmp-server.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "124",
    "number_of_lines_deleted_vulnerable_to_cve": "26",
    "vulnerable_lines": [
        "// Line_Reference 95:  * connection is first received on the ICE listening socket. (We",
        "// Line_Reference 96:  * expect that the client will then initiate XSMP on the connection;",
        "// Line_Reference 97:  * if it does not, GsmXSMPClient will eventually time out and close",
        "// Line_Reference 98:  * the connection.)",
        "// Line_Reference 99:  *",
        "// Line_Reference 100:  * FIXME: it would probably make more sense to not create a",
        "// Line_Reference 101:  * GsmXSMPClient object until accept_xsmp_connection, below (and to do",
        "// Line_Reference 102:  * the timing-out here in xsmp.c).",
        "// Line_Reference 109:         IceListenObj    listener;",
        "// Line_Reference 112:         GsmClient      *client;",
        "// Line_Reference 113:         GsmXsmpServer  *server;",
        "// Line_Reference 114: ",
        "// Line_Reference 115:         listener = data->listener;",
        "// Line_Reference 116:         server = data->server;",
        "// Line_Reference 120:         ice_conn = IceAcceptConnection (listener, &status);",
        "// Line_Reference 126:         client = gsm_xsmp_client_new (ice_conn);",
        "// Line_Reference 127:         ice_conn->context = client;",
        "// Line_Reference 128: ",
        "// Line_Reference 129:         gsm_store_add (server->priv->client_store, gsm_client_peek_id (client), G_OBJECT (client));",
        "// Line_Reference 130:         /* the store will own the ref */",
        "// Line_Reference 131:         g_object_unref (client);",
        "// Line_Reference 227:         IceConn        ice_conn;",
        "// Line_Reference 228:         GsmXSMPClient *client;",
        "// Line_Reference 239:         client = ice_conn->context;",
        "// Line_Reference 241:         g_return_val_if_fail (client != NULL, TRUE);",
        "// Line_Reference 243:         gsm_xsmp_client_connect (client, sms_conn, mask_ret, callbacks_ret);"
    ]
}
