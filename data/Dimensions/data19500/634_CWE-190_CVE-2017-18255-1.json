{
    "cve_id": "CVE-2017-18255",
    "cve_description": "The perf_cpu_time_max_percent_handler function in kernel/events/core.c in the Linux kernel before 4.11 allows local users to cause a denial of service (integer overflow) or possibly have unspecified other impact via a large value, as demonstrated by an incorrect sample-rate calculation.",
    "cve_publish_date": "2018-03-31",
    "cwe_id": "CWE-190",
    "cwe_name": "Integer Overflow or Wraparound",
    "cwe_description": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
    "commit_message": "perf/core: Fix the perf_cpu_time_max_percent check\n\nUse \"proc_dointvec_minmax\" instead of \"proc_dointvec\" to check the input\nvalue from user-space.\n\nIf not, we can set a big value and some vars will overflow like\n\"sysctl_perf_event_sample_rate\" which will cause a lot of unexpected\nproblems.\n\nSigned-off-by: Tan Xiaojun <tanxiaojun@huawei.com>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nCc: <acme@kernel.org>\nCc: <alexander.shishkin@linux.intel.com>\nCc: Alexander Shishkin <alexander.shishkin@linux.intel.com>\nCc: Arnaldo Carvalho de Melo <acme@redhat.com>\nCc: Jiri Olsa <jolsa@redhat.com>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Stephane Eranian <eranian@google.com>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: Vince Weaver <vincent.weaver@maine.edu>\nLink: http://lkml.kernel.org/r/1487829879-56237-1-git-send-email-tanxiaojun@huawei.com\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "core.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 458: \tint ret = proc_dointvec(table, write, buffer, lenp, ppos);"
    ]
}
