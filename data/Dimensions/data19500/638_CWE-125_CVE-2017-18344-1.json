{
    "cve_id": "CVE-2017-18344",
    "cve_description": "The timer_create syscall implementation in kernel/time/posix-timers.c in the Linux kernel before 4.14.8 doesn't properly validate the sigevent->sigev_notify field, which leads to out-of-bounds access in the show_timer function (called when /proc/$PID/timers is read). This allows userspace applications to read arbitrary kernel memory (on a kernel built with CONFIG_POSIX_TIMERS and CONFIG_CHECKPOINT_RESTORE).",
    "cve_publish_date": "2018-07-26",
    "cwe_id": "CWE-125",
    "cwe_name": "Out-of-bounds Read",
    "cwe_description": "The product reads data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "posix-timer: Properly check sigevent->sigev_notify\n\ntimer_create() specifies via sigevent->sigev_notify the signal delivery for\nthe new timer. The valid modes are SIGEV_NONE, SIGEV_SIGNAL, SIGEV_THREAD\nand (SIGEV_SIGNAL | SIGEV_THREAD_ID).\n\nThe sanity check in good_sigevent() is only checking the valid combination\nfor the SIGEV_THREAD_ID bit, i.e. SIGEV_SIGNAL, but if SIGEV_THREAD_ID is\nnot set it accepts any random value.\n\nThis has no real effects on the posix timer and signal delivery code, but\nit affects show_timer() which handles the output of /proc/$PID/timers. That\nfunction uses a string array to pretty print sigev_notify. The access to\nthat array has no bound checks, so random sigev_notify cause access beyond\nthe array bounds.\n\nAdd proper checks for the valid notify modes and remove the SIGEV_THREAD_ID\nmasking from various code pathes as SIGEV_NONE can never be set in\ncombination with SIGEV_THREAD_ID.\n\nReported-by: Eric Biggers <ebiggers3@gmail.com>\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nReported-by: Alexey Dobriyan <adobriyan@gmail.com>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nCc: John Stultz <john.stultz@linaro.org>\nCc: stable@vger.kernel.org",
    "type_of_change": "Modification",
    "filename_of_changes": "posix-timers.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "17",
    "number_of_lines_deleted_vulnerable_to_cve": "12",
    "vulnerable_lines": [
        "// Line_Reference 437: \tif ((event->sigev_notify & SIGEV_THREAD_ID ) &&",
        "// Line_Reference 438: \t\t(!(rtn = find_task_by_vpid(event->sigev_notify_thread_id)) ||",
        "// Line_Reference 439: \t\t !same_thread_group(rtn, current) ||",
        "// Line_Reference 440: \t\t (event->sigev_notify & ~SIGEV_THREAD_ID) != SIGEV_SIGNAL))",
        "// Line_Reference 442: ",
        "// Line_Reference 443: \tif (((event->sigev_notify & ~SIGEV_THREAD_ID) != SIGEV_NONE) &&",
        "// Line_Reference 444: \t    ((event->sigev_signo <= 0) || (event->sigev_signo > SIGRTMAX)))",
        "// Line_Reference 445: \t\treturn NULL;",
        "// Line_Reference 446: ",
        "// Line_Reference 447: \treturn task_pid(rtn);",
        "// Line_Reference 672: \tsig_none = (timr->it_sigev_notify & ~SIGEV_THREAD_ID) == SIGEV_NONE;",
        "// Line_Reference 859: \tsigev_none = (timr->it_sigev_notify & ~SIGEV_THREAD_ID) == SIGEV_NONE;"
    ]
}
