{
    "cve_id": "CVE-2022-29582",
    "cve_description": "In the Linux kernel before 5.17.3, fs/io_uring.c has a use-after-free due to a race condition in io_uring timeouts. This can be triggered by a local user who has no access to any user namespace; however, the race condition perhaps can only be exploited infrequently.",
    "cve_publish_date": "2022-04-22",
    "cwe_id": "CWE-362",
    "cwe_name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
    "cwe_description": "The product contains a code sequence that can run concurrently with other code, and the code sequence requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence that is operating concurrently.",
    "commit_message": "io_uring: fix race between timeout flush and removal\n\nio_flush_timeouts() assumes the timeout isn't in progress of triggering\nor being removed/canceled, so it unconditionally removes it from the\ntimeout list and attempts to cancel it.\n\nLeave it on the list and let the normal timeout cancelation take care\nof it.\n\nCc: stable@vger.kernel.org # 5.5+\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
    "type_of_change": "Modification",
    "filename_of_changes": "io_uring.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "3",
    "number_of_lines_deleted_vulnerable_to_cve": "4",
    "vulnerable_lines": [
        "// Line_Reference 1741: \twhile (!list_empty(&ctx->timeout_list)) {",
        "// Line_Reference 1743: \t\tstruct io_kiocb *req = list_first_entry(&ctx->timeout_list,",
        "// Line_Reference 1744: \t\t\t\t\t\tstruct io_kiocb, timeout.list);",
        "// Line_Reference 1761: \t\tlist_del_init(&req->timeout.list);"
    ]
}
