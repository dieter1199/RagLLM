{
    "cve_id": "CVE-2022-25297",
    "cve_description": "This affects the package drogonframework/drogon before 1.7.5. The unsafe handling of file names during upload using HttpFile::save() method may enable attackers to write files to arbitrary locations outside the designated target folder.",
    "cve_publish_date": "2022-02-21",
    "cwe_id": "CWE-552",
    "cwe_name": "Files or Directories Accessible to External Parties",
    "cwe_description": "The product makes files or directories accessible to unauthorized actors, even though they should not be.",
    "commit_message": "Prevent malformed upload path causing arbitrary write (#1174)",
    "type_of_change": "Modification",
    "filename_of_changes": "HttpFileImpl.cc",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "30",
    "number_of_lines_deleted_vulnerable_to_cve": "12",
    "vulnerable_lines": [
        "// Line_Reference 34:     filesystem::path fsPath(utils::toNativePath(path));",
        "// Line_Reference 35:     if (!fsPath.is_absolute() &&",
        "// Line_Reference 36:         (!fsPath.has_parent_path() ||",
        "// Line_Reference 37:          (fsPath.begin()->string() != \".\" && fsPath.begin()->string() != \"..\")))",
        "// Line_Reference 39:         filesystem::path fsUploadPath(utils::toNativePath(",
        "// Line_Reference 40:             HttpAppFrameworkImpl::instance().getUploadPath()));",
        "// Line_Reference 41:         fsPath = fsUploadPath / fsPath;",
        "// Line_Reference 43:     filesystem::path fsFileName(utils::toNativePath(fileName_));",
        "// Line_Reference 44:     if (!filesystem::exists(fsPath))",
        "// Line_Reference 46:         LOG_TRACE << \"create path:\" << fsPath;",
        "// Line_Reference 48:         filesystem::create_directories(fsPath, err);",
        "// Line_Reference 55:     return saveTo(fsPath / fsFileName);"
    ]
}
