{
    "cve_id": "CVE-2020-36634",
    "cve_description": "A vulnerability classified as problematic has been found in Indeed Engineering util up to 1.0.33. Affected is the function visit/appendTo of the file varexport/src/main/java/com/indeed/util/varexport/servlet/ViewExportedVariablesServlet.java. The manipulation leads to cross site scripting. It is possible to launch the attack remotely. Upgrading to version 1.0.34 is able to address this issue. The name of the patch is c0952a9db51a880e9544d9fac2a2218a6bfc9c63. It is recommended to upgrade the affected component. VDB-216882 is the identifier assigned to this vulnerability.",
    "cve_publish_date": "2022-12-27",
    "cwe_id": "CWE-79",
    "cwe_name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "cwe_description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
    "commit_message": "COMMON-3969: Explicit alphanumeric n-gram indexes\n\nExplicitly build alphanumeric n-gram indexes to avoid XSS due\nto unescaped characters in the rendered n-gram indexes JSON",
    "type_of_change": "Modification",
    "filename_of_changes": "ViewExportedVariablesServlet.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "57",
    "number_of_lines_deleted_vulnerable_to_cve": "24",
    "vulnerable_lines": [
        "// Line_Reference 7: import com.google.common.collect.*;",
        "// Line_Reference 28: import java.util.*;",
        "// Line_Reference 290:             final String varsIndex = buildIndex(varList);",
        "// Line_Reference 291:             root.put(\"varsIndex\", varsIndex);",
        "// Line_Reference 301:     private String buildIndex(final List<Variable> varList) {",
        "// Line_Reference 302:         final SetMultimap<String, Integer> uniGram = buildNGramIndex(varList, 1);",
        "// Line_Reference 303:         final SetMultimap<String, Integer> biGram = buildNGramIndex(varList, 2);",
        "// Line_Reference 304:         final SetMultimap<String, Integer> triGram = buildNGramIndex(varList, 3);",
        "// Line_Reference 307:         json.append(\"\\\"uniGram\\\":\").append('\\n');",
        "// Line_Reference 308:         appendTo(json, uniGram).append(',').append('\\n');",
        "// Line_Reference 310:         appendTo(json, biGram).append(',').append('\\n');;",
        "// Line_Reference 312:         appendTo(json, triGram);",
        "// Line_Reference 336:     private SetMultimap<String, Integer> buildNGramIndex(final List<Variable> varList, final int n) {",
        "// Line_Reference 337:         final TreeMultimap<String, Integer> uniGram = TreeMultimap.create();",
        "// Line_Reference 338:         for (int index = 0; index < varList.size(); index++) {",
        "// Line_Reference 339:             final Variable var = varList.get(index);",
        "// Line_Reference 340:             final String[] indexableNames = var.getIndexableNames();",
        "// Line_Reference 341:             for (final String indexableName : indexableNames) {",
        "// Line_Reference 342:                 for (int i = 0; i < indexableName.length() - n + 1; i++) {",
        "// Line_Reference 343:                     final String key = indexableName.substring(i, i + n);",
        "// Line_Reference 344:                     uniGram.put(key, index);",
        "// Line_Reference 345:                 }",
        "// Line_Reference 346:             }",
        "// Line_Reference 348:         return uniGram;"
    ]
}
