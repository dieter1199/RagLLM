{
    "cve_id": "CVE-2019-20399",
    "cve_description": "A timing vulnerability in the Scalar::check_overflow function in Parity libsecp256k1-rs before 0.3.1 potentially allows an attacker to leak information via a side-channel attack.",
    "cve_publish_date": "2020-01-23",
    "cwe_id": "CWE-203",
    "cwe_name": "Observable Discrepancy",
    "cwe_description": "The product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not.",
    "commit_message": "Prevent side channel leak in Scala::check_overflow",
    "type_of_change": "Modification",
    "filename_of_changes": "scalar.rs",
    "code_language": "Rust",
    "number_of_lines_added_for_mitigation": "16",
    "number_of_lines_deleted_vulnerable_to_cve": "15",
    "vulnerable_lines": [
        "// Line_Reference 72:         let mut yes: bool = false;",
        "// Line_Reference 73:         let mut no: bool = false;",
        "// Line_Reference 74:         no = no || (self.0[7] < SECP256K1_N_7); /* No need for a > check. */",
        "// Line_Reference 75:         no = no || (self.0[6] < SECP256K1_N_6); /* No need for a > check. */",
        "// Line_Reference 76:         no = no || (self.0[5] < SECP256K1_N_5); /* No need for a > check. */",
        "// Line_Reference 77:         no = no || (self.0[4] < SECP256K1_N_4);",
        "// Line_Reference 78:         yes = yes || ((self.0[4] > SECP256K1_N_4) && !no);",
        "// Line_Reference 79:         no = no || ((self.0[3] < SECP256K1_N_3) && !yes);",
        "// Line_Reference 80:         yes = yes || ((self.0[3] > SECP256K1_N_3) && !no);",
        "// Line_Reference 81:         no = no || ((self.0[2] < SECP256K1_N_2) && !yes);",
        "// Line_Reference 82:         yes = yes || ((self.0[2] > SECP256K1_N_2) && !no);",
        "// Line_Reference 83:         no = no || ((self.0[1] < SECP256K1_N_1) && !yes);",
        "// Line_Reference 84:         yes = yes || ((self.0[1] > SECP256K1_N_1) && !no);",
        "// Line_Reference 85:         yes = yes || ((self.0[0] >= SECP256K1_N_0) && !no);",
        "// Line_Reference 86:         return yes;"
    ]
}
