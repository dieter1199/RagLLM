{
    "cve_id": "CVE-2024-0795",
    "cve_description": "If an attacked was given access to an instance with the admin or manager role there is no backend authentication that would prevent the attacked from creating a new user with an `admin` role and then be able to use this new account to have elevated privileges on the instance",
    "cve_publish_date": "2024-03-02",
    "cwe_id": "CWE-284",
    "cwe_name": "Improper Access Control",
    "cwe_description": "The product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.",
    "commit_message": "Implement total permission overhaul (#629)\n\n* Implement total permission overhaul\r\nAdd explicit permissions on each flex and strict route\r\nPatch issues with role escalation and CRUD of users\r\nPatch permissions on all routes for coverage\r\nImprove middleware to accept role array for clarity\r\n\r\n* update comments\r\n\r\n* remove permissions to API-keys for manager. Manager could generate API-key and using high-privelege api-key give themselves admin\r\n\r\n* update sidebar permissions for multi-user and single user\r\n\r\n* update options for mobile sidebar",
    "type_of_change": "ModificationType.ADD",
    "filename_of_changes": "utils.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "22",
    "number_of_lines_deleted_vulnerable_to_cve": "53",
    "vulnerable_lines": [
        "// Line_Reference 35: async function convertToCSV(workspaceChatsMap) {",
        "// Line_Reference 36:   const rows = [\"role,content\"];",
        "// Line_Reference 37:   for (const workspaceChats of Object.values(workspaceChatsMap)) {",
        "// Line_Reference 38:     for (const message of workspaceChats.messages) {",
        "// Line_Reference 39:       // Escape double quotes and wrap content in double quotes",
        "// Line_Reference 40:       const escapedContent = `\"${message.content",
        "// Line_Reference 41:         .replace(/\"/g, '\"\"')",
        "// Line_Reference 42:         .replace(/\\n/g, \" \")}\"`;",
        "// Line_Reference 43:       rows.push(`${message.role},${escapedContent}`);",
        "// Line_Reference 44:     }",
        "// Line_Reference 45:   }",
        "// Line_Reference 46:   return rows.join(\"\\n\");",
        "// Line_Reference 47: }",
        "// Line_Reference 48: ",
        "// Line_Reference 49: async function convertToJSON(workspaceChatsMap) {",
        "// Line_Reference 50:   const allMessages = [].concat.apply(",
        "// Line_Reference 51:     [],",
        "// Line_Reference 52:     Object.values(workspaceChatsMap).map((workspace) => workspace.messages)",
        "// Line_Reference 53:   );",
        "// Line_Reference 54:   return JSON.stringify(allMessages);",
        "// Line_Reference 55: }",
        "// Line_Reference 56: ",
        "// Line_Reference 57: async function convertToJSONL(workspaceChatsMap) {",
        "// Line_Reference 58:   return Object.values(workspaceChatsMap)",
        "// Line_Reference 59:     .map((workspaceChats) => JSON.stringify(workspaceChats))",
        "// Line_Reference 60:     .join(\"\\n\");",
        "// Line_Reference 61: }",
        "// Line_Reference 62: ",
        "// Line_Reference 63: function utilEndpoints(app) {",
        "// Line_Reference 64:   if (!app) return;",
        "// Line_Reference 65: ",
        "// Line_Reference 66:   app.get(\"/utils/metrics\", async (_, response) => {",
        "// Line_Reference 67:     try {",
        "// Line_Reference 68:       const metrics = {",
        "// Line_Reference 69:         online: true,",
        "// Line_Reference 70:         version: getGitVersion(),",
        "// Line_Reference 71:         mode: (await SystemSettings.isMultiUserMode())",
        "// Line_Reference 72:           ? \"multi-user\"",
        "// Line_Reference 73:           : \"single-user\",",
        "// Line_Reference 74:         vectorDB: process.env.VECTOR_DB || \"lancedb\",",
        "// Line_Reference 75:         storage: await getDiskStorage(),",
        "// Line_Reference 76:       };",
        "// Line_Reference 77:       response.status(200).json(metrics);",
        "// Line_Reference 78:     } catch (e) {",
        "// Line_Reference 79:       console.error(e);",
        "// Line_Reference 80:       response.sendStatus(500).end();",
        "// Line_Reference 81:     }",
        "// Line_Reference 82:   });",
        "// Line_Reference 83: }",
        "// Line_Reference 84: ",
        "// Line_Reference 88:   convertToCSV,",
        "// Line_Reference 89:   convertToJSON,",
        "// Line_Reference 90:   convertToJSONL,"
    ]
}
