"github.com/google/fscrypt/util"
handle *C.pam_handle_t
status C.int
// OrigUser is the user who invoked the PAM module (usually root)
OrigUser *user.User
// PamUser is the user who the PAM module is for
if h.PamUser, err = user.Lookup(C.GoString(pamUsername)); err != nil {
return nil, err
}
if h.OrigUser, err = util.EffectiveUser(); err != nil {
return nil, err
}
return h, nil
return security.SetProcessPrivileges(h.PamUser)
// PAM module (this is usually root). As this error is often ignored in a defer
// statement, any error is also logged.
err := security.SetProcessPrivileges(h.OrigUser)