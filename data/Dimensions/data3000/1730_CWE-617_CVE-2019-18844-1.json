{
    "cve_id": "CVE-2019-18844",
    "cve_description": "The Device Model in ACRN before 2019w25.5-140000p relies on assert calls in devicemodel/hw/pci/core.c and devicemodel/include/pci_core.h (instead of other mechanisms for propagating error information or diagnostic information), which might allow attackers to cause a denial of service (assertion failure) within pci core. This is fixed in 1.2. 6199e653418e is a mitigation for pre-1.1 versions, whereas 2b3dedfb9ba1 is a mitigation for 1.1.",
    "cve_publish_date": "2019-11-13",
    "cwe_id": "CWE-617",
    "cwe_name": "Reachable Assertion",
    "cwe_description": "The product contains an assert() or similar statement that can be triggered by an attacker, which leads to an application exit or other behavior that is more severe than necessary.",
    "commit_message": "dm: pci: clean up assert() in pci core\n\nTracked-On: #3252\nSigned-off-by: Shuo A Liu <shuo.a.liu@intel.com>\nReviewed-by: Yonghua Huang <yonghua.huang@intel.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "core.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "90",
    "number_of_lines_deleted_vulnerable_to_cve": "69",
    "vulnerable_lines": [
        "// Line_Reference 429: \tassert(bidx <= PCI_BARMAX);",
        "// Line_Reference 430: \tassert(pdi->bar[bidx].type == PCIBAR_MEM32 ||",
        "// Line_Reference 431: \t       pdi->bar[bidx].type == PCIBAR_MEM64);",
        "// Line_Reference 432: \tassert(addr >= pdi->bar[bidx].addr &&",
        "// Line_Reference 433: \t       addr + size <= pdi->bar[bidx].addr + pdi->bar[bidx].size);",
        "// Line_Reference 476: \tassert((size & (size - 1)) == 0);\t/* must be a power of 2 */",
        "// Line_Reference 499: static void",
        "// Line_Reference 518: \t\treturn;",
        "// Line_Reference 553: \tassert(error == 0);",
        "// Line_Reference 627: \t\tassert(0);",
        "// Line_Reference 645: \tassert(idx >= 0 && idx <= PCI_BARMAX);",
        "// Line_Reference 646: ",
        "// Line_Reference 706: \t\tprintf(\"%s: invalid bar type %d\\n\", __func__, type);",
        "// Line_Reference 707: \t\tassert(0);",
        "// Line_Reference 725: \t\tassert(idx + 1 <= PCI_BARMAX);",
        "// Line_Reference 768: \tassert(caplen > 0);",
        "// Line_Reference 769: ",
        "// Line_Reference 916: void",
        "// Line_Reference 922: \tassert((msgnum & (msgnum - 1)) == 0 && msgnum >= 1 && msgnum <= 32);",
        "// Line_Reference 936: \tpci_populate_msicap(&msicap, msgnum, 0);",
        "// Line_Reference 937: ",
        "// Line_Reference 938: \treturn pci_emul_add_capability(dev, (u_char *)&msicap, sizeof(msicap));",
        "// Line_Reference 946: \tassert(msix_tab_size % 4096 == 0);",
        "// Line_Reference 947: ",
        "// Line_Reference 967: static void",
        "// Line_Reference 972: \tassert(table_entries > 0);",
        "// Line_Reference 973: \tassert(table_entries <= MAX_MSIX_TABLE_ENTRIES);",
        "// Line_Reference 974: ",
        "// Line_Reference 977: ",
        "// Line_Reference 978: \tassert(dev->msix.table != NULL);",
        "// Line_Reference 991: \tassert(msgnum >= 1 && msgnum <= MAX_MSIX_TABLE_ENTRIES);",
        "// Line_Reference 992: \tassert(barnum >= 0 && barnum <= PCIR_MAX_BAR_0);",
        "// Line_Reference 1006: \tpci_msix_table_init(dev, msgnum);",
        "// Line_Reference 1146: \tassert(offset >= capoff);",
        "// Line_Reference 1265: \t\t\t\tassert(ops != NULL);",
        "// Line_Reference 1266: ",
        "// Line_Reference 1351: \tassert(error == 0);",
        "// Line_Reference 1361: \tassert(error == 0);",
        "// Line_Reference 1371: \tassert(error == 0);",
        "// Line_Reference 1389: \t\t\t\tassert(ops != NULL);",
        "// Line_Reference 1444: \t\t\t\tassert(ops != NULL);",
        "// Line_Reference 1445: ",
        "// Line_Reference 1562: \tassert(bi != NULL);",
        "// Line_Reference 1666: \tassert(bus >= 0 && bus < MAXBUSES);",
        "// Line_Reference 1755: \tassert(bi != NULL);",
        "// Line_Reference 1784: \tassert(bi != NULL);",
        "// Line_Reference 1805: \tassert(bi != NULL);",
        "// Line_Reference 1814: \tassert(ii->ii_ioapic_irq > 0);",
        "// Line_Reference 1822: \tassert(ii->ii_pirq_pin > 0);",
        "// Line_Reference 1839: \tassert(dev->lintr.pin > 0);",
        "// Line_Reference 1862: \tassert(dev->lintr.pin > 0);",
        "// Line_Reference 2034: \t\t\tassert(0);",
        "// Line_Reference 2199: \t\t\t\tassert(idx >= 1);",
        "// Line_Reference 2210: \t\t\t\tassert(0);",
        "// Line_Reference 2310: \tint error;",
        "// Line_Reference 2321: \terror = pci_emul_add_msicap(dev, PCI_EMUL_MSI_MSGS);",
        "// Line_Reference 2322: \tassert(error == 0);",
        "// Line_Reference 2323: ",
        "// Line_Reference 2324: \terror = pci_emul_alloc_bar(dev, 0, PCIBAR_IO, DIOSZ);",
        "// Line_Reference 2325: \tassert(error == 0);",
        "// Line_Reference 2326: ",
        "// Line_Reference 2327: \terror = pci_emul_alloc_bar(dev, 1, PCIBAR_MEM32, DMEMSZ);",
        "// Line_Reference 2328: \tassert(error == 0);",
        "// Line_Reference 2329: ",
        "// Line_Reference 2330: \terror = pci_emul_alloc_bar(dev, 2, PCIBAR_MEM32, DMEMSZ);",
        "// Line_Reference 2331: \tassert(error == 0);",
        "// Line_Reference 2332: ",
        "// Line_Reference 2333: \treturn 0;",
        "// Line_Reference 2470: \tassert(bi != NULL);"
    ]
}
