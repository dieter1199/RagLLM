{
    "cve_id": "CVE-2020-15176",
    "cve_description": "In GLPI before version 9.5.2, when supplying a back tick in input that gets put into a SQL query,the application does not escape or sanitize allowing for SQL Injection to occur. Leveraging this vulnerability an attacker is able to exfiltrate sensitive information like passwords, reset tokens, personal details, and more. The issue is patched in version 9.5.2",
    "cve_publish_date": "2020-10-07",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "Merge pull request from GHSA-x93w-64x9-58qw\n\n* Remove ability to use SQL expressions as string in criterion values\n\n* Fix iterator syntax\n\nCo-authored-by: Johan Cwiklinski <jcwiklinski@teclib.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "DBmysqlIterator.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 565:       $it = $this->it->execute('foo', ['bar' => '`field`']);"
    ]
}
