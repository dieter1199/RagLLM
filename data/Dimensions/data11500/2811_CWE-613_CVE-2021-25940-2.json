{
    "cve_id": "CVE-2021-25940",
    "cve_description": "In ArangoDB, versions v3.7.6 through v3.8.3 are vulnerable to Insufficient Session Expiration. When a user’s password is changed by the administrator, the session isn’t invalidated, allowing a malicious user to still be logged in and perform arbitrary actions within the system.",
    "cve_publish_date": "2021-11-16",
    "cwe_id": "CWE-613",
    "cwe_name": "Insufficient Session Expiration",
    "cwe_description": "According to WASC, \"Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization.\"",
    "commit_message": "Revive startup parameter `--server.session-timeout` (#14118)\n\nCo-authored-by: Tobias Gödderz <tobias@arangodb.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "RestAuthHandler.cpp",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "29",
    "number_of_lines_deleted_vulnerable_to_cve": "27",
    "vulnerable_lines": [
        "// Line_Reference 35: #include \"Ssl/SslInterface.h\"",
        "// Line_Reference 44:     : RestVocbaseBaseHandler(server, request, response),",
        "// Line_Reference 45:       _validFor(60 * 60 * 24 * 30) {}",
        "// Line_Reference 46: ",
        "// Line_Reference 47: std::string RestAuthHandler::generateJwt(std::string const& username,",
        "// Line_Reference 48:                                          std::string const& password) {",
        "// Line_Reference 49:   AuthenticationFeature* af = AuthenticationFeature::instance();",
        "// Line_Reference 50:   TRI_ASSERT(af != nullptr);",
        "// Line_Reference 51:   return fuerte::jwt::generateUserToken(af->tokenCache().jwtSecret(), username, _validFor);",
        "// Line_Reference 52: }",
        "// Line_Reference 78:   _username = usernameSlice.copyString();",
        "// Line_Reference 86:   } else if (um->checkPassword(_username, password)) {",
        "// Line_Reference 90:       std::string jwt = generateJwt(_username, password);",
        "// Line_Reference 91:       resultBuilder.add(\"jwt\", VPackValue(jwt));",
        "// Line_Reference 94:     _isValid = true;",
        "// Line_Reference 109: ",
        "// Line_Reference 110: void RestAuthHandler::shutdownExecute(bool isFinalized) noexcept {",
        "// Line_Reference 111:   try {",
        "// Line_Reference 112:     if (_isValid) {",
        "// Line_Reference 113:       events::LoggedIn(*_request, _username);",
        "// Line_Reference 114:     } else {",
        "// Line_Reference 115:       events::CredentialsBad(*_request, _username);",
        "// Line_Reference 116:     }",
        "// Line_Reference 117:   } catch (...) {",
        "// Line_Reference 118:   }",
        "// Line_Reference 119:   RestVocbaseBaseHandler::shutdownExecute(isFinalized);",
        "// Line_Reference 120: }"
    ]
}
