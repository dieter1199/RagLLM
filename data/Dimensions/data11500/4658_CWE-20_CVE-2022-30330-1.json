{
    "cve_id": "CVE-2022-30330",
    "cve_description": "In the KeepKey firmware before 7.3.2,Flaws in the supervisor interface can be exploited to bypass important security restrictions on firmware operations. Using these flaws, malicious firmware code can elevate privileges, permanently make the device inoperable or overwrite the trusted bootloader code to compromise the hardware wallet across reboots or storage wipes.",
    "cve_publish_date": "2022-05-07",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "fix: more robust address range checks in svhandler_flash_*",
    "type_of_change": "Modification",
    "filename_of_changes": "supervise.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "64",
    "number_of_lines_deleted_vulnerable_to_cve": "35",
    "vulnerable_lines": [
        "// Line_Reference 79:   uint32_t sector = _param_1;",
        "// Line_Reference 81:   // Do not allow firmware to erase bootstrap or bootloader sectors.",
        "// Line_Reference 82:   if ((sector == FLASH_BOOTSTRAP_SECTOR) ||",
        "// Line_Reference 83:       (sector >= FLASH_BOOT_SECTOR_FIRST && sector <= FLASH_BOOT_SECTOR_LAST)) {",
        "// Line_Reference 84:     return;",
        "// Line_Reference 85:   }",
        "// Line_Reference 114:   // Protect from overflow.",
        "// Line_Reference 115:   if (beginAddr + length < beginAddr) return;",
        "// Line_Reference 116: ",
        "// Line_Reference 117:   // Do not allow firmware to erase bootstrap or bootloader sectors.",
        "// Line_Reference 118:   if (((beginAddr >= BSTRP_FLASH_SECT_START) &&",
        "// Line_Reference 119:        (beginAddr <= (BSTRP_FLASH_SECT_START + BSTRP_FLASH_SECT_LEN - 1))) ||",
        "// Line_Reference 120:       (((beginAddr + length) >= BSTRP_FLASH_SECT_START) &&",
        "// Line_Reference 121:        ((beginAddr + length) <=",
        "// Line_Reference 122:         (BSTRP_FLASH_SECT_START + BSTRP_FLASH_SECT_LEN - 1)))) {",
        "// Line_Reference 123:     return;",
        "// Line_Reference 124:   }",
        "// Line_Reference 125: ",
        "// Line_Reference 126:   if (((beginAddr >= BLDR_FLASH_SECT_START) &&",
        "// Line_Reference 127:        (beginAddr <= (BLDR_FLASH_SECT_START + 2 * BLDR_FLASH_SECT_LEN - 1))) ||",
        "// Line_Reference 128:       (((beginAddr + length) >= BLDR_FLASH_SECT_START) &&",
        "// Line_Reference 129:        ((beginAddr + length) <=",
        "// Line_Reference 130:         (BLDR_FLASH_SECT_START + 2 * BLDR_FLASH_SECT_LEN - 1)))) {",
        "// Line_Reference 131:     return;",
        "// Line_Reference 132:   }",
        "// Line_Reference 160:   // Do not allow firmware to erase bootstrap or bootloader sectors.",
        "// Line_Reference 161:   if ((dst >= BSTRP_FLASH_SECT_START) &&",
        "// Line_Reference 162:       (dst <= (BSTRP_FLASH_SECT_START + BSTRP_FLASH_SECT_LEN))) {",
        "// Line_Reference 163:     return;",
        "// Line_Reference 164:   }",
        "// Line_Reference 165: ",
        "// Line_Reference 166:   if ((dst >= BLDR_FLASH_SECT_START) &&",
        "// Line_Reference 167:       (dst <= (BLDR_FLASH_SECT_START + 2 * BLDR_FLASH_SECT_LEN))) {",
        "// Line_Reference 168:     return;",
        "// Line_Reference 169:   }"
    ]
}
