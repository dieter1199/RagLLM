{
    "cve_id": "CVE-2017-1000380",
    "cve_description": "sound/core/timer.c in the Linux kernel before 4.11.5 is vulnerable to a data race in the ALSA /dev/snd/timer driver resulting in local users being able to read information belonging to other users, i.e., uninitialized memory contents may be disclosed when a read and an ioctl happen at the same time.",
    "cve_publish_date": "2017-06-17",
    "cwe_id": "CWE-200",
    "cwe_name": "Exposure of Sensitive Information to an Unauthorized Actor",
    "cwe_description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
    "commit_message": "ALSA: timer: Fix race between read and ioctl\n\nThe read from ALSA timer device, the function snd_timer_user_tread(),\nmay access to an uninitialized struct snd_timer_user fields when the\nread is concurrently performed while the ioctl like\nsnd_timer_user_tselect() is invoked.  We have already fixed the races\namong ioctls via a mutex, but we seem to have forgotten the race\nbetween read vs ioctl.\n\nThis patch simply applies (more exactly extends the already applied\nrange of) tu->ioctl_lock in snd_timer_user_tread() for closing the\nrace window.\n\nReported-by: Alexander Potapenko <glider@google.com>\nTested-by: Alexander Potapenko <glider@google.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
    "type_of_change": "Modification",
    "filename_of_changes": "timer.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "4",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 1997: \t\tmutex_lock(&tu->ioctl_lock);",
        "// Line_Reference 2007: \t\tmutex_unlock(&tu->ioctl_lock);"
    ]
}
