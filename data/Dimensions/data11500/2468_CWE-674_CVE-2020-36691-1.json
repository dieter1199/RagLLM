{
    "cve_id": "CVE-2020-36691",
    "cve_description": "An issue was discovered in the Linux kernel before 5.8. lib/nlattr.c allows attackers to cause a denial of service (unbounded recursion) via a nested Netlink policy with a back reference.",
    "cve_publish_date": "2023-03-24",
    "cwe_id": "CWE-674",
    "cwe_name": "Uncontrolled Recursion",
    "cwe_description": "The product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.",
    "commit_message": "netlink: limit recursion depth in policy validation\n\nNow that we have nested policies, we can theoretically\nrecurse forever parsing attributes if a (sub-)policy\nrefers back to a higher level one. This is a situation\nthat has happened in nl80211, and we've avoided it there\nby not linking it.\n\nAdd some code to netlink parsing to limit recursion depth.\n\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "type_of_change": "Modification",
    "filename_of_changes": "nlattr.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "34",
    "number_of_lines_deleted_vulnerable_to_cve": "12",
    "vulnerable_lines": [
        "// Line_Reference 73: \t\t\t      unsigned int validate)",
        "// Line_Reference 90: \t\tret = __nla_validate(nla_data(entry), nla_len(entry),",
        "// Line_Reference 91: \t\t\t\t     maxtype, policy, validate, extack);",
        "// Line_Reference 159: \t\t\tstruct netlink_ext_ack *extack)",
        "// Line_Reference 272: \t\t\terr = __nla_validate(nla_data(nla), nla_len(nla), pt->len,",
        "// Line_Reference 273: \t\t\t\t\t     pt->nested_policy, validate,",
        "// Line_Reference 274: \t\t\t\t\t     extack);",
        "// Line_Reference 297: \t\t\t\t\t\t extack, validate);",
        "// Line_Reference 361: \t\t\t\tstruct nlattr **tb)",
        "// Line_Reference 382: \t\t\t\t\t       validate, extack);",
        "// Line_Reference 424: \t\t\t\t    extack, NULL);",
        "// Line_Reference 479: \t\t\t\t    extack, tb);"
    ]
}
