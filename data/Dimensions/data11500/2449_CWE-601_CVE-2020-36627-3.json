{
    "cve_id": "CVE-2020-36627",
    "cve_description": "A vulnerability was found in Macaron i18n. It has been declared as problematic. Affected by this vulnerability is an unknown functionality of the file i18n.go. The manipulation leads to open redirect. The attack can be launched remotely. Upgrading to version 0.5.0 is able to address this issue. The name of the patch is 329b0c4844cc16a5a253c011b55180598e707735. It is recommended to upgrade the affected component. The identifier VDB-216745 was assigned to this vulnerability.",
    "cve_publish_date": "2022-12-25",
    "cwe_id": "CWE-601",
    "cwe_name": "URL Redirection to Untrusted Site ('Open Redirect')",
    "cwe_description": "A web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a Redirect. This simplifies phishing attacks.",
    "commit_message": "security: fix Open Redirection vulnerability",
    "type_of_change": "Modification",
    "filename_of_changes": "i18n_test.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "117",
    "number_of_lines_deleted_vulnerable_to_cve": "91",
    "vulnerable_lines": [
        "// Line_Reference 22: \t. \"github.com/smartystreets/goconvey/convey\"",
        "// Line_Reference 26: func Test_Version(t *testing.T) {",
        "// Line_Reference 27: \tConvey(\"Check package version\", t, func() {",
        "// Line_Reference 28: \t\tSo(Version(), ShouldEqual, _VERSION)",
        "// Line_Reference 29: \t})",
        "// Line_Reference 30: }",
        "// Line_Reference 31: ",
        "// Line_Reference 32: func Test_I18n(t *testing.T) {",
        "// Line_Reference 33: \tConvey(\"Use i18n middleware\", t, func() {",
        "// Line_Reference 34: \t\tConvey(\"No langauge\", func() {",
        "// Line_Reference 35: \t\t\tdefer func() {",
        "// Line_Reference 36: \t\t\t\tSo(recover(), ShouldNotBeNil)",
        "// Line_Reference 37: \t\t\t}()",
        "// Line_Reference 39: \t\t\tm := macaron.New()",
        "// Line_Reference 40: \t\t\tm.Use(I18n(Options{}))",
        "// Line_Reference 41: \t\t})",
        "// Line_Reference 43: \t\tConvey(\"Languages and names not match\", func() {",
        "// Line_Reference 44: \t\t\tdefer func() {",
        "// Line_Reference 45: \t\t\t\tSo(recover(), ShouldNotBeNil)",
        "// Line_Reference 46: \t\t\t}()",
        "// Line_Reference 48: \t\t\tm := macaron.New()",
        "// Line_Reference 49: \t\t\tm.Use(I18n(Options{",
        "// Line_Reference 50: \t\t\t\tLangs: []string{\"en-US\"},",
        "// Line_Reference 51: \t\t\t}))",
        "// Line_Reference 52: \t\t})",
        "// Line_Reference 54: \t\tConvey(\"Invalid directory\", func() {",
        "// Line_Reference 55: \t\t\tdefer func() {",
        "// Line_Reference 56: \t\t\t\tSo(recover(), ShouldNotBeNil)",
        "// Line_Reference 57: \t\t\t}()",
        "// Line_Reference 58: ",
        "// Line_Reference 59: \t\t\tm := macaron.New()",
        "// Line_Reference 60: \t\t\tm.Use(I18n(Options{",
        "// Line_Reference 61: \t\t\t\tDirectory: \"404\",",
        "// Line_Reference 62: \t\t\t\tLangs:     []string{\"en-US\"},",
        "// Line_Reference 63: \t\t\t\tNames:     []string{\"English\"},",
        "// Line_Reference 64: \t\t\t}))",
        "// Line_Reference 65: \t\t})",
        "// Line_Reference 67: \t\tConvey(\"With correct options\", func() {",
        "// Line_Reference 68: \t\t\tm := macaron.New()",
        "// Line_Reference 69: \t\t\tm.Use(I18n(Options{",
        "// Line_Reference 70: \t\t\t\tFiles: map[string][]byte{\"locale_en-US.ini\": []byte(\"\")},",
        "// Line_Reference 71: \t\t\t\tLangs: []string{\"en-US\"},",
        "// Line_Reference 72: \t\t\t\tNames: []string{\"English\"},",
        "// Line_Reference 73: \t\t\t}))",
        "// Line_Reference 74: \t\t\tm.Get(\"/\", func() {})",
        "// Line_Reference 76: \t\t\tresp := httptest.NewRecorder()",
        "// Line_Reference 77: \t\t\treq, err := http.NewRequest(\"GET\", \"/\", nil)",
        "// Line_Reference 78: \t\t\tSo(err, ShouldBeNil)",
        "// Line_Reference 79: \t\t\tm.ServeHTTP(resp, req)",
        "// Line_Reference 82: \t\tConvey(\"Set by redirect of URL parameter\", func() {",
        "// Line_Reference 83: \t\t\tm := macaron.New()",
        "// Line_Reference 84: \t\t\tm.Use(I18n(Options{",
        "// Line_Reference 85: \t\t\t\tLangs:    []string{\"en-US\"},",
        "// Line_Reference 86: \t\t\t\tNames:    []string{\"English\"},",
        "// Line_Reference 87: \t\t\t\tRedirect: true,",
        "// Line_Reference 88: \t\t\t}))",
        "// Line_Reference 89: \t\t\tm.Get(\"/\", func() {})",
        "// Line_Reference 91: \t\t\tresp := httptest.NewRecorder()",
        "// Line_Reference 92: \t\t\treq, err := http.NewRequest(\"GET\", \"/?lang=en-US\", nil)",
        "// Line_Reference 93: \t\t\tSo(err, ShouldBeNil)",
        "// Line_Reference 94: \t\t\treq.RequestURI = \"/?lang=en-US\"",
        "// Line_Reference 95: \t\t\tm.ServeHTTP(resp, req)",
        "// Line_Reference 98: \t\tConvey(\"Set by Accept-Language\", func() {",
        "// Line_Reference 99: \t\t\tm := macaron.New()",
        "// Line_Reference 100: \t\t\tm.Use(I18n(Options{",
        "// Line_Reference 101: \t\t\t\tLangs: []string{\"en-US\", \"zh-CN\", \"it-IT\"},",
        "// Line_Reference 102: \t\t\t\tNames: []string{\"English\", \"简体中文\", \"Italiano\"},",
        "// Line_Reference 103: \t\t\t}))",
        "// Line_Reference 104: \t\t\tm.Get(\"/\", func(l Locale) {",
        "// Line_Reference 105: \t\t\t\tSo(l.Language(), ShouldEqual, \"it-IT\")",
        "// Line_Reference 106: \t\t\t})",
        "// Line_Reference 109: \t\t\treq, err := http.NewRequest(\"GET\", \"/\", nil)",
        "// Line_Reference 110: \t\t\tSo(err, ShouldBeNil)",
        "// Line_Reference 111: \t\t\treq.Header.Set(\"Accept-Language\", \"it\")",
        "// Line_Reference 113: \t\t})",
        "// Line_Reference 114: ",
        "// Line_Reference 115: \t\tConvey(\"Set to default language\", func() {",
        "// Line_Reference 116: \t\t\tm := macaron.New()",
        "// Line_Reference 117: \t\t\tm.Use(I18n(Options{",
        "// Line_Reference 118: \t\t\t\tLangs: []string{\"en-US\", \"zh-CN\", \"it-IT\"},",
        "// Line_Reference 119: \t\t\t\tNames: []string{\"English\", \"简体中文\", \"Italiano\"},",
        "// Line_Reference 120: \t\t\t}))",
        "// Line_Reference 121: \t\t\tm.Get(\"/\", func(l Locale) {",
        "// Line_Reference 122: \t\t\t\tSo(l.Language(), ShouldEqual, \"en-US\")",
        "// Line_Reference 123: \t\t\t})",
        "// Line_Reference 125: \t\t\tresp := httptest.NewRecorder()",
        "// Line_Reference 126: \t\t\treq, err := http.NewRequest(\"GET\", \"/\", nil)",
        "// Line_Reference 127: \t\t\tSo(err, ShouldBeNil)",
        "// Line_Reference 128: \t\t\treq.Header.Set(\"Accept-Language\", \"ru\")",
        "// Line_Reference 129: \t\t\tm.ServeHTTP(resp, req)",
        "// Line_Reference 131: \t})"
    ]
}
