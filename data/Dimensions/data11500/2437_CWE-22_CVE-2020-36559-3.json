{
    "cve_id": "CVE-2020-36559",
    "cve_description": "Due to improper sanitization of user input, HTTPEngine.Handle allows for directory traversal, allowing an attacker to read files outside of the target directory that the server has permission to read.",
    "cve_publish_date": "2022-12-27",
    "cwe_id": "CWE-22",
    "cwe_name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
    "cwe_description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
    "commit_message": "#266 addressing path traversal issue on static file delivery (#267)",
    "type_of_change": "Modification",
    "filename_of_changes": "static_test.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "11",
    "number_of_lines_deleted_vulnerable_to_cve": "9",
    "vulnerable_lines": [
        "// Line_Reference 48: \tt.Log(\"Directory Listing - /assets\")",
        "// Line_Reference 49: \tresp, err = httpClient.Get(ts.URL + \"/assets\")",
        "// Line_Reference 50: \tassert.Nil(t, err)",
        "// Line_Reference 51: \tassert.Equal(t, 200, resp.StatusCode)",
        "// Line_Reference 52: \tbody := responseBody(resp)",
        "// Line_Reference 53: \tassert.True(t, strings.Contains(body, \"<title>Listing of /assets/</title>\"))",
        "// Line_Reference 54: \tassert.True(t, strings.Contains(body, \"<h1>Listing of /assets/</h1><hr>\"))",
        "// Line_Reference 55: \tassert.True(t, strings.Contains(body, `<a href=\"robots.txt\">robots.txt</a>`))",
        "// Line_Reference 56: \tassert.Equal(t, \"\", resp.Header.Get(ahttp.HeaderCacheControl))"
    ]
}
