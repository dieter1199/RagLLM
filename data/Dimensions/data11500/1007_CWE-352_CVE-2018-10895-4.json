{
    "cve_id": "CVE-2018-10895",
    "cve_description": "qutebrowser before version 1.4.1 is vulnerable to a cross-site request forgery flaw that allows websites to access 'qute://*' URLs. A malicious website could exploit this to load a 'qute://settings/set' URL, which then sets 'editor.command' to a bash script, resulting in arbitrary code execution.",
    "cve_publish_date": "2018-07-12",
    "cwe_id": "CWE-352",
    "cwe_name": "Cross-Site Request Forgery (CSRF)",
    "cwe_description": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
    "commit_message": "CVE-2018-10895: Fix CSRF issues with qute://settings/set URL\n\nIn ffc29ee043ae7336d9b9dcc029a05bf7a3f994e8 (part of v1.0.0), a\nqute://settings/set URL was added to change settings.\n\nContrary to what I apparently believed at the time, it *is* possible for\nwebsites to access `qute://*` URLs (i.e., neither QtWebKit nor QtWebEngine\nprohibit such requests, other than the usual cross-origin rules).\n\nIn other words, this means a website can e.g. have an `<img>` tag which loads a\n`qute://settings/set` URL, which then sets `editor.command` to a bash script.\nThe result of that is arbitrary code execution.\n\nFixes #4060\nSee #2332",
    "type_of_change": "Modification",
    "filename_of_changes": "test_filescheme.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "3",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 251:         reply = filescheme.handler(req)",
        "// Line_Reference 262:         reply = filescheme.handler(req)",
        "// Line_Reference 272:         reply = filescheme.handler(req)"
    ]
}
