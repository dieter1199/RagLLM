{
    "cve_id": "CVE-2022-29156",
    "cve_description": "drivers/infiniband/ulp/rtrs/rtrs-clt.c in the Linux kernel before 5.16.12 has a double free related to rtrs_clt_dev_release.",
    "cve_publish_date": "2022-04-13",
    "cwe_id": "CWE-415",
    "cwe_name": "Double Free",
    "cwe_description": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations.",
    "commit_message": "RDMA/rtrs-clt: Fix possible double free in error case\n\nCallback function rtrs_clt_dev_release() for put_device() calls kfree(clt)\nto free memory. We shouldn't call kfree(clt) again, and we can't use the\nclt after kfree too.\n\nReplace device_register() with device_initialize() and device_add() so that\ndev_set_name can() be used appropriately.\n\nMove mutex_destroy() to the release function so it can be called in\nthe alloc_clt err path.\n\nFixes: eab098246625 (\"RDMA/rtrs-clt: Refactor the failure cases in alloc_clt\")\nLink: https://lore.kernel.org/r/20220217030929.323849-1-haris.iqbal@ionos.com\nReported-by: Miaoqian Lin <linmq006@gmail.com>\nSigned-off-by: Md Haris Iqbal <haris.iqbal@ionos.com>\nReviewed-by: Jack Wang <jinpu.wang@ionos.com>\nSigned-off-by: Jason Gunthorpe <jgg@nvidia.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "rtrs-clt.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "20",
    "number_of_lines_deleted_vulnerable_to_cve": "17",
    "vulnerable_lines": [
        "// Line_Reference 2731: \tclt->dev.class = rtrs_clt_dev_class;",
        "// Line_Reference 2732: \tclt->dev.release = rtrs_clt_dev_release;",
        "// Line_Reference 2735: \t\tgoto err;",
        "// Line_Reference 2741: \terr = device_register(&clt->dev);",
        "// Line_Reference 2742: \tif (err) {",
        "// Line_Reference 2743: \t\tput_device(&clt->dev);",
        "// Line_Reference 2744: \t\tgoto err;",
        "// Line_Reference 2745: \t}",
        "// Line_Reference 2750: \t\tgoto err_dev;",
        "// Line_Reference 2756: \t\tgoto err_dev;",
        "// Line_Reference 2762: err_dev:",
        "// Line_Reference 2763: \tdevice_unregister(&clt->dev);",
        "// Line_Reference 2764: err:",
        "// Line_Reference 2766: \tkfree(clt);",
        "// Line_Reference 2774: \tmutex_destroy(&clt->paths_ev_mutex);",
        "// Line_Reference 2775: \tmutex_destroy(&clt->paths_mutex);",
        "// Line_Reference 2776: \t/* release callback will free clt in last put */"
    ]
}
