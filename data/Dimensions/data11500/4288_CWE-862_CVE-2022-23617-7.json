{
    "cve_id": "CVE-2022-23617",
    "cve_description": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. In affected versions any user with edit right can copy the content of a page it does not have access to by using it as template of a new page. This issue has been patched in XWiki 13.2CR1 and 12.10.6. Users are advised to update. There are no known workarounds for this issue.",
    "cve_publish_date": "2022-02-09",
    "cwe_id": "CWE-862",
    "cwe_name": "Missing Authorization",
    "cwe_description": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
    "commit_message": "XWIKI-18430: Page content is revealed to users that don't have rights if used as a template for the creation of another page",
    "type_of_change": "Modification",
    "filename_of_changes": "SaveActionTest.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "65",
    "number_of_lines_deleted_vulnerable_to_cve": "25",
    "vulnerable_lines": [
        "// Line_Reference 27: import org.apache.commons.lang.time.DateUtils;",
        "// Line_Reference 68: public class SaveActionTest",
        "// Line_Reference 110:         this.saveAction = new SaveAction();",
        "// Line_Reference 111: ",
        "// Line_Reference 112:         context = oldcore.getXWikiContext();",
        "// Line_Reference 114:         xWiki = mock(XWiki.class);",
        "// Line_Reference 115:         context.setWiki(this.xWiki);",
        "// Line_Reference 117:         mockRequest = mock(XWikiRequest.class);",
        "// Line_Reference 118:         context.setRequest(mockRequest);",
        "// Line_Reference 120:         mockResponse = mock(XWikiResponse.class);",
        "// Line_Reference 121:         context.setResponse(mockResponse);",
        "// Line_Reference 123:         mockDocument = mock(XWikiDocument.class);",
        "// Line_Reference 124:         context.setDoc(mockDocument);",
        "// Line_Reference 126:         mockClonedDocument = mock(XWikiDocument.class);",
        "// Line_Reference 127:         when(mockDocument.clone()).thenReturn(mockClonedDocument);",
        "// Line_Reference 129:         mockForm = mock(EditForm.class);",
        "// Line_Reference 130:         context.setForm(mockForm);",
        "// Line_Reference 133:         context.setUserReference(USER_REFERENCE);",
        "// Line_Reference 149:         assertArrayEquals(new Object[] { \"Foo.Bar\" }, (Object[]) context.get(\"messageParameters\"));",
        "// Line_Reference 162:         verify(mockClonedDocument).readFromTemplate(\"\", this.context);",
        "// Line_Reference 184:         verify(this.xWiki).checkSavingDocument(eq(USER_REFERENCE), any(XWikiDocument.class), eq(\"\"),",
        "// Line_Reference 185:             eq(false), eq(this.context));",
        "// Line_Reference 213:      * This tests aims at checking the usecase when uploading an image in the WYSIWYG editor before the first save",
        "// Line_Reference 214:      * and saving afterwards.",
        "// Line_Reference 240:         verify(mockClonedDocument).readFromTemplate(\"\", this.context);"
    ]
}
