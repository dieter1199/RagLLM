{
    "cve_id": "CVE-2020-28163",
    "cve_description": "libdwarf before 20201201 allows a dwarf_print_lines.c NULL pointer dereference and application crash via a DWARF5 line-table header that has an invalid FORM for a pathname.",
    "cve_publish_date": "2023-04-16",
    "cwe_id": "CWE-476",
    "cwe_name": "NULL Pointer Dereference",
    "cwe_description": "The product dereferences a pointer that it expects to be valid but is NULL.",
    "commit_message": "modified:   libdwarf/dwarf_print_lines.c\n    * dwarf_print_lines.c: In case of corrupted\n      DWARF5 line header the fi_file_name field\n      for a file entry can be null. Now\n      we print a <no file name> string in that case\n      to avoid passing a null to dwarfstring_append.\n      Dwarfbug DW202010-003.\n      Also some lines longer than libdwarf standard\n      were shortened, but a few long lines really\n      must remain.",
    "type_of_change": "Modification",
    "filename_of_changes": "dwarf_print_lines.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "37",
    "number_of_lines_deleted_vulnerable_to_cve": "25",
    "vulnerable_lines": [
        "// Line_Reference 57:     /* Ugly indenting follows, it makes lines shorter to see them better.",
        "// Line_Reference 58:         Best to use a wider text window to really see how it looks.*/",
        "// Line_Reference 105:         dwarfstring_append_printf_u(&m1,\"0x%\" DW_PR_XZEROS DW_PR_DUx ,",
        "// Line_Reference 110:         dwarfstring_append_printf_i(&m1,\"   %1d\", regs->lr_basic_block);",
        "// Line_Reference 111:         dwarfstring_append_printf_i(&m1,\"%1d\\n\",  regs->lr_end_sequence);",
        "// Line_Reference 141:                 \"  x%02\" DW_PR_DUx , regs->lr_call_context); /* EXPERIMENTAL */",
        "// Line_Reference 143:                 \"  x%02\" DW_PR_DUx , regs->lr_subprogram); /* EXPERIMENTAL */",
        "// Line_Reference 239:                 \" type 0x%\" DW_PR_XZEROS DW_PR_DUx ,valpair->up_first);",
        "// Line_Reference 330:             dwarfstring_append_printf_s(&m3,",
        "// Line_Reference 331:                 \"%-20s \",",
        "// Line_Reference 332:                 (char *) fe->fi_file_name);",
        "// Line_Reference 333:             dwarfstring_append_printf_u(&m3,",
        "// Line_Reference 334:                 \"(file-number: %u)\\n\",",
        "// Line_Reference 335:                 filenum);",
        "// Line_Reference 339:             dwarfstring_append_printf_s(&m3,",
        "// Line_Reference 340:                 \"%-20s \",(char *)fe->fi_file_name);",
        "// Line_Reference 341:             dwarfstring_append_printf_u(&m3,",
        "// Line_Reference 342:                 \"(file-number: %u)\\n\",filenum);",
        "// Line_Reference 512:     /*  Pointer to a DW_AT_stmt_list attribute in case it exists in the",
        "// Line_Reference 513:         die. */",
        "// Line_Reference 571:     resattr = dwarf_attr(die, DW_AT_stmt_list, &stmt_list_attr, error);",
        "// Line_Reference 603:         int resfis = _dwarf_get_fission_addition_die(die, DW_SECT_LINE,",
        "// Line_Reference 615:     /*  If die has DW_AT_comp_dir attribute, get the string that names",
        "// Line_Reference 616:         the compilation directory. */",
        "// Line_Reference 910:                 print_line_header(dbg, is_single_table, is_actuals_table);"
    ]
}
