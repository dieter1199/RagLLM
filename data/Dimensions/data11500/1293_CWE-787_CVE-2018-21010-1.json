{
    "cve_id": "CVE-2018-21010",
    "cve_description": "OpenJPEG before 2.3.1 has a heap buffer overflow in color_apply_icc_profile in bin/common/color.c.",
    "cve_publish_date": "2019-09-05",
    "cwe_id": "CWE-787",
    "cwe_name": "Out-of-bounds Write",
    "cwe_description": "The product writes data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "color_apply_icc_profile: avoid potential heap buffer overflow\n\nDerived from a patch by Thuan Pham",
    "type_of_change": "Modification",
    "filename_of_changes": "color.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "82",
    "number_of_lines_deleted_vulnerable_to_cve": "72",
    "vulnerable_lines": [
        "// Line_Reference 600:         if (prec <= 8) {",
        "// Line_Reference 601:             unsigned char *inbuf, *outbuf, *in, *out;",
        "// Line_Reference 602: ",
        "// Line_Reference 603:             max = max_w * max_h;",
        "// Line_Reference 604:             nr_samples = (size_t)(max * 3U * sizeof(unsigned char));",
        "// Line_Reference 605:             in = inbuf = (unsigned char*)opj_image_data_alloc(nr_samples);",
        "// Line_Reference 606:             out = outbuf = (unsigned char*)opj_image_data_alloc(nr_samples);",
        "// Line_Reference 607: ",
        "// Line_Reference 608:             if (inbuf == NULL || outbuf == NULL) {",
        "// Line_Reference 609:                 goto fails0;",
        "// Line_Reference 610:             }",
        "// Line_Reference 611: ",
        "// Line_Reference 612:             r = image->comps[0].data;",
        "// Line_Reference 613:             g = image->comps[1].data;",
        "// Line_Reference 614:             b = image->comps[2].data;",
        "// Line_Reference 615: ",
        "// Line_Reference 616:             for (i = 0U; i < max; ++i) {",
        "// Line_Reference 617:                 *in++ = (unsigned char) * r++;",
        "// Line_Reference 618:                 *in++ = (unsigned char) * g++;",
        "// Line_Reference 619:                 *in++ = (unsigned char) * b++;",
        "// Line_Reference 620:             }",
        "// Line_Reference 621: ",
        "// Line_Reference 622:             cmsDoTransform(transform, inbuf, outbuf, (cmsUInt32Number)max);",
        "// Line_Reference 623: ",
        "// Line_Reference 624:             r = image->comps[0].data;",
        "// Line_Reference 625:             g = image->comps[1].data;",
        "// Line_Reference 626:             b = image->comps[2].data;",
        "// Line_Reference 627: ",
        "// Line_Reference 628:             for (i = 0U; i < max; ++i) {",
        "// Line_Reference 629:                 *r++ = (int) * out++;",
        "// Line_Reference 630:                 *g++ = (int) * out++;",
        "// Line_Reference 631:                 *b++ = (int) * out++;",
        "// Line_Reference 632:             }",
        "// Line_Reference 633:             ok = 1;",
        "// Line_Reference 636:             opj_image_data_free(inbuf);",
        "// Line_Reference 637:             opj_image_data_free(outbuf);",
        "// Line_Reference 638:         } else { /* prec > 8 */",
        "// Line_Reference 639:             unsigned short *inbuf, *outbuf, *in, *out;",
        "// Line_Reference 640: ",
        "// Line_Reference 641:             max = max_w * max_h;",
        "// Line_Reference 642:             nr_samples = (size_t)(max * 3U * sizeof(unsigned short));",
        "// Line_Reference 643:             in = inbuf = (unsigned short*)opj_image_data_alloc(nr_samples);",
        "// Line_Reference 644:             out = outbuf = (unsigned short*)opj_image_data_alloc(nr_samples);",
        "// Line_Reference 645: ",
        "// Line_Reference 646:             if (inbuf == NULL || outbuf == NULL) {",
        "// Line_Reference 647:                 goto fails1;",
        "// Line_Reference 648:             }",
        "// Line_Reference 649: ",
        "// Line_Reference 650:             r = image->comps[0].data;",
        "// Line_Reference 651:             g = image->comps[1].data;",
        "// Line_Reference 652:             b = image->comps[2].data;",
        "// Line_Reference 653: ",
        "// Line_Reference 654:             for (i = 0U  ; i < max; ++i) {",
        "// Line_Reference 655:                 *in++ = (unsigned short) * r++;",
        "// Line_Reference 656:                 *in++ = (unsigned short) * g++;",
        "// Line_Reference 657:                 *in++ = (unsigned short) * b++;",
        "// Line_Reference 658:             }",
        "// Line_Reference 659: ",
        "// Line_Reference 660:             cmsDoTransform(transform, inbuf, outbuf, (cmsUInt32Number)max);",
        "// Line_Reference 661: ",
        "// Line_Reference 662:             r = image->comps[0].data;",
        "// Line_Reference 663:             g = image->comps[1].data;",
        "// Line_Reference 664:             b = image->comps[2].data;",
        "// Line_Reference 665: ",
        "// Line_Reference 666:             for (i = 0; i < max; ++i) {",
        "// Line_Reference 667:                 *r++ = (int) * out++;",
        "// Line_Reference 668:                 *g++ = (int) * out++;",
        "// Line_Reference 669:                 *b++ = (int) * out++;",
        "// Line_Reference 670:             }",
        "// Line_Reference 671:             ok = 1;",
        "// Line_Reference 674:             opj_image_data_free(inbuf);",
        "// Line_Reference 675:             opj_image_data_free(outbuf);"
    ]
}
