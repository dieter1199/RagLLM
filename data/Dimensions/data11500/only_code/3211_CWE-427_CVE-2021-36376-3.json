match pagerflags.split_first() {
let mut process = if is_less {
let mut p = Command::new(&pager_path);
if args.is_empty() || replace_arguments_to_less {
p.args(vec!["--RAW-CONTROL-CHARS"]);
// Passing '--no-init' fixes a bug with '--quit-if-one-screen' in older
// versions of 'less'. Unfortunately, it also breaks mouse-wheel support.
//
// See: http://www.greenwoodsoftware.com/less/news.530.html
//
// For newer versions (530 or 558 on Windows), we omit '--no-init' as it
// is not needed anymore.
match retrieve_less_version() {
None => {
p.arg("--no-init");
}
Some(version)
if (version < 530 || (cfg!(windows) && version < 558)) =>
{
p.arg("--no-init");
}
_ => {}
}
if quit_if_one_screen {
p.arg("--quit-if-one-screen");
}
} else {
p.args(args);
}
p.env("LESSCHARSET", "UTF-8");
p
if pager_path.file_stem() == Some(&OsString::from("delta")) {
eprintln!(
"\
It looks like you have set delta as the value of $PAGER. \
This would result in a non-terminating recursion. \
delta is not an appropriate value for $PAGER \
(but it is an appropriate value for $GIT_PAGER)."
);
std::process::exit(1);
}
let mut p = Command::new(&pager_path);
p.args(args);
p
if is_less && config.navigate {
if let Ok(hist_file) =
navigate::copy_less_hist_file_and_append_navigate_regexp(config)
{
process.env("LESSHISTFILE", hist_file);
if config.show_themes {
process.arg("+n");
}
}
Ok(process
.env("LESSANSIENDCHARS", "mK")
.stdin(Stdio::piped())
.spawn()
.map(OutputType::Pager)
.unwrap_or_else(|_| OutputType::stdout()))
None => Ok(OutputType::stdout()),
}
