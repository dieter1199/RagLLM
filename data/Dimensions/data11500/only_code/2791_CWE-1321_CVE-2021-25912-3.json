var exists = module.exports.exists = function exists(object, path) {
};
// the difference between an unresolved path and an undefined property, so you
var get = module.exports.get = function get(object, path) {
};
var search = module.exports.search = function search(object, path, action) {
return Object.keys(object).filter(key.test.bind(key)).map(function(k) {
var value = object[k];
if(action){
action(value, object, k);
}
return value;
});
return Array.prototype.concat.apply([], Object.keys(object).filter(key.test.bind(key)).map(function(k) { return search(object[k], path, action); }));
};
var removeSearch = module.exports.removeSearch = function removeSearch(object, path){
search(object, path, function(value, object, key){
};
var put = module.exports.put = function put(object, path, value) {
if (typeof object !== "object" || object === null) {
};
var remove = module.exports.remove = function remove(object, path, value) {
};
var deepKeys = module.exports.deepKeys = function deepKeys(object, options, prefix) {
keys = keys.concat(deepKeys(object[k], {leavesOnly: options.leavesOnly}, prefix.concat([k])));
keys = keys.map(function(e) { return e.join("."); });
};
