{
    "cve_id": "CVE-2019-13574",
    "cve_description": "In lib/mini_magick/image.rb in MiniMagick before 4.9.4, a fetched remote image filename could cause remote command execution because Image.open input is directly passed to Kernel#open, which accepts a '|' character followed by a command.",
    "cve_publish_date": "2019-07-12",
    "cwe_id": "CWE-78",
    "cwe_name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
    "cwe_description": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
    "commit_message": "Don't allow remote shell execution\n\nKernel#open accepts a string of format \"| <shell command>\" which\nexecutes the specified shell command and otherwise presumably acts as\nIO.popen. The open-uri standard library overrides Kernel#open to also\naccept URLs.\n\nHowever, the overridden Kernel#open just delegates to URI#open, so we\nswitch to using that directly and avoid the remote shell execution\nvulnerability. For files we just use File.open, which should have the\nsame behaviour as Kernel#open.",
    "type_of_change": "Modification",
    "filename_of_changes": "image.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "6",
    "number_of_lines_deleted_vulnerable_to_cve": "8",
    "vulnerable_lines": [
        "// Line_Reference 85:       ext ||=",
        "// Line_Reference 86:         if File.exist?(path_or_url)",
        "// Line_Reference 87:           File.extname(path_or_url)",
        "// Line_Reference 88:         else",
        "// Line_Reference 89:           File.extname(URI(path_or_url).path)",
        "// Line_Reference 90:         end",
        "// Line_Reference 94:       Kernel.open(path_or_url, \"rb\", options) do |file|",
        "// Line_Reference 95:         read(file, ext)"
    ]
}
