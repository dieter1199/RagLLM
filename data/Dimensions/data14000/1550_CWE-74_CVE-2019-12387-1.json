{
    "cve_id": "CVE-2019-12387",
    "cve_description": "In Twisted before 19.2.1, twisted.web did not validate or sanitize URIs or HTTP methods, allowing an attacker to inject invalid characters such as CRLF.",
    "cve_publish_date": "2019-06-10",
    "cwe_id": "CWE-74",
    "cwe_name": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
    "cwe_description": "The product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.",
    "commit_message": "Prevent CRLF injections described in CVE-2019-12387\n\nAuthor: markrwilliams\r\n\r\nReviewers: glyph\r\n\r\nFixes: ticket:9647\r\n\r\nTwisted's HTTP client APIs were vulnerable to maliciously constructed\r\nHTTP methods, hosts, and/or paths, URI components such as paths and\r\nquery parameters.  These vulnerabilities were beyond the header name\r\nand value injection vulnerabilities addressed in:\r\n\r\nhttps://twistedmatrix.com/trac/ticket/9420\r\nhttps://github.com/twisted/twisted/pull/999/\r\n\r\nThe following client APIs will raise a ValueError if given a method,\r\nhost, or URI that includes newlines or other disallowed characters:\r\n\r\n- twisted.web.client.Agent.request\r\n- twisted.web.client.ProxyAgent.request\r\n- twisted.web.client.Request.__init__\r\n- twisted.web.client.Request.writeTo\r\n\r\nProxyAgent is patched separately from Agent because unlike other\r\nagents (e.g. CookieAgent) it is not implemented as an Agent wrapper.\r\n\r\nRequest.__init__ checks its method and URI so that errors occur closer\r\nto their originating input.  Request.method and Request.uri are both\r\npublic APIs, however, so Request.writeTo (via Request._writeHeaders)\r\nalso checks the validity of both before writing anything to the wire.\r\n\r\nAdditionally, the following deprecated client APIs have also been\r\npatched:\r\n\r\n- twisted.web.client.HTTPPageGetter.__init__\r\n- twisted.web.client.HTTPPageDownloader.__init__\r\n- twisted.web.client.HTTPClientFactory.__init__\r\n- twisted.web.client.HTTPClientFactory.setURL\r\n- twisted.web.client.HTTPDownloader.__init__\r\n- twisted.web.client.HTTPDownloader.setURL\r\n- twisted.web.client.getPage\r\n- twisted.web.client.downloadPage\r\n\r\nThese have been patched prior to their removal so that they won't be\r\nvulnerable in the last Twisted release that includes them.  They\r\nrepresent a best effort, because testing every combination of these\r\npublic APIs would require more code than deprecated APIs warrant.\r\n\r\nIn all cases URI components, including hostnames, are restricted to\r\nthe characters allowed in path components.  This mirrors the CPython\r\npatch (for bpo-30458) that addresses equivalent vulnerabilities:\r\n\r\nhttps://github.com/python/cpython/commit/bb8071a4cae5ab3fe321481dd3d73662ffb26052\r\n\r\nHTTP methods, however, are checked against the set of characters\r\ndescribed in RFC-7230.",
    "type_of_change": "Modification",
    "filename_of_changes": "_newclient.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "81",
    "number_of_lines_deleted_vulnerable_to_cve": "4",
    "vulnerable_lines": [
        "// Line_Reference 621:         self.method = method",
        "// Line_Reference 622:         self.uri = uri",
        "// Line_Reference 667:         requestLines.append(b' '.join([self.method, self.uri,",
        "// Line_Reference 668:             b'HTTP/1.1\\r\\n']))"
    ]
}
