{
    "cve_id": "CVE-2022-36103",
    "cve_description": "Talos Linux is a Linux distribution built for Kubernetes deployments. Talos worker nodes use a join token to get accepted into the Talos cluster. Due to improper validation of the request while signing a worker node CSR (certificate signing request) Talos control plane node might issue Talos API certificate which allows full access to Talos API on a control plane node. Accessing Talos API with full level access on a control plane node might reveal sensitive information which allows full level access to the cluster (Kubernetes and Talos PKI, etc.). Talos API join token is stored in the machine configuration on the worker node. When configured correctly, Kubernetes workloads don't have access to the machine configuration, but due to a misconfiguration workload might access the machine configuration and reveal the join token. This problem has been fixed in Talos 1.2.2. Enabling the Pod Security Standards mitigates the vulnerability by denying hostPath mounts and host networking by default in the baseline policy. Clusters that don't run untrusted workloads are not affected. Clusters with correct Pod Security configurations which don't allow hostPath mounts, and secure access to cloud metadata server (or machine configuration is not supplied via cloud metadata server) are not affected.",
    "cve_publish_date": "2022-09-13",
    "cwe_id": "CWE-863",
    "cwe_name": "Incorrect Authorization",
    "cwe_description": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check. This allows attackers to bypass intended access restrictions.",
    "commit_message": "fix: never sign client certificate requests in trustd\n\nTalos worker nodes use `trustd` API on control plane nodes to issue\ncertificates for `apid` service. Access to the API is protected with the\nTalos join token specified in the machine configuration.\n\nThere was no validation on what kind of request is requested, so\n`trustd` could issue a certificate which is valid for client\nauthentication with any set of Talos API RBAC roles, including\n`os:admin` role allowing full access to the Talos API on control plane\nnodes.\n\nSee: GHSA-7hgc-php5-77qq\nCVE: CVE-2022-36103\n\nSigned-off-by: Andrey Smirnov <andrey.smirnov@talos-systems.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "reg_test.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "93",
    "number_of_lines_deleted_vulnerable_to_cve": "6",
    "vulnerable_lines": [
        "// Line_Reference 7: import \"testing\"",
        "// Line_Reference 9: func TestEmpty(t *testing.T) {",
        "// Line_Reference 10: \t// added for accurate coverage estimation",
        "// Line_Reference 11: \t//",
        "// Line_Reference 12: \t// please remove it once any unit-test is added",
        "// Line_Reference 13: \t// for this package"
    ]
}
