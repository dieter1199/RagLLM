{
    "cve_id": "CVE-2021-4264",
    "cve_description": "A vulnerability was found in LinkedIn dustjs up to 2.x and classified as problematic. Affected by this issue is some unknown functionality. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). The attack may be launched remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 3.0.0 is able to address this issue. The name of the patch is ddb6523832465d38c9d80189e9de60519ac307c3. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-216464.",
    "cve_publish_date": "2022-12-21",
    "cwe_id": "CWE-1321",
    "cwe_name": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')",
    "cwe_description": "The product receives input from an upstream component that specifies attributes that are to be initialized or updated in an object, but it does not properly control modifications of attributes of the object prototype.",
    "commit_message": "fix for prototype pollution vulnerability",
    "type_of_change": "Modification",
    "filename_of_changes": "dust-core.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "99",
    "number_of_lines_deleted_vulnerable_to_cve": "37",
    "vulnerable_lines": [
        "// Line_Reference 3: * Copyright (c) 2015 Aleksander Williams; Released under the MIT License */",
        "// Line_Reference 251:    * Decide somewhat-naively if something is a Thenable.",
        "// Line_Reference 256:     return elem &&",
        "// Line_Reference 257:            typeof elem === 'object' &&",
        "// Line_Reference 341:     if (context instanceof Context) {",
        "// Line_Reference 432:     if (typeof ctx === 'function') {",
        "// Line_Reference 749:     if (typeof elem === 'function') {",
        "// Line_Reference 774:     if (typeof elem === 'function' && !dust.isTemplateFn(elem)) {",
        "// Line_Reference 904:         partialContext.templateName = name;",
        "// Line_Reference 908:       partialContext.templateName = elem;",
        "// Line_Reference 960:     return this.map(function(chunk) {",
        "// Line_Reference 961:       thenable.then(function(data) {",
        "// Line_Reference 962:         if (bodies) {",
        "// Line_Reference 963:           chunk = chunk.section(data, context, bodies);",
        "// Line_Reference 964:         } else {",
        "// Line_Reference 965:           // Actually a reference. Self-closing sections don't render",
        "// Line_Reference 966:           chunk = chunk.reference(data, context, auto, filters);",
        "// Line_Reference 967:         }",
        "// Line_Reference 968:         chunk.end();",
        "// Line_Reference 969:       }, function(err) {",
        "// Line_Reference 970:         var errorBody = bodies && bodies.error;",
        "// Line_Reference 971:         if(errorBody) {",
        "// Line_Reference 972:           chunk.render(errorBody, context.push(err)).end();",
        "// Line_Reference 973:         } else {",
        "// Line_Reference 974:           dust.log('Unhandled promise rejection in `' + context.getTemplateName() + '`', INFO);",
        "// Line_Reference 975:           chunk.end();",
        "// Line_Reference 976:         }",
        "// Line_Reference 977:       });",
        "// Line_Reference 992:     var body = bodies && bodies.block,",
        "// Line_Reference 993:         errorBody = bodies && bodies.error;",
        "// Line_Reference 1015:           if(errorBody) {",
        "// Line_Reference 1016:             chunk.render(errorBody, context.push(err));",
        "// Line_Reference 1017:           } else {",
        "// Line_Reference 1018:             dust.log('Unhandled stream error in `' + context.getTemplateName() + '`', INFO);",
        "// Line_Reference 1019:           }",
        "// Line_Reference 1146:             require([name], function() {",
        "// Line_Reference 1147:                 cb();"
    ]
}
