{
    "cve_id": "CVE-2020-5229",
    "cve_description": "Opencast before 8.1 stores passwords using the rather outdated and cryptographically insecure MD5 hash algorithm. Furthermore, the hashes are salted using the username instead of a random salt, causing hashes for users with the same username and password to collide which is problematic especially for popular users like the default `admin` user. This essentially means that for an attacker, it might be feasible to reconstruct a user's password given access to these hashes. Note that attackers needing access to the hashes means that they must gain access to the database in which these are stored first to be able to start cracking the passwords. The problem is addressed in Opencast 8.1 which now uses the modern and much stronger bcrypt password hashing algorithm for storing passwords. Note, that old hashes remain MD5 until the password is updated. For a list of users whose password hashes are stored using MD5, take a look at the `/user-utils/users/md5.json` REST endpoint.",
    "cve_publish_date": "2020-01-30",
    "cwe_id": "CWE-327",
    "cwe_name": "Use of a Broken or Risky Cryptographic Algorithm",
    "cwe_description": "The product uses a broken or risky cryptographic algorithm or protocol.",
    "commit_message": "Replace MD5 with bcrypt for password hashing\n\nUser passwords are stored in the database using the rather outdated and\ncryptographically insecure MD5 hash algorithm. Furthermore, the hashes\nare salted using the username instead of a random salt, causing hashes\nfor users with the same username and password to collide which is\nproblematic especially for popular users like the default admin user.\n\nThis essentially means that for an attacker, it might be feasible to\nreconstruct a user's password given access to these hashes.\n\nNote that attackers needing access to the hashes means that they must\ngain access to the database in which these are stored first to be able\nto start cracking the passwords.\nPatches\n\nThe patch makes Opencast now uses the modern and much stronger bcrypt\npassword hashing algorithm for storing passwords.  Note, that old hashes\nremain MD5 until the password is updated.\n\nFor a list of users whose password hashes are stored using MD5, the REST endpoint `/user-utils/users/md5.json` is added.",
    "type_of_change": "ModificationType.ADD",
    "filename_of_changes": "JpaUserAndRoleProvider.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "58",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 36: import org.opencastproject.util.PasswordEncoder;",
        "// Line_Reference 278:     String encodedPassword = PasswordEncoder.encode(user.getPassword(), user.getUsername());",
        "// Line_Reference 339:       encodedPassword = PasswordEncoder.encode(user.getPassword(), user.getUsername());"
    ]
}
