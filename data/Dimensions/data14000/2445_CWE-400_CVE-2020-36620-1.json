{
    "cve_id": "CVE-2020-36620",
    "cve_description": "A vulnerability was found in Brondahl EnumStringValues up to 4.0.0. It has been declared as problematic. This vulnerability affects the function GetStringValuesWithPreferences_Uncache of the file EnumStringValues/EnumExtensions.cs. The manipulation leads to resource consumption. Upgrading to version 4.0.1 is able to address this issue. The name of the patch is c0fc7806beb24883cc2f9543ebc50c0820297307. It is recommended to upgrade the affected component. VDB-216466 is the identifier assigned to this vulnerability.",
    "cve_publish_date": "2022-12-21",
    "cwe_id": "CWE-400",
    "cwe_name": "Uncontrolled Resource Consumption",
    "cwe_description": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
    "commit_message": "Protect against DOS attacks made possible by parsing random invalid enum strings",
    "type_of_change": "Modification",
    "filename_of_changes": "EnumExtensions.cs",
    "code_language": "C#",
    "number_of_lines_added_for_mitigation": "24",
    "number_of_lines_deleted_vulnerable_to_cve": "8",
    "vulnerable_lines": [
        "// Line_Reference 272:       var typeAppropriateDictionary = parsedEnumStringsDictionaryByType.GetOrAdd(enumTypeObject, (x) => new ConcurrentDictionary<string, Enum>());",
        "// Line_Reference 274:       var cachedValue = typeAppropriateDictionary.GetOrAdd(lowerStringValue, (str) =>",
        "// Line_Reference 275:       {",
        "// Line_Reference 276:         var parseSucceededForDictionary = TryParseStringValueToEnum_Uncached<TEnumType>(lowerStringValue, out var parsedValueForDictionary);",
        "// Line_Reference 277:         return parseSucceededForDictionary ? (Enum) parsedValueForDictionary : null;",
        "// Line_Reference 278:       });",
        "// Line_Reference 279: ",
        "// Line_Reference 280:       if (cachedValue != null)"
    ]
}
