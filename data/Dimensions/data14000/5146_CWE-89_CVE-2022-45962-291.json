{
    "cve_id": "CVE-2022-45962",
    "cve_description": "Open Solutions for Education, Inc openSIS Community Edition v8.0 and earlier is vulnerable to SQL Injection via CalendarModal.php.",
    "cve_publish_date": "2023-02-13",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "Version 9.0 release\n\nOlder version shifted to branch: Version_8.0",
    "type_of_change": "ModificationType.ADD",
    "filename_of_changes": "ScheduleReport.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "20",
    "number_of_lines_deleted_vulnerable_to_cve": "9",
    "vulnerable_lines": [
        "// Line_Reference 34:  //echo \"<pre>\"; print_r($_REQUEST); echo \"</pre>\";",
        "// Line_Reference 82:     $get_mp_t = DBGet(DBQuery('SELECT MP_TYPE FROM marking_periods WHERE MARKING_PERIOD_ID=' . UserMP()));",
        "// Line_Reference 86:             $get_mp_ids = DBGet(DBQuery('SELECT PARENT_ID FROM marking_periods WHERE MARKING_PERIOD_ID=' . UserMP()));",
        "// Line_Reference 90:             $get_mp_ids = DBGet(DBQuery('SELECT PARENT_ID,GRANDPARENT_ID FROM marking_periods WHERE MARKING_PERIOD_ID=' . UserMP()));",
        "// Line_Reference 95:     $QI = \"SELECT c.COURSE_ID,c.TITLE,sum(cp.TOTAL_SEATS) as TOTAL_SEATS,sum(cp.FILLED_SEATS) as FILLED_SEATS,NULL AS OPEN_SEATS,(SELECT count(*) FROM schedule_requests sr WHERE sr.COURSE_ID=c.COURSE_ID) AS COUNT_REQUESTS FROM courses c,course_periods cp WHERE c.SUBJECT_ID='$_REQUEST[subject_id]' AND c.COURSE_ID=cp.COURSE_ID AND c.SYEAR='\" . UserSyear() . \"' AND c.SCHOOL_ID='\" . UserSchool() . \"' AND \" . (count($other_mps) > 0 ? \" (cp.MARKING_PERIOD_ID IN (\" . UserMp() . \",\" . implode(',', $other_mps) . \") \" : \" (cp.MARKING_PERIOD_ID=\" . UserMp()) . \" OR cp.MARKING_PERIOD_ID IS NULL)  GROUP BY c.COURSE_ID,c.TITLE ORDER BY c.TITLE\";",
        "// Line_Reference 117:     $get_mp_t = DBGet(DBQuery('SELECT MP_TYPE FROM marking_periods WHERE MARKING_PERIOD_ID=' . UserMP()));",
        "// Line_Reference 121:             $get_mp_ids = DBGet(DBQuery('SELECT PARENT_ID FROM marking_periods WHERE MARKING_PERIOD_ID=' . UserMP()));",
        "// Line_Reference 125:             $get_mp_ids = DBGet(DBQuery('SELECT PARENT_ID,GRANDPARENT_ID FROM marking_periods WHERE MARKING_PERIOD_ID=' . UserMP()));",
        "// Line_Reference 130:     $QI = \"SELECT cp.COURSE_ID,cp.COURSE_PERIOD_ID,cp.TITLE,sum(cp.TOTAL_SEATS) as TOTAL_SEATS,sum(cp.FILLED_SEATS) as FILLED_SEATS,NULL AS OPEN_SEATS FROM course_periods cp WHERE cp.COURSE_ID='\" . $_REQUEST['course_id'] . \"' AND cp.SYEAR='\" . UserSyear() . \"' AND cp.SCHOOL_ID='\" . UserSchool() . \"' AND \" . (count($other_mps) > 0 ? \" (cp.MARKING_PERIOD_ID IN (\" . UserMp() . \",\" . implode(',', $other_mps) . \") \" : \" (cp.MARKING_PERIOD_ID=\" . UserMp()) . \" OR cp.MARKING_PERIOD_ID IS NULL)  GROUP BY cp.COURSE_ID,cp.COURSE_PERIOD_ID,cp.TITLE ORDER BY cp.TITLE\";"
    ]
}
