{
    "cve_id": "CVE-2022-24897",
    "cve_description": "APIs to evaluate content with Velocity is a package for APIs to evaluate content with Velocity. Starting with version 2.3 and prior to 12.6.7, 12.10.3, and 13.0, the velocity scripts are not properly sandboxed against using the Java File API to perform read or write operations on the filesystem. Writing an attacking script in Velocity requires the Script rights in XWiki so not all users can use it, and it also requires finding an XWiki API which returns a File. The problem has been patched in versions 12.6.7, 12.10.3, and 13.0. There is no easy workaround for fixing this vulnerability other than upgrading and being careful when giving Script rights.",
    "cve_publish_date": "2022-05-02",
    "cwe_id": "CWE-22",
    "cwe_name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
    "cwe_description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
    "commit_message": "XWIKI-5168: Don't allow some methods in velocity introspector (#127)",
    "type_of_change": "Modification",
    "filename_of_changes": "SecureIntrospector.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "75",
    "number_of_lines_deleted_vulnerable_to_cve": "29",
    "vulnerable_lines": [
        "// Line_Reference 36:     private final Set<String> secureClassMethods = new HashSet<>();",
        "// Line_Reference 47:         this.secureClassMethods.add(\"getname\");",
        "// Line_Reference 48:         this.secureClassMethods.add(\"getName\");",
        "// Line_Reference 49:         this.secureClassMethods.add(\"getsimpleName\");",
        "// Line_Reference 50:         this.secureClassMethods.add(\"getSimpleName\");",
        "// Line_Reference 52:         this.secureClassMethods.add(\"isarray\");",
        "// Line_Reference 53:         this.secureClassMethods.add(\"isArray\");",
        "// Line_Reference 54:         this.secureClassMethods.add(\"isassignablefrom\");",
        "// Line_Reference 55:         this.secureClassMethods.add(\"isAssignableFrom\");",
        "// Line_Reference 56:         this.secureClassMethods.add(\"isenum\");",
        "// Line_Reference 57:         this.secureClassMethods.add(\"isEnum\");",
        "// Line_Reference 58:         this.secureClassMethods.add(\"isinstance\");",
        "// Line_Reference 59:         this.secureClassMethods.add(\"isInstance\");",
        "// Line_Reference 60:         this.secureClassMethods.add(\"isinterface\");",
        "// Line_Reference 61:         this.secureClassMethods.add(\"isInterface\");",
        "// Line_Reference 62:         this.secureClassMethods.add(\"islocalClass\");",
        "// Line_Reference 63:         this.secureClassMethods.add(\"isLocalClass\");",
        "// Line_Reference 64:         this.secureClassMethods.add(\"ismemberclass\");",
        "// Line_Reference 65:         this.secureClassMethods.add(\"isMemberClass\");",
        "// Line_Reference 66:         this.secureClassMethods.add(\"isprimitive\");",
        "// Line_Reference 67:         this.secureClassMethods.add(\"isPrimitive\");",
        "// Line_Reference 68:         this.secureClassMethods.add(\"issynthetic\");",
        "// Line_Reference 69:         this.secureClassMethods.add(\"isSynthetic\");",
        "// Line_Reference 70:         this.secureClassMethods.add(\"getEnumConstants\");",
        "// Line_Reference 72:         // TODO: add more when needed",
        "// Line_Reference 78:         if (Class.class.isAssignableFrom(clazz) && methodName != null && this.secureClassMethods.contains(methodName)) {",
        "// Line_Reference 79:             return true;",
        "// Line_Reference 80:         } else {",
        "// Line_Reference 81:             return super.checkObjectExecutePermission(clazz, methodName);"
    ]
}
