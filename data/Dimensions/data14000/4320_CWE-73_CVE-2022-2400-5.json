{
    "cve_id": "CVE-2022-2400",
    "cve_description": "External Control of File Name or Path in GitHub repository dompdf/dompdf prior to 2.0.0.",
    "cve_publish_date": "2022-07-18",
    "cwe_id": "CWE-73",
    "cwe_name": "External Control of File Name or Path",
    "cwe_description": "The product allows user input to control or influence paths or file names that are used in filesystem operations.",
    "commit_message": "Update resource URI validation and handling\n\nURI scheme (protocol) validation rules are now specified through the Options class. By default file and http(s) URIs are allowed and validation rules defined. Validation rules for PHAR URIs are defined but the scheme is not enabled by default.\n\nResource retrieval has been updated to use file_get_contents for schemes other than http(s).\n\nfixes #621\nfixes #2826\n\nin lieu of #1903",
    "type_of_change": "Modification",
    "filename_of_changes": "Helpers.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "56",
    "number_of_lines_deleted_vulnerable_to_cve": "39",
    "vulnerable_lines": [
        "// Line_Reference 61:             //return $protocol . $host . rtrim($base_path, \"/\\\\\") . \"/\";",
        "// Line_Reference 62:             return $protocol . $host . $base_path;",
        "// Line_Reference 67:         if ((mb_strpos($url, \"://\") !== false && substr($url, 0, 7) !== \"file://\") || mb_substr($url, 0, 1) === \"#\" || mb_strpos($url, \"data:\") === 0 || mb_strpos($url, \"mailto:\") === 0 || mb_strpos($url, \"tel:\") === 0) {",
        "// Line_Reference 71:         if (strpos($url, \"file://\") === 0) {",
        "// Line_Reference 73:             $protocol = \"\";",
        "// Line_Reference 77:         if ($protocol !== \"file://\") {",
        "// Line_Reference 78:             $ret = $protocol;",
        "// Line_Reference 79:         }",
        "// Line_Reference 81:         if (!in_array(mb_strtolower($protocol), [\"http://\", \"https://\", \"ftp://\", \"ftps://\"], true)) {",
        "// Line_Reference 440:         // Exclude windows drive letters...",
        "// Line_Reference 441:         if (isset($arr[\"scheme\"]) && $arr[\"scheme\"] !== \"file\" && strlen($arr[\"scheme\"]) > 1) {",
        "// Line_Reference 483:             $i = mb_stripos($url, \"file://\");",
        "// Line_Reference 484:             if ($i !== false) {",
        "// Line_Reference 485:                 $url = mb_substr($url, $i + 7);",
        "// Line_Reference 486:             }",
        "// Line_Reference 487: ",
        "// Line_Reference 488:             $protocol = \"\"; // \"file://\"; ? why doesn't this work... It's because of",
        "// Line_Reference 489:             // network filenames like //COMPU/SHARENAME",
        "// Line_Reference 490: ",
        "// Line_Reference 492:             $file = basename($url);",
        "// Line_Reference 493: ",
        "// Line_Reference 494:             $path = dirname($url);",
        "// Line_Reference 495: ",
        "// Line_Reference 496:             // Check that the path exists",
        "// Line_Reference 497:             if ($path !== false) {",
        "// Line_Reference 498:                 $path .= '/';",
        "// Line_Reference 501:                 // generate a url to access the file if no real path found.",
        "// Line_Reference 502:                 $protocol = isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on' ? 'https://' : 'http://';",
        "// Line_Reference 503: ",
        "// Line_Reference 504:                 $host = isset($_SERVER[\"HTTP_HOST\"]) ? $_SERVER[\"HTTP_HOST\"] : php_uname(\"n\");",
        "// Line_Reference 506:                 if (substr($arr[\"path\"], 0, 1) === '/') {",
        "// Line_Reference 507:                     $path = dirname($arr[\"path\"]);",
        "// Line_Reference 508:                 } else {",
        "// Line_Reference 509:                     $path = '/' . rtrim(dirname($_SERVER[\"SCRIPT_NAME\"]), '/') . '/' . $arr[\"path\"];",
        "// Line_Reference 510:                 }",
        "// Line_Reference 518:             \"file\" => $file];",
        "// Line_Reference 881:         $is_local_path = ($protocol === \"\" || $protocol === \"file://\");",
        "// Line_Reference 886:             if ($is_local_path || ini_get('allow_url_fopen')) {",
        "// Line_Reference 902:             } elseif (function_exists('curl_exec')) {"
    ]
}
