{
    "cve_id": "CVE-2021-21328",
    "cve_description": "Vapor is a web framework for Swift. In Vapor before version 4.40.1, there is a DoS attack against anyone who Bootstraps a metrics backend for their Vapor app. The following is the attack vector: 1. send unlimited requests against a vapor instance with different paths. this will create unlimited counters and timers, which will eventually drain the system. 2. downstream services might suffer from this attack as well by being spammed with error paths. This has been patched in 4.40.1. The `DefaultResponder` will rewrite any undefined route paths for to `vapor_route_undefined` to avoid unlimited counters.",
    "cve_publish_date": "2021-02-26",
    "cwe_id": "CWE-400",
    "cwe_name": "Uncontrolled Resource Consumption",
    "cwe_description": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
    "commit_message": "Merge pull request from GHSA-gcj9-jj38-hwmc\n\n* Start backfilling some tests for metrics\n\n* Add failing test for not found route\n\n* Rewrite 404 path to avoid DOS attack\n\n* Failing test to distinguish between undefined routes and routes that return a 404\n\n* Finalise path expressions\n\n* Don't crash the tests by bootstrapping multiple times\n\n* Tests passing\n\n* Make tests non-throwing\n\n* Check request.route instead of adding new bool\n\n* Update Tests/VaporTests/Utilities/CapturingMetricsSystem.swift\n\nCo-authored-by: Gwynne Raskind <gwynne@darkrainfall.org>\n\n* Add attribution for CapturingMetricsSystem\n\n* Update Tests/VaporTests/Utilities/CapturingMetricsSystem.swift\n\nCo-authored-by: Gwynne Raskind <gwynne@darkrainfall.org>\n\n* Remove last uses of NSUUID\n\n* Revert change to stop the tests crashing\n\n* Backfill more tests\n\n* Migrate CapturingMetricsSystem to NIOConcurrencyHelpers\n\n* Ensure undefined route methods get mapped to undefined\n\n* Add tests for the timers as well\n\n* Reuse dimensions for the timer as well\n\n* Rewrite undefined routes' method to undefined as well as the path\n\n* Avoid duplicating the method in the path\n\n* Add comment for rewriting path in metrics\n\n* Add test to ensure we don't pass through the ID for a dynamic path\n\n* Fix typo in comment\n\nCo-authored-by: Gwynne Raskind <gwynne@darkrainfall.org>",
    "type_of_change": "ModificationType.ADD",
    "filename_of_changes": "DefaultResponder.swift",
    "code_language": "Swift",
    "number_of_lines_added_for_mitigation": "24",
    "number_of_lines_deleted_vulnerable_to_cve": "14",
    "vulnerable_lines": [
        "// Line_Reference 44:         let path: String",
        "// Line_Reference 46:             path = cachedRoute.route.description",
        "// Line_Reference 50:             path = request.url.path",
        "// Line_Reference 63:                 path: path,",
        "// Line_Reference 86:         path: String,",
        "// Line_Reference 90:         let counterDimensions = [",
        "// Line_Reference 91:             (\"method\", request.method.string),",
        "// Line_Reference 92:             (\"path\", path),",
        "// Line_Reference 95:         Counter(label: \"http_requests_total\", dimensions: counterDimensions).increment()",
        "// Line_Reference 97:             Counter(label: \"http_request_errors_total\", dimensions: counterDimensions).increment()",
        "// Line_Reference 101:             dimensions: [",
        "// Line_Reference 102:                 (\"method\", request.method.string),",
        "// Line_Reference 103:                 (\"path\", path)",
        "// Line_Reference 104:             ],"
    ]
}
