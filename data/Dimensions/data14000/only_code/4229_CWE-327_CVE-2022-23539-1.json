var jwt = require('../index');
var PS_SUPPORTED = require('../lib/psSupported');
var fs = require('fs');
var path = require('path');
var expect = require('chai').expect;
var assert = require('chai').assert;
var ms = require('ms');
var algorithms = {
describe('Asymmetric Algorithms', function(){
var pub = algorithms[algorithm].pub_key;
var priv = algorithms[algorithm].priv_key;
var invalid_pub = algorithms[algorithm].invalid_pub_key;
var token = jwt.sign({ foo: 'bar' }, priv, { algorithm: algorithm });
var decoded = jwt.verify(token, pub);
var jwtVerify = jwt.verify.bind(null, token, invalid_pub)
var token = jwt.sign({ foo: 'bar' }, priv, { algorithm: algorithm, expiresIn: '10m' });
token = jwt.sign({ foo: 'bar' }, priv, { algorithm: algorithm, expiresIn: -1 * ms('10m') });
token = jwt.sign({ foo: 'bar' }, priv, { algorithm: algorithm, expiresIn: -1 * ms('10m') });
var token = jwt.sign({ foo: 'bar' }, priv, { algorithm: algorithm });
var payload = jwt.decode('whatever.token');
var obj = { foo: 'bar' };
var token = jwt.sign(obj, priv, { algorithm: algorithm });
var payload = jwt.decode(token);
var obj = { foo: 'bar' };
var token = jwt.sign(obj, priv, { algorithm: algorithm });
var decoded = jwt.decode(token, { complete: true });
