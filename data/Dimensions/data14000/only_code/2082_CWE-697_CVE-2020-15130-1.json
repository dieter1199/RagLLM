let input_txid = txn.inputs[0].prevTxId.toString("hex");
let input_txhex = await this.retrieveRawTransaction(input_txid);
let input_tx: Bitcore.Transaction = new Bitcore.Transaction(input_txhex);
if (input_slpmsg.transactionType === SlpTransactionType.SEND &&
(!input_slpmsg.sendOutputs![1].isGreaterThan(0)))
{
this.cachedValidations[txid].validity = false;
this.cachedValidations[txid].waiting = false;
this.cachedValidations[txid].invalidReason = "NFT1 child's parent has SLP output that is not greater than zero.";
return this.cachedValidations[txid].validity!;
} else if ((input_slpmsg.transactionType === SlpTransactionType.GENESIS ||
input_slpmsg.transactionType === SlpTransactionType.MINT) &&
!input_slpmsg.genesisOrMintQuantity!.isGreaterThan(0))
{
this.cachedValidations[txid].validity = false;
this.cachedValidations[txid].waiting = false;
this.cachedValidations[txid].invalidReason = "NFT1 child's parent has SLP output that is not greater than zero.";
return this.cachedValidations[txid].validity!;