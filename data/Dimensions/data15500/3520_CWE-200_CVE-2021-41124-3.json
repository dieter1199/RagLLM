{
    "cve_id": "CVE-2021-41124",
    "cve_description": "Scrapy-splash is a library which provides Scrapy and JavaScript integration. In affected versions users who use [`HttpAuthMiddleware`](http://doc.scrapy.org/en/latest/topics/downloader-middleware.html#module-scrapy.downloadermiddlewares.httpauth) (i.e. the `http_user` and `http_pass` spider attributes) for Splash authentication will have any non-Splash request expose your credentials to the request target. This includes `robots.txt` requests sent by Scrapy when the `ROBOTSTXT_OBEY` setting is set to `True`. Upgrade to scrapy-splash 0.8.0 and use the new `SPLASH_USER` and `SPLASH_PASS` settings instead to set your Splash authentication credentials safely. If you cannot upgrade, set your Splash request credentials on a per-request basis, [using the `splash_headers` request parameter](https://github.com/scrapy-plugins/scrapy-splash/tree/0.8.x#http-basic-auth), instead of defining them globally using the [`HttpAuthMiddleware`](http://doc.scrapy.org/en/latest/topics/downloader-middleware.html#module-scrapy.downloadermiddlewares.httpauth). Alternatively, make sure all your requests go through Splash. That includes disabling the [robots.txt middleware](https://docs.scrapy.org/en/latest/topics/downloader-middleware.html#topics-dlmw-robots).",
    "cve_publish_date": "2021-10-05",
    "cwe_id": "CWE-200",
    "cwe_name": "Exposure of Sensitive Information to an Unauthorized Actor",
    "cwe_description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
    "commit_message": "Implement SPLASH_USER and SPLASH_PASS",
    "type_of_change": "Modification",
    "filename_of_changes": "test_middleware.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "42",
    "number_of_lines_deleted_vulnerable_to_cve": "13",
    "vulnerable_lines": [
        "// Line_Reference 35: def _get_mw():",
        "// Line_Reference 36:     crawler = _get_crawler({})",
        "// Line_Reference 142:     req2 = mw.process_request(req2, None)",
        "// Line_Reference 351:     req = mw.process_request(req, None)",
        "// Line_Reference 375:     req2 = mw.process_request(req, None)",
        "// Line_Reference 390:     req = mw.process_request(req, None)",
        "// Line_Reference 417:     req = mw.process_request(req, None)",
        "// Line_Reference 440:     req = mw.process_request(req, None)",
        "// Line_Reference 477:     req = mw.process_request(req, spider)",
        "// Line_Reference 501:     req = mw.process_request(req, spider)",
        "// Line_Reference 743:     req = scrapy.Request(\"http://example.com\", meta = {'splash': {",
        "// Line_Reference 752:     req1 = scrapy.Request(\"http://example.com\", meta = {",
        "// Line_Reference 762:     req2 = scrapy.Request(\"http://example.com\", meta = {"
    ]
}
