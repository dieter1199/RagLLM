{
    "cve_id": "CVE-2020-7677",
    "cve_description": "This affects the package thenify before 3.3.1. The name argument provided to the package can be controlled by users without any sanitization, and this is provided to the eval function without any sanitization.",
    "cve_publish_date": "2022-07-25",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "fix: remove eval (#30)",
    "type_of_change": "Modification",
    "filename_of_changes": "index.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "30",
    "number_of_lines_deleted_vulnerable_to_cve": "33",
    "vulnerable_lines": [
        "// Line_Reference 10:  * @param {Function} $$__fn__$$",
        "// Line_Reference 15: function thenify($$__fn__$$, options) {",
        "// Line_Reference 16:   assert(typeof $$__fn__$$ === 'function')",
        "// Line_Reference 17:   return eval(createWrapper($$__fn__$$.name, options))",
        "// Line_Reference 23:  * @param {Function} $$__fn__$$",
        "// Line_Reference 28: thenify.withCallback = function ($$__fn__$$, options) {",
        "// Line_Reference 29:   assert(typeof $$__fn__$$ === 'function')",
        "// Line_Reference 32:   if (options.multiArgs === undefined) options.multiArgs = true",
        "// Line_Reference 33:   return eval(createWrapper($$__fn__$$.name, options))",
        "// Line_Reference 55: function createWrapper(name, options) {",
        "// Line_Reference 56:   name = (name || '').replace(/\\s|bound(?!$)/g, '')",
        "// Line_Reference 58:   // default to true",
        "// Line_Reference 59:   var multiArgs = options.multiArgs !== undefined ? options.multiArgs : true",
        "// Line_Reference 60:   multiArgs = 'var multiArgs = ' + JSON.stringify(multiArgs) + '\\n'",
        "// Line_Reference 61: ",
        "// Line_Reference 62:   var withCallback = options.withCallback ?",
        "// Line_Reference 63:     'var lastType = typeof arguments[len - 1]\\n'",
        "// Line_Reference 64:     + 'if (lastType === \"function\") return $$__fn__$$.apply(self, arguments)\\n'",
        "// Line_Reference 65:    : ''",
        "// Line_Reference 66: ",
        "// Line_Reference 67:   return '(function ' + name + '() {\\n'",
        "// Line_Reference 68:     + 'var self = this\\n'",
        "// Line_Reference 69:     + 'var len = arguments.length\\n'",
        "// Line_Reference 70:     + multiArgs",
        "// Line_Reference 71:     + withCallback",
        "// Line_Reference 72:     + 'var args = new Array(len + 1)\\n'",
        "// Line_Reference 73:     + 'for (var i = 0; i < len; ++i) args[i] = arguments[i]\\n'",
        "// Line_Reference 74:     + 'var lastIndex = i\\n'",
        "// Line_Reference 75:     + 'return new Promise(function (resolve, reject) {\\n'",
        "// Line_Reference 76:       + 'args[lastIndex] = createCallback(resolve, reject, multiArgs)\\n'",
        "// Line_Reference 77:       + '$$__fn__$$.apply(self, args)\\n'",
        "// Line_Reference 78:     + '})\\n'",
        "// Line_Reference 79:   + '})'"
    ]
}
