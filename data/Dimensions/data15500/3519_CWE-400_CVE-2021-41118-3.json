{
    "cve_id": "CVE-2021-41118",
    "cve_description": "The DynamicPageList3 extension is a reporting tool for MediaWiki, listing category members and intersections with various formats and details. In affected versions unsanitised input of regular expression date within the parameters of the DPL parser function, allowed for the possibility of ReDoS (Regex Denial of Service). This has been resolved in version 3.3.6. If you are unable to update you may also set `$wgDplSettings['functionalRichness'] = 0;` or disable DynamicPageList3 to mitigate.",
    "cve_publish_date": "2021-10-04",
    "cwe_id": "CWE-400",
    "cwe_name": "Uncontrolled Resource Consumption",
    "cwe_description": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
    "commit_message": "Major cleanup (#57)",
    "type_of_change": "Modification",
    "filename_of_changes": "Config.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "12",
    "number_of_lines_deleted_vulnerable_to_cve": "23",
    "vulnerable_lines": [
        "// Line_Reference 2: /**",
        "// Line_Reference 3:  * DynamicPageList3",
        "// Line_Reference 4:  * DPL Config Class",
        "// Line_Reference 5:  *",
        "// Line_Reference 6:  * @author\t\tIlyaHaykinson, Unendlich, Dangerville, Algorithmix, Theaitetos, Alexia E. Smith",
        "// Line_Reference 7:  * @license\t\tGPL-2.0-or-later",
        "// Line_Reference 8:  * @package\t\tDynamicPageList3",
        "// Line_Reference 9:  *",
        "// Line_Reference 10:  */",
        "// Line_Reference 24: \t * @access\tpublic",
        "// Line_Reference 25: \t * @param\tarray\tSettings to initialize for DPL.",
        "// Line_Reference 26: \t * @return\tvoid",
        "// Line_Reference 32: \t\t\t$settings = $wgDplSettings;",
        "// Line_Reference 45: \t * @access\tpublic",
        "// Line_Reference 46: \t * @param\tstring\tSetting Key",
        "// Line_Reference 47: \t * @return\tmixed\tThe setting's actual setting or null if it does not exist.",
        "// Line_Reference 50: \t\treturn ( array_key_exists( $setting, self::$settings ) ? self::$settings[$setting] : null );",
        "// Line_Reference 56: \t * @access\tpublic",
        "// Line_Reference 57: \t * @return\tarray\tAll settings",
        "// Line_Reference 66: \t * @access\tpublic",
        "// Line_Reference 67: \t * @param\tstring\tSetting Key",
        "// Line_Reference 68: \t * @param\tmixed\t[Optional] Appropriate value for the setting key.",
        "// Line_Reference 69: \t * @return\tvoid"
    ]
}
