{
    "cve_id": "CVE-2021-37637",
    "cve_description": "TensorFlow is an end-to-end open source platform for machine learning. It is possible to trigger a null pointer dereference in TensorFlow by passing an invalid input to `tf.raw_ops.CompressElement`. The [implementation](https://github.com/tensorflow/tensorflow/blob/47a06f40411a69c99f381495f490536972152ac0/tensorflow/core/data/compression_utils.cc#L34) was accessing the size of a buffer obtained from the return of a separate function call before validating that said buffer is valid. We have patched the issue in GitHub commit 5dc7f6981fdaf74c8c5be41f393df705841fb7c5. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
    "cve_publish_date": "2021-08-12",
    "cwe_id": "CWE-476",
    "cwe_name": "NULL Pointer Dereference",
    "cwe_description": "The product dereferences a pointer that it expects to be valid but is NULL.",
    "commit_message": "Fix accessing possible nullptr in tensorflow::data::CompressElement and UncompressElement which are used in tf.data.service.\n\nPiperOrigin-RevId: 373920841\nChange-Id: Ia88d78aee09fa19bb53a0f163fd19620d0c68743",
    "type_of_change": "Modification",
    "filename_of_changes": "compression_utils.cc",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "15",
    "number_of_lines_deleted_vulnerable_to_cve": "7",
    "vulnerable_lines": [
        "// Line_Reference 32:       // Some datatypes can be memcopied, allowing us to save two copies",
        "// Line_Reference 33:       // (AsProtoTensorContent and SerializeToArray).",
        "// Line_Reference 34:       total_size += DMAHelper::buffer(&component)->size();",
        "// Line_Reference 56:       memcpy(position, buffer->data(), buffer->size());",
        "// Line_Reference 57:       metadata->set_tensor_size_bytes(buffer->size());",
        "// Line_Reference 97:       iov[i].iov_base = buffer->data();",
        "// Line_Reference 98:       iov[i].iov_len = buffer->size();"
    ]
}
