{
    "cve_id": "CVE-2022-4366",
    "cve_description": "Missing Authorization in GitHub repository lirantal/daloradius prior to master branch.",
    "cve_publish_date": "2022-12-08",
    "cwe_id": "CWE-862",
    "cwe_name": "Missing Authorization",
    "cwe_description": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
    "commit_message": "fix: introduced security fixes (#263)\n\n- dologin.php - validating user input and introduced CSRF token check\r\n- logging.php - preventing direct access to this file, which means redirecting to index.php when directly hitting this include file, (repeated for other exten. / include / etc. files), and optimized logging features\r\n- actionMessages.php and errorHandling.php same as logging.php\r\n- library/exten-* files - preventing direct access to these files, generalized the approach of looking for known file locations, improved user input validation (params such as limit, etc.), improved output (escaping logfile output, etc.)\r\n- in library/exten-server_info.php - i also have added new commands for retrieving network information and system distro/version\r\n- opendb.php - general code optimization (TODO prevent direct access to this file)\r\n- sessions.php - introduced new session handling (TODO prevent direct access to this file)\r\n- login.php - removed the default username hardcoded in the form, added the csrf_token\r\n- rep-* - user input validation, code optimization",
    "type_of_change": "Modification",
    "filename_of_changes": "logging.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "91",
    "number_of_lines_deleted_vulnerable_to_cve": "82",
    "vulnerable_lines": [
        "// Line_Reference 2: /*********************************************************************",
        "// Line_Reference 3: * Name: logging.php",
        "// Line_Reference 4: * Author: Liran tal <liran.tal@gmail.com>",
        "// Line_Reference 5: *",
        "// Line_Reference 6: * This file is used for controlling the logging actions",
        "// Line_Reference 7: *",
        "// Line_Reference 8: *********************************************************************/",
        "// Line_Reference 9: ",
        "// Line_Reference 10: ",
        "// Line_Reference 12: * It is important to understand that when logging.php is included in",
        "// Line_Reference 13: * a page AFTER an include for config_read.php it gains access to all",
        "// Line_Reference 14: * of the variables it's scope including the $configValues[....] because",
        "// Line_Reference 15: * it was included just before it.",
        "// Line_Reference 16: *",
        "// Line_Reference 17: * But it should be noticed that these variables are only accessible",
        "// Line_Reference 18: * in the scope of the general or main block of php code and are",
        "// Line_Reference 19: * not accessible from functions, so we can't just use $configValues[...]",
        "// Line_Reference 20: * variables from within logMessageNotice() or any other function",
        "// Line_Reference 21: * and so we must use them here as references.",
        "// Line_Reference 22: *",
        "// Line_Reference 23: * The relevant variables are:",
        "// Line_Reference 24: *",
        "// Line_Reference 25: * $operator",
        "// Line_Reference 26: * $_SERVER[\"SCRIPT_NAME\"]",
        "// Line_Reference 27: * $configValues['CONFIG_LOG_FILE']",
        "// Line_Reference 28: *",
        "// Line_Reference 29: */",
        "// Line_Reference 31: if ($configValues['CONFIG_LOG_PAGES'] == \"yes\") {",
        "// Line_Reference 32: \tif (isset($log)) {",
        "// Line_Reference 33: \t        $msgNotice = $operator . \" \" . $log;",
        "// Line_Reference 34: \t        logMessage(\"NOTICE\", $msgNotice, $configValues['CONFIG_LOG_FILE'], $_SERVER[\"SCRIPT_NAME\"]);",
        "// Line_Reference 35: \t}",
        "// Line_Reference 40: if ($configValues['CONFIG_LOG_QUERIES'] == \"yes\") {",
        "// Line_Reference 41: \tif (isset($logQuery)) {",
        "// Line_Reference 42: \t        $msgQuery = $operator . \" \" . $logQuery;",
        "// Line_Reference 43: \t        logMessage(\"QUERY\", $msgQuery, $configValues['CONFIG_LOG_FILE'], $_SERVER[\"SCRIPT_NAME\"]);",
        "// Line_Reference 44: \t}",
        "// Line_Reference 49: if ($configValues['CONFIG_LOG_ACTIONS'] == \"yes\") {",
        "// Line_Reference 50: \tif (isset($logAction)) {",
        "// Line_Reference 51: \t        $msgAction = $operator . \" \" . $logAction;",
        "// Line_Reference 52: \t        logMessage(\"ACTION\", $msgAction, $configValues['CONFIG_LOG_FILE'], $_SERVER[\"SCRIPT_NAME\"]);",
        "// Line_Reference 53: \t}",
        "// Line_Reference 57: /********************************************************************************",
        "// Line_Reference 62:  ********************************************************************************/",
        "// Line_Reference 63: if ($configValues['CONFIG_DEBUG_SQL'] == \"yes\") {",
        "// Line_Reference 64: \tif (isset($logDebugSQL)) {",
        "// Line_Reference 65: \t        $msgDebugSQL = \"- SQL -\" . \" \" . $logDebugSQL . \" on page: \";",
        "// Line_Reference 66: \t        logMessage(\"DEBUG\", $msgDebugSQL, $configValues['CONFIG_LOG_FILE'], $_SERVER[\"SCRIPT_NAME\"]);",
        "// Line_Reference 67: \t}",
        "// Line_Reference 70: /* the continuation of the CONFIG_DEBUG_SQL actually, this prints to the page",
        "// Line_Reference 71:  * being viewed */",
        "// Line_Reference 72: if ($configValues['CONFIG_DEBUG_SQL_ONPAGE'] == \"yes\") {",
        "// Line_Reference 73: \tif (isset($logDebugSQL)) {",
        "// Line_Reference 74: \t\t\techo \"<br/><br/>\";",
        "// Line_Reference 75: \t\t\techo \"Debugging SQL Queries: <br/>\";",
        "// Line_Reference 76: \t\t\techo $logDebugSQL;",
        "// Line_Reference 77: \t\t\techo \"<br/><br/>\";",
        "// Line_Reference 78: \t\t}",
        "// Line_Reference 81: ",
        "// Line_Reference 82: ",
        "// Line_Reference 83: function logMessage($type, $msg, $logFile, $currPage) {",
        "// Line_Reference 84: /*",
        "// Line_Reference 85: * @param $type               The message type, for example, NOTICE, DEBUG, ERROR, ACTION, etc...",
        "// Line_Reference 86: * @param $msg           \tThe message string which should be logged to the file",
        "// Line_Reference 87: * @param $logFile           The full path for the filename to write logs to",
        "// Line_Reference 88: * @param $currPage       The current page that we included from",
        "// Line_Reference 89: * @return $table              The table name, either radcheck or radreply",
        "// Line_Reference 90: */",
        "// Line_Reference 91: ",
        "// Line_Reference 92:         $date = date('M d G:i:s');",
        "// Line_Reference 93:         $msgString = $date . \" \" . $type . \" \" . $msg . \" \" . $currPage;",
        "// Line_Reference 94: ",
        "// Line_Reference 95:         $fp = fopen($logFile, \"a\");",
        "// Line_Reference 96:         if ($fp) {",
        "// Line_Reference 97:         fwrite($fp, $msgString  . \"\\n\");",
        "// Line_Reference 98:                 fclose($fp);",
        "// Line_Reference 99:         } else {",
        "// Line_Reference 100: ",
        "// Line_Reference 101:                 echo \"<font color='#FF0000'>error: could not open the file for writing:<b> $logFile </b><br/></font>\";",
        "// Line_Reference 102:                         echo \"Check file permissions. The file should be writable by the webserver's user/group<br/>\";",
        "// Line_Reference 103:         }",
        "// Line_Reference 104: "
    ]
}
