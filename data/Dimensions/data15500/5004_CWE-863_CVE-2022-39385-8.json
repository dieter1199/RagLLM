{
    "cve_id": "CVE-2022-39385",
    "cve_description": "Discourse is the an open source discussion platform. In some rare cases users redeeming an invitation can be added as a participant to several private message topics that they should not be added to. They are not notified of this, it happens transparently in the background. This issue has been resolved in commit `a414520742` and will be included in future releases. Users are advised to upgrade. Users are also advised to set `SiteSetting.max_invites_per_day` to 0 until the patch is installed.",
    "cve_publish_date": "2022-11-14",
    "cwe_id": "CWE-863",
    "cwe_name": "Incorrect Authorization",
    "cwe_description": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check. This allows attackers to bypass intended access restrictions.",
    "commit_message": "SECURITY: Prevent email from being nil in InviteRedeemer (#19004)\n\nThis commit adds some protections in InviteRedeemer to ensure that email\r\ncan never be nil, which could cause issues with inviting the invited\r\nperson to private topics since there was an incorrect inner join.\r\n\r\nIf the email is nil and the invite is scoped to an email, we just use\r\nthat invite.email unconditionally.  If a redeeming_user (an existing\r\nuser) is passed in when redeeming an email, we use their email to\r\noverride the passed in email.  Otherwise we just use the passed in\r\nemail.  We now raise an error after all this if the email is still nil.\r\nThis commit also adds some tests to catch the private topic fix, and\r\nsome general improvements and comments around the invite code.\r\n\r\nThis commit also includes a migration to delete TopicAllowedUser records\r\nfor users who were mistakenly added to topics as part of the invite\r\nredemption process.",
    "type_of_change": "ModificationType.ADD",
    "filename_of_changes": "session_controller.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 763:       if !invite.is_invite_link? && sso.email != invite.email"
    ]
}
