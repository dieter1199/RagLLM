{
    "cve_id": "CVE-2017-15649",
    "cve_description": "net/packet/af_packet.c in the Linux kernel before 4.13.6 allows local users to gain privileges via crafted system calls that trigger mishandling of packet_fanout data structures, because of a race condition (involving fanout_add and packet_do_bind) that leads to a use-after-free, a different vulnerability than CVE-2017-6346.",
    "cve_publish_date": "2017-10-19",
    "cwe_id": "CWE-362",
    "cwe_name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
    "cwe_description": "The product contains a code sequence that can run concurrently with other code, and the code sequence requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence that is operating concurrently.",
    "commit_message": "packet: hold bind lock when rebinding to fanout hook\n\nPacket socket bind operations must hold the po->bind_lock. This keeps\npo->running consistent with whether the socket is actually on a ptype\nlist to receive packets.\n\nfanout_add unbinds a socket and its packet_rcv/tpacket_rcv call, then\nbinds the fanout object to receive through packet_rcv_fanout.\n\nMake it hold the po->bind_lock when testing po->running and rebinding.\nElse, it can race with other rebind operations, such as that in\npacket_set_ring from packet_rcv to tpacket_rcv. Concurrent updates\ncan result in a socket being added to a fanout group twice, causing\nuse-after-free KASAN bug reports, among others.\n\nReported independently by both trinity and syzkaller.\nVerified that the syzkaller reproducer passes after this patch.\n\nFixes: dc99f600698d (\"packet: Add fanout support.\")\nReported-by: nixioaming <nixiaoming@huawei.com>\nSigned-off-by: Willem de Bruijn <willemb@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "type_of_change": "Modification",
    "filename_of_changes": "af_packet.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "11",
    "number_of_lines_deleted_vulnerable_to_cve": "5",
    "vulnerable_lines": [
        "// Line_Reference 1687: \terr = -EINVAL;",
        "// Line_Reference 1688: \tif (!po->running)",
        "// Line_Reference 1689: \t\tgoto out;",
        "// Line_Reference 1690: ",
        "// Line_Reference 1752: \tif (match->type == type &&"
    ]
}
