{
    "cve_id": "CVE-2018-14774",
    "cve_description": "An issue was discovered in HttpKernel in Symfony 2.7.0 through 2.7.48, 2.8.0 through 2.8.43, 3.3.0 through 3.3.17, 3.4.0 through 3.4.13, 4.0.0 through 4.0.13, and 4.1.0 through 4.1.2. When using HttpCache, the values of the X-Forwarded-Host headers are implicitly set as trusted while this should be forbidden, leading to potential host header injection.",
    "cve_publish_date": "2018-08-03",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "[HttpKernel] fix trusted headers management in HttpCache and InlineFragmentRenderer",
    "type_of_change": "Modification",
    "filename_of_changes": "InlineFragmentRendererTest.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "20",
    "number_of_lines_deleted_vulnerable_to_cve": "18",
    "vulnerable_lines": [
        "// Line_Reference 29:         $this->originalTrustedHeaderName = Request::getTrustedHeaderName(Request::HEADER_CLIENT_IP);",
        "// Line_Reference 34:         Request::setTrustedHeaderName(Request::HEADER_CLIENT_IP, $this->originalTrustedHeaderName);",
        "// Line_Reference 58:         $subRequest->server->set('HTTP_X_FORWARDED_FOR', '127.0.0.1');",
        "// Line_Reference 87:         $strategy = new InlineFragmentRenderer($this->getKernelExpectingRequest(Request::create('/')));",
        "// Line_Reference 171: ",
        "// Line_Reference 174:             $expectedSubRequest->server->set('HTTP_X_FORWARDED_FOR', '127.0.0.1');",
        "// Line_Reference 197:         if (Request::getTrustedHeaderName(Request::HEADER_CLIENT_IP)) {",
        "// Line_Reference 198:             $expectedSubRequest->headers->set('x-forwarded-for', array('127.0.0.1'));",
        "// Line_Reference 199:             $expectedSubRequest->server->set('HTTP_X_FORWARDED_FOR', '127.0.0.1');",
        "// Line_Reference 200:         }",
        "// Line_Reference 211:         $expectedSubRequest->server->set('REMOTE_ADDR', '1.1.1.1');",
        "// Line_Reference 212: ",
        "// Line_Reference 213:         if (Request::getTrustedHeaderName(Request::HEADER_CLIENT_IP)) {",
        "// Line_Reference 214:             $expectedSubRequest->headers->set('x-forwarded-for', array('127.0.0.1'));",
        "// Line_Reference 215:             $expectedSubRequest->server->set('HTTP_X_FORWARDED_FOR', '127.0.0.1');",
        "// Line_Reference 216:         }",
        "// Line_Reference 233:         $expectedSubRequest->server->set('REMOTE_ADDR', '1.1.1.1');",
        "// Line_Reference 235:         $expectedSubRequest->server->set('HTTP_X_FORWARDED_FOR', '127.0.0.1');"
    ]
}
