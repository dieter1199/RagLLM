{
    "cve_id": "CVE-2019-10638",
    "cve_description": "In the Linux kernel before 5.1.7, a device can be tracked by an attacker using the IP ID values the kernel produces for connection-less protocols (e.g., UDP and ICMP). When such traffic is sent to multiple destination IP addresses, it is possible to obtain hash collisions (of indices to the counter array) and thereby obtain the hashing key (via enumeration). An attack may be conducted by hosting a crafted web page that uses WebRTC or gQUIC to force UDP traffic to attacker-controlled IP addresses.",
    "cve_publish_date": "2019-07-05",
    "cwe_id": "CWE-326",
    "cwe_name": "Inadequate Encryption Strength",
    "cwe_description": "The product stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required.",
    "commit_message": "inet: switch IP ID generator to siphash\n\nAccording to Amit Klein and Benny Pinkas, IP ID generation is too weak\nand might be used by attackers.\n\nEven with recent net_hash_mix() fix (netns: provide pure entropy for net_hash_mix())\nhaving 64bit key and Jenkins hash is risky.\n\nIt is time to switch to siphash and its 128bit keys.\n\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nReported-by: Amit Klein <aksecurity@gmail.com>\nReported-by: Benny Pinkas <benny@pinkas.net>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "type_of_change": "Modification",
    "filename_of_changes": "output_core.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "16",
    "number_of_lines_deleted_vulnerable_to_cve": "14",
    "vulnerable_lines": [
        "// Line_Reference 13: static u32 __ipv6_select_ident(struct net *net, u32 hashrnd,",
        "// Line_Reference 19: \thash = __ipv6_addr_jhash(dst, hashrnd);",
        "// Line_Reference 20: \thash = __ipv6_addr_jhash(src, hash);",
        "// Line_Reference 21: \thash ^= net_hash_mix(net);",
        "// Line_Reference 44: \tstatic u32 ip6_proxy_idents_hashrnd __read_mostly;",
        "// Line_Reference 56: \tnet_get_random_once(&ip6_proxy_idents_hashrnd,",
        "// Line_Reference 57: \t\t\t    sizeof(ip6_proxy_idents_hashrnd));",
        "// Line_Reference 58: ",
        "// Line_Reference 59: \tid = __ipv6_select_ident(net, ip6_proxy_idents_hashrnd,",
        "// Line_Reference 60: \t\t\t\t &addrs[1], &addrs[0]);",
        "// Line_Reference 69: \tstatic u32 ip6_idents_hashrnd __read_mostly;",
        "// Line_Reference 72: \tnet_get_random_once(&ip6_idents_hashrnd, sizeof(ip6_idents_hashrnd));",
        "// Line_Reference 73: ",
        "// Line_Reference 74: \tid = __ipv6_select_ident(net, ip6_idents_hashrnd, daddr, saddr);"
    ]
}
