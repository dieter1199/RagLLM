{
    "cve_id": "CVE-2022-36036",
    "cve_description": "mdx-mermaid provides plug and play access to Mermaid in MDX. There is a potential for an arbitrary javascript injection in versions less than 1.3.0 and 2.0.0-rc1. Modify any mermaid code blocks with arbitrary code and it will execute when the component is loaded by MDXjs. This vulnerability was patched in version(s) 1.3.0 and 2.0.0-rc2. There are currently no known workarounds.",
    "cve_publish_date": "2022-08-29",
    "cwe_id": "CWE-94",
    "cwe_name": "Improper Control of Generation of Code ('Code Injection')",
    "cwe_description": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
    "commit_message": "Merge pull request from GHSA-rvgm-35jw-q628",
    "type_of_change": "Modification",
    "filename_of_changes": "mdxast-mermaid.ts",
    "code_language": "TypeScript",
    "number_of_lines_added_for_mitigation": "10",
    "number_of_lines_deleted_vulnerable_to_cve": "18",
    "vulnerable_lines": [
        "// Line_Reference 56:     instances.forEach(([node, index, parent]) => {",
        "// Line_Reference 58:         type: 'jsx',",
        "// Line_Reference 59:         value: `<Mermaid chart={\\`${node.value}\\`}/>`,",
        "// Line_Reference 60:         position: node.position",
        "// Line_Reference 64:     // Look for any components",
        "// Line_Reference 65:     visit<Literal<string> & { type: 'jsx' }>(ast, { type: 'jsx' }, (node, index, parent) => {",
        "// Line_Reference 66:       if (/.*<Mermaid.*/.test(node.value)) {",
        "// Line_Reference 67:         // If the component doesn't have config",
        "// Line_Reference 68:         if (!/.*config={.*/.test(node.value)) {",
        "// Line_Reference 69:           const index = node.value.indexOf('<Mermaid') + 8",
        "// Line_Reference 70:           node.value = node.value.substring(0, index) +",
        "// Line_Reference 71:           ` config={${JSON.stringify(config || {})}}` +",
        "// Line_Reference 72:             node.value.substring(index)",
        "// Line_Reference 73:         }",
        "// Line_Reference 74:         insertImport(ast)",
        "// Line_Reference 75:         return visit.EXIT",
        "// Line_Reference 76:       }",
        "// Line_Reference 77:     })"
    ]
}
