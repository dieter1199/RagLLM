{
    "cve_id": "CVE-2022-46153",
    "cve_description": "Traefik is an open source HTTP reverse proxy and load balancer. In affected versions there is a potential vulnerability in Traefik managing TLS connections. A router configured with a not well-formatted TLSOption is exposed with an empty TLSOption. For instance, a route secured using an mTLS connection set with a wrong CA file is exposed without verifying the client certificates. Users are advised to upgrade to version 2.9.6. Users unable to upgrade should check their logs to detect the error messages and fix your TLS options.",
    "cve_publish_date": "2022-12-08",
    "cwe_id": "CWE-295",
    "cwe_name": "Improper Certificate Validation",
    "cwe_description": "The product does not validate, or incorrectly validates, a certificate.",
    "commit_message": "Handle broken TLS conf better\n\nCo-authored-by: Jean-Baptiste Doumenjou <925513+jbdoumenjou@users.noreply.github.com>\nCo-authored-by: Romain <rtribotte@users.noreply.github.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "tlsmanager.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "13",
    "number_of_lines_deleted_vulnerable_to_cve": "19",
    "vulnerable_lines": [
        "// Line_Reference 160: \tvar tlsConfig *tls.Config",
        "// Line_Reference 161: \tvar err error",
        "// Line_Reference 162: ",
        "// Line_Reference 165: \tif ok {",
        "// Line_Reference 166: \t\tsniStrict = config.SniStrict",
        "// Line_Reference 167: \t\ttlsConfig, err = buildTLSConfig(config)",
        "// Line_Reference 168: \t} else {",
        "// Line_Reference 169: \t\terr = fmt.Errorf(\"unknown TLS options: %s\", configName)",
        "// Line_Reference 172: \t\ttlsConfig = &tls.Config{}",
        "// Line_Reference 180: \tif acmeTLSStore == nil {",
        "// Line_Reference 191: \t\t\t\t// We want the user to eventually get the (alertUnrecognizedName) \"unrecognized",
        "// Line_Reference 192: \t\t\t\t// name\" error.",
        "// Line_Reference 193: \t\t\t\t// Unfortunately, if we returned an error here, since we can't use",
        "// Line_Reference 194: \t\t\t\t// the unexported error (errNoCertificates) that our caller (config.getCertificate",
        "// Line_Reference 195: \t\t\t\t// in crypto/tls) uses as a sentinel, it would report an (alertInternalError)",
        "// Line_Reference 196: \t\t\t\t// \"internal error\" instead of an alertUnrecognizedName.",
        "// Line_Reference 197: \t\t\t\t// Which is why we return no error, and we let the caller detect that there's",
        "// Line_Reference 198: \t\t\t\t// actually no certificate, and fall back into the flow that will report",
        "// Line_Reference 199: \t\t\t\t// the desired error."
    ]
}
