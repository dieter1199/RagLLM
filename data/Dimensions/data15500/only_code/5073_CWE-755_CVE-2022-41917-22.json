import java.io.FileNotFoundException;
import java.nio.charset.CharacterCodingException;
import java.nio.charset.MalformedInputException;
import java.nio.file.NoSuchFileException;
() -> Analysis.getWordList(env, nodeSettings, "foo.bar")
);
assertEquals("IOException while reading foo.bar_path: " + tempDir.resolve("foo.dict").toString(), ex.getMessage());
assertTrue(
ex.getCause().toString(),
ex.getCause() instanceof FileNotFoundException || ex.getCause() instanceof NoSuchFileException
() -> Analysis.getWordList(env, nodeSettings, "foo.bar")
);
assertEquals(
"Unsupported character encoding detected while reading foo.bar_path: "
+ tempDir.resolve("foo.dict").toString()
+ " - files must be UTF-8 encoded",
ex.getMessage()
);
assertTrue(
ex.getCause().toString(),
ex.getCause() instanceof MalformedInputException || ex.getCause() instanceof CharacterCodingException
List<String> wordList = Analysis.getWordList(env, nodeSettings, "foo.bar");