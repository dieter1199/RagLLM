void operator()(OpKernelContext* ctx, const Index num_segments,
const TensorShape& segment_ids_shape,
const Index data_size, const T* data,
if (data_size == 0) {
auto data_flat = typename TTypes<T, 2>::ConstTensor(data, N, data_size / N);
reduction(data_flat.template chip<0>(i), output.template chip<0>(j));
const Index output_rows = internal::SubtleMustCopy(static_cast<Index>(
auto data_ptr = data.template flat<T>().data();
reduction_functor_(context, output_rows, segment_ids.shape(), segment_flat,
data.NumElements(), data_ptr, output_flat);