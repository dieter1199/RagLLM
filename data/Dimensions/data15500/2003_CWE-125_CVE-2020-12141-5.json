{
    "cve_id": "CVE-2020-12141",
    "cve_description": "An out-of-bounds read in the SNMP stack in Contiki-NG 4.4 and earlier allows an attacker to cause a denial of service and potentially disclose information via crafted SNMP packets to snmp_ber_decode_string_len_buffer in os/net/app-layer/snmp/snmp-ber.c.",
    "cve_publish_date": "2021-10-19",
    "cwe_id": "CWE-125",
    "cwe_name": "Out-of-bounds Read",
    "cwe_description": "The product reads data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "Refactored SNMP engine after vulnerabilities",
    "type_of_change": "Modification",
    "filename_of_changes": "snmp-ber.h",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "184",
    "number_of_lines_deleted_vulnerable_to_cve": "73",
    "vulnerable_lines": [
        "// Line_Reference 2:  * Copyright (C) 2019 Yago Fontoura do Rosario <yago.rosario@hotmail.com.br>",
        "// Line_Reference 35:  *      An implementation of the Simple Network Management Protocol (RFC 3411-3418)",
        "// Line_Reference 48: #define BER_DATA_TYPE_INTEGER           0x02",
        "// Line_Reference 49: #define BER_DATA_TYPE_OCTET_STRING      0x04",
        "// Line_Reference 50: #define BER_DATA_TYPE_NULL              0x05",
        "// Line_Reference 51: #define BER_DATA_TYPE_OID               0x06",
        "// Line_Reference 52: #define BER_DATA_TYPE_SEQUENCE          0x30",
        "// Line_Reference 57:  * @param out A pointer to the end of the buffer",
        "// Line_Reference 58:  * @param out_len A pointer to the buffer length",
        "// Line_Reference 61:  * @return NULL if error or the next entry in the buffer",
        "// Line_Reference 63: unsigned char *",
        "// Line_Reference 64: snmp_ber_encode_type(unsigned char *out, uint32_t *out_len, uint8_t type);",
        "// Line_Reference 69:  * @param out A pointer to the end of the buffer",
        "// Line_Reference 70:  * @param out_len A pointer to the buffer length",
        "// Line_Reference 73:  * @return NULL if error or the next entry in the buffer",
        "// Line_Reference 75: unsigned char *",
        "// Line_Reference 76: snmp_ber_encode_length(unsigned char *out, uint32_t *out_len, uint8_t length);",
        "// Line_Reference 81:  * @param out A pointer to the end of the buffer",
        "// Line_Reference 82:  * @param out_len A pointer to the buffer length",
        "// Line_Reference 85:  * @return NULL if error or the next entry in the buffer",
        "// Line_Reference 87: unsigned char *",
        "// Line_Reference 88: snmp_ber_encode_integer(unsigned char *out, uint32_t *out_len, uint32_t integer);",
        "// Line_Reference 91:  * @brief Encodes an unsigned integer",
        "// Line_Reference 93:  * @param out A pointer to the end of the buffer",
        "// Line_Reference 94:  * @param out_len A pointer to the buffer length",
        "// Line_Reference 95:  * @param type A type that represents an unsigned integer",
        "// Line_Reference 96:  * @param number A number",
        "// Line_Reference 98:  * @return NULL if error or the next entry in the buffer",
        "// Line_Reference 100: unsigned char *",
        "// Line_Reference 101: snmp_ber_encode_unsigned_integer(unsigned char *out, uint32_t *out_len, uint8_t type, uint32_t number);",
        "// Line_Reference 106:  * @param out A pointer to the end of the buffer",
        "// Line_Reference 107:  * @param out_len A pointer to the buffer length",
        "// Line_Reference 111:  * @return NULL if error or the next entry in the buffer",
        "// Line_Reference 113: unsigned char *",
        "// Line_Reference 114: snmp_ber_encode_string_len(unsigned char *out, uint32_t *out_len, const char *str, uint32_t length);",
        "// Line_Reference 119:  * @param out A pointer to the end of the buffer",
        "// Line_Reference 120:  * @param out_len A pointer to the buffer length",
        "// Line_Reference 123:  * @return NULL if error or the next entry in the buffer",
        "// Line_Reference 125: unsigned char *",
        "// Line_Reference 126: snmp_ber_encode_null(unsigned char *out, uint32_t *out_len, uint8_t type);",
        "// Line_Reference 131:  * @param buff A pointer to the beginning of the buffer",
        "// Line_Reference 132:  * @param buff_len A pointer to the buffer length",
        "// Line_Reference 135:  * @return NULL if error or the first entry after the oid in the buffer",
        "// Line_Reference 137: unsigned char *",
        "// Line_Reference 138: snmp_ber_decode_type(unsigned char *buff, uint32_t *buff_len, uint8_t *type);",
        "// Line_Reference 143:  * @param buff A pointer to the beginning of the buffer",
        "// Line_Reference 144:  * @param buff_len A pointer to the buffer length",
        "// Line_Reference 147:  * @return NULL if error or the first entry after the oid in the buffer",
        "// Line_Reference 149: unsigned char *",
        "// Line_Reference 150: snmp_ber_decode_length(unsigned char *buff, uint32_t *buff_len, uint8_t *length);",
        "// Line_Reference 155:  * @param buff A pointer to the beginning of the buffer",
        "// Line_Reference 156:  * @param buff_len A pointer to the buffer length",
        "// Line_Reference 159:  * @return NULL if error or the first entry after the oid in the buffer",
        "// Line_Reference 161: unsigned char *",
        "// Line_Reference 162: snmp_ber_decode_integer(unsigned char *buff, uint32_t *buff_len, uint32_t *integer);",
        "// Line_Reference 165:  * @brief Decodes an unsigned number",
        "// Line_Reference 167:  * @param buff A pointer to the beginning of the buffer",
        "// Line_Reference 168:  * @param buff_len A pointer to the buffer length",
        "// Line_Reference 169:  * @param expected_type The expected type that represents an unsingned integer",
        "// Line_Reference 170:  * @param number A pointer to the number",
        "// Line_Reference 172:  * @return NULL if error or the first entry after the oid in the buffer",
        "// Line_Reference 174: unsigned char *",
        "// Line_Reference 175: snmp_ber_decode_unsigned_integer(unsigned char *buff, uint32_t *buff_len, uint8_t expected_type, uint32_t *number);",
        "// Line_Reference 180:  * @param buff A pointer to the beginning of the buffer",
        "// Line_Reference 181:  * @param buff_len A pointer to the buffer length",
        "// Line_Reference 185:  * @return NULL if error or the first entry after the oid in the buffer",
        "// Line_Reference 187: unsigned char *",
        "// Line_Reference 188: snmp_ber_decode_string_len_buffer(unsigned char *buff, uint32_t *buff_len, const char **str, uint32_t *length);",
        "// Line_Reference 193:  * @param buff A pointer to the beginning of the buffer",
        "// Line_Reference 194:  * @param buff_len A pointer to the buffer length",
        "// Line_Reference 196:  * @return NULL if error or the first entry after the oid in the buffer",
        "// Line_Reference 198: unsigned char *",
        "// Line_Reference 199: snmp_ber_decode_null(unsigned char *buff, uint32_t *buff_len);"
    ]
}
