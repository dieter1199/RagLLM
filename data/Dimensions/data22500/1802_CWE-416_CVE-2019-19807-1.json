{
    "cve_id": "CVE-2019-19807",
    "cve_description": "In the Linux kernel before 5.3.11, sound/core/timer.c has a use-after-free caused by erroneous code refactoring, aka CID-e7af6307a8a5. This is related to snd_timer_open and snd_timer_close_locked. The timeri variable was originally intended to be for a newly created timer instance, but was used for a different purpose after refactoring.",
    "cve_publish_date": "2019-12-15",
    "cwe_id": "CWE-416",
    "cwe_name": "Use After Free",
    "cwe_description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
    "commit_message": "ALSA: timer: Fix incorrectly assigned timer instance\n\nThe clean up commit 41672c0c24a6 (\"ALSA: timer: Simplify error path in\nsnd_timer_open()\") unified the error handling code paths with the\nstandard goto, but it introduced a subtle bug: the timer instance is\nstored in snd_timer_open() incorrectly even if it returns an error.\nThis may eventually lead to UAF, as spotted by fuzzer.\n\nThe culprit is the snd_timer_open() code checks the\nSNDRV_TIMER_IFLG_EXCLUSIVE flag with the common variable timeri.\nThis variable is supposed to be the newly created instance, but we\n(ab-)used it for a temporary check before the actual creation of a\ntimer instance.  After that point, there is another check for the max\nnumber of instances, and it bails out if over the threshold.  Before\nthe refactoring above, it worked fine because the code returned\ndirectly from that point.  After the refactoring, however, it jumps to\nthe unified error path that stores the timeri variable in return --\neven if it returns an error.  Unfortunately this stored value is kept\nin the caller side (snd_timer_user_tselect()) in tu->timeri.  This\ncauses inconsistency later, as if the timer was successfully\nassigned.\n\nIn this patch, we fix it by not re-using timeri variable but a\ntemporary variable for testing the exclusive connection, so timeri\nremains NULL at that point.\n\nFixes: 41672c0c24a6 (\"ALSA: timer: Simplify error path in snd_timer_open()\")\nReported-and-tested-by: Tristan Madani <tristmd@gmail.com>\nCc: <stable@vger.kernel.org>\nLink: https://lore.kernel.org/r/20191106165547.23518-1-tiwai@suse.de\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
    "type_of_change": "Modification",
    "filename_of_changes": "timer.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "3",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 287: \t\ttimeri = list_entry(timer->open_list_head.next,",
        "// Line_Reference 289: \t\tif (timeri->flags & SNDRV_TIMER_IFLG_EXCLUSIVE) {",
        "// Line_Reference 291: \t\t\ttimeri = NULL;"
    ]
}
