{
    "cve_id": "CVE-2016-10197",
    "cve_description": "The search_make_new function in evdns.c in libevent before 2.1.6-beta allows attackers to cause a denial of service (out-of-bounds read) via an empty hostname.",
    "cve_publish_date": "2017-03-15",
    "cwe_id": "CWE-125",
    "cwe_name": "Out-of-bounds Read",
    "cwe_description": "The product reads data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "evdns: fix searching empty hostnames\n\nFrom #332:\n  Here follows a bug report by **Guido Vranken** via the _Tor bug bounty program_. Please credit Guido accordingly.\n\n  ## Bug report\n\n  The DNS code of Libevent contains this rather obvious OOB read:\n\n  ```c\n  static char *\n  search_make_new(const struct search_state *const state, int n, const char *const base_name) {\n      const size_t base_len = strlen(base_name);\n      const char need_to_append_dot = base_name[base_len - 1] == '.' ? 0 : 1;\n  ```\n\n  If the length of ```base_name``` is 0, then line 3125 reads 1 byte before the buffer. This will trigger a crash on ASAN-protected builds.\n\n  To reproduce:\n\n  Build libevent with ASAN:\n  ```\n  $ CFLAGS='-fomit-frame-pointer -fsanitize=address' ./configure && make -j4\n  ```\n  Put the attached ```resolv.conf``` and ```poc.c``` in the source directory and then do:\n\n  ```\n  $ gcc -fsanitize=address -fomit-frame-pointer poc.c .libs/libevent.a\n  $ ./a.out\n  =================================================================\n  ==22201== ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60060000efdf at pc 0x4429da bp 0x7ffe1ed47300 sp 0x7ffe1ed472f8\n  READ of size 1 at 0x60060000efdf thread T0\n  ```\n\nP.S. we can add a check earlier, but since this is very uncommon, I didn't add it.\n\nFixes: #332",
    "type_of_change": "Modification",
    "filename_of_changes": "evdns.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "4",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 3178: \tconst char need_to_append_dot = base_name[base_len - 1] == '.' ? 0 : 1;"
    ]
}
