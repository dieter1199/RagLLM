{
    "cve_id": "CVE-2016-1583",
    "cve_description": "The ecryptfs_privileged_open function in fs/ecryptfs/kthread.c in the Linux kernel before 4.6.3 allows local users to gain privileges or cause a denial of service (stack memory consumption) via vectors involving crafted mmap calls for /proc pathnames, leading to recursive pagefault handling.",
    "cve_publish_date": "2016-06-27",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "ecryptfs: don't allow mmap when the lower fs doesn't support it\n\nThere are legitimate reasons to disallow mmap on certain files, notably\nin sysfs or procfs.  We shouldn't emulate mmap support on file systems\nthat don't offer support natively.\n\nCVE-2016-1583\n\nSigned-off-by: Jeff Mahoney <jeffm@suse.com>\nCc: stable@vger.kernel.org\n[tyhicks: clean up f_op check by using ecryptfs_file_to_lower()]\nSigned-off-by: Tyler Hicks <tyhicks@canonical.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "file.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "14",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 406: \t.mmap = generic_file_mmap,"
    ]
}
