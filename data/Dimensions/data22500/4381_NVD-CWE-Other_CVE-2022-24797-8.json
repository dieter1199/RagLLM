{
    "cve_id": "CVE-2022-24797",
    "cve_description": "Pomerium is an identity-aware access proxy. In distributed service mode, Pomerium's Authenticate service exposes pprof debug and prometheus metrics handlers to untrusted traffic. This can leak potentially sensitive environmental information or lead to limited denial of service conditions. This issue is patched in version v0.17.1 Workarounds: Block access to `/debug` and `/metrics` paths on the authenticate service. This can be done with any L7 proxy, including Pomerium's own proxy service.",
    "cve_publish_date": "2022-03-31",
    "cwe_id": "NVD-CWE-Other",
    "cwe_name": "Other",
    "cwe_description": "NVD is only using a subset of CWE for mapping instead of the entire CWE, and the weakness type is not covered by that subset.",
    "commit_message": "authenticate: fix debug and metrics endpoints (#3212)",
    "type_of_change": "Modification",
    "filename_of_changes": "metrics.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "25",
    "number_of_lines_deleted_vulnerable_to_cve": "15",
    "vulnerable_lines": [
        "// Line_Reference 19: \tmu             sync.RWMutex",
        "// Line_Reference 20: \tinstallationID string",
        "// Line_Reference 21: \tserviceName    string",
        "// Line_Reference 22: \taddr           string",
        "// Line_Reference 23: \tbasicAuth      string",
        "// Line_Reference 24: \thandler        http.Handler",
        "// Line_Reference 49: \tmgr.updateInfo(cfg)",
        "// Line_Reference 50: \tmgr.updateServer(cfg)",
        "// Line_Reference 64: func (mgr *MetricsManager) updateInfo(cfg *Config) {",
        "// Line_Reference 72: \t\tlog.Error(context.TODO()).Err(err).Msg(\"telemetry/metrics: failed to get OS hostname\")",
        "// Line_Reference 80: func (mgr *MetricsManager) updateServer(cfg *Config) {",
        "// Line_Reference 83: \t\tcfg.Options.InstallationID == mgr.installationID {",
        "// Line_Reference 93: \t\tlog.Info(context.TODO()).Msg(\"metrics: http server disabled\")",
        "// Line_Reference 97: \thandler, err := metrics.PrometheusHandler(EnvoyAdminURL, mgr.installationID)",
        "// Line_Reference 99: \t\tlog.Error(context.TODO()).Err(err).Msg(\"metrics: failed to create prometheus handler\")"
    ]
}
