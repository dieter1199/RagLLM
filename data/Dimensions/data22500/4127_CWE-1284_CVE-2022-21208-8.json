{
    "cve_id": "CVE-2022-21208",
    "cve_description": "The package node-opcua before 2.74.0 are vulnerable to Denial of Service (DoS) due to a missing limitation on the number of received chunks - per single session or in total for all concurrent sessions. An attacker can exploit this vulnerability by sending an unlimited number of huge chunks (e.g. 2GB each) without sending the Final closing chunk.",
    "cve_publish_date": "2022-08-23",
    "cwe_id": "CWE-1284",
    "cwe_name": "Improper Validation of Specified Quantity in Input",
    "cwe_description": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
    "commit_message": "fix message chunk overflow detection",
    "type_of_change": "Modification",
    "filename_of_changes": "message_builder.ts",
    "code_language": "TypeScript",
    "number_of_lines_added_for_mitigation": "56",
    "number_of_lines_deleted_vulnerable_to_cve": "11",
    "vulnerable_lines": [
        "// Line_Reference 32: import { decodeStatusCode } from \"node-opcua-status-code\";",
        "// Line_Reference 33: import { MessageBuilderBase } from \"node-opcua-transport\";",
        "// Line_Reference 37: import { chooseSecurityHeader, SymmetricAlgorithmSecurityHeader } from \"./secure_channel_service\";",
        "// Line_Reference 72: export interface MessageBuilderOptions {",
        "// Line_Reference 255:             return this._report_error(\"internal error\");",
        "// Line_Reference 261:             // invalid message type",
        "// Line_Reference 262:             return this._report_error(\"ERROR RECEIVED\");",
        "// Line_Reference 266:             return this._report_error(\"Invalid message type ( HEL/ACK )\");",
        "// Line_Reference 288:             return this._report_error(err instanceof Error ? err.message : \" err\");",
        "// Line_Reference 294:             return this._report_error(\"cannot construct object with nodeID \" + id.toString());",
        "// Line_Reference 301:             return this._report_error(\"cannot construct object with nodeID \" + id);"
    ]
}
