{
    "cve_id": "CVE-2013-4532",
    "cve_description": "Qemu 1.1.2+dfsg to 2.1+dfsg suffers from a buffer overrun which could potentially result in arbitrary code execution on the host with the privileges of the QEMU process.",
    "cve_publish_date": "2020-01-02",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "hw/net/stellaris_enet: Convert to vmstate\n\nConvert this device to use vmstate for its save/load, including\nproviding a post_load function that sanitizes inbound data to\navoid possible buffer overflows if it is malicious.\n\nThe sanitizing fixes CVE-2013-4532 (though nobody should be\nrelying on the security properties of most of the unmaintained\nARM board models anyway, and migration doesn't actually\nwork on this board due to issues in other device models).\n\nSigned-off-by: Peter Maydell <peter.maydell@linaro.org>\nReviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>\nReviewed-by: Michael S. Tsirkin <mst@redhat.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "stellaris_enet.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "80",
    "number_of_lines_deleted_vulnerable_to_cve": "68",
    "vulnerable_lines": [
        "// Line_Reference 62:     int tx_fifo_len;",
        "// Line_Reference 66:     struct {",
        "// Line_Reference 67:         uint8_t data[2048];",
        "// Line_Reference 68:         int len;",
        "// Line_Reference 69:     } rx[31];",
        "// Line_Reference 70:     int rx_fifo_offset;",
        "// Line_Reference 71:     int next_packet;",
        "// Line_Reference 382: static void stellaris_enet_save(QEMUFile *f, void *opaque)",
        "// Line_Reference 383: {",
        "// Line_Reference 384:     stellaris_enet_state *s = (stellaris_enet_state *)opaque;",
        "// Line_Reference 385:     int i;",
        "// Line_Reference 386: ",
        "// Line_Reference 387:     qemu_put_be32(f, s->ris);",
        "// Line_Reference 388:     qemu_put_be32(f, s->im);",
        "// Line_Reference 389:     qemu_put_be32(f, s->rctl);",
        "// Line_Reference 390:     qemu_put_be32(f, s->tctl);",
        "// Line_Reference 391:     qemu_put_be32(f, s->thr);",
        "// Line_Reference 392:     qemu_put_be32(f, s->mctl);",
        "// Line_Reference 393:     qemu_put_be32(f, s->mdv);",
        "// Line_Reference 394:     qemu_put_be32(f, s->mtxd);",
        "// Line_Reference 395:     qemu_put_be32(f, s->mrxd);",
        "// Line_Reference 396:     qemu_put_be32(f, s->np);",
        "// Line_Reference 397:     qemu_put_be32(f, s->tx_fifo_len);",
        "// Line_Reference 398:     qemu_put_buffer(f, s->tx_fifo, sizeof(s->tx_fifo));",
        "// Line_Reference 399:     for (i = 0; i < 31; i++) {",
        "// Line_Reference 400:         qemu_put_be32(f, s->rx[i].len);",
        "// Line_Reference 401:         qemu_put_buffer(f, s->rx[i].data, sizeof(s->rx[i].data));",
        "// Line_Reference 402: ",
        "// Line_Reference 403:     }",
        "// Line_Reference 404:     qemu_put_be32(f, s->next_packet);",
        "// Line_Reference 405:     qemu_put_be32(f, s->rx_fifo_offset);",
        "// Line_Reference 406: }",
        "// Line_Reference 407: ",
        "// Line_Reference 408: static int stellaris_enet_load(QEMUFile *f, void *opaque, int version_id)",
        "// Line_Reference 409: {",
        "// Line_Reference 410:     stellaris_enet_state *s = (stellaris_enet_state *)opaque;",
        "// Line_Reference 411:     int i;",
        "// Line_Reference 412: ",
        "// Line_Reference 413:     if (version_id != 1)",
        "// Line_Reference 414:         return -EINVAL;",
        "// Line_Reference 415: ",
        "// Line_Reference 416:     s->ris = qemu_get_be32(f);",
        "// Line_Reference 417:     s->im = qemu_get_be32(f);",
        "// Line_Reference 418:     s->rctl = qemu_get_be32(f);",
        "// Line_Reference 419:     s->tctl = qemu_get_be32(f);",
        "// Line_Reference 420:     s->thr = qemu_get_be32(f);",
        "// Line_Reference 421:     s->mctl = qemu_get_be32(f);",
        "// Line_Reference 422:     s->mdv = qemu_get_be32(f);",
        "// Line_Reference 423:     s->mtxd = qemu_get_be32(f);",
        "// Line_Reference 424:     s->mrxd = qemu_get_be32(f);",
        "// Line_Reference 425:     s->np = qemu_get_be32(f);",
        "// Line_Reference 426:     s->tx_fifo_len = qemu_get_be32(f);",
        "// Line_Reference 427:     qemu_get_buffer(f, s->tx_fifo, sizeof(s->tx_fifo));",
        "// Line_Reference 428:     for (i = 0; i < 31; i++) {",
        "// Line_Reference 429:         s->rx[i].len = qemu_get_be32(f);",
        "// Line_Reference 430:         qemu_get_buffer(f, s->rx[i].data, sizeof(s->rx[i].data));",
        "// Line_Reference 431: ",
        "// Line_Reference 432:     }",
        "// Line_Reference 433:     s->next_packet = qemu_get_be32(f);",
        "// Line_Reference 434:     s->rx_fifo_offset = qemu_get_be32(f);",
        "// Line_Reference 435: ",
        "// Line_Reference 436:     return 0;",
        "// Line_Reference 437: }",
        "// Line_Reference 438: ",
        "// Line_Reference 470:     register_savevm(dev, \"stellaris_enet\", -1, 1,",
        "// Line_Reference 471:                     stellaris_enet_save, stellaris_enet_load, s);",
        "// Line_Reference 479:     unregister_savevm(DEVICE(s), \"stellaris_enet\", s);",
        "// Line_Reference 480: "
    ]
}
