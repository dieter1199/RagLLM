{
    "cve_id": "CVE-2018-19199",
    "cve_description": "An issue was discovered in uriparser before 0.9.0. UriQuery.c allows an integer overflow via a uriComposeQuery* or uriComposeQueryEx* function because of an unchecked multiplication.",
    "cve_publish_date": "2018-11-12",
    "cwe_id": "CWE-190",
    "cwe_name": "Integer Overflow or Wraparound",
    "cwe_description": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
    "commit_message": "UriQuery.c: Catch integer overflow in ComposeQuery and ...Ex",
    "type_of_change": "Modification",
    "filename_of_changes": "UriQuery.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "12",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 204: \t\tconst int keyRequiredChars = worstCase * keyLen;",
        "// Line_Reference 206: \t\tconst int valueRequiredChars = worstCase * valueLen;"
    ]
}
