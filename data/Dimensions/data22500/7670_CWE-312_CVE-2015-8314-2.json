{
    "cve_id": "CVE-2015-8314",
    "cve_description": "The Devise gem before 3.5.4 for Ruby mishandles Remember Me cookies for sessions, which may allow an adversary to obtain unauthorized persistent application access.",
    "cve_publish_date": "2023-12-12",
    "cwe_id": "CWE-312",
    "cwe_name": "Cleartext Storage of Sensitive Information",
    "cwe_description": "The product stores sensitive information in cleartext within a resource that might be accessible to another control sphere.",
    "commit_message": "Store creation timestamp on remember cookies\n\nSigned-off-by: Jos√© Valim <jose.valim@plataformatec.com.br>",
    "type_of_change": "Modification",
    "filename_of_changes": "rememberable.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "26",
    "number_of_lines_deleted_vulnerable_to_cve": "28",
    "vulnerable_lines": [
        "// Line_Reference 48:       # Generate a new remember token and save the record without validations",
        "// Line_Reference 49:       # if remember expired (token is no longer valid) or extend_remember_period is true",
        "// Line_Reference 50:       def remember_me!(extend_period=false)",
        "// Line_Reference 51:         self.remember_token = self.class.remember_token if generate_remember_token?",
        "// Line_Reference 52:         self.remember_created_at = Time.now.utc if generate_remember_timestamp?(extend_period)",
        "// Line_Reference 60:         self.remember_token = nil if respond_to?(:remember_token=)",
        "// Line_Reference 65:       # Remember token should be expired if expiration time not overpass now.",
        "// Line_Reference 66:       def remember_expired?",
        "// Line_Reference 67:         remember_created_at.nil? || (remember_expires_at <= Time.now.utc)",
        "// Line_Reference 68:       end",
        "// Line_Reference 69: ",
        "// Line_Reference 70:       # Remember token expires at created time + remember_for configuration",
        "// Line_Reference 72:         remember_created_at + self.class.remember_for",
        "// Line_Reference 107:       def generate_remember_token? #:nodoc:",
        "// Line_Reference 108:         respond_to?(:remember_token) && remember_expired?",
        "// Line_Reference 109:       end",
        "// Line_Reference 110: ",
        "// Line_Reference 111:       # Generate a timestamp if extend_remember_period is true, if no remember_token",
        "// Line_Reference 112:       # exists, or if an existing remember token has expired.",
        "// Line_Reference 113:       def generate_remember_timestamp?(extend_period) #:nodoc:",
        "// Line_Reference 114:         extend_period || remember_expired?",
        "// Line_Reference 115:       end",
        "// Line_Reference 116: ",
        "// Line_Reference 120:           [record.to_key, record.rememberable_value]",
        "// Line_Reference 124:         def serialize_from_cookie(id, remember_token)",
        "// Line_Reference 125:           record = to_adapter.get(id)",
        "// Line_Reference 126:           record if record && !record.remember_expired? &&",
        "// Line_Reference 127:                     Devise.secure_compare(record.rememberable_value, remember_token)"
    ]
}
