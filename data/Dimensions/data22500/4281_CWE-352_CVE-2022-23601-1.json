{
    "cve_id": "CVE-2022-23601",
    "cve_description": "Symfony is a PHP framework for web and console applications and a set of reusable PHP components. The Symfony form component provides a CSRF protection mechanism by using a random token injected in the form and using the session to store and control the token submitted by the user. When using the FrameworkBundle, this protection can be enabled or disabled with the configuration. If the configuration is not specified, by default, the mechanism is enabled as long as the session is enabled. In a recent change in the way the configuration is loaded, the default behavior has been dropped and, as a result, the CSRF protection is not enabled in form when not explicitly enabled, which makes the application sensible to CSRF attacks. This issue has been resolved in the patch versions listed and users are advised to update. There are no known workarounds for this issue.",
    "cve_publish_date": "2022-02-01",
    "cwe_id": "CWE-352",
    "cwe_name": "Cross-Site Request Forgery (CSRF)",
    "cwe_description": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
    "commit_message": "Enable CSRF in FORM by default",
    "type_of_change": "Modification",
    "filename_of_changes": "FrameworkExtension.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "66",
    "number_of_lines_deleted_vulnerable_to_cve": "59",
    "vulnerable_lines": [
        "// Line_Reference 314:         if ($this->isConfigEnabled($container, $config['form'])) {",
        "// Line_Reference 315:             if (!class_exists(Form::class)) {",
        "// Line_Reference 316:                 throw new LogicException('Form support cannot be enabled as the Form component is not installed. Try running \"composer require symfony/form\".');",
        "// Line_Reference 317:             }",
        "// Line_Reference 318: ",
        "// Line_Reference 319:             $this->formConfigEnabled = true;",
        "// Line_Reference 320:             $this->registerFormConfiguration($config, $container, $loader);",
        "// Line_Reference 321: ",
        "// Line_Reference 322:             if (ContainerBuilder::willBeAvailable('symfony/validator', Validation::class, ['symfony/framework-bundle', 'symfony/form'])) {",
        "// Line_Reference 323:                 $config['validation']['enabled'] = true;",
        "// Line_Reference 324:             } else {",
        "// Line_Reference 325:                 $container->setParameter('validator.translation_domain', 'validators');",
        "// Line_Reference 326: ",
        "// Line_Reference 327:                 $container->removeDefinition('form.type_extension.form.validator');",
        "// Line_Reference 328:                 $container->removeDefinition('form.type_guesser.validator');",
        "// Line_Reference 329:             }",
        "// Line_Reference 330:         } else {",
        "// Line_Reference 331:             $container->removeDefinition('console.command.form_debug');",
        "// Line_Reference 332:         }",
        "// Line_Reference 333: ",
        "// Line_Reference 342:         if ($this->messengerConfigEnabled = $this->isConfigEnabled($container, $config['messenger'])) {",
        "// Line_Reference 343:             $this->registerMessengerConfiguration($config['messenger'], $container, $loader, $config['validation']);",
        "// Line_Reference 344:         } else {",
        "// Line_Reference 345:             $container->removeDefinition('console.command.messenger_consume_messages');",
        "// Line_Reference 346:             $container->removeDefinition('console.command.messenger_debug');",
        "// Line_Reference 347:             $container->removeDefinition('console.command.messenger_stop_workers');",
        "// Line_Reference 348:             $container->removeDefinition('console.command.messenger_setup_transports');",
        "// Line_Reference 349:             $container->removeDefinition('console.command.messenger_failed_messages_retry');",
        "// Line_Reference 350:             $container->removeDefinition('console.command.messenger_failed_messages_show');",
        "// Line_Reference 351:             $container->removeDefinition('console.command.messenger_failed_messages_remove');",
        "// Line_Reference 352:             $container->removeDefinition('cache.messenger.restart_workers_signal');",
        "// Line_Reference 353: ",
        "// Line_Reference 354:             if ($container->hasDefinition('messenger.transport.amqp.factory') && !class_exists(AmqpTransportFactory::class)) {",
        "// Line_Reference 355:                 if (class_exists(\\Symfony\\Component\\Messenger\\Transport\\AmqpExt\\AmqpTransportFactory::class)) {",
        "// Line_Reference 356:                     $container->getDefinition('messenger.transport.amqp.factory')",
        "// Line_Reference 357:                         ->setClass(\\Symfony\\Component\\Messenger\\Transport\\AmqpExt\\AmqpTransportFactory::class)",
        "// Line_Reference 358:                         ->addTag('messenger.transport_factory');",
        "// Line_Reference 359:                 } else {",
        "// Line_Reference 360:                     $container->removeDefinition('messenger.transport.amqp.factory');",
        "// Line_Reference 361:                 }",
        "// Line_Reference 362:             }",
        "// Line_Reference 363: ",
        "// Line_Reference 364:             if ($container->hasDefinition('messenger.transport.redis.factory') && !class_exists(RedisTransportFactory::class)) {",
        "// Line_Reference 365:                 if (class_exists(\\Symfony\\Component\\Messenger\\Transport\\RedisExt\\RedisTransportFactory::class)) {",
        "// Line_Reference 366:                     $container->getDefinition('messenger.transport.redis.factory')",
        "// Line_Reference 367:                         ->setClass(\\Symfony\\Component\\Messenger\\Transport\\RedisExt\\RedisTransportFactory::class)",
        "// Line_Reference 368:                         ->addTag('messenger.transport_factory');",
        "// Line_Reference 369:                 } else {",
        "// Line_Reference 370:                     $container->removeDefinition('messenger.transport.redis.factory');",
        "// Line_Reference 371:                 }",
        "// Line_Reference 372:             }",
        "// Line_Reference 373:         }",
        "// Line_Reference 374: ",
        "// Line_Reference 383:         if ($this->notifierConfigEnabled = $this->isConfigEnabled($container, $config['notifier'])) {",
        "// Line_Reference 384:             $this->registerNotifierConfiguration($config['notifier'], $container, $loader);",
        "// Line_Reference 385:         }",
        "// Line_Reference 386: ",
        "// Line_Reference 388:         $this->registerValidationConfiguration($config['validation'], $container, $loader, $propertyInfoEnabled);",
        "// Line_Reference 394:         $this->registerProfilerConfiguration($config['profiler'], $container, $loader);"
    ]
}
