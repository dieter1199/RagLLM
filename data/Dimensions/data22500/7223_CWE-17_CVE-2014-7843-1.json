{
    "cve_id": "CVE-2014-7843",
    "cve_description": "The __clear_user function in arch/arm64/lib/clear_user.S in the Linux kernel before 3.17.4 on the ARM64 platform allows local users to cause a denial of service (system crash) by reading one byte beyond a /dev/zero page boundary.",
    "cve_publish_date": "2014-11-30",
    "cwe_id": "CWE-17",
    "cwe_name": "DEPRECATED: Code",
    "cwe_description": "This entry has been deprecated.  It was originally used for organizing the Development View (CWE-699) and some other views, but it introduced unnecessary complexity and depth to the resulting tree.",
    "commit_message": "arm64: __clear_user: handle exceptions on strb\n\nARM64 currently doesn't fix up faults on the single-byte (strb) case of\n__clear_user... which means that we can cause a nasty kernel panic as an\nordinary user with any multiple PAGE_SIZE+1 read from /dev/zero.\ni.e.: dd if=/dev/zero of=foo ibs=1 count=1 (or ibs=65537, etc.)\n\nThis is a pretty obscure bug in the general case since we'll only\n__do_kernel_fault (since there's no extable entry for pc) if the\nmmap_sem is contended. However, with CONFIG_DEBUG_VM enabled, we'll\nalways fault.\n\nif (!down_read_trylock(&mm->mmap_sem)) {\n\tif (!user_mode(regs) && !search_exception_tables(regs->pc))\n\t\tgoto no_context;\nretry:\n\tdown_read(&mm->mmap_sem);\n} else {\n\t/*\n\t * The above down_read_trylock() might have succeeded in\n\t * which\n\t * case, we'll have missed the might_sleep() from\n\t * down_read().\n\t */\n\tmight_sleep();\n\tif (!user_mode(regs) && !search_exception_tables(regs->pc))\n\t\tgoto no_context;\n}\n\nFix that by adding an extable entry for the strb instruction, since it\ntouches user memory, similar to the other stores in __clear_user.\n\nSigned-off-by: Kyle McMartin <kyle@redhat.com>\nReported-by: Miloš Prchlík <mprchlik@redhat.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Catalin Marinas <catalin.marinas@arm.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "clear_user.S",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 49: \tstrb\twzr, [x0]"
    ]
}
