{
    "cve_id": "CVE-2015-10044",
    "cve_description": "A vulnerability classified as critical was found in gophergala sqldump. This vulnerability affects unknown code. The manipulation leads to sql injection. The patch is identified as 76db54e9073b5248b8863e71a63d66a32d567d21. It is recommended to apply a patch to fix this issue. VDB-218350 is the identifier assigned to this vulnerability.",
    "cve_publish_date": "2023-01-15",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "Protection against sql injection doesnt work with ? for table. Using HTMLEscapeString instead",
    "type_of_change": "Modification",
    "filename_of_changes": "auth.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "20",
    "number_of_lines_deleted_vulnerable_to_cve": "12",
    "vulnerable_lines": [
        "// Line_Reference 1: /* no Credentials management needed",
        "// Line_Reference 19: func getCredentials(request *http.Request) (userName string, password string) {",
        "// Line_Reference 20: \tif cookie, err := request.Cookie(\"Credentials\"); err == nil {",
        "// Line_Reference 22: \t\tif err = cookieHandler.Decode(\"Credentials\", cookie.Value, &cookieValue); err == nil {",
        "// Line_Reference 27: \treturn userName, password",
        "// Line_Reference 30: func setCredentials(userName string, pw string, w http.ResponseWriter) {",
        "// Line_Reference 35: \tif encoded, err := cookieHandler.Encode(\"Credentials\", value); err == nil {",
        "// Line_Reference 37: \t\t\tName:  \"Credentials\",",
        "// Line_Reference 47: \t\tName:   \"Credentials\",",
        "// Line_Reference 59: \t\tsetCredentials(user, pass, w)",
        "// Line_Reference 72:    <label for=\"user\">User name</label><input type=\"text\" id=\"user\" name=\"user\">",
        "// Line_Reference 73:    <label for=\"password\">Password</label><input type=\"password\" id=\"password\" name=\"password\">"
    ]
}
