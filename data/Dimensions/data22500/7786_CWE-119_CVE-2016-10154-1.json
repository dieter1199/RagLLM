{
    "cve_id": "CVE-2016-10154",
    "cve_description": "The smbhash function in fs/cifs/smbencrypt.c in the Linux kernel 4.9.x before 4.9.1 interacts incorrectly with the CONFIG_VMAP_STACK option, which allows local users to cause a denial of service (system crash or memory corruption) or possibly have unspecified other impact by leveraging use of more than one virtual page for a scatterlist.",
    "cve_publish_date": "2017-02-06",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "cifs: Fix smbencrypt() to stop pointing a scatterlist at the stack\n\nsmbencrypt() points a scatterlist to the stack, which is breaks if\nCONFIG_VMAP_STACK=y.\n\nFix it by switching to crypto_cipher_encrypt_one().  The new code\nshould be considerably faster as an added benefit.\n\nThis code is nearly identical to some code that Eric Biggers\nsuggested.\n\nCc: stable@vger.kernel.org # 4.9 only\nReported-by: Eric Biggers <ebiggers3@gmail.com>\nSigned-off-by: Andy Lutomirski <luto@kernel.org>\nAcked-by: Jeff Layton <jlayton@redhat.com>\nSigned-off-by: Steve French <smfrench@gmail.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "smbencrypt.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "8",
    "number_of_lines_deleted_vulnerable_to_cve": "32",
    "vulnerable_lines": [
        "// Line_Reference 26: #include <crypto/skcipher.h>",
        "// Line_Reference 72: \tint rc;",
        "// Line_Reference 74: \tstruct crypto_skcipher *tfm_des;",
        "// Line_Reference 75: \tstruct scatterlist sgin, sgout;",
        "// Line_Reference 76: \tstruct skcipher_request *req;",
        "// Line_Reference 80: \ttfm_des = crypto_alloc_skcipher(\"ecb(des)\", 0, CRYPTO_ALG_ASYNC);",
        "// Line_Reference 82: \t\trc = PTR_ERR(tfm_des);",
        "// Line_Reference 83: \t\tcifs_dbg(VFS, \"could not allocate des crypto API\\n\");",
        "// Line_Reference 84: \t\tgoto smbhash_err;",
        "// Line_Reference 85: \t}",
        "// Line_Reference 86: ",
        "// Line_Reference 87: \treq = skcipher_request_alloc(tfm_des, GFP_KERNEL);",
        "// Line_Reference 88: \tif (!req) {",
        "// Line_Reference 89: \t\trc = -ENOMEM;",
        "// Line_Reference 91: \t\tgoto smbhash_free_skcipher;",
        "// Line_Reference 94: \tcrypto_skcipher_setkey(tfm_des, key2, 8);",
        "// Line_Reference 95: ",
        "// Line_Reference 96: \tsg_init_one(&sgin, in, 8);",
        "// Line_Reference 97: \tsg_init_one(&sgout, out, 8);",
        "// Line_Reference 99: \tskcipher_request_set_callback(req, 0, NULL, NULL);",
        "// Line_Reference 100: \tskcipher_request_set_crypt(req, &sgin, &sgout, 8, NULL);",
        "// Line_Reference 101: ",
        "// Line_Reference 102: \trc = crypto_skcipher_encrypt(req);",
        "// Line_Reference 103: \tif (rc)",
        "// Line_Reference 104: \t\tcifs_dbg(VFS, \"could not encrypt crypt key rc: %d\\n\", rc);",
        "// Line_Reference 105: ",
        "// Line_Reference 106: \tskcipher_request_free(req);",
        "// Line_Reference 107: ",
        "// Line_Reference 108: smbhash_free_skcipher:",
        "// Line_Reference 109: \tcrypto_free_skcipher(tfm_des);",
        "// Line_Reference 110: smbhash_err:",
        "// Line_Reference 111: \treturn rc;"
    ]
}
