{
    "cve_id": "CVE-2022-24823",
    "cve_description": "Netty is an open-source, asynchronous event-driven network application framework. The package `io.netty:netty-codec-http` prior to version 4.1.77.Final contains an insufficient fix for CVE-2021-21290. When Netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. This only impacts applications running on Java version 6 and lower. Additionally, this vulnerability impacts code running on Unix-like systems, and very old versions of Mac OSX and Windows as they all share the system temporary directory between all users. Version 4.1.77.Final contains a patch for this vulnerability. As a workaround, specify one's own `java.io.tmpdir` when starting the JVM or use DefaultHttpDataFactory.setBaseDir(...) to set the directory to something that is only readable by the current user.",
    "cve_publish_date": "2022-05-06",
    "cwe_id": "CWE-378",
    "cwe_name": "Creation of Temporary File With Insecure Permissions",
    "cwe_description": "Opening temporary files without appropriate measures or controls can leave the file, its contents and any function that it impacts vulnerable to attack.",
    "commit_message": "Merge pull request from GHSA-269q-hmxg-m83q\n\n* Correctly modify permission for temporary files when using Java 6 in all cases\n\nMotivation:\n\n[GHSA-5mcr-gq6c-3hq2](https://github.com/netty/netty/security/advisories/GHSA-5mcr-gq6c-3hq2) did not correctly fix all cases for temprory files when running on java 6.\n\nModifications:\n\n- Add correctly adjust perms in all cases\n- Add logging if adjusting of permissions fails\n\nResult:\n\nFixes https://github.com/netty/netty/security/advisories/GHSA-269q-hmxg-m83q\n\n* Throw on failure",
    "type_of_change": "Modification",
    "filename_of_changes": "PlatformDependent.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "11",
    "number_of_lines_deleted_vulnerable_to_cve": "4",
    "vulnerable_lines": [
        "// Line_Reference 1451:             return File.createTempFile(prefix, suffix);",
        "// Line_Reference 1453:         File file = File.createTempFile(prefix, suffix, directory);",
        "// Line_Reference 1455:         file.setReadable(false, false);",
        "// Line_Reference 1456:         file.setReadable(true, true);"
    ]
}
