{
    "cve_id": "CVE-2022-0523",
    "cve_description": "Use After Free in GitHub repository radareorg/radare2 prior to 5.6.2.",
    "cve_publish_date": "2022-02-08",
    "cwe_id": "CWE-416",
    "cwe_name": "Use After Free",
    "cwe_description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
    "commit_message": "Fix UAF in pyc parser ##crash\n\n* Reported by Cen Zhang via huntr.dev\n* Reproducer: bins/fuzzed/harep2.pyc",
    "type_of_change": "Modification",
    "filename_of_changes": "marshal.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "13",
    "number_of_lines_deleted_vulnerable_to_cve": "26",
    "vulnerable_lines": [
        "// Line_Reference 1: /* radare - LGPL3 - Copyright 2016-2021 - Matthieu (c0riolis) Tardy - l0stb1t*/",
        "// Line_Reference 12: static ut32 magic_int;",
        "// Line_Reference 13: static ut32 symbols_ordinal = 0;",
        "// Line_Reference 14: static RList *refs = NULL; // If you don't have a good reason, do not change this. And also checkout !refs in get_code_object()",
        "// Line_Reference 503: \t\tif (!tmp) {",
        "// Line_Reference 504: \t\t\tr_list_free (ret->data);",
        "// Line_Reference 505: \t\t\tR_FREE (ret);",
        "// Line_Reference 506: \t\t\treturn NULL;",
        "// Line_Reference 507: \t\t}",
        "// Line_Reference 508: \t\tif (!r_list_append (ret->data, tmp)) {",
        "// Line_Reference 519: /* */",
        "// Line_Reference 538: \tpyc_object *ret = NULL;",
        "// Line_Reference 540: \tut32 n = 0;",
        "// Line_Reference 541: ",
        "// Line_Reference 542: \tn = get_ut32 (buffer, &error);",
        "// Line_Reference 550: \tret = get_array_object_generic (buffer, n);",
        "// Line_Reference 553: \t\treturn ret;",
        "// Line_Reference 555: \treturn NULL;",
        "// Line_Reference 561: \tut32 n = 0;",
        "// Line_Reference 562: ",
        "// Line_Reference 563: \tn = get_ut32 (buffer, &error);",
        "// Line_Reference 619: \tpyc_object *ret = NULL;",
        "// Line_Reference 629: \tret = get_array_object_generic (buffer, n);",
        "// Line_Reference 630: \tif (!ret) {",
        "// Line_Reference 631: \t\treturn NULL;",
        "// Line_Reference 633: \tret->type = TYPE_SET;"
    ]
}
