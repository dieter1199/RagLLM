{
    "cve_id": "CVE-2017-16806",
    "cve_description": "The Process function in RemoteTaskServer/WebServer/HttpServer.cs in Ulterius before 1.9.5.0 allows HTTP server directory traversal.",
    "cve_publish_date": "2017-11-13",
    "cwe_id": "CWE-22",
    "cwe_name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
    "cwe_description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
    "commit_message": "Stability patch, fixes broken GPU detection code, updates the websocket framework to be real-time, removes crappy agent spawning system, removes IPC, fixes HTTP server traversal,",
    "type_of_change": "Modification",
    "filename_of_changes": "ProcessPacketHandler.cs",
    "code_language": "C#",
    "number_of_lines_added_for_mitigation": "5",
    "number_of_lines_deleted_vulnerable_to_cve": "24",
    "vulnerable_lines": [
        "// Line_Reference 10: using AgentInterface.Api.Win32;",
        "// Line_Reference 36:                 if (Environment.UserName.Equals(\"SYSTEM\") && Tools.RunningPlatform() == Tools.Platform.Windows)",
        "// Line_Reference 37:                 {",
        "// Line_Reference 38:                     var task = Task.Run(() =>",
        "// Line_Reference 39:                     {",
        "// Line_Reference 40:                         try",
        "// Line_Reference 41:                         {",
        "// Line_Reference 42:                             ProcessStarter.PROCESS_INFORMATION procInfo;",
        "// Line_Reference 43:                             ProcessStarter.StartProcessAndBypassUAC(path,  out procInfo);",
        "// Line_Reference 44:                         }",
        "// Line_Reference 45:                         catch (Exception)",
        "// Line_Reference 46:                         {",
        "// Line_Reference 47:                             //continue",
        "// Line_Reference 48:                         }",
        "// Line_Reference 49:                     });",
        "// Line_Reference 50:                     processStarted = task.Wait(TimeSpan.FromSeconds(5));",
        "// Line_Reference 51:                 }",
        "// Line_Reference 52:                 else",
        "// Line_Reference 53:                 {",
        "// Line_Reference 54:                     var processStartInfo = new ProcessStartInfo(path);",
        "// Line_Reference 55:                     var process = new Process {StartInfo = processStartInfo};",
        "// Line_Reference 56:                     processStarted = process.Start();",
        "// Line_Reference 57:                     processId = process.Id;",
        "// Line_Reference 58:                 }"
    ]
}
