{
    "cve_id": "CVE-2014-9870",
    "cve_description": "The Linux kernel before 3.11 on ARM platforms, as used in Android before 2016-08-05 on Nexus 5 and 7 (2013) devices, does not properly consider user-space access to the TPIDRURW register, which allows local users to gain privileges via a crafted application, aka Android internal bug 28749743 and Qualcomm internal bug CR561044.",
    "cve_publish_date": "2016-08-06",
    "cwe_id": "CWE-264",
    "cwe_name": "Permissions, Privileges, and Access Controls",
    "cwe_description": "Weaknesses in this category are related to the management of permissions, privileges, and other security features that are used to perform access control.",
    "commit_message": "ARM: 7735/2: Preserve the user r/w register TPIDRURW on context switch and fork\n\nSince commit 6a1c53124aa1 the user writeable TLS register was zeroed to\nprevent it from being used as a covert channel between two tasks.\n\nThere are more and more applications coming to Windows RT,\nWine could support them, but mostly they expect to have\nthe thread environment block (TEB) in TPIDRURW.\n\nThis patch preserves that register per thread instead of clearing it.\nUnlike the TPIDRURO, which is already switched, the TPIDRURW\ncan be updated from userspace so needs careful treatment in the case that we\nmodify TPIDRURW and call fork(). To avoid this we must always read\nTPIDRURW in copy_thread.\n\nSigned-off-by: Andr√© Hentschel <nerv@dawncrow.de>\nSigned-off-by: Will Deacon <will.deacon@arm.com>\nSigned-off-by: Jonathan Austin <jonathan.austin@arm.com>\nSigned-off-by: Russell King <rmk+kernel@arm.linux.org.uk>",
    "type_of_change": "Modification",
    "filename_of_changes": "traps.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "2",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 584: \t\tthread->tp_value = regs->ARM_r0;",
        "// Line_Reference 702: \tregs->uregs[reg] = current_thread_info()->tp_value;"
    ]
}
