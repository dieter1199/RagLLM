{
    "cve_id": "CVE-2015-9235",
    "cve_description": "In jsonwebtoken node module before 4.2.2 it is possible for an attacker to bypass verification when a token digitally signed with an asymmetric key (RS/ES family) of algorithms but instead the attacker send a token digitally signed with a symmetric algorithm (HS* family).",
    "cve_publish_date": "2018-05-29",
    "cwe_id": "CWE-327",
    "cwe_name": "Use of a Broken or Risky Cryptographic Algorithm",
    "cwe_description": "The product uses a broken or risky cryptographic algorithm or protocol.",
    "commit_message": "Verification with an asymmetric key of a token signed with a symmetric key\n\nThere is a vulnerability in this module when the verification part is expecting a token digitally signed with an asymetric key (RS/ES family) of algorithms but instead the attacker send a token digitally signed with a symmetric algorithm (HS* family).\n\nThe issue is because this library has the very same signature to verify both type of tokens (parameter: `secretOrPublicKey`).\n\nThis change adds a new parameter to the verify called `algorithms`. This can be used to specify a list of supported algorithms, but the default value depends on the secret used: if the secretOrPublicKey contains the string `BEGIN CERTIFICATE` the default is `[ 'RS256','RS384','RS512','ES256','ES384','ES512' ]` otherwise is `[ 'HS256','HS384','HS512' ]`.",
    "type_of_change": "Modification",
    "filename_of_changes": ".jshintrc",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "2",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 18:     \"escape\": true"
    ]
}
