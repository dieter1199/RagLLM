{
    "cve_id": "CVE-2022-1263",
    "cve_description": "A NULL pointer dereference issue was found in KVM when releasing a vCPU with dirty ring support enabled. This flaw allows an unprivileged local attacker on the host to issue specific ioctl calls, causing a kernel oops condition that results in a denial of service.",
    "cve_publish_date": "2022-08-31",
    "cwe_id": "CWE-476",
    "cwe_name": "NULL Pointer Dereference",
    "cwe_description": "The product dereferences a pointer that it expects to be valid but is NULL.",
    "commit_message": "KVM: avoid NULL pointer dereference in kvm_dirty_ring_push\n\nkvm_vcpu_release() will call kvm_dirty_ring_free(), freeing\nring->dirty_gfns and setting it to NULL.  Afterwards, it calls\nkvm_arch_vcpu_destroy().\n\nHowever, if closing the file descriptor races with KVM_RUN in such away\nthat vcpu->arch.st.preempted == 0, the following call stack leads to a\nNULL pointer dereference in kvm_dirty_run_push():\n\n mark_page_dirty_in_slot+0x192/0x270 arch/x86/kvm/../../../virt/kvm/kvm_main.c:3171\n kvm_steal_time_set_preempted arch/x86/kvm/x86.c:4600 [inline]\n kvm_arch_vcpu_put+0x34e/0x5b0 arch/x86/kvm/x86.c:4618\n vcpu_put+0x1b/0x70 arch/x86/kvm/../../../virt/kvm/kvm_main.c:211\n vmx_free_vcpu+0xcb/0x130 arch/x86/kvm/vmx/vmx.c:6985\n kvm_arch_vcpu_destroy+0x76/0x290 arch/x86/kvm/x86.c:11219\n kvm_vcpu_destroy arch/x86/kvm/../../../virt/kvm/kvm_main.c:441 [inline]\n\nThe fix is to release the dirty page ring after kvm_arch_vcpu_destroy\nhas run.\n\nReported-by: Qiuhao Li <qiuhao@sysec.org>\nReported-by: Gaoning Pan <pgn@zju.edu.cn>\nReported-by: Yongkang Jia <kangel@zju.edu.cn>\nCc: stable@vger.kernel.org\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "kvm_main.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 437: \tkvm_dirty_ring_free(&vcpu->dirty_ring);"
    ]
}
