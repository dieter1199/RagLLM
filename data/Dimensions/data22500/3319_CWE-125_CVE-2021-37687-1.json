{
    "cve_id": "CVE-2021-37687",
    "cve_description": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions TFLite's [`GatherNd` implementation](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather_nd.cc#L124) does not support negative indices but there are no checks for this situation. Hence, an attacker can read arbitrary data from the heap by carefully crafting a model with negative values in `indices`. Similar issue exists in [`Gather` implementation](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/gather.cc). We have patched the issue in GitHub commits bb6a0383ed553c286f87ca88c207f6774d5c4a8f and eb921122119a6b6e470ee98b89e65d721663179d. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
    "cve_publish_date": "2021-08-12",
    "cwe_id": "CWE-125",
    "cwe_name": "Out-of-bounds Read",
    "cwe_description": "The product reads data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "Prevent heap OOB read in TFLite's `gather.cc`.\n\nPassing negative indices is illegal but there was a missing check so that resulted in OOB accesses.\n\nPiperOrigin-RevId: 387231300\nChange-Id: I3111b54b2f232638d795be17efc46abe4ede6bf8",
    "type_of_change": "Modification",
    "filename_of_changes": "gather.cc",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "53",
    "number_of_lines_deleted_vulnerable_to_cve": "16",
    "vulnerable_lines": [
        "// Line_Reference 120: TfLiteStatus Gather(const TfLiteGatherParams& params, const TfLiteTensor* input,",
        "// Line_Reference 121:                     const TfLiteTensor* positions, TfLiteTensor* output) {",
        "// Line_Reference 166:         return Gather<float, int32_t>(*params, input, positions, output);",
        "// Line_Reference 168:         return Gather<uint8_t, int32_t>(*params, input, positions, output);",
        "// Line_Reference 170:         return Gather<int8_t, int32_t>(*params, input, positions, output);",
        "// Line_Reference 172:         return Gather<int16_t, int32_t>(*params, input, positions, output);",
        "// Line_Reference 174:         return Gather<int32_t, int32_t>(*params, input, positions, output);",
        "// Line_Reference 176:         return Gather<int64_t, int32_t>(*params, input, positions, output);",
        "// Line_Reference 178:         return Gather<bool, int32_t>(*params, input, positions, output);",
        "// Line_Reference 190:         return Gather<float, int64_t>(*params, input, positions, output);",
        "// Line_Reference 192:         return Gather<uint8_t, int64_t>(*params, input, positions, output);",
        "// Line_Reference 194:         return Gather<int8_t, int64_t>(*params, input, positions, output);",
        "// Line_Reference 196:         return Gather<int16_t, int64_t>(*params, input, positions, output);",
        "// Line_Reference 198:         return Gather<int32_t, int64_t>(*params, input, positions, output);",
        "// Line_Reference 200:         return Gather<int64_t, int64_t>(*params, input, positions, output);",
        "// Line_Reference 202:         return Gather<bool, int64_t>(*params, input, positions, output);"
    ]
}
