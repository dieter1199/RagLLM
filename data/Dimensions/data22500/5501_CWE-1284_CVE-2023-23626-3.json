{
    "cve_id": "CVE-2023-23626",
    "cve_description": "go-bitfield is a simple bitfield package for the go language aiming to be more performant that the standard library. When feeding untrusted user input into the size parameter of `NewBitfield` and `FromBytes` functions, an attacker can trigger `panic`s. This happen when the `size` is a not a multiple of `8` or is negative. There were already a note in the `NewBitfield` documentation, however known users of this package are subject to this issue. Users are advised to upgrade. Users unable to upgrade should ensure that `size` is a multiple of 8 before calling `NewBitfield` or `FromBytes`.\n",
    "cve_publish_date": "2023-02-09",
    "cwe_id": "CWE-1284",
    "cwe_name": "Improper Validation of Specified Quantity in Input",
    "cwe_description": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
    "commit_message": "refactor: return errors instead of panics\n\nIt is clearer and simpler for consumers if we use the type system instead of relying on them for extra checks.\n\nFixes https://github.com/ipfs/go-bitfield/security/advisories/GHSA-2h6c-j3gf-xp9r",
    "type_of_change": "Modification",
    "filename_of_changes": "bitfield.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "14",
    "number_of_lines_deleted_vulnerable_to_cve": "9",
    "vulnerable_lines": [
        "// Line_Reference 10: //",
        "// Line_Reference 11: // Panics if size is not a multiple of 8.",
        "// Line_Reference 12: func NewBitfield(size int) Bitfield {",
        "// Line_Reference 14: \t\tpanic(\"Bitfield size must be a multiple of 8\")",
        "// Line_Reference 16: \treturn make([]byte, size/8)",
        "// Line_Reference 20: func FromBytes(size int, bits []byte) Bitfield {",
        "// Line_Reference 21: \tbf := NewBitfield(size)",
        "// Line_Reference 24: \t\tpanic(\"bitfield too small\")",
        "// Line_Reference 27: \treturn bf"
    ]
}
