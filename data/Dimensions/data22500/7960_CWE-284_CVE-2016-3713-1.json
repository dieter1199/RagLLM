{
    "cve_id": "CVE-2016-3713",
    "cve_description": "The msr_mtrr_valid function in arch/x86/kvm/mtrr.c in the Linux kernel before 4.6.1 supports MSR 0x2f8, which allows guest OS users to read or write to the kvm_arch_vcpu data structure, and consequently obtain sensitive information or cause a denial of service (system crash), via a crafted ioctl call.",
    "cve_publish_date": "2016-06-27",
    "cwe_id": "CWE-284",
    "cwe_name": "Improper Access Control",
    "cwe_description": "The product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.",
    "commit_message": "KVM: MTRR: remove MSR 0x2f8\n\nMSR 0x2f8 accessed the 124th Variable Range MTRR ever since MTRR support\nwas introduced by 9ba075a664df (\"KVM: MTRR support\").\n\n0x2f8 became harmful when 910a6aae4e2e (\"KVM: MTRR: exactly define the\nsize of variable MTRRs\") shrinked the array of VR MTRRs from 256 to 8,\nwhich made access to index 124 out of bounds.  The surrounding code only\nWARNs in this situation, thus the guest gained a limited read/write\naccess to struct kvm_arch_vcpu.\n\n0x2f8 is not a valid VR MTRR MSR, because KVM has/advertises only 16 VR\nMTRR MSRs, 0x200-0x20f.  Every VR MTRR is set up using two MSRs, 0x2f8\nwas treated as a PHYSBASE and 0x2f9 would be its PHYSMASK, but 0x2f9 was\nnot implemented in KVM, therefore 0x2f8 could never do anything useful\nand getting rid of it is safe.\n\nThis fixes CVE-2016-3713.\n\nFixes: 910a6aae4e2e (\"KVM: MTRR: exactly define the size of variable MTRRs\")\nCc: stable@vger.kernel.org\nReported-by: David Matlack <dmatlack@google.com>\nSigned-off-by: Andy Honig <ahonig@google.com>\nSigned-off-by: Radim Krčmář <rkrcmar@redhat.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "mtrr.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "0",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 47: \tcase 0x2f8:",
        "// Line_Reference 48: \t\treturn true;"
    ]
}
