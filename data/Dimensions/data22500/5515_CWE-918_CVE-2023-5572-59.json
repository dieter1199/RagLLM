{
    "cve_id": "CVE-2023-5572",
    "cve_description": "Server-Side Request Forgery (SSRF) in GitHub repository vriteio/vrite prior to 0.3.0.",
    "cve_publish_date": "2023-10-13",
    "cwe_id": "CWE-918",
    "cwe_name": "Server-Side Request Forgery (SSRF)",
    "cwe_description": "The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
    "commit_message": "Vrite v0.3 (#45)\n\n- Replace wrapper with element;\r\n- Add XML-like syntax for elements;\r\n- Redesign editor block menus;\r\n- Add MDX extension;\r\n- Allow CORS API access;\r\n- Restructure @vrite/backend;",
    "type_of_change": "Modification",
    "filename_of_changes": "hooks.ts",
    "code_language": "TypeScript",
    "number_of_lines_added_for_mitigation": "7",
    "number_of_lines_deleted_vulnerable_to_cve": "25",
    "vulnerable_lines": [
        "// Line_Reference 2: import { AuthenticatedContext } from \"./middleware\";",
        "// Line_Reference 3: import { ObjectId, UnderscoreID } from \"./mongo\";",
        "// Line_Reference 4: import { jsonToBuffer } from \"./processing\";",
        "// Line_Reference 17: import {",
        "// Line_Reference 18:   OutputContentProcessor,",
        "// Line_Reference 19:   createOutputContentProcessor as createOutputContentProcessorGitHub",
        "// Line_Reference 20: } from \"#routes/git/github/process-content\";",
        "// Line_Reference 21: import { publishGitDataEvent } from \"#routes/git/events\";",
        "// Line_Reference 77: const createGenericOutputContentProcessor = async (",
        "// Line_Reference 78:   ctx: AuthenticatedContext,",
        "// Line_Reference 79:   gitData: UnderscoreID<FullGitData<ObjectId>>",
        "// Line_Reference 80: ): Promise<OutputContentProcessor> => {",
        "// Line_Reference 81:   if (gitData.provider === \"github\") {",
        "// Line_Reference 82:     return await createOutputContentProcessorGitHub(ctx, gitData);",
        "// Line_Reference 83:   }",
        "// Line_Reference 84: ",
        "// Line_Reference 85:   return {",
        "// Line_Reference 86:     process() {",
        "// Line_Reference 87:       return Promise.resolve(\"\");",
        "// Line_Reference 88:     },",
        "// Line_Reference 89:     processBatch(input) {",
        "// Line_Reference 90:       return Promise.resolve(input.map(() => \"\"));",
        "// Line_Reference 91:     }",
        "// Line_Reference 92:   };",
        "// Line_Reference 93: };"
    ]
}
