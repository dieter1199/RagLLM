{
    "cve_id": "CVE-2015-2319",
    "cve_description": "The TLS stack in Mono before 3.12.1 makes it easier for remote attackers to conduct cipher-downgrade attacks to EXPORT_RSA ciphers via crafted TLS traffic, related to the \"FREAK\" issue, a different vulnerability than CVE-2015-0204.",
    "cve_publish_date": "2018-01-08",
    "cwe_id": "CWE-295",
    "cwe_name": "Improper Certificate Validation",
    "cwe_description": "The product does not validate, or incorrectly validates, a certificate.",
    "commit_message": "Remove the EXPORT ciphers and related code path\n\n    That was still useful in 2003/2004 but the technical and legal landscape\n    changed a lot since then. Removing the old, limited key size, cipher\n    suites also allow removed additional parts of the code that deals with\n    them.",
    "type_of_change": "Modification",
    "filename_of_changes": "SslCipherSuite.cs",
    "code_language": "C#",
    "number_of_lines_added_for_mitigation": "5",
    "number_of_lines_deleted_vulnerable_to_cve": "49",
    "vulnerable_lines": [
        "// Line_Reference 193: \t\t\tif (!this.IsExportable)",
        "// Line_Reference 195: \t\t\t\tif (this.IvSize != 0)",
        "// Line_Reference 196: \t\t\t\t{",
        "// Line_Reference 197: \t\t\t\t\tthis.Context.ClientWriteIV = keyBlock.ReadBytes(this.IvSize);",
        "// Line_Reference 198: \t\t\t\t\tthis.Context.ServerWriteIV = keyBlock.ReadBytes(this.IvSize);",
        "// Line_Reference 199: \t\t\t\t}",
        "// Line_Reference 200: \t\t\t\telse",
        "// Line_Reference 201: \t\t\t\t{",
        "// Line_Reference 202: \t\t\t\t\tthis.Context.ClientWriteIV = CipherSuite.EmptyArray;",
        "// Line_Reference 203: \t\t\t\t\tthis.Context.ServerWriteIV = CipherSuite.EmptyArray;",
        "// Line_Reference 204: \t\t\t\t}",
        "// Line_Reference 208: \t\t\t\tHashAlgorithm md5 = MD5.Create();",
        "// Line_Reference 209: ",
        "// Line_Reference 210: \t\t\t\tint keySize = (md5.HashSize >> 3); //in bytes not bits",
        "// Line_Reference 211: \t\t\t\tbyte[] temp = new byte [keySize];",
        "// Line_Reference 212: ",
        "// Line_Reference 213: \t\t\t\t// Generate final write keys",
        "// Line_Reference 214: \t\t\t\tmd5.TransformBlock(this.Context.ClientWriteKey, 0, this.Context.ClientWriteKey.Length, temp, 0);",
        "// Line_Reference 215: \t\t\t\tmd5.TransformFinalBlock(this.Context.RandomCS, 0, this.Context.RandomCS.Length);",
        "// Line_Reference 216: \t\t\t\tbyte[] finalClientWriteKey = new byte[this.ExpandedKeyMaterialSize];",
        "// Line_Reference 217: \t\t\t\tBuffer.BlockCopy(md5.Hash, 0, finalClientWriteKey, 0, this.ExpandedKeyMaterialSize);",
        "// Line_Reference 218: ",
        "// Line_Reference 219: \t\t\t\tmd5.Initialize();",
        "// Line_Reference 220: \t\t\t\tmd5.TransformBlock(this.Context.ServerWriteKey, 0, this.Context.ServerWriteKey.Length, temp, 0);",
        "// Line_Reference 221: \t\t\t\tmd5.TransformFinalBlock(this.Context.RandomSC, 0, this.Context.RandomSC.Length);",
        "// Line_Reference 222: \t\t\t\tbyte[] finalServerWriteKey = new byte[this.ExpandedKeyMaterialSize];",
        "// Line_Reference 223: \t\t\t\tBuffer.BlockCopy(md5.Hash, 0, finalServerWriteKey, 0, this.ExpandedKeyMaterialSize);",
        "// Line_Reference 224: ",
        "// Line_Reference 225: \t\t\t\tthis.Context.ClientWriteKey = finalClientWriteKey;",
        "// Line_Reference 226: \t\t\t\tthis.Context.ServerWriteKey = finalServerWriteKey;",
        "// Line_Reference 227: ",
        "// Line_Reference 228: \t\t\t\t// Generate IV keys",
        "// Line_Reference 229: \t\t\t\tif (this.IvSize > 0)",
        "// Line_Reference 230: \t\t\t\t{",
        "// Line_Reference 231: \t\t\t\t\tmd5.Initialize();",
        "// Line_Reference 232: \t\t\t\t\ttemp = md5.ComputeHash(this.Context.RandomCS, 0, this.Context.RandomCS.Length);",
        "// Line_Reference 233: \t\t\t\t\tthis.Context.ClientWriteIV = new byte[this.IvSize];",
        "// Line_Reference 234: \t\t\t\t\tBuffer.BlockCopy(temp, 0, this.Context.ClientWriteIV, 0, this.IvSize);",
        "// Line_Reference 235: ",
        "// Line_Reference 236: \t\t\t\t\tmd5.Initialize();",
        "// Line_Reference 237: \t\t\t\t\ttemp = md5.ComputeHash(this.Context.RandomSC, 0, this.Context.RandomSC.Length);",
        "// Line_Reference 238: \t\t\t\t\tthis.Context.ServerWriteIV = new byte[this.IvSize];",
        "// Line_Reference 239: \t\t\t\t\tBuffer.BlockCopy(temp, 0, this.Context.ServerWriteIV, 0, this.IvSize);",
        "// Line_Reference 240: \t\t\t\t}",
        "// Line_Reference 241: \t\t\t\telse",
        "// Line_Reference 242: \t\t\t\t{",
        "// Line_Reference 243: \t\t\t\t\tthis.Context.ClientWriteIV = CipherSuite.EmptyArray;",
        "// Line_Reference 244: \t\t\t\t\tthis.Context.ServerWriteIV = CipherSuite.EmptyArray;",
        "// Line_Reference 245: \t\t\t\t}"
    ]
}
