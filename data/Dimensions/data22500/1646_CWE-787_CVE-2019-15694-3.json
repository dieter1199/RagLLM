{
    "cve_id": "CVE-2019-15694",
    "cve_description": "TigerVNC version prior to 1.10.1 is vulnerable to heap buffer overflow, which could be triggered from DecodeManager::decodeRect. Vulnerability occurs due to the signdness error in processing MemOutStream. Exploitation of this vulnerability could potentially result into remote code execution. This attack appear to be exploitable via network connectivity.",
    "cve_publish_date": "2019-12-26",
    "cwe_id": "CWE-787",
    "cwe_name": "Out-of-bounds Write",
    "cwe_description": "The product writes data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "Use size_t for lengths in stream objects\n\nProvides safety against them accidentally becoming negative because\nof bugs in the calculations.\n\nAlso does the same to CharArray and friends as they were strongly\nconnection to the stream objects.",
    "type_of_change": "Modification",
    "filename_of_changes": "FdInStream.cxx",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "10",
    "number_of_lines_deleted_vulnerable_to_cve": "10",
    "vulnerable_lines": [
        "// Line_Reference 59: FdInStream::FdInStream(int fd_, int timeoutms_, int bufSize_,",
        "// Line_Reference 70:                        int bufSize_)",
        "// Line_Reference 95: int FdInStream::pos()",
        "// Line_Reference 100: void FdInStream::readBytes(void* data, int length)",
        "// Line_Reference 109:   int n = end - ptr;",
        "// Line_Reference 126: int FdInStream::overrun(int itemSize, int nItems, bool wait)",
        "// Line_Reference 138:   int bytes_to_read;",
        "// Line_Reference 150:     int n = readWithTimeoutOrCallback((U8*)end, bytes_to_read, wait);",
        "// Line_Reference 155:   if (itemSize * nItems > end - ptr)",
        "// Line_Reference 174: int FdInStream::readWithTimeoutOrCallback(void* buf, int len, bool wait)"
    ]
}
