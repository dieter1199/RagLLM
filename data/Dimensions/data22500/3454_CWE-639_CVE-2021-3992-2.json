{
    "cve_id": "CVE-2021-3992",
    "cve_description": "kimai2 is vulnerable to Improper Access Control",
    "cve_publish_date": "2021-12-01",
    "cwe_id": "CWE-639",
    "cwe_name": "Authorization Bypass Through User-Controlled Key",
    "cwe_description": "The system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.",
    "commit_message": "improve permissison handling in invoice screen (#2965)",
    "type_of_change": "Modification",
    "filename_of_changes": "InvoiceController.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "73",
    "number_of_lines_deleted_vulnerable_to_cve": "63",
    "vulnerable_lines": [
        "// Line_Reference 51:     /**",
        "// Line_Reference 52:      * @var ServiceInvoice",
        "// Line_Reference 53:      */",
        "// Line_Reference 55:     /**",
        "// Line_Reference 56:      * @var InvoiceTemplateRepository",
        "// Line_Reference 57:      */",
        "// Line_Reference 59:     /**",
        "// Line_Reference 60:      * @var InvoiceRepository",
        "// Line_Reference 61:      */",
        "// Line_Reference 63:     /**",
        "// Line_Reference 64:      * @var EventDispatcherInterface",
        "// Line_Reference 65:      */",
        "// Line_Reference 133:      * @Route(path=\"/preview/{customer}/{template}\", name=\"invoice_preview\", methods={\"GET\"})",
        "// Line_Reference 134:      * @Security(\"is_granted('view_invoice')\")",
        "// Line_Reference 136:     public function previewAction(Customer $customer, InvoiceTemplate $template, Request $request, SystemConfiguration $configuration): Response",
        "// Line_Reference 146:         if ($form->isValid() && $this->isGranted('create_invoice')) {",
        "// Line_Reference 148:                 $query->setTemplate($template);",
        "// Line_Reference 149:                 $query->setCustomers([$customer]);",
        "// Line_Reference 164:      * @Security(\"is_granted('view_invoice')\")",
        "// Line_Reference 176:         if ($form->isValid() && $this->isGranted('create_invoice')) {",
        "// Line_Reference 183:         return $this->redirectToRoute('invoice');",
        "// Line_Reference 184:     }",
        "// Line_Reference 185: ",
        "// Line_Reference 186:     private function getDefaultQuery(): InvoiceQuery",
        "// Line_Reference 187:     {",
        "// Line_Reference 188:         $factory = $this->getDateTimeFactory();",
        "// Line_Reference 189:         $begin = $factory->getStartOfMonth();",
        "// Line_Reference 190:         $end = $factory->getEndOfMonth();",
        "// Line_Reference 191: ",
        "// Line_Reference 192:         $query = new InvoiceQuery();",
        "// Line_Reference 193:         $query->setBegin($begin);",
        "// Line_Reference 194:         $query->setEnd($end);",
        "// Line_Reference 195:         // limit access to data from teams",
        "// Line_Reference 196:         $query->setCurrentUser($this->getUser());",
        "// Line_Reference 197: ",
        "// Line_Reference 198:         if (!$this->isGranted('view_other_timesheet')) {",
        "// Line_Reference 199:             // limit access to own data",
        "// Line_Reference 200:             $query->setUser($this->getUser());",
        "// Line_Reference 201:         }",
        "// Line_Reference 202: ",
        "// Line_Reference 203:         return $query;",
        "// Line_Reference 204:     }",
        "// Line_Reference 205: ",
        "// Line_Reference 206:     private function renderInvoice(InvoiceQuery $query, Request $request)",
        "// Line_Reference 207:     {",
        "// Line_Reference 208:         // use the current request locale as fallback, if no translation was configured",
        "// Line_Reference 209:         if (null !== $query->getTemplate() && null === $query->getTemplate()->getLanguage()) {",
        "// Line_Reference 210:             $query->getTemplate()->setLanguage($request->getLocale());",
        "// Line_Reference 211:         }",
        "// Line_Reference 212: ",
        "// Line_Reference 213:         try {",
        "// Line_Reference 214:             $invoices = $this->service->createInvoices($query, $this->dispatcher);",
        "// Line_Reference 215: ",
        "// Line_Reference 216:             $this->flashSuccess('action.update.success');",
        "// Line_Reference 217: ",
        "// Line_Reference 218:             if (\\count($invoices) === 1) {",
        "// Line_Reference 219:                 return $this->redirectToRoute('admin_invoice_list', ['id' => $invoices[0]->getId()]);",
        "// Line_Reference 220:             }",
        "// Line_Reference 221: ",
        "// Line_Reference 222:             return $this->redirectToRoute('admin_invoice_list');",
        "// Line_Reference 223:         } catch (Exception $ex) {",
        "// Line_Reference 224:             $this->flashUpdateException($ex);",
        "// Line_Reference 225:         }"
    ]
}
