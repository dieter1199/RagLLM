{
    "cve_id": "CVE-2011-3209",
    "cve_description": "The div_long_long_rem implementation in include/asm-x86/div64.h in the Linux kernel before 2.6.26 on the x86 platform allows local users to cause a denial of service (Divide Error Fault and panic) via a clock_gettime system call.",
    "cve_publish_date": "2012-10-03",
    "cwe_id": "CWE-189",
    "cwe_name": "Numeric Errors",
    "cwe_description": "Weaknesses in this category are related to improper calculation or conversion of numbers.",
    "commit_message": "remove div_long_long_rem\n\nx86 is the only arch right now, which provides an optimized for\ndiv_long_long_rem and it has the downside that one has to be very careful that\nthe divide doesn't overflow.\n\nThe API is a little akward, as the arguments for the unsigned divide are\nsigned.  The signed version also doesn't handle a negative divisor and\nproduces worse code on 64bit archs.\n\nThere is little incentive to keep this API alive, so this converts the few\nusers to the new API.\n\nSigned-off-by: Roman Zippel <zippel@linux-m68k.org>\nCc: Ralf Baechle <ralf@linux-mips.org>\nCc: Ingo Molnar <mingo@elte.hu>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: john stultz <johnstul@us.ibm.com>\nCc: Christoph Lameter <clameter@sgi.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "time.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "15",
    "number_of_lines_deleted_vulnerable_to_cve": "10",
    "vulnerable_lines": [
        "// Line_Reference 399: \tts.tv_sec = div_long_long_rem_signed(nsec, NSEC_PER_SEC, &ts.tv_nsec);",
        "// Line_Reference 400: \tif (unlikely(nsec < 0))",
        "// Line_Reference 401: \t\tset_normalized_timespec(&ts, ts.tv_sec, ts.tv_nsec);",
        "// Line_Reference 531: \tu64 nsec = (u64)jiffies * TICK_NSEC;",
        "// Line_Reference 532: \tvalue->tv_sec = div_long_long_rem(nsec, NSEC_PER_SEC, &value->tv_nsec);",
        "// Line_Reference 570: \tu64 nsec = (u64)jiffies * TICK_NSEC;",
        "// Line_Reference 571: \tlong tv_usec;",
        "// Line_Reference 573: \tvalue->tv_sec = div_long_long_rem(nsec, NSEC_PER_SEC, &tv_usec);",
        "// Line_Reference 574: \ttv_usec /= NSEC_PER_USEC;",
        "// Line_Reference 575: \tvalue->tv_usec = tv_usec;"
    ]
}
