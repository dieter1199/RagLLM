{
    "cve_id": "CVE-2015-8952",
    "cve_description": "The mbcache feature in the ext2 and ext4 filesystem implementations in the Linux kernel before 4.6 mishandles xattr block caching, which allows local users to cause a denial of service (soft lockup) via filesystem operations in environments that use many attributes, as demonstrated by Ceph and Samba.",
    "cve_publish_date": "2016-10-16",
    "cwe_id": "CWE-19",
    "cwe_name": "Data Processing Errors",
    "cwe_description": "Weaknesses in this category are typically found in functionality that processes data. Data processing is the manipulation of input to retrieve or save information.",
    "commit_message": "ext2: convert to mbcache2\n\nThe conversion is generally straightforward. We convert filesystem from\na global cache to per-fs one. Similarly to ext4 the tricky part is that\nxattr block corresponding to found mbcache entry can get freed before we\nget buffer lock for that block. So we have to check whether the entry is\nstill valid after getting the buffer lock.\n\nSigned-off-by: Jan Kara <jack@suse.cz>\nSigned-off-by: Theodore Ts'o <tytso@mit.edu>",
    "type_of_change": "Modification",
    "filename_of_changes": "xattr.h",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "5",
    "number_of_lines_deleted_vulnerable_to_cve": "16",
    "vulnerable_lines": [
        "// Line_Reference 68: extern void ext2_xattr_put_super(struct super_block *);",
        "// Line_Reference 70: extern int init_ext2_xattr(void);",
        "// Line_Reference 71: extern void exit_ext2_xattr(void);",
        "// Line_Reference 96: static inline void",
        "// Line_Reference 97: ext2_xattr_put_super(struct super_block *sb)",
        "// Line_Reference 98: {",
        "// Line_Reference 99: }",
        "// Line_Reference 100: ",
        "// Line_Reference 101: static inline int",
        "// Line_Reference 102: init_ext2_xattr(void)",
        "// Line_Reference 103: {",
        "// Line_Reference 104: \treturn 0;",
        "// Line_Reference 105: }",
        "// Line_Reference 106: ",
        "// Line_Reference 107: static inline void",
        "// Line_Reference 108: exit_ext2_xattr(void)"
    ]
}
