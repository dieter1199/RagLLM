{
    "cve_id": "CVE-2016-6911",
    "cve_description": "The dynamicGetbuf function in the GD Graphics Library (aka libgd) before 2.2.4 allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted TIFF image.",
    "cve_publish_date": "2017-01-26",
    "cwe_id": "CWE-125",
    "cwe_name": "Out-of-bounds Read",
    "cwe_description": "The product reads data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "Fix invalid read in gdImageCreateFromTiffPtr()\n\ntiff_invalid_read.tiff is corrupt, and causes an invalid read in\ngdImageCreateFromTiffPtr(), but not in gdImageCreateFromTiff(). The culprit\nis dynamicGetbuf(), which doesn't check for out-of-bound reads. In this case,\ndynamicGetbuf() is called with a negative dp->pos, but also positive buffer\noverflows have to be handled, in which case 0 has to be returned (cf. commit\n75e29a9).\n\nFixing dynamicGetbuf() exhibits that the corrupt TIFF would still create\nthe image, because the return value of TIFFReadRGBAImage() is not checked.\nWe do that, and let createFromTiffRgba() fail if TIFFReadRGBAImage() fails.\n\nThis issue had been reported by Ibrahim El-Sayed to security@libgd.org.\n\nCVE-2016-6911",
    "type_of_change": "Modification",
    "filename_of_changes": "gd_io_dp.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "10",
    "number_of_lines_deleted_vulnerable_to_cve": "5",
    "vulnerable_lines": [
        "// Line_Reference 280: \t\t\t/* 2.0.34: EOF is incorrect. We use 0 for",
        "// Line_Reference 281: \t\t\t * errors and EOF, just like fileGetbuf,",
        "// Line_Reference 282: \t\t\t * which is a simple fread() wrapper.",
        "// Line_Reference 283: \t\t\t * TBB. Original bug report: Daniel Cowgill. */",
        "// Line_Reference 284: \t\t\treturn 0; /* NOT EOF */"
    ]
}
