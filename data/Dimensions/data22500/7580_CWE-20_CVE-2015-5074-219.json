{
    "cve_id": "CVE-2015-5074",
    "cve_description": "Incomplete blacklist vulnerability in the FileUploadsFilter class in protected/components/filters/FileUploadsFilter.php in X2Engine X2CRM before 5.0.9 allows remote authenticated users to execute arbitrary PHP code by uploading a file with a .pht extension.",
    "cve_publish_date": "2015-09-29",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "Release v5.0.9; see CHANGELOG for details.",
    "type_of_change": "Modification",
    "filename_of_changes": "webForm.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "23",
    "number_of_lines_deleted_vulnerable_to_cve": "79",
    "vulnerable_lines": [
        "// Line_Reference 44: ",
        "// Line_Reference 165:     if (!empty($_GET['iframeHeight'])) {",
        "// Line_Reference 166:         $height = $_GET['iframeHeight'];",
        "// Line_Reference 167:         unset($_GET['iframeHeight']);",
        "// Line_Reference 171:     if (!empty($_GET['bs'])) {",
        "// Line_Reference 172:         $border = intval(preg_replace('/[^0-9]/', '', $_GET['bs']));",
        "// Line_Reference 173:     } else if (!empty($_GET['bc'])) {",
        "// Line_Reference 180:     if (!empty($_GET['bc'])) echo $_GET['bc'];",
        "// Line_Reference 183:     unset($_GET['bs']);",
        "// Line_Reference 184:     unset($_GET['bc']);",
        "// Line_Reference 190:     padding-bottom: <?php echo $padding .\"px;\\n\"?>",
        "// Line_Reference 191:     height: <?php echo $height .\"px;\\n\"?>",
        "// Line_Reference 195:     if (!empty($_GET['fg'])) {",
        "// Line_Reference 196:         echo 'color: '. $_GET['fg'] .\";\\n\";",
        "// Line_Reference 198:     unset($_GET['fg']);",
        "// Line_Reference 199:     if (!empty($_GET['bgc'])) echo 'background-color: '. $_GET['bgc'] .\";\\n\";",
        "// Line_Reference 200:     unset($_GET['bgc']);",
        "// Line_Reference 201:     if (!empty($_GET['font'])) {",
        "// Line_Reference 202:         echo 'font-family: '. FontPickerInput::getFontCss($_GET['font']) .\";\\n\";",
        "// Line_Reference 206:     unset($_GET['font']);",
        "// Line_Reference 231: br + input[type=\"text\"],",
        "// Line_Reference 232: input[type=\"hidden\"] + input[type=\"text\"] {",
        "// Line_Reference 276:         'onSubmit'=> (($useDefaults) ? 'return validate();' : ''),",
        "// Line_Reference 310:                 <input type=\"text\" name=\"Services[<?php echo $field['fieldName']; ?>]\"",
        "// Line_Reference 312:                 $_POST['Services'][$field['fieldName']] : ''; ?>\" />",
        "// Line_Reference 348: ",
        "// Line_Reference 349: var defaultFields = <?php echo CJSON::encode ($fieldTypes); ?>;",
        "// Line_Reference 350: ",
        "// Line_Reference 351: /*",
        "// Line_Reference 352: Sets input to empty string unless it contains the default value",
        "// Line_Reference 353: */",
        "// Line_Reference 354: function clearText(field){",
        "// Line_Reference 355:     if (typeof field !== \"undefined\" && $(field).prop ('defaultValue') === $(field).val ())",
        "// Line_Reference 356:         $(field).val (\"\");",
        "// Line_Reference 357: }",
        "// Line_Reference 358: ",
        "// Line_Reference 359: /*",
        "// Line_Reference 360: Add error styling if field input is invalid.",
        "// Line_Reference 361: Returns: false if field input is invalid, true otherwise",
        "// Line_Reference 362: */",
        "// Line_Reference 363: function validateField(field) {",
        "// Line_Reference 364:     var input = $('#<?php echo $type; ?>').find (",
        "// Line_Reference 365:         '[name=\"<?php echo $modelName; ?>[' + field + ']\"]');",
        "// Line_Reference 366: ",
        "// Line_Reference 367:     if (!$(input).val () || // field is empty",
        "// Line_Reference 368:         $(input).val ().match (/^\\s+$/) || // field contains only whitespace",
        "// Line_Reference 369:         (field == \"email\" && // invalid email format",
        "// Line_Reference 370:          $(input).val ().match(/[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}/) == null)) {",
        "// Line_Reference 371: ",
        "// Line_Reference 372:         // add error styling",
        "// Line_Reference 373:         $(input).css ({\"border-color\": \"#c00\"});",
        "// Line_Reference 374:         $(input).css ({\"background-color\": \"#fee\"});",
        "// Line_Reference 375:         return false;",
        "// Line_Reference 376:     } else {",
        "// Line_Reference 377: ",
        "// Line_Reference 378:         // remove error styling",
        "// Line_Reference 379:         $(input).css ({\"border-color\": \"\"});",
        "// Line_Reference 380:         $(input).css ({\"background-color\": \"\"});",
        "// Line_Reference 381:         return true;",
        "// Line_Reference 382:     }",
        "// Line_Reference 383: }",
        "// Line_Reference 384: ",
        "// Line_Reference 385: /*",
        "// Line_Reference 386: Clear and validate all default input fields",
        "// Line_Reference 387: */",
        "// Line_Reference 388: function validate() {",
        "// Line_Reference 389: ",
        "// Line_Reference 390:     clearText ($('#<?php echo $type; ?>').find (",
        "// Line_Reference 391:         '[name=\"<?php echo $modelName; ?>[backgroundInfo]\"]'));",
        "// Line_Reference 392: ",
        "// Line_Reference 393:     var valid = true;",
        "// Line_Reference 394:     for (var i in defaultFields) {",
        "// Line_Reference 395:         if (defaultFields[i] === null) continue;",
        "// Line_Reference 396:         if (!validateField(defaultFields[i])) {",
        "// Line_Reference 397:             valid = false;",
        "// Line_Reference 398:         }",
        "// Line_Reference 399:     }",
        "// Line_Reference 400:     return valid;",
        "// Line_Reference 401: }"
    ]
}
