{
    "cve_id": "CVE-2017-20005",
    "cve_description": "NGINX before 1.13.6 has a buffer overflow for years that exceed four digits, as demonstrated by a file with a modification date in 1969 that causes an integer overflow (or a false modification date far in the future), when encountered by the autoindex module.",
    "cve_publish_date": "2021-06-06",
    "cwe_id": "CWE-190",
    "cwe_name": "Integer Overflow or Wraparound",
    "cwe_description": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
    "commit_message": "Fixed ngx_gmtime() on 32-bit platforms with 64-bit time_t.\n\nIn ngx_gmtime(), instead of casting to ngx_uint_t we now work with\ntime_t directly.  This allows using dates after 2038 on 32-bit platforms\nwhich use 64-bit time_t, notably NetBSD and OpenBSD.\n\nAs the code is not able to work with negative time_t values, argument\nis now set to 0 for negative values.  As a positive side effect, this\nresults in Epoch being used for such values instead of a date in distant\nfuture.",
    "type_of_change": "Modification",
    "filename_of_changes": "ngx_times.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "10",
    "number_of_lines_deleted_vulnerable_to_cve": "8",
    "vulnerable_lines": [
        "// Line_Reference 303:     ngx_uint_t  n, sec, min, hour, mday, mon, year, wday, days, leap;",
        "// Line_Reference 307:     n = (ngx_uint_t) t;",
        "// Line_Reference 309:     days = n / 86400;",
        "// Line_Reference 315:     n %= 86400;",
        "// Line_Reference 316:     hour = n / 3600;",
        "// Line_Reference 317:     n %= 3600;",
        "// Line_Reference 318:     min = n / 60;",
        "// Line_Reference 319:     sec = n % 60;"
    ]
}
