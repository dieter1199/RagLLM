{
    "cve_id": "CVE-2020-11014",
    "cve_description": "Electron-Cash-SLP before version 3.6.2 has a vulnerability. All token creators that use the \"Mint Tool\" feature of the Electron Cash SLP Edition are at risk of sending the minting authority baton to the wrong SLP address. Sending the mint baton to the wrong address will give another party the ability to issue new tokens or permanently destroy future minting capability. This is fixed version 3.6.2.",
    "cve_publish_date": "2020-04-28",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "patch for critical vulnerability in mint tool\nrelated to #126\n\nThis commit fixes an issue where the order of SLP outputs could be reordered because the \"mandatory_coins\" parameter was not being used as it should be with all SLP transactions.  Reordering the output addresses could sometimes cause the token mint baton receiver and token receiver addresses to be switched.",
    "type_of_change": "Modification",
    "filename_of_changes": "slp_create_token_mint_dialog.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "11",
    "vulnerable_lines": [
        "// Line_Reference 212:             tx = self.main_window.wallet.make_unsigned_transaction(coins, outputs, self.main_window.config, fee, None)",
        "// Line_Reference 225:         # Find & Add baton to tx inputs",
        "// Line_Reference 226:         try:",
        "// Line_Reference 227:             baton_utxo = self.main_window.wallet.get_slp_token_baton(self.token_id_e.text())",
        "// Line_Reference 228:         except SlpNoMintingBatonFound:",
        "// Line_Reference 229:             self.show_message(_(\"There is no minting baton found for this token.\"))",
        "// Line_Reference 230:             return",
        "// Line_Reference 231: ",
        "// Line_Reference 232:         tx.add_inputs([baton_utxo])",
        "// Line_Reference 233:         for txin in tx._inputs:",
        "// Line_Reference 234:             self.main_window.wallet.add_input_info(txin)"
    ]
}
