{
    "cve_id": "CVE-2022-3363",
    "cve_description": "Business Logic Errors in GitHub repository ikus060/rdiffweb prior to 2.5.0a7.",
    "cve_publish_date": "2022-10-26",
    "cwe_id": "NVD-CWE-Other",
    "cwe_name": "Other",
    "cwe_description": "NVD is only using a subset of CWE for mapping instead of the entire CWE, and the weakness type is not covered by that subset.",
    "commit_message": "Send email notification when enabling or disabling MFA",
    "type_of_change": "Modification",
    "filename_of_changes": "_user.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "28",
    "number_of_lines_deleted_vulnerable_to_cve": "51",
    "vulnerable_lines": [
        "// Line_Reference 27: from sqlalchemy.orm import deferred, relationship",
        "// Line_Reference 77:     _username = Column('Username', String, nullable=False, unique=True)",
        "// Line_Reference 79:     _user_root = Column('UserRoot', String, nullable=False, default=\"\")",
        "// Line_Reference 89:     _email = Column('UserEmail', String, nullable=False, default=\"\")",
        "// Line_Reference 99:     _role = Column('role', SmallInteger, nullable=False, server_default=str(USER_ROLE))",
        "// Line_Reference 132:     def add_user(cls, username, password=None, **attrs):",
        "// Line_Reference 386:     @hybrid_property",
        "// Line_Reference 387:     def username(self):",
        "// Line_Reference 388:         return self._username",
        "// Line_Reference 389: ",
        "// Line_Reference 390:     @username.setter",
        "// Line_Reference 391:     def username(self, value):",
        "// Line_Reference 392:         oldvalue = self._username",
        "// Line_Reference 393:         self._username = value",
        "// Line_Reference 394:         if oldvalue != value:",
        "// Line_Reference 395:             cherrypy.engine.publish('user_attr_changed', self, {'username': (oldvalue, value)})",
        "// Line_Reference 396: ",
        "// Line_Reference 397:     @hybrid_property",
        "// Line_Reference 398:     def role(self):",
        "// Line_Reference 399:         if self._role is None:",
        "// Line_Reference 400:             return self.USER_ROLE",
        "// Line_Reference 401:         return self._role",
        "// Line_Reference 402: ",
        "// Line_Reference 403:     @role.setter",
        "// Line_Reference 404:     def role(self, value):",
        "// Line_Reference 405:         oldvalue = self._role",
        "// Line_Reference 406:         self._role = value",
        "// Line_Reference 407:         if oldvalue != value:",
        "// Line_Reference 408:             cherrypy.engine.publish('user_attr_changed', self, {'role': (oldvalue, value)})",
        "// Line_Reference 409: ",
        "// Line_Reference 410:     @hybrid_property",
        "// Line_Reference 411:     def email(self):",
        "// Line_Reference 412:         return self._email",
        "// Line_Reference 413: ",
        "// Line_Reference 414:     @email.setter",
        "// Line_Reference 415:     def email(self, value):",
        "// Line_Reference 416:         oldvalue = self._email",
        "// Line_Reference 417:         self._email = value",
        "// Line_Reference 418:         if oldvalue != value:",
        "// Line_Reference 419:             cherrypy.engine.publish('user_attr_changed', self, {'email': (oldvalue, value)})",
        "// Line_Reference 420: ",
        "// Line_Reference 421:     @hybrid_property",
        "// Line_Reference 422:     def user_root(self):",
        "// Line_Reference 423:         return self._user_root",
        "// Line_Reference 424: ",
        "// Line_Reference 425:     @user_root.setter",
        "// Line_Reference 426:     def user_root(self, value):",
        "// Line_Reference 427:         oldvalue = self._user_root",
        "// Line_Reference 428:         self._user_root = value",
        "// Line_Reference 429:         if oldvalue != value:",
        "// Line_Reference 430:             cherrypy.engine.publish('user_attr_changed', self, {'user_root': (oldvalue, value)})"
    ]
}
