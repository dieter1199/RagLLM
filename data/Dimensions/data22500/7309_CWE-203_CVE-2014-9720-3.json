{
    "cve_id": "CVE-2014-9720",
    "cve_description": "Tornado before 3.2.2 sends arbitrary responses that contain a fixed CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",
    "cve_publish_date": "2020-01-24",
    "cwe_id": "CWE-203",
    "cwe_name": "Observable Discrepancy",
    "cwe_description": "The product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not.",
    "commit_message": "Change the xsrf cookie format to be masked with a random salt.\n\nThis protects against the BREACH attack.",
    "type_of_change": "Modification",
    "filename_of_changes": "websocket.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "42",
    "vulnerable_lines": [
        "// Line_Reference 23: import array",
        "// Line_Reference 42: from tornado.util import bytes_type, unicode_type",
        "// Line_Reference 43: ",
        "// Line_Reference 44: try:",
        "// Line_Reference 45:     xrange  # py2",
        "// Line_Reference 46: except NameError:",
        "// Line_Reference 47:     xrange = range  # py3",
        "// Line_Reference 893: ",
        "// Line_Reference 894: ",
        "// Line_Reference 895: def _websocket_mask_python(mask, data):",
        "// Line_Reference 896:     \"\"\"Websocket masking function.",
        "// Line_Reference 897: ",
        "// Line_Reference 898:     `mask` is a `bytes` object of length 4; `data` is a `bytes` object of any length.",
        "// Line_Reference 899:     Returns a `bytes` object of the same length as `data` with the mask applied",
        "// Line_Reference 900:     as specified in section 5.3 of RFC 6455.",
        "// Line_Reference 901: ",
        "// Line_Reference 902:     This pure-python implementation may be replaced by an optimized version when available.",
        "// Line_Reference 903:     \"\"\"",
        "// Line_Reference 904:     mask = array.array(\"B\", mask)",
        "// Line_Reference 905:     unmasked = array.array(\"B\", data)",
        "// Line_Reference 906:     for i in xrange(len(data)):",
        "// Line_Reference 907:         unmasked[i] = unmasked[i] ^ mask[i % 4]",
        "// Line_Reference 908:     if hasattr(unmasked, 'tobytes'):",
        "// Line_Reference 909:         # tostring was deprecated in py32.  It hasn't been removed,",
        "// Line_Reference 910:         # but since we turn on deprecation warnings in our tests",
        "// Line_Reference 911:         # we need to use the right one.",
        "// Line_Reference 912:         return unmasked.tobytes()",
        "// Line_Reference 913:     else:",
        "// Line_Reference 914:         return unmasked.tostring()",
        "// Line_Reference 915: ",
        "// Line_Reference 916: if (os.environ.get('TORNADO_NO_EXTENSION') or",
        "// Line_Reference 917:     os.environ.get('TORNADO_EXTENSION') == '0'):",
        "// Line_Reference 918:     # These environment variables exist to make it easier to do performance",
        "// Line_Reference 919:     # comparisons; they are not guaranteed to remain supported in the future.",
        "// Line_Reference 920:     _websocket_mask = _websocket_mask_python",
        "// Line_Reference 921: else:",
        "// Line_Reference 922:     try:",
        "// Line_Reference 923:         from tornado.speedups import websocket_mask as _websocket_mask",
        "// Line_Reference 924:     except ImportError:",
        "// Line_Reference 925:         if os.environ.get('TORNADO_EXTENSION') == '1':",
        "// Line_Reference 926:             raise",
        "// Line_Reference 927:         _websocket_mask = _websocket_mask_python"
    ]
}
