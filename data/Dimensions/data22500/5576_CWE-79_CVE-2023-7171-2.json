{
    "cve_id": "CVE-2023-7171",
    "cve_description": "A vulnerability was found in Novel-Plus up to 4.2.0. It has been declared as problematic. Affected by this vulnerability is an unknown functionality of the file novel-admin/src/main/java/com/java2nb/novel/controller/FriendLinkController.java of the component Friendly Link Handler. The manipulation leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The patch is named d6093d8182362422370d7eaf6c53afde9ee45215. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-249307.",
    "cve_publish_date": "2023-12-29",
    "cwe_id": "CWE-79",
    "cwe_name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "cwe_description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
    "commit_message": "fix(novel-admin): 友情链接URL格式校验",
    "type_of_change": "Modification",
    "filename_of_changes": "FriendLinkDO.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "160",
    "number_of_lines_deleted_vulnerable_to_cve": "148",
    "vulnerable_lines": [
        "// Line_Reference 3: import java.io.Serializable;",
        "// Line_Reference 4: ",
        "// Line_Reference 5: ",
        "// Line_Reference 6: import java.math.BigDecimal;",
        "// Line_Reference 7: ",
        "// Line_Reference 10: ",
        "// Line_Reference 11: ",
        "// Line_Reference 13: import java.util.Date;",
        "// Line_Reference 18:  *",
        "// Line_Reference 19:  *",
        "// Line_Reference 25: \tprivate static final long serialVersionUID = 1L;",
        "// Line_Reference 26: ",
        "// Line_Reference 27: ",
        "// Line_Reference 28: \t//主键",
        "// Line_Reference 29: \t\t\tprivate Integer id;",
        "// Line_Reference 30: \t//链接名",
        "// Line_Reference 31: \t\t\tprivate String linkName;",
        "// Line_Reference 32: \t//链接url",
        "// Line_Reference 33: \t\t\tprivate String linkUrl;",
        "// Line_Reference 34: \t//排序号",
        "// Line_Reference 35: \t\t\tprivate Integer sort;",
        "// Line_Reference 36: \t//是否开启，0：不开启，1：开启",
        "// Line_Reference 37: \t\t\tprivate Integer isOpen;",
        "// Line_Reference 38: \t//创建人id",
        "// Line_Reference 39: \t\t//java中的long能表示的范围比js中number大,也就意味着部分数值在js中存不下(变成不准确的值)",
        "// Line_Reference 40: \t//所以通过序列化成字符串来解决",
        "// Line_Reference 41: \t@JsonSerialize(using = LongToStringSerializer.class)",
        "// Line_Reference 42: \t\t\tprivate Long createUserId;",
        "// Line_Reference 43: \t//创建时间",
        "// Line_Reference 44: \t\t\t@DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\")",
        "// Line_Reference 45: \t\tprivate Date createTime;",
        "// Line_Reference 46: \t//更新者用户id",
        "// Line_Reference 47: \t\t//java中的long能表示的范围比js中number大,也就意味着部分数值在js中存不下(变成不准确的值)",
        "// Line_Reference 48: \t//所以通过序列化成字符串来解决",
        "// Line_Reference 49: \t@JsonSerialize(using = LongToStringSerializer.class)",
        "// Line_Reference 50: \t\t\tprivate Long updateUserId;",
        "// Line_Reference 51: \t//更新时间",
        "// Line_Reference 52: \t\t\t@DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\")",
        "// Line_Reference 53: \t\tprivate Date updateTime;",
        "// Line_Reference 54: ",
        "// Line_Reference 55: \t/**",
        "// Line_Reference 56: \t * 设置：主键",
        "// Line_Reference 57: \t */",
        "// Line_Reference 58: \tpublic void setId(Integer id) {",
        "// Line_Reference 59: \t\tthis.id = id;",
        "// Line_Reference 60: \t}",
        "// Line_Reference 61: \t/**",
        "// Line_Reference 62: \t * 获取：主键",
        "// Line_Reference 63: \t */",
        "// Line_Reference 64: \tpublic Integer getId() {",
        "// Line_Reference 65: \t\treturn id;",
        "// Line_Reference 66: \t}",
        "// Line_Reference 67: \t/**",
        "// Line_Reference 68: \t * 设置：链接名",
        "// Line_Reference 69: \t */",
        "// Line_Reference 70: \tpublic void setLinkName(String linkName) {",
        "// Line_Reference 71: \t\tthis.linkName = linkName;",
        "// Line_Reference 72: \t}",
        "// Line_Reference 73: \t/**",
        "// Line_Reference 74: \t * 获取：链接名",
        "// Line_Reference 75: \t */",
        "// Line_Reference 76: \tpublic String getLinkName() {",
        "// Line_Reference 77: \t\treturn linkName;",
        "// Line_Reference 78: \t}",
        "// Line_Reference 79: \t/**",
        "// Line_Reference 80: \t * 设置：链接url",
        "// Line_Reference 81: \t */",
        "// Line_Reference 82: \tpublic void setLinkUrl(String linkUrl) {",
        "// Line_Reference 83: \t\tthis.linkUrl = linkUrl;",
        "// Line_Reference 84: \t}",
        "// Line_Reference 85: \t/**",
        "// Line_Reference 86: \t * 获取：链接url",
        "// Line_Reference 87: \t */",
        "// Line_Reference 88: \tpublic String getLinkUrl() {",
        "// Line_Reference 89: \t\treturn linkUrl;",
        "// Line_Reference 90: \t}",
        "// Line_Reference 91: \t/**",
        "// Line_Reference 92: \t * 设置：排序号",
        "// Line_Reference 93: \t */",
        "// Line_Reference 94: \tpublic void setSort(Integer sort) {",
        "// Line_Reference 95: \t\tthis.sort = sort;",
        "// Line_Reference 96: \t}",
        "// Line_Reference 97: \t/**",
        "// Line_Reference 98: \t * 获取：排序号",
        "// Line_Reference 99: \t */",
        "// Line_Reference 100: \tpublic Integer getSort() {",
        "// Line_Reference 101: \t\treturn sort;",
        "// Line_Reference 102: \t}",
        "// Line_Reference 103: \t/**",
        "// Line_Reference 104: \t * 设置：是否开启，0：不开启，1：开启",
        "// Line_Reference 105: \t */",
        "// Line_Reference 106: \tpublic void setIsOpen(Integer isOpen) {",
        "// Line_Reference 107: \t\tthis.isOpen = isOpen;",
        "// Line_Reference 108: \t}",
        "// Line_Reference 109: \t/**",
        "// Line_Reference 110: \t * 获取：是否开启，0：不开启，1：开启",
        "// Line_Reference 111: \t */",
        "// Line_Reference 112: \tpublic Integer getIsOpen() {",
        "// Line_Reference 113: \t\treturn isOpen;",
        "// Line_Reference 114: \t}",
        "// Line_Reference 115: \t/**",
        "// Line_Reference 116: \t * 设置：创建人id",
        "// Line_Reference 117: \t */",
        "// Line_Reference 118: \tpublic void setCreateUserId(Long createUserId) {",
        "// Line_Reference 119: \t\tthis.createUserId = createUserId;",
        "// Line_Reference 120: \t}",
        "// Line_Reference 121: \t/**",
        "// Line_Reference 122: \t * 获取：创建人id",
        "// Line_Reference 123: \t */",
        "// Line_Reference 124: \tpublic Long getCreateUserId() {",
        "// Line_Reference 125: \t\treturn createUserId;",
        "// Line_Reference 126: \t}",
        "// Line_Reference 127: \t/**",
        "// Line_Reference 128: \t * 设置：创建时间",
        "// Line_Reference 129: \t */",
        "// Line_Reference 130: \tpublic void setCreateTime(Date createTime) {",
        "// Line_Reference 131: \t\tthis.createTime = createTime;",
        "// Line_Reference 132: \t}",
        "// Line_Reference 133: \t/**",
        "// Line_Reference 134: \t * 获取：创建时间",
        "// Line_Reference 135: \t */",
        "// Line_Reference 136: \tpublic Date getCreateTime() {",
        "// Line_Reference 137: \t\treturn createTime;",
        "// Line_Reference 138: \t}",
        "// Line_Reference 139: \t/**",
        "// Line_Reference 140: \t * 设置：更新者用户id",
        "// Line_Reference 141: \t */",
        "// Line_Reference 142: \tpublic void setUpdateUserId(Long updateUserId) {",
        "// Line_Reference 143: \t\tthis.updateUserId = updateUserId;",
        "// Line_Reference 144: \t}",
        "// Line_Reference 145: \t/**",
        "// Line_Reference 146: \t * 获取：更新者用户id",
        "// Line_Reference 147: \t */",
        "// Line_Reference 148: \tpublic Long getUpdateUserId() {",
        "// Line_Reference 149: \t\treturn updateUserId;",
        "// Line_Reference 150: \t}",
        "// Line_Reference 151: \t/**",
        "// Line_Reference 152: \t * 设置：更新时间",
        "// Line_Reference 153: \t */",
        "// Line_Reference 154: \tpublic void setUpdateTime(Date updateTime) {",
        "// Line_Reference 155: \t\tthis.updateTime = updateTime;",
        "// Line_Reference 156: \t}",
        "// Line_Reference 157: \t/**",
        "// Line_Reference 158: \t * 获取：更新时间",
        "// Line_Reference 159: \t */",
        "// Line_Reference 160: \tpublic Date getUpdateTime() {",
        "// Line_Reference 161: \t\treturn updateTime;",
        "// Line_Reference 162: \t}"
    ]
}
