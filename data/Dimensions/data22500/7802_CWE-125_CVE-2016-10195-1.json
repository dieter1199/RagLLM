{
    "cve_id": "CVE-2016-10195",
    "cve_description": "The name_parse function in evdns.c in libevent before 2.1.6-beta allows remote attackers to have unspecified impact via vectors involving the label_len variable, which triggers an out-of-bounds stack read.",
    "cve_publish_date": "2017-03-15",
    "cwe_id": "CWE-125",
    "cwe_name": "Out-of-bounds Read",
    "cwe_description": "The product reads data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "evdns: name_parse(): fix remote stack overread\n\n@asn-the-goblin-slayer:\n  \"the name_parse() function in libevent's DNS code is vulnerable to a buffer overread.\n\n   971         if (cp != name_out) {\n   972             if (cp + 1 >= end) return -1;\n   973             *cp++ = '.';\n   974         }\n   975         if (cp + label_len >= end) return -1;\n   976         memcpy(cp, packet + j, label_len);\n   977         cp += label_len;\n   978         j += label_len;\n   No check is made against length before the memcpy occurs.\n\n   This was found through the Tor bug bounty program and the discovery should be credited to 'Guido Vranken'.\"\n\nReproducer for gdb (https://gist.github.com/azat/e4fcf540e9b89ab86d02):\n  set $PROT_NONE=0x0\n  set $PROT_READ=0x1\n  set $PROT_WRITE=0x2\n  set $MAP_ANONYMOUS=0x20\n  set $MAP_SHARED=0x01\n  set $MAP_FIXED=0x10\n  set $MAP_32BIT=0x40\n\n  start\n\n  set $length=202\n  # overread\n  set $length=2\n  # allocate with mmap to have a seg fault on page boundary\n  set $l=(1<<20)*2\n  p mmap(0, $l, $PROT_READ|$PROT_WRITE, $MAP_ANONYMOUS|$MAP_SHARED|$MAP_32BIT, -1, 0)\n  set $packet=(char *)$1+$l-$length\n  # hack the packet\n  set $packet[0]=63\n  set $packet[1]='/'\n\n  p malloc(sizeof(int))\n  set $idx=(int *)$2\n  set $idx[0]=0\n  set $name_out_len=202\n\n  p malloc($name_out_len)\n  set $name_out=$3\n\n  # have WRITE only mapping to fail on read\n  set $end=$1+$l\n  p (void *)mmap($end, 1<<12, $PROT_NONE, $MAP_ANONYMOUS|$MAP_SHARED|$MAP_FIXED|$MAP_32BIT, -1, 0)\n  set $m=$4\n\n  p name_parse($packet, $length, $idx, $name_out, $name_out_len)\n  x/2s (char *)$name_out\n\nBefore this patch:\n$ gdb -ex 'source gdb' dns-example\n$1 = 1073741824\n$2 = (void *) 0x633010\n$3 = (void *) 0x633030\n$4 = (void *) 0x40200000\n\nProgram received signal SIGSEGV, Segmentation fault.\n__memcpy_sse2_unaligned () at memcpy-sse2-unaligned.S:33\n\nAfter this patch:\n$ gdb -ex 'source gdb' dns-example\n$1 = 1073741824\n$2 = (void *) 0x633010\n$3 = (void *) 0x633030\n$4 = (void *) 0x40200000\n$5 = -1\n0x633030:       \"/\"\n0x633032:       \"\"\n(gdb) p $m\n$6 = (void *) 0x40200000\n(gdb) p $1\n$7 = 1073741824\n(gdb) p/x $1\n$8 = 0x40000000\n(gdb) quit\n\nP.S. plus drop one condition duplicate.\n\nFixes: #317",
    "type_of_change": "Modification",
    "filename_of_changes": "evdns.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 979: \t\tif (j >= length) return -1;"
    ]
}
