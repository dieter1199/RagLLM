{
    "cve_id": "CVE-2016-10012",
    "cve_description": "The shared memory manager (associated with pre-authentication compression) in sshd in OpenSSH before 7.4 does not ensure that a bounds check is enforced by all compilers, which might allows local users to gain privileges by leveraging access to a sandboxed privilege-separation process, related to the m_zback and m_zlib data structures.",
    "cve_publish_date": "2017-01-05",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "Remove support for pre-authentication compression. Doing compression\nearly in the protocol probably seemed reasonable in the 1990s, but\ntoday it's clearly a bad idea in terms of both cryptography (cf.\nmultiple compression oracle attacks in TLS) and attack surface.\n\nMoreover, to support it across privilege-separation zlib needed\nthe assistance of a complex shared-memory manager that made the\nrequired attack surface considerably larger.\n\nPrompted by Guido Vranken pointing out a compiler-elided security\ncheck in the shared memory manager found by Stack\n(http://css.csail.mit.edu/stack/); ok deraadt@ markus@\n\nNB. pre-auth authentication has been disabled by default in sshd\nfor >10 years.",
    "type_of_change": "Modification",
    "filename_of_changes": "packet.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "6",
    "number_of_lines_deleted_vulnerable_to_cve": "98",
    "vulnerable_lines": [
        "// Line_Reference 1: /* $OpenBSD: packet.c,v 1.238 2016/09/19 19:02:19 markus Exp $ */",
        "// Line_Reference 748: /* Serialise compression state into a blob for privsep */",
        "// Line_Reference 749: static int",
        "// Line_Reference 750: ssh_packet_get_compress_state(struct sshbuf *m, struct ssh *ssh)",
        "// Line_Reference 751: {",
        "// Line_Reference 752: \tstruct session_state *state = ssh->state;",
        "// Line_Reference 753: \tstruct sshbuf *b;",
        "// Line_Reference 754: \tint r;",
        "// Line_Reference 755: ",
        "// Line_Reference 756: \tif ((b = sshbuf_new()) == NULL)",
        "// Line_Reference 757: \t\treturn SSH_ERR_ALLOC_FAIL;",
        "// Line_Reference 758: \tif (state->compression_in_started) {",
        "// Line_Reference 759: \t\tif ((r = sshbuf_put_string(b, &state->compression_in_stream,",
        "// Line_Reference 760: \t\t    sizeof(state->compression_in_stream))) != 0)",
        "// Line_Reference 761: \t\t\tgoto out;",
        "// Line_Reference 762: \t} else if ((r = sshbuf_put_string(b, NULL, 0)) != 0)",
        "// Line_Reference 763: \t\tgoto out;",
        "// Line_Reference 764: \tif (state->compression_out_started) {",
        "// Line_Reference 765: \t\tif ((r = sshbuf_put_string(b, &state->compression_out_stream,",
        "// Line_Reference 766: \t\t    sizeof(state->compression_out_stream))) != 0)",
        "// Line_Reference 767: \t\t\tgoto out;",
        "// Line_Reference 768: \t} else if ((r = sshbuf_put_string(b, NULL, 0)) != 0)",
        "// Line_Reference 769: \t\tgoto out;",
        "// Line_Reference 770: \tr = sshbuf_put_stringb(m, b);",
        "// Line_Reference 771:  out:",
        "// Line_Reference 772: \tsshbuf_free(b);",
        "// Line_Reference 773: \treturn r;",
        "// Line_Reference 774: }",
        "// Line_Reference 775: ",
        "// Line_Reference 776: /* Deserialise compression state from a blob for privsep */",
        "// Line_Reference 777: static int",
        "// Line_Reference 778: ssh_packet_set_compress_state(struct ssh *ssh, struct sshbuf *m)",
        "// Line_Reference 779: {",
        "// Line_Reference 780: \tstruct session_state *state = ssh->state;",
        "// Line_Reference 781: \tstruct sshbuf *b = NULL;",
        "// Line_Reference 782: \tint r;",
        "// Line_Reference 783: \tconst u_char *inblob, *outblob;",
        "// Line_Reference 784: \tsize_t inl, outl;",
        "// Line_Reference 785: ",
        "// Line_Reference 786: \tif ((r = sshbuf_froms(m, &b)) != 0)",
        "// Line_Reference 787: \t\tgoto out;",
        "// Line_Reference 788: \tif ((r = sshbuf_get_string_direct(b, &inblob, &inl)) != 0 ||",
        "// Line_Reference 789: \t    (r = sshbuf_get_string_direct(b, &outblob, &outl)) != 0)",
        "// Line_Reference 790: \t\tgoto out;",
        "// Line_Reference 791: \tif (inl == 0)",
        "// Line_Reference 792: \t\tstate->compression_in_started = 0;",
        "// Line_Reference 793: \telse if (inl != sizeof(state->compression_in_stream)) {",
        "// Line_Reference 794: \t\tr = SSH_ERR_INTERNAL_ERROR;",
        "// Line_Reference 795: \t\tgoto out;",
        "// Line_Reference 796: \t} else {",
        "// Line_Reference 797: \t\tstate->compression_in_started = 1;",
        "// Line_Reference 798: \t\tmemcpy(&state->compression_in_stream, inblob, inl);",
        "// Line_Reference 799: \t}",
        "// Line_Reference 800: \tif (outl == 0)",
        "// Line_Reference 801: \t\tstate->compression_out_started = 0;",
        "// Line_Reference 802: \telse if (outl != sizeof(state->compression_out_stream)) {",
        "// Line_Reference 803: \t\tr = SSH_ERR_INTERNAL_ERROR;",
        "// Line_Reference 804: \t\tgoto out;",
        "// Line_Reference 805: \t} else {",
        "// Line_Reference 806: \t\tstate->compression_out_started = 1;",
        "// Line_Reference 807: \t\tmemcpy(&state->compression_out_stream, outblob, outl);",
        "// Line_Reference 808: \t}",
        "// Line_Reference 809: \tr = 0;",
        "// Line_Reference 810:  out:",
        "// Line_Reference 811: \tsshbuf_free(b);",
        "// Line_Reference 812: \treturn r;",
        "// Line_Reference 813: }",
        "// Line_Reference 814: ",
        "// Line_Reference 815: void",
        "// Line_Reference 816: ssh_packet_set_compress_hooks(struct ssh *ssh, void *ctx,",
        "// Line_Reference 817:     void *(*allocfunc)(void *, u_int, u_int),",
        "// Line_Reference 818:     void (*freefunc)(void *, void *))",
        "// Line_Reference 819: {",
        "// Line_Reference 820: \tssh->state->compression_out_stream.zalloc = (alloc_func)allocfunc;",
        "// Line_Reference 821: \tssh->state->compression_out_stream.zfree = (free_func)freefunc;",
        "// Line_Reference 822: \tssh->state->compression_out_stream.opaque = ctx;",
        "// Line_Reference 823: \tssh->state->compression_in_stream.zalloc = (alloc_func)allocfunc;",
        "// Line_Reference 824: \tssh->state->compression_in_stream.zfree = (free_func)freefunc;",
        "// Line_Reference 825: \tssh->state->compression_in_stream.opaque = ctx;",
        "// Line_Reference 826: }",
        "// Line_Reference 827: ",
        "// Line_Reference 2433: \tstruct sshcomp *comp;",
        "// Line_Reference 2434: \tint r, mode;",
        "// Line_Reference 2440: \tfor (mode = 0; mode < MODE_MAX; mode++) {",
        "// Line_Reference 2441: \t\tif (ssh->state->newkeys[mode] == NULL)",
        "// Line_Reference 2442: \t\t\tcontinue;",
        "// Line_Reference 2443: \t\tcomp = &ssh->state->newkeys[mode]->comp;",
        "// Line_Reference 2444: \t\tif (comp && comp->enabled &&",
        "// Line_Reference 2445: \t\t    (r = ssh_packet_init_compression(ssh)) != 0)",
        "// Line_Reference 2446: \t\t\treturn r;",
        "// Line_Reference 2447: \t}",
        "// Line_Reference 2511: \t    (r = sshbuf_put_u32(b, comp->enabled)) != 0 ||",
        "// Line_Reference 2572: ",
        "// Line_Reference 2573: \tif ((r = ssh_packet_get_compress_state(m, ssh)) != 0 ||",
        "// Line_Reference 2574: \t    (r = sshbuf_put_stringb(m, state->input)) != 0 ||",
        "// Line_Reference 2628: \t    (r = sshbuf_get_u32(b, (u_int *)&comp->enabled)) != 0 ||",
        "// Line_Reference 2756: \tif ((r = ssh_packet_set_compress_state(ssh, m)) != 0 ||",
        "// Line_Reference 2757: \t    (r = ssh_packet_set_postauth(ssh)) != 0)"
    ]
}
