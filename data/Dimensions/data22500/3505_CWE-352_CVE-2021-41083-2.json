{
    "cve_id": "CVE-2021-41083",
    "cve_description": "Dada Mail is a web-based e-mail list management system. In affected versions a bad actor could give someone a carefully crafted web page via email, SMS, etc, that - when visited, allows them control of the list control panel as if the bad actor was logged in themselves. This includes changing any mailing list password, as well as the Dada Mail Root Password - which could effectively shut out actual list owners of the mailing list and allow the bad actor complete and unfettered control of your mailing list. This vulnerability also affects profile logins. For this vulnerability to work, the target of the bad actor would need to be logged into the list control panel themselves. This CSRF vulnerability in Dada Mail affects all versions of Dada Mail v11.15.1 and below. Although we know of no known CSRF exploits that have happened in the wild, this vulnerability has been confirmed by our testing, and by a third party. Users are advised to update to version 11.16.0.",
    "cve_publish_date": "2021-09-20",
    "cwe_id": "CWE-352",
    "cwe_name": "Cross-Site Request Forgery (CSRF)",
    "cwe_description": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
    "commit_message": "This adds CSRF protection to the profiles.",
    "type_of_change": "Modification",
    "filename_of_changes": "Session.pm",
    "code_language": "Perl",
    "number_of_lines_added_for_mitigation": "65",
    "number_of_lines_deleted_vulnerable_to_cve": "10",
    "vulnerable_lines": [
        "// Line_Reference 95:     $session->param( 'email',      cased($args->{ -email }) );",
        "// Line_Reference 96:     $session->param( '_logged_in', 1 );",
        "// Line_Reference 98:     $session->expire( $DADA::Config::COOKIE_PARAMS{ -expires } );",
        "// Line_Reference 99:     $session->expire( '_logged_in', $DADA::Config::COOKIE_PARAMS{ -expires } );",
        "// Line_Reference 109: ",
        "// Line_Reference 110:     # My proposal to address the situation is quit relying on flush() happen",
        "// Line_Reference 111:     # automatically, and recommend that people use an explicit flush()",
        "// Line_Reference 112:     # instead, which works reliably for everyone.",
        "// Line_Reference 127:     my ( $status, $errors ) = $self->validate_profile_login($args);",
        "// Line_Reference 275:     return $session->param('email');"
    ]
}
