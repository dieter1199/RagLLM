return -EINVAL;
return -EALREADY;
po->rollover = kzalloc(sizeof(*po->rollover), GFP_KERNEL);
if (!po->rollover)
return -ENOMEM;
atomic_long_set(&po->rollover->num, 0);
atomic_long_set(&po->rollover->num_huge, 0);
atomic_long_set(&po->rollover->num_failed, 0);
mutex_lock(&fanout_mutex);
mutex_unlock(&fanout_mutex);
if (err) {
kfree(po->rollover);
f = po->fanout;
if (!f)
return;
po->fanout = NULL;
if (atomic_dec_and_test(&f->sk_ref)) {
list_del(&f->list);
dev_remove_pack(&f->prot_hook);
fanout_release_data(f);
kfree(f);
if (po->rollover)
kfree_rcu(po->rollover, rcu);
