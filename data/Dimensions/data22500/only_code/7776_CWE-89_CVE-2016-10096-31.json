if (this.options.addClasses){
if (this.options.disabled){
if ( this.relativeContainer ){
for (i = inst.snapElements.length - 1; i >= 0; i--){
if ( draggable ){
if ( draggable ){
if(this.options.disabled || this.options.type === "static") {
if($.data(this, that.widgetName + "-item") === that) {
if($.data(event.target, that.widgetName + "-item") === that) {
if(!currentItem) {
if(this.options.handle && !overrideHandle) {
if(this === event.target) {
if(!validHandle) {
if(this.helper[0] !== this.currentItem[0]) {
if(o.containment) {
if( o.cursor && o.cursor !== "auto" ) { // cursor option
if(o.opacity) { // opacity option
if(o.zIndex) { // zIndex option
if(this.scrollParent[0] !== this.document[0] && this.scrollParent[0].tagName !== "HTML") {
if(!this._preserveHelperProportions) {
if( !noActivation ) {
if($.ui.ddmanager) {
if(this.options.scroll) {
if(this.scrollParent[0] !== this.document[0] && this.scrollParent[0].tagName !== "HTML") {
if((this.overflowOffset.top + this.scrollParent[0].offsetHeight) - event.pageY < o.scrollSensitivity) {
} else if(event.pageY - this.overflowOffset.top < o.scrollSensitivity) {
if((this.overflowOffset.left + this.scrollParent[0].offsetWidth) - event.pageX < o.scrollSensitivity) {
} else if(event.pageX - this.overflowOffset.left < o.scrollSensitivity) {
if(event.pageY - this.document.scrollTop() < o.scrollSensitivity) {
} else if(this.window.height() - (event.pageY - this.document.scrollTop()) < o.scrollSensitivity) {
if(event.pageX - this.document.scrollLeft() < o.scrollSensitivity) {
} else if(this.window.width() - (event.pageX - this.document.scrollLeft()) < o.scrollSensitivity) {
if(scrolled !== false && $.ui.ddmanager && !o.dropBehaviour) {
if(!this.options.axis || this.options.axis !== "y") {
if(!this.options.axis || this.options.axis !== "x") {
if($.ui.ddmanager) {
if(!event) {
if(this.options.revert) {
if(this.dragging) {
if(this.options.helper === "original") {
for (var i = this.containers.length - 1; i >= 0; i--){
if(this.containers[i].containerCache.over) {
if(this.placeholder[0].parentNode) {
if(this.options.helper !== "original" && this.helper && this.helper[0].parentNode) {
if(this.domPosition.prev) {
if(!str.length && o.key) {
if(connectWith && connected) {
for (i = connectWith.length - 1; i >= 0; i--){
for ( j = cur.length - 1; j >= 0; j--){
if(inst && inst !== this && !inst.options.disabled) {
for (i = queries.length - 1; i >= 0; i--){
if(list[j] === item.item[0]) {
if(connectWith && this.ready) { //Shouldn't be run the first time through due to massive slow-down
for (i = connectWith.length - 1; i >= 0; i--){
for (j = cur.length - 1; j >= 0; j--){
if(inst && inst !== this && !inst.options.disabled) {
if(this.offsetParent && this.helper) {
for (i = this.items.length - 1; i >= 0; i--){
if(item.instance !== this.currentContainer && this.currentContainer && item.item[0] !== this.currentItem[0]) {
if(this.options.custom && this.options.custom.refreshContainers) {
for (i = this.containers.length - 1; i >= 0; i--){
if(!o.placeholder || o.placeholder.constructor === String) {
if(className && !o.forcePlaceholderSize) {
if(!p.height()) { p.height(that.currentItem.innerHeight() - parseInt(that.currentItem.css("paddingTop")||0, 10) - parseInt(that.currentItem.css("paddingBottom")||0, 10)); }
if(!p.width()) { p.width(that.currentItem.innerWidth() - parseInt(that.currentItem.css("paddingLeft")||0, 10) - parseInt(that.currentItem.css("paddingRight")||0, 10)); }
if($.contains(this.currentItem[0], this.containers[i].element[0])) {
if(this._intersectsWith(this.containers[i].containerCache)) {
if(innermostContainer && $.contains(this.containers[i].element[0], innermostContainer.element[0])) {
if(this.containers[i].containerCache.over) {
if(!innermostContainer) {
if(this.containers.length === 1) {
if(!$.contains(this.containers[innermostIndex].element[0], this.items[j].item[0])) {
if(this.items[j].item[0] === this.currentItem[0]) {
if(!itemWithLeastDistance && !this.options.dropOnEmpty) {
if(this.currentContainer === this.containers[innermostIndex]) {
if(!helper.parents("body").length) {
if(helper[0] === this.currentItem[0]) {
if(!helper[0].style.width || o.forceHelperSize) {
if(!helper[0].style.height || o.forceHelperSize) {
if(this.cssPosition === "absolute" && this.scrollParent[0] !== this.document[0] && $.contains(this.scrollParent[0], this.offsetParent[0])) {
if( this.offsetParent[0] === this.document[0].body || (this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() === "html" && $.ui.ie)) {
if(this.cssPosition === "relative") {
if(o.containment === "parent") {
if(o.containment === "document" || o.containment === "window") {
if(!(/^(document|window|parent)$/).test(o.containment)) {
if(!pos) {
if(this.cssPosition === "relative" && !(this.scrollParent[0] !== this.document[0] && this.scrollParent[0] !== this.offsetParent[0])) {
if(this.originalPosition) { //If we are not dragging yet, we won't check for options
if(this.containment) {
if(event.pageX - this.offset.click.left < this.containment[0]) {
if(event.pageY - this.offset.click.top < this.containment[1]) {
if(event.pageX - this.offset.click.left > this.containment[2]) {
if(event.pageY - this.offset.click.top > this.containment[3]) {
if(o.grid) {
if(counter === this.counter) {
if(!this._noFinalSort && this.currentItem.parent().length) {
if(this.helper[0] === this.currentItem[0]) {
if(this._storedCSS[i] === "auto" || this._storedCSS[i] === "static") {
if(this.fromOutside && !noPropagation) {
if((this.fromOutside || this.domPosition.prev !== this.currentItem.prev().not(".ui-sortable-helper")[0] || this.domPosition.parent !== this.currentItem.parent()[0]) && !noPropagation) {
if(!noPropagation) {
for (i = this.containers.length - 1; i >= 0; i--){
if(this.containers[i].containerCache.over) {
if(this._storedOpacity) {
if(this._storedZIndex) {
if(!noPropagation) {
if(!noPropagation) {
if( inst.settings.disabled ) {
if( inst.settings.disabled ) {
if(beforeShowSettings === false){
if( inst.yearshtml ){
setTimeout(function(){
if( origyearshtml === inst.yearshtml && inst.yearshtml ){
if (inst.inline){
if (lookAhead("'")){
if (iValue < value.length){
if (years){
$.fn.datepicker = function(options){