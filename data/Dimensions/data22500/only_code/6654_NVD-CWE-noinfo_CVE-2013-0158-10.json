* Note that since the cryptography relies on {@link jenkins.model.Jenkins#getSecretKey()}, this is not meant as a protection
* against code running in the same VM, nor against an attacker who has local file system access.
* Turns {@link jenkins.model.Jenkins#getSecretKey()} into an AES key.
private static SecretKey getKey() throws UnsupportedEncodingException, GeneralSecurityException {
Cipher cipher = getCipher("AES");
cipher.init(Cipher.ENCRYPT_MODE, getKey());
cipher.init(Cipher.DECRYPT_MODE, getKey());
String plainText = new String(cipher.doFinal(Base64.decode(data.toCharArray())), "UTF-8");
if(plainText.endsWith(MAGIC))
return new Secret(plainText.substring(0,plainText.length()-MAGIC.length()));
return null;
* For testing only. Override the secret key so that we can test this class without {@link jenkins.model.Jenkins}.