#define list_to_pair(list_)  container_of(list_, pair_t, list)
/* From http://www.cse.yorku.ca/~oz/hash.html */
static size_t hash_str(const void *ptr)
{
const char *str = (const char *)ptr;
size_t hash = 5381;
size_t c;
while((c = (size_t)*str))
{
hash = ((hash << 5) + hash) + c;
str++;
}
return hash;
}
static const size_t primes[] = {
5, 13, 23, 53, 97, 193, 389, 769, 1543, 3079, 6151, 12289, 24593,
49157, 98317, 196613, 393241, 786433, 1572869, 3145739, 6291469,
12582917, 25165843, 50331653, 100663319, 201326611, 402653189,
805306457, 1610612741
};
static JSON_INLINE size_t num_buckets(hashtable_t *hashtable)
{
return primes[hashtable->num_buckets];
}
index = hash % num_buckets(hashtable);
hashtable->num_buckets++;
new_size = num_buckets(hashtable);
for(i = 0; i < num_buckets(hashtable); i++)
hashtable->num_buckets = 0;  /* index to primes[] */
hashtable->buckets = jsonp_malloc(num_buckets(hashtable) * sizeof(bucket_t));
for(i = 0; i < num_buckets(hashtable); i++)
if(hashtable->size >= num_buckets(hashtable))
index = hash % num_buckets(hashtable);
bucket = &hashtable->buckets[hash % num_buckets(hashtable)];
for(i = 0; i < num_buckets(hashtable); i++)
bucket = &hashtable->buckets[hash % num_buckets(hashtable)];
