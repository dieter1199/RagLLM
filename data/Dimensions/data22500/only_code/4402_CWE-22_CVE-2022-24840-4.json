@pytest.fixture
def freeze(self, monkeypatch):
"""Freeze datetime and UUID."""
monkeypatch.setattr(
"s3file.forms.S3FileInputMixin.upload_folder",
os.path.join(storage.aws_location, "tmp"),
)
def test_value_from_datadict(self, client, upload_file):
print(storage.location)
uploaded_file = storage.save("test.jpg", f)
"file": json.dumps([uploaded_file]),
"s3file": '["file"]',
def test_build_attr(self):
def test_get_conditions(self, freeze):
["starts-with", "$key", "custom/location/tmp"],
def test_file_insert(self, request, driver, live_server, upload_file, freeze):
assert storage.exists("tmp/%s.txt" % request.node.name)
def test_file_insert_submit_value(self, driver, live_server, upload_file, freeze):
def test_progress(self, driver, live_server, upload_file, freeze):
freeze,
file_input.send_keys(" \n ".join([upload_file, another_upload_file]))
file_input.send_keys(yet_another_upload_file)
