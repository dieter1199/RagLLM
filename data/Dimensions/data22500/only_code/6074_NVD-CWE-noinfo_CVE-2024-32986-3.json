PREF_LAUNCH_CURRENT_URL, PREF_LOCALE,
const siteName = site.config.name || site.manifest.name || site.manifest.short_name || new URL(site.manifest.scope).host
descriptionElement.innerText = site.config.description || site.manifest.description || ''
document.getElementById('web-app-name').setAttribute('placeholder', site.manifest.name || site.manifest.short_name || new URL(site.manifest.scope).host)
document.getElementById('web-app-description').setAttribute('placeholder', site.manifest.description || '')
const categoriesList = site.config.categories?.length ? site.config.categories : site.manifest.categories
for (const category of categoriesList || []) categoriesElement.tagsInstance.addItem(category, category)
const keywordsList = site.config.keywords?.length ? site.config.keywords : site.manifest.keywords
for (const keyword of keywordsList || []) keywordsElement.tagsInstance.addItem(keyword, keyword)
profilesElement.add(new Option(profiles[site.profile].name || site.profile, site.profile))
const possibleHandlers = new Set([...site.config.custom_protocol_handlers, ...site.manifest.protocol_handlers].map(handler => handler.protocol).sort())
const enabledHandlers = site.config.enabled_protocol_handlers
const manifestCategories = site.manifest.categories || []
const manifestKeywords = site.manifest.keywords || []
nameElement.innerText = profile.name || await getMessage('managePageProfileListUnnamed')
descriptionElement.innerText = profile.description || ''
const itemName = item.querySelector('.list-group-item-name')?.innerText.toLowerCase()
const searchQuery = this.value.toLowerCase()