rfs.reset()
})
g.It("throws an error when passed invalid file paths", func() {
a := &Archive{
BasePath: fs.Path(),
Files: []string{
// To use the archiver properly, this needs to be filepath.Join(BasePath, "yeet")
// However, this test tests that we actually validate that behavior.
"yeet",
},
}
g.Assert(a.Create(context.Background(), "")).IsNotNil()
err := fs.Writefile("test/file.txt", strings.NewReader("hello, world!\n"))
err = fs.Writefile("test2/file.txt", strings.NewReader("hello, world!\n"))
err = fs.Writefile("test_file.txt", strings.NewReader("hello, world!\n"))
err = fs.Writefile("test_file.txt.old", strings.NewReader("hello, world!\n"))
BasePath: fs.Path(),
filepath.Join(fs.Path(), "test"),
filepath.Join(fs.Path(), "test_file.txt"),
