{
    "cve_id": "CVE-2015-2150",
    "cve_description": "Xen 3.3.x through 4.5.x and the Linux kernel through 3.19.1 do not properly restrict access to PCI command registers, which might allow local guest OS users to cause a denial of service (non-maskable interrupt and host crash) by disabling the (1) memory or (2) I/O decoding for a PCI Express device and then accessing the device, which triggers an Unsupported Request (UR) response.",
    "cve_publish_date": "2015-03-12",
    "cwe_id": "CWE-264",
    "cwe_name": "Permissions, Privileges, and Access Controls",
    "cwe_description": "Weaknesses in this category are related to the management of permissions, privileges, and other security features that are used to perform access control.",
    "commit_message": "xen-pciback: limit guest control of command register\n\nOtherwise the guest can abuse that control to cause e.g. PCIe\nUnsupported Request responses by disabling memory and/or I/O decoding\nand subsequently causing (CPU side) accesses to the respective address\nranges, which (depending on system configuration) may be fatal to the\nhost.\n\nNote that to alter any of the bits collected together as\nPCI_COMMAND_GUEST permissive mode is now required to be enabled\nglobally or on the specific device.\n\nThis is CVE-2015-2150 / XSA-120.\n\nSigned-off-by: Jan Beulich <jbeulich@suse.com>\nReviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: David Vrabel <david.vrabel@citrix.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "conf_space_header.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "48",
    "number_of_lines_deleted_vulnerable_to_cve": "13",
    "vulnerable_lines": [
        "// Line_Reference 23: static int command_read(struct pci_dev *dev, int offset, u16 *value, void *data)",
        "// Line_Reference 25: \tint i;",
        "// Line_Reference 26: \tint ret;",
        "// Line_Reference 27: ",
        "// Line_Reference 28: \tret = xen_pcibk_read_config_word(dev, offset, value, data);",
        "// Line_Reference 29: \tif (!pci_is_enabled(dev))",
        "// Line_Reference 30: \t\treturn ret;",
        "// Line_Reference 31: ",
        "// Line_Reference 32: \tfor (i = 0; i < PCI_ROM_RESOURCE; i++) {",
        "// Line_Reference 33: \t\tif (dev->resource[i].flags & IORESOURCE_IO)",
        "// Line_Reference 34: \t\t\t*value |= PCI_COMMAND_IO;",
        "// Line_Reference 35: \t\tif (dev->resource[i].flags & IORESOURCE_MEM)",
        "// Line_Reference 36: \t\t\t*value |= PCI_COMMAND_MEMORY;"
    ]
}
