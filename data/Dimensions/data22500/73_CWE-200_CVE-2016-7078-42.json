{
    "cve_id": "CVE-2016-7078",
    "cve_description": "foreman before version 1.15.0 is vulnerable to an information leak through organizations and locations feature. When a user is assigned _no_ organizations/locations, they are able to view all resources instead of none (mirroring an administrator's view). The user's actions are still limited by their assigned permissions, e.g. to control viewing, editing and deletion.",
    "cve_publish_date": "2018-09-10",
    "cwe_id": "CWE-200",
    "cwe_name": "Exposure of Sensitive Information to an Unauthorized Actor",
    "cwe_description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
    "commit_message": "Fixes #16982 - Scope properly when no taxonomies are set\n\nThe default scope for hosts and other objects did not restrict\nproperly by taxonomies. An user without organizations or\nlocations, could do anything it's permissions allow to.\nThe list of hosts was unrestricted and showed hosts in\nany location or organization.\n\nThis is fixed to work so that:\n\nUsers without taxonomies, when set to 'any context' cannot see\nanything (at all)\n\nUsers with taxonomies, when set to 'any context' can see\neverything within all of their taxonomies context (including\nchildren taxonomies).\n\nAdmins set to 'any context' can see everything - regardless\nof whether it has a taxonomy or not.\n\nUsers or admins set to some organization/location scope\ncan only see stuff within scope.",
    "type_of_change": "Modification",
    "filename_of_changes": "organizations_controller_test.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "15",
    "number_of_lines_deleted_vulnerable_to_cve": "24",
    "vulnerable_lines": [
        "// Line_Reference 166:   test \"should clone organization with assocations\" do",
        "// Line_Reference 171:     assert_difference \"Organization.count\", 1 do",
        "// Line_Reference 172:       post :create, {:organization => {:name => \"organization_dup_name\",",
        "// Line_Reference 173:                                        :environment_ids => organization_dup.environment_ids,",
        "// Line_Reference 174:                                        :hostgroup_ids => organization_dup.hostgroup_ids,",
        "// Line_Reference 175:                                        :subnet_ids => organization_dup.hostgroup_ids,",
        "// Line_Reference 176:                                        :domain_ids => organization_dup.domain_ids,",
        "// Line_Reference 177:                                        :medium_ids => organization_dup.medium_ids,",
        "// Line_Reference 178:                                        :user_ids => organization_dup.user_ids,",
        "// Line_Reference 179:                                        :smart_proxy_ids => organization_dup.smart_proxy_ids,",
        "// Line_Reference 180:                                        :provisioning_template_ids => organization_dup.provisioning_template_ids,",
        "// Line_Reference 181:                                        :compute_resource_ids => organization_dup.compute_resource_ids,",
        "// Line_Reference 182:                                        :location_ids => organization_dup.location_ids",
        "// Line_Reference 183:       }",
        "// Line_Reference 190:     assert_equal new_organization.environment_ids.sort, organization.environment_ids.sort",
        "// Line_Reference 191:     assert_equal new_organization.hostgroup_ids.sort, organization.hostgroup_ids.sort",
        "// Line_Reference 192:     assert_equal new_organization.environment_ids.sort, organization.environment_ids.sort",
        "// Line_Reference 193:     assert_equal new_organization.domain_ids.sort, organization.domain_ids.sort",
        "// Line_Reference 194:     assert_equal new_organization.medium_ids.sort, organization.medium_ids.sort",
        "// Line_Reference 195:     assert_equal new_organization.user_ids.sort, organization.user_ids.sort",
        "// Line_Reference 196:     assert_equal new_organization.smart_proxy_ids.sort, organization.smart_proxy_ids.sort",
        "// Line_Reference 197:     assert_equal new_organization.provisioning_template_ids.sort, organization.provisioning_template_ids.sort",
        "// Line_Reference 198:     assert_equal new_organization.compute_resource_ids.sort, organization.compute_resource_ids.sort",
        "// Line_Reference 199:     assert_equal new_organization.location_ids.sort, organization.location_ids.sort"
    ]
}
