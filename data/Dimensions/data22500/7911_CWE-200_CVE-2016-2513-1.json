{
    "cve_id": "CVE-2016-2513",
    "cve_description": "The password hasher in contrib/auth/hashers.py in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to enumerate users via a timing attack involving login requests.",
    "cve_publish_date": "2016-04-08",
    "cwe_id": "CWE-200",
    "cwe_name": "Exposure of Sensitive Information to an Unauthorized Actor",
    "cwe_description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
    "commit_message": "Fixed CVE-2016-2513 -- Fixed user enumeration timing attack during login.\n\nThis is a security fix.",
    "type_of_change": "Modification",
    "filename_of_changes": "hashers.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "57",
    "number_of_lines_deleted_vulnerable_to_cve": "20",
    "vulnerable_lines": [
        "// Line_Reference 49:     must_update = hasher.algorithm != preferred.algorithm",
        "// Line_Reference 50:     if not must_update:",
        "// Line_Reference 51:         must_update = preferred.must_update(encoded)",
        "// Line_Reference 308:         bcrypt = self._load_library()",
        "// Line_Reference 309: ",
        "// Line_Reference 310:         # Hash the password prior to using bcrypt to prevent password",
        "// Line_Reference 311:         # truncation as described in #20138.",
        "// Line_Reference 312:         if self.digest is not None:",
        "// Line_Reference 313:             # Use binascii.hexlify() because a hex encoded bytestring is",
        "// Line_Reference 314:             # Unicode on Python 3.",
        "// Line_Reference 315:             password = binascii.hexlify(self.digest(force_bytes(password)).digest())",
        "// Line_Reference 316:         else:",
        "// Line_Reference 317:             password = force_bytes(password)",
        "// Line_Reference 318: ",
        "// Line_Reference 319:         # Ensure that our data is a bytestring",
        "// Line_Reference 320:         data = force_bytes(data)",
        "// Line_Reference 321:         # force_bytes() necessary for py-bcrypt compatibility",
        "// Line_Reference 322:         hashpw = force_bytes(bcrypt.hashpw(password, data))",
        "// Line_Reference 323: ",
        "// Line_Reference 324:         return constant_time_compare(data, hashpw)"
    ]
}
