{
    "cve_id": "CVE-2020-11010",
    "cve_description": "In Tortoise ORM before versions 0.15.23 and 0.16.6, various forms of SQL injection have been found for MySQL and when filtering or doing mass-updates on char/text fields. SQLite & PostgreSQL are only affected when filtering with contains, starts_with, or ends_with filters (and their case-insensitive counterparts).",
    "cve_publish_date": "2020-04-20",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "Fixed various SQL generation issues",
    "type_of_change": "Modification",
    "filename_of_changes": "filters.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "83",
    "number_of_lines_deleted_vulnerable_to_cve": "8",
    "vulnerable_lines": [
        "// Line_Reference 7: from pypika.terms import BasicCriterion, Criterion, Equality, Term, ValueWrapper",
        "// Line_Reference 82:     return field.like(f\"%{value}%\")",
        "// Line_Reference 86:     return field.like(f\"{value}%\")",
        "// Line_Reference 90:     return field.like(f\"%{value}\")",
        "// Line_Reference 94:     return Upper(field).eq(Upper(f\"{value}\"))",
        "// Line_Reference 98:     return Upper(field).like(Upper(f\"%{value}%\"))",
        "// Line_Reference 102:     return Upper(field).like(Upper(f\"{value}%\"))",
        "// Line_Reference 106:     return Upper(field).like(Upper(f\"%{value}\"))"
    ]
}
