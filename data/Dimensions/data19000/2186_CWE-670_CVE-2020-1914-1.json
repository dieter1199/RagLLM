{
    "cve_id": "CVE-2020-1914",
    "cve_description": "A logic vulnerability when handling the SaveGeneratorLong instruction in Facebook Hermes prior to commit b2021df620824627f5a8c96615edbd1eb7fdddfc allows attackers to potentially read out of bounds or theoretically execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.",
    "cve_publish_date": "2020-10-08",
    "cwe_id": "CWE-670",
    "cwe_name": "Always-Incorrect Control Flow Implementation",
    "cwe_description": "The code contains a control flow path that does not reflect the algorithm that the path is intended to implement, leading to incorrect behavior any time this path is navigated.",
    "commit_message": "Fix CVE-2020-1914 by using NEXTINST for SaveGeneratorLong\n\nSummary:\nIf `SaveGeneratorLong` was emitted, it would accidentally jump to the\nwrong next instruction, based on how long SaveGenerator was.\n\nMake a callout function to handle the common case, and handle the dispatch\nwithin each case of the interpreter loop.\n\nFixes CVE-2020-1914\n\nReviewed By: neildhar\n\nDifferential Revision: D24024242\n\nfbshipit-source-id: 3bcb88daa740f0d50e91771a49eb212551ce8bd8",
    "type_of_change": "Modification",
    "filename_of_changes": "Interpreter.cpp",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "18",
    "number_of_lines_deleted_vulnerable_to_cve": "15",
    "vulnerable_lines": [
        "// Line_Reference 1801:         nextIP = IPADD(ip->iSaveGenerator.op1);",
        "// Line_Reference 1802:         goto doSaveGen;",
        "// Line_Reference 1805:         nextIP = IPADD(ip->iSaveGeneratorLong.op1);",
        "// Line_Reference 1806:         goto doSaveGen;",
        "// Line_Reference 1809:     doSaveGen : {",
        "// Line_Reference 1810:       auto *innerFn = vmcast<GeneratorInnerFunction>(",
        "// Line_Reference 1811:           runtime->getCurrentFrame().getCalleeClosure());",
        "// Line_Reference 1812: ",
        "// Line_Reference 1813:       innerFn->saveStack(runtime);",
        "// Line_Reference 1814:       innerFn->setNextIP(nextIP);",
        "// Line_Reference 1815:       innerFn->setState(GeneratorInnerFunction::State::SuspendedYield);",
        "// Line_Reference 1816:       ip = NEXTINST(SaveGenerator);",
        "// Line_Reference 1817:       DISPATCH;",
        "// Line_Reference 1818:     }",
        "// Line_Reference 1819: "
    ]
}
