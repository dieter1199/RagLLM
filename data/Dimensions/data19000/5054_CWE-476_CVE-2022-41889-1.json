{
    "cve_id": "CVE-2022-41889",
    "cve_description": "TensorFlow is an open source platform for machine learning. If a list of quantized tensors is assigned to an attribute, the pywrap code fails to parse the tensor and returns a `nullptr`, which is not caught. An example can be seen in `tf.compat.v1.extract_volume_patches` by passing in quantized tensors as input `ksizes`. We have patched the issue in GitHub commit e9e95553e5411834d215e6770c81a83a3d0866ce. The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.",
    "cve_publish_date": "2022-11-18",
    "cwe_id": "CWE-476",
    "cwe_name": "NULL Pointer Dereference",
    "cwe_description": "The product dereferences a pointer that it expects to be valid but is NULL.",
    "commit_message": "Fix pywrap attribute read security vulnerability.\n\nIf a list of quantized tensors is assigned to an attribute, the pywrap code was failing to\nparse the tensor and returning a `nullptr`, which wasn't caught.  Here we check the return\nvalue and set an appropriate error status.\n\nPiperOrigin-RevId: 476981029",
    "type_of_change": "Modification",
    "filename_of_changes": "pywrap_tfe_src.cc",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "14",
    "number_of_lines_deleted_vulnerable_to_cve": "5",
    "vulnerable_lines": [
        "// Line_Reference 400: #define PARSE_LIST(c_type, parse_fn)                                      \\",
        "// Line_Reference 401:   std::unique_ptr<c_type[]> values(new c_type[num_values]);               \\",
        "// Line_Reference 402:   for (int i = 0; i < num_values; ++i) {                                  \\",
        "// Line_Reference 403:     tensorflow::Safe_PyObjectPtr py_value(PySequence_ITEM(py_list, i));   \\",
        "// Line_Reference 404:     if (!parse_fn(key, py_value.get(), status, &values[i])) return false; \\"
    ]
}
