{
    "cve_id": "CVE-2022-31025",
    "cve_description": "Discourse is an open source platform for community discussion. Prior to version 2.8.4 on the `stable` branch and 2.9.0beta5 on the `beta` and `tests-passed` branches, inviting users on sites that use single sign-on could bypass the `must_approve_users` check and invites by staff are always approved automatically. The issue is patched in Discourse version 2.8.4 on the `stable` branch and version `2.9.0.beta5` on the `beta` and `tests-passed` branches. As a workaround, disable invites or increase `min_trust_level_to_allow_invite` to reduce the attack surface to more trusted users.",
    "cve_publish_date": "2022-06-07",
    "cwe_id": "NVD-CWE-Other",
    "cwe_name": "Other",
    "cwe_description": "NVD is only using a subset of CWE for mapping instead of the entire CWE, and the weakness type is not covered by that subset.",
    "commit_message": "SECURITY: Remove auto approval when redeeming an invite (#16974)\n\nThis security fix affects sites which have `SiteSetting.must_approve_users`\r\nenabled. There are intentional and unintentional cases where invited\r\nusers can be auto approved and are deemed to have skipped the staff approval process.\r\nInstead of trying to reason about when auto-approval should happen, we have decided that\r\nenabling the `must_approve_users` setting going forward will just mean that all new users\r\nmust be explicitly approved by a staff user in the review queue. The only case where users are auto\r\napproved is when the `auto_approve_email_domains` site setting is used.\r\n\r\nCo-authored-by: Alan Guo Xiang Tan <gxtan1990@gmail.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "invite_redeemer.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "2",
    "number_of_lines_deleted_vulnerable_to_cve": "16",
    "vulnerable_lines": [
        "// Line_Reference 43:     if !SiteSetting.must_approve_users? ||",
        "// Line_Reference 44:         (SiteSetting.must_approve_users? && invite.invited_by.staff?) ||",
        "// Line_Reference 45:         EmailValidator.can_auto_approve_user?(user.email)",
        "// Line_Reference 46:       ReviewableUser.set_approved_fields!(user, invite.invited_by)",
        "// Line_Reference 98:     approve_account_if_needed",
        "// Line_Reference 173:   def approve_account_if_needed",
        "// Line_Reference 174:     if invited_user.present? && reviewable_user = ReviewableUser.find_by(target: invited_user, status: Reviewable.statuses[:pending])",
        "// Line_Reference 175:       reviewable_user.perform(",
        "// Line_Reference 176:         invite.invited_by,",
        "// Line_Reference 177:         :approve_user,",
        "// Line_Reference 178:         send_email: false,",
        "// Line_Reference 179:         approved_by_invite: true",
        "// Line_Reference 180:       )",
        "// Line_Reference 181:     end",
        "// Line_Reference 182:   end",
        "// Line_Reference 183: "
    ]
}
