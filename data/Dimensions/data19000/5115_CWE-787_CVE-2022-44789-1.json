{
    "cve_id": "CVE-2022-44789",
    "cve_description": "A logical issue in O_getOwnPropertyDescriptor() in Artifex MuJS 1.0.0 through 1.3.x before 1.3.2 allows an attacker to achieve Remote Code Execution through memory corruption, via the loading of a crafted JavaScript file.",
    "cve_publish_date": "2022-11-23",
    "cwe_id": "CWE-787",
    "cwe_name": "Out-of-bounds Write",
    "cwe_description": "The product writes data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "Bug 706057: Fix use-after-free in getOwnPropertyDescriptor.\n\ngetOwnPropertyDescriptor should create the descriptor object by\nusing [[DefineOwnProperty]], and not by looking through the prototype\nchain where it may invoke getters and setters on the Object.prototype.\n\nIf there exists an Object.prototype.get property with a setter, that method is\ninvoked when it shouldn't. A malicious getter here can delete the property\ncurrently being processed in getOwnPropertyDescriptor, and we'll end up\nwith a use-after-free bug.\n\nAvoid this problem by following the spec and use js_defproperty rather than\njs_setproperty to define own properties in getOwnPropertyDescriptor and\nrelated functions.",
    "type_of_change": "Modification",
    "filename_of_changes": "jsobject.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "7",
    "number_of_lines_deleted_vulnerable_to_cve": "7",
    "vulnerable_lines": [
        "// Line_Reference 137: \t\t\tjs_setproperty(J, -2, \"value\");",
        "// Line_Reference 139: \t\t\tjs_setproperty(J, -2, \"writable\");",
        "// Line_Reference 145: \t\t\tjs_setproperty(J, -2, \"get\");",
        "// Line_Reference 150: \t\t\tjs_setproperty(J, -2, \"set\");",
        "// Line_Reference 153: \t\tjs_setproperty(J, -2, \"enumerable\");",
        "// Line_Reference 155: \t\tjs_setproperty(J, -2, \"configurable\");",
        "// Line_Reference 251: \t\tjs_setproperty(J, -3, name);"
    ]
}
