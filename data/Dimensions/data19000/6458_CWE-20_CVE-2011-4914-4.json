{
    "cve_id": "CVE-2011-4914",
    "cve_description": "The ROSE protocol implementation in the Linux kernel before 2.6.39 does not verify that certain data-length values are consistent with the amount of data sent, which might allow remote attackers to obtain sensitive information from kernel memory or cause a denial of service (out-of-bounds read) via crafted data to a ROSE socket.",
    "cve_publish_date": "2012-06-21",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "rose: Add length checks to CALL_REQUEST parsing\n\nDefine some constant offsets for CALL_REQUEST based on the description\nat <http://www.techfest.com/networking/wan/x25plp.htm> and the\ndefinition of ROSE as using 10-digit (5-byte) addresses.  Use them\nconsistently.  Validate all implicit and explicit facilities lengths.\nValidate the address length byte rather than either trusting or\nassuming its value.\n\nSigned-off-by: Ben Hutchings <ben@decadent.org.uk>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "type_of_change": "Modification",
    "filename_of_changes": "rose_route.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "13",
    "number_of_lines_deleted_vulnerable_to_cve": "7",
    "vulnerable_lines": [
        "// Line_Reference 864: \tint len, res = 0;",
        "// Line_Reference 874: \tsrc_addr  = (rose_address *)(skb->data + 9);",
        "// Line_Reference 875: \tdest_addr = (rose_address *)(skb->data + 4);",
        "// Line_Reference 1013: \tlen  = (((skb->data[3] >> 4) & 0x0F) + 1) >> 1;",
        "// Line_Reference 1014: \tlen += (((skb->data[3] >> 0) & 0x0F) + 1) >> 1;",
        "// Line_Reference 1015: ",
        "// Line_Reference 1018: \tif (!rose_parse_facilities(skb->data + len + 4, &facilities)) {"
    ]
}
