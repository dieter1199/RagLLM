{
    "cve_id": "CVE-2020-7769",
    "cve_description": "This affects the package nodemailer before 6.4.16. Use of crafted recipient email addresses may result in arbitrary command flag injection in sendmail transport for sending mails.",
    "cve_publish_date": "2020-11-12",
    "cwe_id": "CWE-88",
    "cwe_name": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
    "cwe_description": "The product constructs a string for a command to be executed by a separate component\nin another control sphere, but it does not properly delimit the\nintended arguments, options, or switches within that command string.",
    "commit_message": "v6.4.16",
    "type_of_change": "Modification",
    "filename_of_changes": "fetch-test.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "80",
    "number_of_lines_deleted_vulnerable_to_cve": "80",
    "vulnerable_lines": [
        "// Line_Reference 70: describe('Fetch Tests', function() {",
        "// Line_Reference 73:     beforeEach(function(done) {",
        "// Line_Reference 74:         httpServer = http.createServer(function(req, res) {",
        "// Line_Reference 167:                     req.on('readable', function() {",
        "// Line_Reference 173:                     req.on('end', function() {",
        "// Line_Reference 190:         httpsServer = https.createServer(httpsOptions, function(req, res) {",
        "// Line_Reference 197:         httpServer.listen(HTTP_PORT, function() {",
        "// Line_Reference 202:     afterEach(function(done) {",
        "// Line_Reference 203:         httpServer.close(function() {",
        "// Line_Reference 208:     it('should fetch HTTP data', function(done) {",
        "// Line_Reference 211:         req.on('data', function(chunk) {",
        "// Line_Reference 214:         req.on('end', function() {",
        "// Line_Reference 220:     it('should fetch HTTPS data', function(done) {",
        "// Line_Reference 223:         req.on('data', function(chunk) {",
        "// Line_Reference 226:         req.on('end', function() {",
        "// Line_Reference 232:     it('should fetch HTTP data with redirects', function(done) {",
        "// Line_Reference 235:         req.on('data', function(chunk) {",
        "// Line_Reference 238:         req.on('end', function() {",
        "// Line_Reference 244:     it('should return error for too many redirects', function(done) {",
        "// Line_Reference 247:         req.on('data', function(chunk) {",
        "// Line_Reference 250:         req.on('error', function(err) {",
        "// Line_Reference 254:         req.on('end', function() {});",
        "// Line_Reference 257:     it('should fetch HTTP data with custom redirect limit', function(done) {",
        "// Line_Reference 262:         req.on('data', function(chunk) {",
        "// Line_Reference 265:         req.on('end', function() {",
        "// Line_Reference 271:     it('should return error for custom redirect limit', function(done) {",
        "// Line_Reference 276:         req.on('data', function(chunk) {",
        "// Line_Reference 279:         req.on('error', function(err) {",
        "// Line_Reference 283:         req.on('end', function() {});",
        "// Line_Reference 286:     it('should return disable redirects', function(done) {",
        "// Line_Reference 291:         req.on('data', function(chunk) {",
        "// Line_Reference 294:         req.on('error', function(err) {",
        "// Line_Reference 298:         req.on('end', function() {});",
        "// Line_Reference 301:     it('should unzip compressed HTTP data', function(done) {",
        "// Line_Reference 304:         req.on('data', function(chunk) {",
        "// Line_Reference 307:         req.on('end', function() {",
        "// Line_Reference 313:     it('should return error for unresolved host', function(done) {",
        "// Line_Reference 316:         req.on('data', function(chunk) {",
        "// Line_Reference 319:         req.on('error', function(err) {",
        "// Line_Reference 323:         req.on('end', function() {});",
        "// Line_Reference 326:     it('should return error for invalid status', function(done) {",
        "// Line_Reference 329:         req.on('data', function(chunk) {",
        "// Line_Reference 332:         req.on('error', function(err) {",
        "// Line_Reference 336:         req.on('end', function() {});",
        "// Line_Reference 339:     it('should allow invalid status', function(done) {",
        "// Line_Reference 344:         req.on('data', function(chunk) {",
        "// Line_Reference 347:         req.on('error', function(err) {",
        "// Line_Reference 350:         req.on('end', function() {",
        "// Line_Reference 357:     it('should return error for invalid url', function(done) {",
        "// Line_Reference 360:         req.on('data', function(chunk) {",
        "// Line_Reference 363:         req.on('error', function(err) {",
        "// Line_Reference 367:         req.on('end', function() {});",
        "// Line_Reference 370:     it('should return timeout error', function(done) {",
        "// Line_Reference 375:         req.on('data', function(chunk) {",
        "// Line_Reference 378:         req.on('error', function(err) {",
        "// Line_Reference 382:         req.on('end', function() {});",
        "// Line_Reference 385:     it('should handle basic HTTP auth', function(done) {",
        "// Line_Reference 388:         req.on('data', function(chunk) {",
        "// Line_Reference 391:         req.on('end', function() {",
        "// Line_Reference 399:         it('should return error for invalid protocol', function(done) {",
        "// Line_Reference 402:             req.on('data', function(chunk) {",
        "// Line_Reference 405:             req.on('error', function(err) {",
        "// Line_Reference 409:             req.on('end', function() {});",
        "// Line_Reference 413:     it('should set cookie value', function(done) {",
        "// Line_Reference 418:         req.on('data', function(chunk) {",
        "// Line_Reference 421:         req.on('end', function() {",
        "// Line_Reference 427:     it('should set user agent', function(done) {",
        "// Line_Reference 432:         req.on('data', function(chunk) {",
        "// Line_Reference 435:         req.on('end', function() {",
        "// Line_Reference 441:     it('should post data', function(done) {",
        "// Line_Reference 450:         req.on('data', function(chunk) {",
        "// Line_Reference 453:         req.on('end', function() {",
        "// Line_Reference 459:     it('should post stream data', function(done) {",
        "// Line_Reference 468:         req.on('data', function(chunk) {",
        "// Line_Reference 471:         req.on('end', function() {",
        "// Line_Reference 477:         let writeNext = function() {",
        "// Line_Reference 489:     it('should return error for invalid cert', function(done) {",
        "// Line_Reference 496:         req.on('data', function(chunk) {",
        "// Line_Reference 499:         req.on('error', function(err) {",
        "// Line_Reference 503:         req.on('end', function() {});"
    ]
}
