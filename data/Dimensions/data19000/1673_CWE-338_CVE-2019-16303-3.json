{
    "cve_id": "CVE-2019-16303",
    "cve_description": "A class generated by the Generator in JHipster before 6.3.0 and JHipster Kotlin through 1.1.0 produces code that uses an insecure source of randomness (apache.commons.lang3 RandomStringUtils). This allows an attacker (if able to obtain their own password reset URL) to compute the value for all other password resets for other accounts, thus allowing privilege escalation or account takeover.",
    "cve_publish_date": "2019-09-14",
    "cwe_id": "CWE-338",
    "cwe_name": "Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)",
    "cwe_description": "The product uses a Pseudo-Random Number Generator (PRNG) in a security context, but the PRNG's algorithm is not cryptographically strong.",
    "commit_message": "use new SecureRandom which uses non blocking /dev/urandom",
    "type_of_change": "Modification",
    "filename_of_changes": "UserServiceIT.java.ejs",
    "code_language": "TypeScript",
    "number_of_lines_added_for_mitigation": "2",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 298:         String resetKey = RandomUtil.getInstance().generateResetKey();",
        "// Line_Reference 332:         String resetKey = RandomUtil.getInstance().generateResetKey();"
    ]
}
