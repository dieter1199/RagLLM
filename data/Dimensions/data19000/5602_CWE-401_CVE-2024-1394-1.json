{
    "cve_id": "CVE-2024-1394",
    "cve_description": "A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs?. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey? and ctx?. That function uses named return parameters to free pkey? and ctx? if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the \"return nil, nil, fail(...)\" pattern, meaning that pkey? and ctx? will be nil inside the deferred function that should free them.",
    "cve_publish_date": "2024-03-21",
    "cwe_id": "CWE-401",
    "cwe_name": "Missing Release of Memory after Effective Lifetime",
    "cwe_description": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.",
    "commit_message": "Fix memory leak in setupEVP",
    "type_of_change": "Modification",
    "filename_of_changes": "evpkey.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "9",
    "number_of_lines_deleted_vulnerable_to_cve": "9",
    "vulnerable_lines": [
        "// Line_Reference 104: \tinit initFunc) (ctx C.GO_EVP_PKEY_CTX_PTR, err error) {",
        "// Line_Reference 113: ",
        "// Line_Reference 114: \twithKey(func(pkey C.GO_EVP_PKEY_PTR) C.int {",
        "// Line_Reference 115: \t\tctx = C.go_openssl_EVP_PKEY_CTX_new(pkey, nil)",
        "// Line_Reference 116: \t\treturn 1",
        "// Line_Reference 117: \t})",
        "// Line_Reference 118: \tif ctx == nil {",
        "// Line_Reference 119: \t\treturn nil, newOpenSSLError(\"EVP_PKEY_CTX_new failed\")",
        "// Line_Reference 120: \t}"
    ]
}
