{
    "cve_id": "CVE-2022-24798",
    "cve_description": "Internet Routing Registry daemon version 4 is an IRR database server, processing IRR objects in the RPSL format. IRRd did not always filter password hashes in query responses relating to `mntner` objects and database exports. This may have allowed adversaries to retrieve some of these hashes, perform a brute-force search for the clear-text passphrase, and use these to make unauthorised changes to affected IRR objects. This issue only affected instances that process password hashes, which means it is limited to IRRd instances that serve authoritative databases. IRRd instances operating solely as mirrors of other IRR databases are not affected. This has been fixed in IRRd 4.2.3 and the main branch. Versions in the 4.1.x series never were affected. Users of the 4.2.x series are strongly recommended to upgrade. There are no known workarounds for this issue.",
    "cve_publish_date": "2022-03-31",
    "cwe_id": "CWE-212",
    "cwe_name": "Improper Removal of Sensitive Information Before Storage or Transfer",
    "cwe_description": "The product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.",
    "commit_message": "Correct missing password hash removal\n\nAuth has removal was broken in a number of cases for all 4.2 versions:\n- All queries that returned the object text for a mntner when\n  all hash names (MD5-PW etc.) in the text were lower or mixed case\n- Queries for the auth attribute in GraphQL queries\n- Queries for the objectText for journal entries in GraphQL queries\n\nFurther details in 4.2.3 release notes.\n\nNote that this commit only has the fix and tests or coverage may\nfail without the subsequent update to the tests.",
    "type_of_change": "Modification",
    "filename_of_changes": "resolvers.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "3",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 224:                 value = remove_auth_hashes(value)"
    ]
}
