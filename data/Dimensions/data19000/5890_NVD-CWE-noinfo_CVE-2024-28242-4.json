{
    "cve_id": "CVE-2024-28242",
    "cve_description": "Discourse is an open source platform for community discussion. In affected versions an attacker can learn that secret categories exist when they have backgrounds set. The issue is patched in the latest stable, beta and tests-passed version of Discourse. Users are advised to upgrade. Users unable to upgrade should temporarily remove category backgrounds.",
    "cve_publish_date": "2024-03-15",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "SECURITY: Generate more category CSS on client\n\nThis commit moves the generation of category background CSS from the\nserver side to the client side. This simplifies the server side code\nbecause it does not need to check which categories are visible to the\ncurrent user.",
    "type_of_change": "Modification",
    "filename_of_changes": "importer_spec.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "0",
    "number_of_lines_deleted_vulnerable_to_cve": "145",
    "vulnerable_lines": [
        "// Line_Reference 10:   describe \"#category_backgrounds\" do",
        "// Line_Reference 11:     it \"uses the correct background image based in the color scheme\" do",
        "// Line_Reference 12:       background = Fabricate(:upload)",
        "// Line_Reference 13:       background_dark = Fabricate(:upload)",
        "// Line_Reference 14: ",
        "// Line_Reference 15:       parent_category = Fabricate(:category)",
        "// Line_Reference 16:       category =",
        "// Line_Reference 17:         Fabricate(",
        "// Line_Reference 18:           :category,",
        "// Line_Reference 19:           parent_category_id: parent_category.id,",
        "// Line_Reference 20:           uploaded_background: background,",
        "// Line_Reference 21:           uploaded_background_dark: background_dark,",
        "// Line_Reference 22:         )",
        "// Line_Reference 23: ",
        "// Line_Reference 24:       # light color schemes",
        "// Line_Reference 25:       [\"Neutral\", \"Shades of Blue\", \"WCAG\", \"Summer\", \"Solarized Light\"].each do |scheme_name|",
        "// Line_Reference 26:         scheme = ColorScheme.create_from_base(name: \"Light Test\", base_scheme_id: scheme_name)",
        "// Line_Reference 27: ",
        "// Line_Reference 28:         compiled_css = compile_css(\"color_definitions\", { color_scheme_id: scheme.id })",
        "// Line_Reference 29: ",
        "// Line_Reference 30:         expect(compiled_css).to include(",
        "// Line_Reference 31:           \"body.category-#{parent_category.slug}-#{category.slug}{background-image:url(#{background.url})}\",",
        "// Line_Reference 32:         )",
        "// Line_Reference 33:         expect(compiled_css).not_to include(background_dark.url)",
        "// Line_Reference 34:       end",
        "// Line_Reference 35: ",
        "// Line_Reference 36:       # dark color schemes",
        "// Line_Reference 37:       [",
        "// Line_Reference 38:         \"Dark\",",
        "// Line_Reference 39:         \"Grey Amber\",",
        "// Line_Reference 40:         \"Latte\",",
        "// Line_Reference 41:         \"Dark Rose\",",
        "// Line_Reference 42:         \"WCAG Dark\",",
        "// Line_Reference 43:         \"Dracula\",",
        "// Line_Reference 44:         \"Solarized Dark\",",
        "// Line_Reference 45:       ].each do |scheme_name|",
        "// Line_Reference 46:         scheme = ColorScheme.create_from_base(name: \"Light Test\", base_scheme_id: scheme_name)",
        "// Line_Reference 47: ",
        "// Line_Reference 48:         compiled_css = compile_css(\"color_definitions\", { color_scheme_id: scheme.id })",
        "// Line_Reference 49: ",
        "// Line_Reference 50:         expect(compiled_css).not_to include(background.url)",
        "// Line_Reference 51:         expect(compiled_css).to include(",
        "// Line_Reference 52:           \"body.category-#{parent_category.slug}-#{category.slug}{background-image:url(#{background_dark.url})}\",",
        "// Line_Reference 53:         )",
        "// Line_Reference 54:       end",
        "// Line_Reference 55:     end",
        "// Line_Reference 56: ",
        "// Line_Reference 57:     it \"applies CDN to background category images\" do",
        "// Line_Reference 58:       expect(compile_css(\"color_definitions\")).to_not include(\"body.category-\")",
        "// Line_Reference 59: ",
        "// Line_Reference 60:       background = Fabricate(:upload)",
        "// Line_Reference 61:       background_dark = Fabricate(:upload)",
        "// Line_Reference 62: ",
        "// Line_Reference 63:       parent_category = Fabricate(:category)",
        "// Line_Reference 64:       category =",
        "// Line_Reference 65:         Fabricate(",
        "// Line_Reference 66:           :category,",
        "// Line_Reference 67:           parent_category_id: parent_category.id,",
        "// Line_Reference 68:           uploaded_background: background,",
        "// Line_Reference 69:           uploaded_background_dark: background_dark,",
        "// Line_Reference 70:         )",
        "// Line_Reference 71: ",
        "// Line_Reference 72:       compiled_css = compile_css(\"color_definitions\")",
        "// Line_Reference 73:       expect(compiled_css).to include(",
        "// Line_Reference 74:         \"body.category-#{parent_category.slug}-#{category.slug}{background-image:url(#{background.url})}\",",
        "// Line_Reference 75:       )",
        "// Line_Reference 76: ",
        "// Line_Reference 77:       GlobalSetting.stubs(:cdn_url).returns(\"//awesome.cdn\")",
        "// Line_Reference 78:       compiled_css = compile_css(\"color_definitions\")",
        "// Line_Reference 79:       expect(compiled_css).to include(",
        "// Line_Reference 80:         \"body.category-#{parent_category.slug}-#{category.slug}{background-image:url(//awesome.cdn#{background.url})}\",",
        "// Line_Reference 81:       )",
        "// Line_Reference 82:     end",
        "// Line_Reference 83: ",
        "// Line_Reference 84:     it \"applies CDN to dark background category images\" do",
        "// Line_Reference 85:       scheme = ColorScheme.create_from_base(name: \"Dark Test\", base_scheme_id: \"Dark\")",
        "// Line_Reference 86:       expect(compile_css(\"color_definitions\", { color_scheme_id: scheme.id })).to_not include(",
        "// Line_Reference 87:         \"body.category-\",",
        "// Line_Reference 88:       )",
        "// Line_Reference 89: ",
        "// Line_Reference 90:       background = Fabricate(:upload)",
        "// Line_Reference 91:       background_dark = Fabricate(:upload)",
        "// Line_Reference 92: ",
        "// Line_Reference 93:       parent_category = Fabricate(:category)",
        "// Line_Reference 94:       category =",
        "// Line_Reference 95:         Fabricate(",
        "// Line_Reference 96:           :category,",
        "// Line_Reference 97:           parent_category_id: parent_category.id,",
        "// Line_Reference 98:           uploaded_background: background,",
        "// Line_Reference 99:           uploaded_background_dark: background_dark,",
        "// Line_Reference 100:         )",
        "// Line_Reference 101: ",
        "// Line_Reference 102:       compiled_css = compile_css(\"color_definitions\", { color_scheme_id: scheme.id })",
        "// Line_Reference 103:       expect(compiled_css).to include(",
        "// Line_Reference 104:         \"body.category-#{parent_category.slug}-#{category.slug}{background-image:url(#{background_dark.url})}\",",
        "// Line_Reference 105:       )",
        "// Line_Reference 106: ",
        "// Line_Reference 107:       GlobalSetting.stubs(:cdn_url).returns(\"//awesome.cdn\")",
        "// Line_Reference 108:       compiled_css = compile_css(\"color_definitions\", { color_scheme_id: scheme.id })",
        "// Line_Reference 109:       expect(compiled_css).to include(",
        "// Line_Reference 110:         \"body.category-#{parent_category.slug}-#{category.slug}{background-image:url(//awesome.cdn#{background_dark.url})}\",",
        "// Line_Reference 111:       )",
        "// Line_Reference 112:     end",
        "// Line_Reference 113: ",
        "// Line_Reference 114:     it \"applies S3 CDN to background category images\" do",
        "// Line_Reference 115:       setup_s3",
        "// Line_Reference 116:       SiteSetting.s3_use_iam_profile = true",
        "// Line_Reference 117:       SiteSetting.s3_upload_bucket = \"test\"",
        "// Line_Reference 118:       SiteSetting.s3_region = \"ap-southeast-2\"",
        "// Line_Reference 119:       SiteSetting.s3_cdn_url = \"https://s3.cdn\"",
        "// Line_Reference 120: ",
        "// Line_Reference 121:       background = Fabricate(:upload_s3)",
        "// Line_Reference 122:       category = Fabricate(:category, uploaded_background: background)",
        "// Line_Reference 123: ",
        "// Line_Reference 124:       compiled_css = compile_css(\"color_definitions\")",
        "// Line_Reference 125:       expect(compiled_css).to include(",
        "// Line_Reference 126:         \"body.category-#{category.slug}{background-image:url(https://s3.cdn/original\",",
        "// Line_Reference 127:       )",
        "// Line_Reference 128:     end",
        "// Line_Reference 129: ",
        "// Line_Reference 130:     it \"applies S3 CDN to dark background category images\" do",
        "// Line_Reference 131:       scheme = ColorScheme.create_from_base(name: \"Dark Test\", base_scheme_id: \"WCAG Dark\")",
        "// Line_Reference 132: ",
        "// Line_Reference 133:       setup_s3",
        "// Line_Reference 134:       SiteSetting.s3_use_iam_profile = true",
        "// Line_Reference 135:       SiteSetting.s3_upload_bucket = \"test\"",
        "// Line_Reference 136:       SiteSetting.s3_region = \"ap-southeast-2\"",
        "// Line_Reference 137:       SiteSetting.s3_cdn_url = \"https://s3.cdn\"",
        "// Line_Reference 138: ",
        "// Line_Reference 139:       background = Fabricate(:upload_s3)",
        "// Line_Reference 140:       background_dark = Fabricate(:upload_s3)",
        "// Line_Reference 141:       category =",
        "// Line_Reference 142:         Fabricate(",
        "// Line_Reference 143:           :category,",
        "// Line_Reference 144:           uploaded_background: background,",
        "// Line_Reference 145:           uploaded_background_dark: background_dark,",
        "// Line_Reference 146:         )",
        "// Line_Reference 147: ",
        "// Line_Reference 148:       compiled_css = compile_css(\"color_definitions\", { color_scheme_id: scheme.id })",
        "// Line_Reference 149:       expect(compiled_css).to include(",
        "// Line_Reference 150:         \"body.category-#{category.slug}{background-image:url(https://s3.cdn/original\",",
        "// Line_Reference 151:       )",
        "// Line_Reference 152:     end",
        "// Line_Reference 153:   end",
        "// Line_Reference 154: "
    ]
}
