{
    "cve_id": "CVE-2021-47208",
    "cve_description": "The Mojolicious module before 9.11 for Perl has a bug in format detection that can potentially be exploited for denial of service.",
    "cve_publish_date": "2024-04-08",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Flip format detection to fix a security issue (closes #1736)",
    "type_of_change": "Modification",
    "filename_of_changes": "Routing.pod",
    "code_language": "Perl",
    "number_of_lines_added_for_mitigation": "10",
    "number_of_lines_deleted_vulnerable_to_cve": "27",
    "vulnerable_lines": [
        "// Line_Reference 555: File extensions like C<.html> and C<.txt> at the end of a route are automatically detected and stored in the stash",
        "// Line_Reference 556: value C<format>.",
        "// Line_Reference 557: ",
        "// Line_Reference 558:   # /foo      -> {controller => 'foo', action => 'bar'}",
        "// Line_Reference 559:   # /foo.html -> {controller => 'foo', action => 'bar', format => 'html'}",
        "// Line_Reference 560:   # /foo.txt  -> {controller => 'foo', action => 'bar', format => 'txt'}",
        "// Line_Reference 561:   $r->get('/foo')->to('foo#bar');",
        "// Line_Reference 562: ",
        "// Line_Reference 563: This for example, allows multiple templates in different formats to share the same action code. Restrictive",
        "// Line_Reference 564: placeholders can also be used to limit the allowed formats.",
        "// Line_Reference 579: Or you can just disable format detection with a special type of restrictive placeholder, which gets inherited by nested",
        "// Line_Reference 580: routes, and then re-enable it on demand.",
        "// Line_Reference 581: ",
        "// Line_Reference 582:   # /foo      -> {controller => 'foo', action => 'bar'}",
        "// Line_Reference 583:   # /foo.html -> undef",
        "// Line_Reference 584:   $r->get('/foo' => [format => 0])->to('foo#bar');",
        "// Line_Reference 585: ",
        "// Line_Reference 586:   # /foo      -> {controller => 'foo', action => 'bar'}",
        "// Line_Reference 587:   # /foo.html -> undef",
        "// Line_Reference 588:   # /baz      -> undef",
        "// Line_Reference 589:   # /baz.txt  -> {controller => 'baz', action => 'yada', format => 'txt'}",
        "// Line_Reference 590:   # /baz.html -> {controller => 'baz', action => 'yada', format => 'html'}",
        "// Line_Reference 591:   # /baz.xml  -> undef",
        "// Line_Reference 592:   my $inactive = $r->under([format => 0]);",
        "// Line_Reference 593:   $inactive->get('/foo')->to('foo#bar');",
        "// Line_Reference 594:   $inactive->get('/baz' => [format => ['txt', 'html']])->to('baz#yada');",
        "// Line_Reference 595: "
    ]
}
