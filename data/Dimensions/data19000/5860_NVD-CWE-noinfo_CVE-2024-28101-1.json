{
    "cve_id": "CVE-2024-28101",
    "cve_description": "The Apollo Router is a graph router written in Rust to run a federated supergraph that uses Apollo Federation. Versions 0.9.5 until 1.40.2 are subject to a Denial-of-Service (DoS) type vulnerability. When receiving compressed HTTP payloads, affected versions of the Router evaluate the `limits.http_max_request_bytes` configuration option after the entirety of the compressed payload is decompressed. If affected versions of the Router receive highly compressed payloads, this could result in significant memory consumption while the compressed payload is expanded. Router version 1.40.2 has a fix for the vulnerability. Those who are unable to upgrade may be able to implement mitigations at proxies or load balancers positioned in front of their Router fleet (e.g. Nginx, HAProxy, or cloud-native WAF services) by creating limits on HTTP body upload size. \n",
    "cve_publish_date": "2024-03-21",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "streaming body decompression\n\nClient request body was fully loaded in memory before decompressing, we\nare now decompressing it as it goes",
    "type_of_change": "Modification",
    "filename_of_changes": "axum_http_server_factory.rs",
    "code_language": "Rust",
    "number_of_lines_added_for_mitigation": "34",
    "number_of_lines_deleted_vulnerable_to_cve": "13",
    "vulnerable_lines": [
        "// Line_Reference 42: use super::utils::decompress_request_body;",
        "// Line_Reference 176:                             response: http::Response::builder()",
        "// Line_Reference 177:                                 .status(status_code)",
        "// Line_Reference 178:                                 .body::<hyper::Body>(",
        "// Line_Reference 179:                                     serde_json::to_vec(&health).map_err(BoxError::from)?.into(),",
        "// Line_Reference 180:                                 )?,",
        "// Line_Reference 440:         .layer(middleware::from_fn(decompress_request_body))",
        "// Line_Reference 533: pub(super) fn main_router<RF>(configuration: &Configuration) -> axum::Router",
        "// Line_Reference 540:             move |Extension(service): Extension<RF>, request: Request<Body>| {",
        "// Line_Reference 545:             move |Extension(service): Extension<RF>, request: Request<Body>| {",
        "// Line_Reference 555:                 move |Extension(service): Extension<RF>, request: Request<Body>| {",
        "// Line_Reference 560:                 move |Extension(service): Extension<RF>, request: Request<Body>| {",
        "// Line_Reference 572:     http_request: Request<Body>,"
    ]
}
