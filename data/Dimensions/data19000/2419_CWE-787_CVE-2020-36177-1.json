{
    "cve_id": "CVE-2020-36177",
    "cve_description": "RsaPad_PSS in wolfcrypt/src/rsa.c in wolfSSL before 4.6.0 has an out-of-bounds write for certain relationships between key size and digest size.",
    "cve_publish_date": "2021-01-06",
    "cwe_id": "CWE-787",
    "cwe_name": "Out-of-bounds Write",
    "cwe_description": "The product writes data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "RSA-PSS: Handle edge case with encoding message to hash\n\nWhen the key is small relative to the digest (1024-bit key, 64-byte\nhash, 61-byte salt length), the internal message to hash is larger than\nthe output size.\nAllocate a buffer for the message when this happens.",
    "type_of_change": "Modification",
    "filename_of_changes": "rsa.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "25",
    "number_of_lines_deleted_vulnerable_to_cve": "13",
    "vulnerable_lines": [
        "// Line_Reference 1120:     #if defined(WOLFSSL_NO_MALLOC) && !defined(WOLFSSL_STATIC_MEMORY)",
        "// Line_Reference 1121:         byte salt[RSA_MAX_SIZE/8 + RSA_PSS_PAD_SZ];",
        "// Line_Reference 1122:     #else",
        "// Line_Reference 1123:         byte* salt = NULL;",
        "// Line_Reference 1124:     #endif",
        "// Line_Reference 1187:         salt = (byte*)XMALLOC(RSA_PSS_PAD_SZ + inputLen + saltLen, heap,",
        "// Line_Reference 1189:         if (salt == NULL) {",
        "// Line_Reference 1193:     s = m = salt;",
        "// Line_Reference 1206:     s = m = pkcsBlock;",
        "// Line_Reference 1243: #if defined(WOLFSSL_PSS_LONG_SALT) || defined(WOLFSSL_PSS_SALT_LEN_DISCOVER)",
        "// Line_Reference 1245:         if (salt != NULL) {",
        "// Line_Reference 1246:             XFREE(salt, heap, DYNAMIC_TYPE_RSA_BUFFER);",
        "// Line_Reference 1249: #endif"
    ]
}
