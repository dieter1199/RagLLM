{
    "cve_id": "CVE-2019-25016",
    "cve_description": "In OpenDoas from 6.6 to 6.8 the users PATH variable was incorrectly inherited by authenticated executions if the authenticating rule allowed the user to execute any command. Rules that only allowed to authenticated user to execute specific commands were not affected by this issue.",
    "cve_publish_date": "2021-01-28",
    "cwe_id": "CWE-459",
    "cwe_name": "Incomplete Cleanup",
    "cwe_description": "The product does not properly \"clean up\" and remove temporary or supporting resources after they have been used.",
    "commit_message": "redo the environment inheritance to not inherit. it was intended to make life easier, but it can be surprising or even unsafe. instead, reset just about everything to the target user's values. ok deraadt martijn Thanks to Sander Bos in particular for pointing out some nasty edge cases.",
    "type_of_change": "Modification",
    "filename_of_changes": "env.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "33",
    "number_of_lines_deleted_vulnerable_to_cve": "12",
    "vulnerable_lines": [
        "// Line_Reference 73: createenv(const struct rule *rule)",
        "// Line_Reference 190: prepenv(const struct rule *rule)",
        "// Line_Reference 192: \tstatic const char *safeset[] = {",
        "// Line_Reference 193: \t\t\"DISPLAY\", \"HOME\", \"LOGNAME\", \"MAIL\",",
        "// Line_Reference 194: \t\t\"PATH\", \"TERM\", \"USER\", \"USERNAME\",",
        "// Line_Reference 195: \t\tNULL",
        "// Line_Reference 196: \t};",
        "// Line_Reference 199: \tenv = createenv(rule);",
        "// Line_Reference 200: ",
        "// Line_Reference 201: \t/* if we started with blank, fill some defaults then apply rules */",
        "// Line_Reference 202: \tif (!(rule->options & KEEPENV))",
        "// Line_Reference 203: \t\tfillenv(env, safeset);"
    ]
}
