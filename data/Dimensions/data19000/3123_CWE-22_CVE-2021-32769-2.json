{
    "cve_id": "CVE-2021-32769",
    "cve_description": "Micronaut is a JVM-based, full stack Java framework designed for building JVM applications. A path traversal vulnerability exists in versions prior to 2.5.9. With a basic configuration, it is possible to access any file from a filesystem, using \"/../../\" in the URL. This occurs because Micronaut does not restrict file access to configured paths. The vulnerability is patched in version 2.5.9. As a workaround, do not use `**` in mapping, use only `*`, which exposes only flat structure of a directory not allowing traversal. If using Linux, another workaround is to run micronaut in chroot.",
    "cve_publish_date": "2021-07-16",
    "cwe_id": "CWE-22",
    "cwe_name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
    "cwe_description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
    "commit_message": "Merge pull request from GHSA-cjx7-399x-p2rj\n\n* Don't allow resolving files using relative paths outside of the base\n\n* Revert change around reading properties files\n\nCo-authored-by: Lukas, Strmiska <strmik@gmail.com>\nCo-authored-by: jameskleeh <james.kleeh@gmail.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "DefaultEnvironment.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "4",
    "number_of_lines_deleted_vulnerable_to_cve": "5",
    "vulnerable_lines": [
        "// Line_Reference 456:                             throw new ConfigurationException(\"Unsupported properties file format: \" + fileName);",
        "// Line_Reference 586:      * @throws ConfigurationException If unable to find the appropriate property soruce loader for the given file",
        "// Line_Reference 589:         ResourceResolver resourceResolver = new ResourceResolver();",
        "// Line_Reference 590:         Optional<ResourceLoader> resourceLoader = resourceResolver.getSupportingLoader(filePath);",
        "// Line_Reference 591:         ResourceLoader loader = resourceLoader.orElse(FileSystemResourceLoader.defaultLoader());"
    ]
}
