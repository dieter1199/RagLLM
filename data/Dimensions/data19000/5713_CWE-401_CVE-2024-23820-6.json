{
    "cve_id": "CVE-2024-23820",
    "cve_description": "OpenFGA, an authorization/permission engine, is vulnerable to a denial of service attack in versions prior to 1.4.3. In some scenarios that depend on the model and tuples used, a call to `ListObjects` may not  release memory properly. So when a sufficiently high number of those calls are executed, the OpenFGA server can create an `out of memory` error and terminate. Version 1.4.3 contains a patch for this issue.",
    "cve_publish_date": "2024-01-26",
    "cwe_id": "CWE-401",
    "cwe_name": "Missing Release of Memory after Effective Lifetime",
    "cwe_description": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.",
    "commit_message": "fix: handle ReverseExpand channel closure correctly (#1315)",
    "type_of_change": "Modification",
    "filename_of_changes": "reverse_expand.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "14",
    "number_of_lines_deleted_vulnerable_to_cve": "15",
    "vulnerable_lines": [
        "// Line_Reference 164: \tErr          error",
        "// Line_Reference 185: // Execute yields all the objects of the provided objectType that the given user has, possibly, a specific relation with",
        "// Line_Reference 186: // and sends those objects to resultChan. It MUST guarantee no duplicate objects sent.",
        "// Line_Reference 188: // If an error is encountered before resolving all objects: the provided channel will NOT be closed and",
        "// Line_Reference 189: // - if the error is context cancellation or deadline: Execute may send the error through the channel",
        "// Line_Reference 190: // - otherwise: Execute will send the error through the channel",
        "// Line_Reference 191: // If no errors, Execute will yield all of the objects on the provided channel and then close the channel",
        "// Line_Reference 192: // to signal that it is done.",
        "// Line_Reference 198: ) {",
        "// Line_Reference 201: \t\tselect {",
        "// Line_Reference 202: \t\tcase <-ctx.Done():",
        "// Line_Reference 203: \t\t\treturn",
        "// Line_Reference 204: \t\tcase resultChan <- &ReverseExpandResult{Err: err}:",
        "// Line_Reference 205: \t\t\treturn",
        "// Line_Reference 206: \t\t}"
    ]
}
