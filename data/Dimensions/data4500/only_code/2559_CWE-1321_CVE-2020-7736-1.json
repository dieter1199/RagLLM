it('should have get working', function(){
var t = {
eins : 1,
zwei: {
drei: 3
}
};
expect( bmoor.get(t,'eins') ).to.equal(1);
expect( bmoor.get(t,'zwei.drei') ).to.equal(3);
});
it('should have get working with empty strings', function(){
var t = {
eins : 1,
zwei: {
drei: 3
}
};
expect( bmoor.get(t,'') ).to.equal(t);
});
it('should have makeGetter working', function(){
var t = {
eins : 1,
zwei: {
drei: 3
}
},
f1 = bmoor.makeGetter('eins'),
f2 = bmoor.makeGetter('zwei.drei');
expect( f1(t) ).to.equal(1);
expect( f2(t) ).to.equal(3);
it('should have makeGetter working with empty strings', function(){
var t = {
eins : 1,
zwei: {
drei: 3
}
},
f1 = bmoor.makeGetter('');
expect( f1(t) ).to.equal(t);
});
it('should have set working', function(){
var t = {};
bmoor.set(t,'eins',1);
bmoor.set(t,'zwei.drei',3);
expect( t.eins ).to.equal(1);
expect( t.zwei.drei ).to.equal(3);
it('should have makeSetter working', function(){
var t = {},
f1 = bmoor.makeSetter('eins'),
f2 = bmoor.makeSetter('zwei.drei');
f1(t,1);
f2(t,3);
expect( t.eins ).to.equal(1);
expect( t.zwei.drei ).to.equal(3);