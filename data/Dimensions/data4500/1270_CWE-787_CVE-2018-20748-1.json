{
    "cve_id": "CVE-2018-20748",
    "cve_description": "LibVNC before 0.9.12 contains multiple heap out-of-bounds write vulnerabilities in libvncclient/rfbproto.c. The fix for CVE-2018-20019 was incomplete.",
    "cve_publish_date": "2019-01-30",
    "cwe_id": "CWE-787",
    "cwe_name": "Out-of-bounds Write",
    "cwe_description": "The product writes data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "LibVNCClient: ignore server-sent reason strings longer than 1MB\n\nFixes #273",
    "type_of_change": "Modification",
    "filename_of_changes": "rfbproto.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "21",
    "number_of_lines_deleted_vulnerable_to_cve": "24",
    "vulnerable_lines": [
        "// Line_Reference 418:     uint32_t authResult=0, reasonLen=0;",
        "// Line_Reference 419:     char *reason=NULL;",
        "// Line_Reference 434:         if (!ReadFromRFBServer(client, (char *)&reasonLen, 4)) return FALSE;",
        "// Line_Reference 435:         reasonLen = rfbClientSwap32IfLE(reasonLen);",
        "// Line_Reference 436:         reason = malloc((uint64_t)reasonLen+1);",
        "// Line_Reference 437:         if (!ReadFromRFBServer(client, reason, reasonLen)) { free(reason); return FALSE; }",
        "// Line_Reference 438:         reason[reasonLen]=0;",
        "// Line_Reference 439:         rfbClientLog(\"VNC connection failed: %s\\n\",reason);",
        "// Line_Reference 440:         free(reason);",
        "// Line_Reference 455: static void",
        "// Line_Reference 456: ReadReason(rfbClient* client)",
        "// Line_Reference 457: {",
        "// Line_Reference 458:     uint32_t reasonLen;",
        "// Line_Reference 459:     char *reason;",
        "// Line_Reference 460: ",
        "// Line_Reference 461:     /* we have an error following */",
        "// Line_Reference 462:     if (!ReadFromRFBServer(client, (char *)&reasonLen, 4)) return;",
        "// Line_Reference 463:     reasonLen = rfbClientSwap32IfLE(reasonLen);",
        "// Line_Reference 464:     reason = malloc((uint64_t)reasonLen+1);",
        "// Line_Reference 465:     if (!ReadFromRFBServer(client, reason, reasonLen)) { free(reason); return; }",
        "// Line_Reference 466:     reason[reasonLen]=0;",
        "// Line_Reference 467:     rfbClientLog(\"VNC connection failed: %s\\n\",reason);",
        "// Line_Reference 468:     free(reason);",
        "// Line_Reference 469: }"
    ]
}
