{
    "cve_id": "CVE-2022-1934",
    "cve_description": "Use After Free in GitHub repository mruby/mruby prior to 3.2.",
    "cve_publish_date": "2022-05-31",
    "cwe_id": "CWE-416",
    "cwe_name": "Use After Free",
    "cwe_description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
    "commit_message": "vm.c (hash_new_from_regs): stack may be reallocated.",
    "type_of_change": "Modification",
    "filename_of_changes": "vm.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "7",
    "number_of_lines_deleted_vulnerable_to_cve": "6",
    "vulnerable_lines": [
        "// Line_Reference 1163: hash_new_from_values(mrb_state *mrb, mrb_int argc, mrb_value *regs)",
        "// Line_Reference 1167:     mrb_hash_set(mrb, hash, regs[0], regs[1]);",
        "// Line_Reference 1168:     regs += 2;",
        "// Line_Reference 1173: #define ARGUMENT_NORMALIZE(arg_base, arg_info, insn) do { \\",
        "// Line_Reference 1182:     mrb_value kdict = hash_new_from_values(mrb, nk, regs+kidx); \\",
        "// Line_Reference 1245: #define regs (mrb->c->ci->stack)"
    ]
}
