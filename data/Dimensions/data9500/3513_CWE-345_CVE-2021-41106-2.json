{
    "cve_id": "CVE-2021-41106",
    "cve_description": "JWT is a library to work with JSON Web Token and JSON Web Signature. Prior to versions 3.4.6, 4.0.4, and 4.1.5, users of HMAC-based algorithms (HS256, HS384, and HS512) combined with `Lcobucci\\JWT\\Signer\\Key\\LocalFileReference` as key are having their tokens issued/validated using the file path as hashing key - instead of the contents. The HMAC hashing functions take any string as input and, since users can issue and validate tokens, users are lead to believe that everything works properly. Versions 3.4.6, 4.0.4, and 4.1.5 have been patched to always load the file contents, deprecated the `Lcobucci\\JWT\\Signer\\Key\\LocalFileReference`, and suggest `Lcobucci\\JWT\\Signer\\Key\\InMemory` as the alternative. As a workaround, use `Lcobucci\\JWT\\Signer\\Key\\InMemory` instead of `Lcobucci\\JWT\\Signer\\Key\\LocalFileReference` to create the instances of one's keys.",
    "cve_publish_date": "2021-09-28",
    "cwe_id": "CWE-345",
    "cwe_name": "Insufficient Verification of Data Authenticity",
    "cwe_description": "The product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.",
    "commit_message": "Ensure key contents is used for all hashing algorithms\n\nOn v3.4.0 we introduced the\n`Lcobucci\\JWT\\Signer\\Key\\LocalFileReference`, which was designed to be\nused with OpenSSL-based algorithms and avoid having to load the file\ncontents into user-land to sign/verify tokens.\n\nHowever, other algorithms don't understand the scheme `file://` and will\nincorrectly use the file path as the signing key.\n\nThis modifies and deprecates `LocalFileReference` to avoid that\nmisleading behaviour.\n\nCo-authored-by: Anton Smirnov <sandfox@sandfox.me>\nCo-authored-by: Marco Pivetta <ocramius@gmail.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "LocalFileReferenceTest.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "8",
    "number_of_lines_deleted_vulnerable_to_cve": "18",
    "vulnerable_lines": [
        "// Line_Reference 9: /** @coversDefaultClass \\Lcobucci\\JWT\\Signer\\Key\\LocalFileReference */",
        "// Line_Reference 36:     /**",
        "// Line_Reference 37:      * @test",
        "// Line_Reference 38:      *",
        "// Line_Reference 39:      * @covers ::file",
        "// Line_Reference 40:      * @covers ::__construct",
        "// Line_Reference 41:      * @covers ::contents",
        "// Line_Reference 42:      */",
        "// Line_Reference 43:     public function pathShouldBeNormalised(): void",
        "// Line_Reference 44:     {",
        "// Line_Reference 45:         $key = LocalFileReference::file('file://' . vfsStream::url('root/test.pem'));",
        "// Line_Reference 46: ",
        "// Line_Reference 47:         self::assertSame('file://vfs://root/test.pem', $key->contents());",
        "// Line_Reference 48:     }",
        "// Line_Reference 49: ",
        "// Line_Reference 58:     public function contentsShouldReturnOnlyTheReferenceToTheFile(): void",
        "// Line_Reference 60:         $key = LocalFileReference::file(vfsStream::url('root/test.pem'), 'test');",
        "// Line_Reference 62:         self::assertSame('file://vfs://root/test.pem', $key->contents());"
    ]
}
