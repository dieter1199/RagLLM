{
    "cve_id": "CVE-2019-16790",
    "cve_description": "In Tiny File Manager before 2.3.9, there is a remote code execution via Upload from URL and Edit/Rename files. Only authenticated users are impacted.",
    "cve_publish_date": "2019-12-30",
    "cwe_id": "CWE-434",
    "cwe_name": "Unrestricted Upload of File with Dangerous Type",
    "cwe_description": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
    "commit_message": "Merge pull request from GHSA-w72h-v37j-rrwr\n\n* Fix the RCE vuln via Upload from URL\n\nThis commit attemps to fix the Remote Code Execution\n(authenticated) via Upload from URL. Some notes about\nthe proposed solution:\n\n* A new function (fm_is_file_allowed) has been created to\nvalidate if the filename is allowed. This function gets the\nthe filename as parameter and returns true if it validates\nas allowed. Otherwise returns false (the default).\n\n* It's better to have such validatation(s) in one place\ninstead of spread all over the code. There are other places in\nthe application where the filename is validated and they should\nall be refactored to call this function. Then we can focus\nall needed validations in one place only!\n\nNOTE: This refactoring was not done - the only goal was to fix\nthis security vulnerability only.\n\n* The fm_is_file_allowed() function validates the filename\nbased on its extension only. No other validatation(s) have been\nimplemented in this commit.\n\n* File extensions are assumed to be case-insensitive.\nFor example, php == PHP == Php == PhP, etc. This is consitent\nwith some web servers. Without this, the user will have to populate\nthe $allowed_extensions with all possible allowed combinations.\n\n* Although, there is one drawback to the current solution, which\nis that all files must have an extension to be uploaded. This is not\nconsitent with modern filesystems. Maybe a better solution would be\nto automatically append an extension to the filename if no\nextension has been found (e.g., .html or .txt which are generally\nconsidered to be harmless). This must be decided by the\napplication's maintainers.\n\n* Fix the RCE vulns via new/rename file\n\nSanitize the arguments to stat using escapeshellarg()\n\nCo-authored-by: Jorge Morgado <jorge@morgado.ch>",
    "type_of_change": "Modification",
    "filename_of_changes": "tinyfilemanager.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "30",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 12: define('VERSION', '2.3.8');",
        "// Line_Reference 2218:         $cmd = ($iswin) ? \"for %F in (\\\"$file\\\") do @echo %~zF\" : ($isdarwin ? \"stat -f%z \\\"$file\\\"\" : \"stat -c%s \\\"$file\\\"\");"
    ]
}
