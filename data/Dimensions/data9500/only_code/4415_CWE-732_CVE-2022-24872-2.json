use Shopware\Core\Checkout\Payment\Cart\PaymentHandler\PrePayment;
use Shopware\Core\Framework\DataAbstractionLayer\EntityRepositoryInterface;
use Shopware\Core\Framework\DataAbstractionLayer\Search\Filter\EqualsFilter;
private function getStateId(string $state, string $machine)
return $this->getContainer()->get(Connection::class)
->fetchColumn('
SELECT LOWER(HEX(state_machine_state.id))
FROM state_machine_state
INNER JOIN  state_machine
ON state_machine.id = state_machine_state.state_machine_id
AND state_machine.technical_name = :machine
WHERE state_machine_state.technical_name = :state
', [
'state' => $state,
'machine' => $machine,
]);
}
private function getPrePaymentMethodId(): string
{
/** @var EntityRepositoryInterface $repository */
$repository = $this->getContainer()->get('payment_method.repository');
$criteria = (new Criteria())
->setLimit(1)
->addFilter(new EqualsFilter('active', true))
->addFilter(new EqualsFilter('handlerIdentifier', PrePayment::class));
return $repository->searchIds($criteria, Context::createDefaultContext())->getIds()[0];