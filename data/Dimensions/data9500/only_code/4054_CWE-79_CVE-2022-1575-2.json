// Workaround for allowing target="_blank" in HTML sanitizer
// see https://code.google.com/p/google-caja/issues/detail?can=2&q=&colspec=ID%20Type%20Status%20Priority%20Owner%20Summary&groupby=&sort=&id=1296
if (typeof html4 !== 'undefined')
{
html4.ATTRIBS['a::target'] = 0;
html4.ATTRIBS['source::src'] = 0;
html4.ATTRIBS['video::src'] = 0;
// Would be nice for tooltips but probably a security risk...
//html4.ATTRIBS['video::autoplay'] = 0;
//html4.ATTRIBS['video::autobuffer'] = 0;
}
* Sanitizes the given HTML markup.
// Uses https://code.google.com/p/google-caja/wiki/JsHtmlSanitizer
// NOTE: Original minimized sanitizer was modified to support
// data URIs for images, mailto and special data:-links.
// LATER: Add MathML to whitelisted tags
function urlX(link)
{
if (link != null && link.toString().toLowerCase().substring(0, 11) !== 'javascript:')
{
return link;
}
return null;
};
function idX(id) { return id };
return html_sanitize(value, urlX, idX);
* Removes all script tags and attributes starting with on.
// Removes all attributes starting with on
var all = div.getElementsByTagName('*');
for (var i = 0; i < all.length; i++)
{
for (var j = 0; j < all[i].attributes.length; j++)
{
var attr = all[i].attributes[j];
if (attr.name.length > 2 && attr.name.toLowerCase().substring(0, 2) == 'on')
{
all[i].removeAttribute(attr.name);
}
}
}
function removeAllTags(tagName)
{
var nodes = div.getElementsByTagName(tagName);
while (nodes.length > 0)
{
nodes[0].parentNode.removeChild(nodes[0]);
}
};
removeAllTags('meta');
removeAllTags('script');
removeAllTags('metadata');
this.linkHint.appendChildGraph.createRemoveIcon(mxResources.get('removeIt',
}));
