private final Optional<Path> baseDirPath;
this.baseDirPath = Optional.empty();
this.baseDirPath = Optional.of(baseDirPath.toPath());
this.baseDirPath = Optional.of(Paths.get(normalize(path)));
this.baseDirPath = Optional.of(path);
try {
return Optional.of(Files.newInputStream(filePath));
} catch (IOException e) {
return Optional.empty();
if (Files.exists(filePath) && Files.isReadable(filePath) && !Files.isDirectory(filePath)) {
return baseDirPath.map(dir -> dir.resolve(path)).orElseGet(() -> Paths.get(path));