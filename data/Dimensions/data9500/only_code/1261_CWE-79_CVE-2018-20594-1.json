@PathVariable("type") @ApiParam(value = "类型", allowableValues = "bpmn,json", example = "json") String type,
try {
Model modelData = repositoryService.getModel(modelId);
BpmnJsonConverter jsonConverter = new BpmnJsonConverter();
byte[] modelEditorSource = repositoryService.getModelEditorSource(modelData.getId());
JsonNode editorNode = new ObjectMapper().readTree(modelEditorSource);
BpmnModel bpmnModel = jsonConverter.convertToBpmnModel(editorNode);
// 处理异常
if (bpmnModel.getMainProcess() == null) {
response.setStatus(HttpStatus.UNPROCESSABLE_ENTITY.value());
response.getOutputStream().println("no main process, can't export for dimension: " + type);
response.flushBuffer();
return;
}
String filename = "";
byte[] exportBytes = null;
String mainProcessId = bpmnModel.getMainProcess().getId();
if ("bpmn".equals(type)) {
BpmnXMLConverter xmlConverter = new BpmnXMLConverter();
exportBytes = xmlConverter.convertToXML(bpmnModel);
filename = mainProcessId + ".bpmn20.xml";
} else if ("json".equals(type)) {
exportBytes = modelEditorSource;
filename = mainProcessId + ".json";
} else {
throw new UnsupportedOperationException("不支持的格式:" + type);
}
response.setCharacterEncoding("UTF-8");
response.setContentType("application/octet-stream");
response.setHeader("Content-Disposition", "attachment; filename=" + URLEncoder.encode(filename, "UTF-8"));
/*创建输入流*/
try (ByteArrayInputStream in = new ByteArrayInputStream(exportBytes)) {
IOUtils.copy(in, response.getOutputStream());
response.flushBuffer();
in.close();
}
} catch (Exception e) {
log.error("导出model的xml文件失败：modelId={}, type={}", modelId, type, e);
