protected $add_permissions = array(
'build_report' => 'Manage',
'order_report' => 'Generate Order Report',
'product_report' => 'Generate Product Report',
'batch_export' => 'Export Products',
'export_order_items' => 'Export Order Items File');
[date-startdate] =>
[time-h-startdate] =>
[time-m-startdate] =>
[date-enddate] =>
[time-h-enddate] =>
[time-m-enddate] =>
[order-range-num] =>
[order-price-num] =>
[pnam] =>
[sku] =>
[blshpname] =>
[email] =>
[zip] =>
//$items = $prod->find('all', 1, 'id DESC',25);
//$items = $order->find('all', 1, 'id DESC',25);
$geos = $geo->find('all');
//eDebug(strftime("%A, %d %B %Y", mktime(0,0,0,(strftime("%m")-1),1,strftime("%Y"))));
//build
//get each calculator's id
[date-startdate] =>
[time-h-startdate] =>
[time-m-startdate] =>
[date-enddate] =>
[time-h-enddate] =>
[time-m-enddate] =>
[order-range-num] =>
[order-price-num] =>
[pnam] =>
[sku] =>
[blshpname] =>
[email] =>
[zip] =>
//$items = $prod->find('all', 1, 'id DESC',25);
//$items = $order->find('all', 1, 'id DESC',25);
//eDebug($sql . $sqlwhere);
//strftime("%a %d-%m-%Y", get_first_day(3, 1, 2007)); Thursday, 1 April 2010
//$line = expString::outputField("SMC Inventory - Laurie");
//$items = $product->find('all', '', 'id', 25);
//$page = new expPaginator();
//eDebug($page,true);
'Invoice #'=>'invoice_id',
//
//
// assign_to_template(array('page'=>$page));
//echo "1<br>"; eDebug($str);
//if HTML, then leave the single quotes alone, otheriwse replace w/ special Char
//$str = str_replace(",","\,",$str);
* description
* id - SKU
* link
* price
* title
* brand - manufacturer
* image link - fullsized image, up to 10, comma seperated
* product type - category - "Electronics > Audio > Audio Accessories MP3 Player Accessories","Health & Beauty > Healthcare > Biometric Monitors > Pedometers"
$allOrderCount = $this->o->find('count','created_at >= ' . $this->tstart . ' AND created_at <= ' . $this->tend,null,null,null,true,false,$except,true);
$ordersInCheckout = $this->o->find('count','created_at >= ' . $this->tstart . ' AND created_at <= ' . $this->tend . " AND user_id != 0",null,null,null,true,false,$except,true);
//$ordersPurchased = $this->o->find('count','purchased >= ' . $this->tstart . ' AND purchased <= ' . $this->tend . " AND user_id != 0 AND order_type_id = 1",null,null,null,true,false,$except,true);
//$ordersPurchased = $this->o->find('count','purchased >= ' . $this->tstart . ' AND purchased <= ' . $this->tend . " AND user_id != 0",null,null,null,true,false,$except,true);
$ordersPurchased = $this->o->find('count','purchased >= ' . $this->tstart . ' AND purchased <= ' . $this->tend,null,null,null,true,false,$except,true);
$orders = $this->o->find('all','purchased >= ' . $this->tstart . ' AND purchased <= ' . $this->tend,null,null,null,true,false,$except,true);
eDebug("All:" . $allOrderCount);
eDebug("Carts w/ Items:" . $allCartsWithItems);
eDebug("Carts w/ Items in Checkout:" . $ordersInCheckout);
eDebug("Purchased:" . $ordersPurchased);
assign_to_template(array('prev_month'=>$this->prev_month, 'now_date'=>$this->now_date, 'now_hour'=>$this->now_hour, 'now_min'=>$this->now_min, 'now_ampm'=>$this->now_ampm, 'prev_hour'=>$this->prev_hour, 'prev_min'=>$this->prev_min, 'prev_ampm'=>$this->prev_ampm));
/*OPTIONALLY ENCLOSED BY '" . '"' .
/*OPTIONALLY ENCLOSED BY '" . '"' .
