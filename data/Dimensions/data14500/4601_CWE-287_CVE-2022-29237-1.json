{
    "cve_id": "CVE-2022-29237",
    "cve_description": "Opencast is a free and open source solution for automated video capture and distribution at scale. Prior to Opencast 10.14 and 11.7, users could pass along URLs for files belonging to organizations other than the user's own, which Opencast would then import into the current organization, bypassing organizational barriers. Attackers must have full access to Opencast's ingest REST interface, and also know internal links to resources in another organization of the same Opencast cluster. Users who do not run a multi-tenant cluster are not affected by this issue. This issue is fixed in Opencast 10.14 and 11.7.",
    "cve_publish_date": "2022-05-24",
    "cwe_id": "CWE-287",
    "cwe_name": "Improper Authentication",
    "cwe_description": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
    "commit_message": "Merge pull request from GHSA-qm6v-cg9v-53j3\n\nThis patch fixes the issue that users can pass URLs from other tenants\nto the ingest service which will check only against the other\norganization but not against the one currently active. This allows users\nto easily ingest media from other tenants.",
    "type_of_change": "Modification",
    "filename_of_changes": "IngestServiceImpl.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "12",
    "vulnerable_lines": [
        "// Line_Reference 132: import java.util.LinkedList;",
        "// Line_Reference 140: import java.util.stream.Collectors;",
        "// Line_Reference 1571:         List<String> clusterUrls = new LinkedList<>();",
        "// Line_Reference 1572:         try {",
        "// Line_Reference 1573:           // Note that we are not checking ports here.",
        "// Line_Reference 1574:           clusterUrls = organizationDirectoryService.getOrganization(uri.toURL()).getServers()",
        "// Line_Reference 1575:                           .keySet()",
        "// Line_Reference 1576:                           .stream()",
        "// Line_Reference 1577:                           .collect(Collectors.toUnmodifiableList());",
        "// Line_Reference 1578:         } catch (NotFoundException e) {",
        "// Line_Reference 1579:           logger.warn(\"Unable to determine cluster members, will not be able to authenticate any downloads from them\", e);",
        "// Line_Reference 1580:         }"
    ]
}
