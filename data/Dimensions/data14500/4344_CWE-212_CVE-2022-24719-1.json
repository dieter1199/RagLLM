{
    "cve_id": "CVE-2022-24719",
    "cve_description": "Fluture-Node is a FP-style HTTP and streaming utils for Node based on Fluture. Using `followRedirects` or `followRedirectsWith` with any of the redirection strategies built into fluture-node 4.0.0 or 4.0.1, paired with a request that includes confidential headers such as Authorization or Cookie, exposes you to a vulnerability where, if the destination server were to redirect the request to a server on a third-party domain, or the same domain over unencrypted HTTP, the headers would be included in the follow-up request and be exposed to the third party, or potential http traffic sniffing. The redirection strategies made available in version 4.0.2 automatically redact confidential headers when a redirect is followed across to another origin. A workaround has been identified by using a custom redirection strategy via the `followRedirectsWith` function. The custom strategy can be based on the new strategies available in fluture-node@4.0.2.",
    "cve_publish_date": "2022-03-01",
    "cwe_id": "CWE-212",
    "cwe_name": "Improper Removal of Sensitive Information Before Storage or Transfer",
    "cwe_description": "The product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.",
    "commit_message": "Update redirection strategies to drop confidential headers",
    "type_of_change": "Modification",
    "filename_of_changes": "index.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "33",
    "number_of_lines_deleted_vulnerable_to_cve": "8",
    "vulnerable_lines": [
        "// Line_Reference 537: // mergeUrls :: Url -> Any -> String",
        "// Line_Reference 538: const mergeUrls = base => input => (",
        "// Line_Reference 565:   const newUrl = mergeUrls (oldUrl) (location);",
        "// Line_Reference 566:   return (Request (Request.options (original))",
        "// Line_Reference 567:                   (newUrl)",
        "// Line_Reference 568:                   (Request.body (original)));",
        "// Line_Reference 593: //. The original request method and body are discarded, but all the options",
        "// Line_Reference 594: //. are preserved."
    ]
}
