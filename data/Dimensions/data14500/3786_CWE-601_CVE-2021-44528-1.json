{
    "cve_id": "CVE-2021-44528",
    "cve_description": "A open redirect vulnerability exists in Action Pack >= 6.0.0 that could allow an attacker to craft a \"X-Forwarded-Host\" headers in combination with certain \"allowed host\" formats can cause the Host Authorization middleware in Action Pack to redirect users to a malicious website.",
    "cve_publish_date": "2022-01-10",
    "cwe_id": "CWE-601",
    "cwe_name": "URL Redirection to Untrusted Site ('Open Redirect')",
    "cwe_description": "A web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a Redirect. This simplifies phishing attacks.",
    "commit_message": "Fix invalid forwarded host vulnerability\n\nPrior to this commit, it was possible to pass an unvalidated host\nthrough the `X-Forwarded-Host` header. If the value of the header\nwas prefixed with a invalid domain character (for example a `/`),\nit was always accepted as the actual host of that request.\n\nSince this host is used for all url helpers, an attacker could change\ngenerated links and redirects. If the header is set to\n`X-Forwarded-Host: //evil.hacker`, a redirect will be send to\n`https:////evil.hacker/`. Browsers will ignore these four slashes\nand redirect the user.\n\n[CVE-2021-44528]",
    "type_of_change": "Modification",
    "filename_of_changes": "host_authorization.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "3",
    "number_of_lines_deleted_vulnerable_to_cve": "7",
    "vulnerable_lines": [
        "// Line_Reference 55:             /\\A(.+\\.)?#{Regexp.escape(host[1..-1])}\\z/i",
        "// Line_Reference 123:       HOSTNAME = /[a-z0-9.-]+|\\[[a-f0-9]*:[a-f0-9.:]+\\]/i",
        "// Line_Reference 124:       VALID_ORIGIN_HOST = /\\A(#{HOSTNAME})(?::\\d+)?\\z/",
        "// Line_Reference 125:       VALID_FORWARDED_HOST = /(?:\\A|,[ ]?)(#{HOSTNAME})(?::\\d+)?\\z/",
        "// Line_Reference 126: ",
        "// Line_Reference 128:         origin_host = request.get_header(\"HTTP_HOST\")&.slice(VALID_ORIGIN_HOST, 1) || \"\"",
        "// Line_Reference 129:         forwarded_host = request.x_forwarded_host&.slice(VALID_FORWARDED_HOST, 1) || \"\""
    ]
}
