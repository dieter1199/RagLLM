{
    "cve_id": "CVE-2017-15195",
    "cve_description": "In Kanboard before 1.0.47, by altering form data, an authenticated user can edit swimlanes of a private project of another user.",
    "cve_publish_date": "2017-10-11",
    "cwe_id": "CWE-639",
    "cwe_name": "Authorization Bypass Through User-Controlled Key",
    "cwe_description": "The system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.",
    "commit_message": "Avoid people to alter other projects by changing form data",
    "type_of_change": "Modification",
    "filename_of_changes": "SwimlaneController.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "14",
    "number_of_lines_deleted_vulnerable_to_cve": "29",
    "vulnerable_lines": [
        "// Line_Reference 6: use Kanboard\\Core\\Controller\\PageNotFoundException;",
        "// Line_Reference 7: use Kanboard\\Model\\SwimlaneModel;",
        "// Line_Reference 17:     /**",
        "// Line_Reference 18:      * Get the swimlane (common method between actions)",
        "// Line_Reference 19:      *",
        "// Line_Reference 20:      * @access private",
        "// Line_Reference 21:      * @return array",
        "// Line_Reference 22:      * @throws PageNotFoundException",
        "// Line_Reference 23:      */",
        "// Line_Reference 24:     private function getSwimlane()",
        "// Line_Reference 25:     {",
        "// Line_Reference 26:         $swimlane = $this->swimlaneModel->getById($this->request->getIntegerParam('swimlane_id'));",
        "// Line_Reference 27: ",
        "// Line_Reference 28:         if (empty($swimlane)) {",
        "// Line_Reference 29:             throw new PageNotFoundException();",
        "// Line_Reference 30:         }",
        "// Line_Reference 31: ",
        "// Line_Reference 32:         return $swimlane;",
        "// Line_Reference 33:     }",
        "// Line_Reference 34: ",
        "// Line_Reference 107:         $swimlane = $this->getSwimlane();",
        "// Line_Reference 124: ",
        "// Line_Reference 148:         $swimlane = $this->getSwimlane();",
        "// Line_Reference 165:         $swimlane_id = $this->request->getIntegerParam('swimlane_id');",
        "// Line_Reference 167:         if ($this->swimlaneModel->remove($project['id'], $swimlane_id)) {",
        "// Line_Reference 185:         $swimlane_id = $this->request->getIntegerParam('swimlane_id');",
        "// Line_Reference 187:         if ($this->swimlaneModel->disable($project['id'], $swimlane_id)) {",
        "// Line_Reference 205:         $swimlane_id = $this->request->getIntegerParam('swimlane_id');",
        "// Line_Reference 207:         if ($this->swimlaneModel->enable($project['id'], $swimlane_id)) {"
    ]
}
