{
    "cve_id": "CVE-2022-39340",
    "cve_description": "OpenFGA is an authorization/permission engine. Prior to version 0.2.4, the `streamed-list-objects` endpoint was not validating the authorization header, resulting in disclosure of objects in the store. Users `openfga/openfga` versions 0.2.3 and prior who are exposing the OpenFGA service to the internet are vulnerable. Version 0.2.4 contains a patch for this issue.",
    "cve_publish_date": "2022-10-25",
    "cwe_id": "CWE-862",
    "cwe_name": "Missing Authorization",
    "cwe_description": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
    "commit_message": "Merge pull request from GHSA-95x7-mh78-7w2r\n\n* fix: add interceptors for streaming endpoints\n\n* add tests\n\n* remove unnecessary code",
    "type_of_change": "Modification",
    "filename_of_changes": "service_test.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "121",
    "number_of_lines_deleted_vulnerable_to_cve": "65",
    "vulnerable_lines": [
        "// Line_Reference 208: \t_name         string",
        "// Line_Reference 209: \tauthHeader    string",
        "// Line_Reference 210: \texpectedError string",
        "// Line_Reference 254: \t\t_name:         \"Header with incorrect key fails\",",
        "// Line_Reference 255: \t\tauthHeader:    \"Bearer incorrectkey\",",
        "// Line_Reference 256: \t\texpectedError: \"unauthenticated\",",
        "// Line_Reference 258: \t\t_name:         \"Missing header fails\",",
        "// Line_Reference 259: \t\tauthHeader:    \"\",",
        "// Line_Reference 260: \t\texpectedError: \"missing bearer token\",",
        "// Line_Reference 262: \t\t_name:         \"Correct key one succeeds\",",
        "// Line_Reference 263: \t\tauthHeader:    \"Bearer KEYONE\",",
        "// Line_Reference 264: \t\texpectedError: \"\",",
        "// Line_Reference 266: \t\t_name:         \"Correct key two succeeds\",",
        "// Line_Reference 267: \t\tauthHeader:    \"Bearer KEYTWO\",",
        "// Line_Reference 268: \t\texpectedError: \"\",",
        "// Line_Reference 274: \t\t\tpayload := strings.NewReader(`{\"name\": \"some-store-name\"}`)",
        "// Line_Reference 275: \t\t\treq, err := retryablehttp.NewRequest(\"POST\", fmt.Sprintf(\"http://localhost:%d/stores\", service.GetHTTPAddrPort().Port()), payload)",
        "// Line_Reference 276: \t\t\trequire.NoError(t, err, \"Failed to construct request\")",
        "// Line_Reference 277: \t\t\treq.Header.Set(\"content-type\", \"application/json\")",
        "// Line_Reference 278: \t\t\treq.Header.Set(\"authorization\", test.authHeader)",
        "// Line_Reference 279: ",
        "// Line_Reference 280: \t\t\tres, err := retryClient.Do(req)",
        "// Line_Reference 281: \t\t\trequire.NoError(t, err, \"Failed to execute request\")",
        "// Line_Reference 282: ",
        "// Line_Reference 283: \t\t\tdefer res.Body.Close()",
        "// Line_Reference 284: \t\t\tbody, err := io.ReadAll(res.Body)",
        "// Line_Reference 285: \t\t\trequire.NoError(t, err, \"Failed to read response\")",
        "// Line_Reference 286: ",
        "// Line_Reference 287: \t\t\tstringBody := string(body)",
        "// Line_Reference 288: ",
        "// Line_Reference 289: \t\t\tif test.expectedError == \"\" && strings.Contains(stringBody, \"code\") {",
        "// Line_Reference 290: \t\t\t\tt.Fatalf(\"Expected no error but got '%v'\", stringBody)",
        "// Line_Reference 291: \t\t\t}",
        "// Line_Reference 293: \t\t\tif !strings.Contains(stringBody, test.expectedError) && test.expectedError != \"\" {",
        "// Line_Reference 294: \t\t\t\tt.Fatalf(\"Expected '%v' to contain '%v'\", stringBody, test.expectedError)",
        "// Line_Reference 295: \t\t\t}",
        "// Line_Reference 439: \t\t_name:         \"Header with invalid token fails\",",
        "// Line_Reference 440: \t\tauthHeader:    \"Bearer incorrecttoken\",",
        "// Line_Reference 441: \t\texpectedError: \"invalid bearer token\",",
        "// Line_Reference 443: \t\t_name:         \"Missing header fails\",",
        "// Line_Reference 444: \t\tauthHeader:    \"\",",
        "// Line_Reference 445: \t\texpectedError: \"missing bearer token\",",
        "// Line_Reference 447: \t\t_name:         \"Correct token succeeds\",",
        "// Line_Reference 448: \t\tauthHeader:    \"Bearer \" + trustedToken,",
        "// Line_Reference 449: \t\texpectedError: \"\",",
        "// Line_Reference 455: \t\t\tpayload := strings.NewReader(`{\"name\": \"some-store-name\"}`)",
        "// Line_Reference 456: \t\t\treq, err := retryablehttp.NewRequest(\"POST\", fmt.Sprintf(\"http://localhost:%d/stores\", service.GetHTTPAddrPort().Port()), payload)",
        "// Line_Reference 457: \t\t\trequire.NoError(t, err, \"Failed to construct request\")",
        "// Line_Reference 458: \t\t\treq.Header.Set(\"content-type\", \"application/json\")",
        "// Line_Reference 459: \t\t\treq.Header.Set(\"authorization\", test.authHeader)",
        "// Line_Reference 460: ",
        "// Line_Reference 461: \t\t\tres, err := retryClient.Do(req)",
        "// Line_Reference 462: \t\t\trequire.NoError(t, err, \"Failed to execute request\")",
        "// Line_Reference 463: ",
        "// Line_Reference 464: \t\t\tdefer res.Body.Close()",
        "// Line_Reference 465: \t\t\tbody, err := io.ReadAll(res.Body)",
        "// Line_Reference 466: \t\t\trequire.NoError(t, err, \"Failed to read response\")",
        "// Line_Reference 467: ",
        "// Line_Reference 468: \t\t\tstringBody := string(body)",
        "// Line_Reference 469: \t\t\tif test.expectedError == \"\" && strings.Contains(stringBody, \"code\") {",
        "// Line_Reference 470: \t\t\t\tt.Fatalf(\"Expected no error but got %v\", stringBody)",
        "// Line_Reference 471: \t\t\t}",
        "// Line_Reference 473: \t\t\tif !strings.Contains(stringBody, test.expectedError) && test.expectedError != \"\" {",
        "// Line_Reference 474: \t\t\t\tt.Fatalf(\"Expected %v to contain %v\", stringBody, test.expectedError)",
        "// Line_Reference 475: \t\t\t}"
    ]
}
