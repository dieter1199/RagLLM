{
    "cve_id": "CVE-2018-13785",
    "cve_description": "In libpng 1.6.34, a wrong calculation of row_factor in the png_check_chunk_length function (pngrutil.c) may trigger an integer overflow and resultant divide-by-zero while processing a crafted PNG file, leading to a denial of service.",
    "cve_publish_date": "2018-07-09",
    "cwe_id": "CWE-190",
    "cwe_name": "Integer Overflow or Wraparound",
    "cwe_description": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
    "commit_message": "[libpng16] Fix the calculation of row_factor in png_check_chunk_length\n\n(Bug report by Thuan Pham, SourceForge issue #278)",
    "type_of_change": "Modification",
    "filename_of_changes": "pngrutil.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "6",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 3170:          (png_ptr->width * png_ptr->channels * (png_ptr->bit_depth > 8? 2: 1)",
        "// Line_Reference 3171:           + 1 + (png_ptr->interlaced? 6: 0));",
        "// Line_Reference 3173:          idat_limit=PNG_UINT_31_MAX;"
    ]
}
