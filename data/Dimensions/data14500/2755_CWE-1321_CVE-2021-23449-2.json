{
    "cve_id": "CVE-2021-23449",
    "cve_description": "This affects the package vm2 before 3.9.4 via a Prototype Pollution attack vector, which can lead to execution of arbitrary code on the host machine.",
    "cve_publish_date": "2021-10-18",
    "cwe_id": "CWE-1321",
    "cwe_name": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')",
    "cwe_description": "The product receives input from an upstream component that specifies attributes that are to be initialized or updated in an object, but it does not properly control modifications of attributes of the object prototype.",
    "commit_message": "Security Fixes",
    "type_of_change": "Modification",
    "filename_of_changes": "main.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "59",
    "number_of_lines_deleted_vulnerable_to_cve": "28",
    "vulnerable_lines": [
        "// Line_Reference 547: /**",
        "// Line_Reference 548:  * Creates the hook to check for the use of async.",
        "// Line_Reference 549:  *",
        "// Line_Reference 550:  * @private",
        "// Line_Reference 551:  * @param {*} internal - The internal vm object.",
        "// Line_Reference 552:  * @return {*} The hook function",
        "// Line_Reference 553:  */",
        "// Line_Reference 554: function makeCheckAsync(internal) {",
        "// Line_Reference 556: \t\tif (hook === 'function' || hook === 'generator_function' || hook === 'eval' || hook === 'run') {",
        "// Line_Reference 557: \t\t\tconst funcConstructor = internal.Function;",
        "// Line_Reference 566: \t\t\tif (args.findIndex(arg => /\\basync\\b/.test(arg)) === -1) return args;",
        "// Line_Reference 567: \t\t\tconst asyncMapped = args.map(arg => arg.replace(/async/g, 'a\\\\u0073ync'));",
        "// Line_Reference 569: \t\t\t\t// Note: funcConstructor is a Sandbox object, however, asyncMapped are only strings.",
        "// Line_Reference 570: \t\t\t\tfuncConstructor(...asyncMapped);",
        "// Line_Reference 572: \t\t\t\t// u is a sandbox object",
        "// Line_Reference 573: \t\t\t\t// Some random syntax error or error because of async.",
        "// Line_Reference 576: \t\t\t\ttry {",
        "// Line_Reference 577: \t\t\t\t\t// Note: funcConstructor is a Sandbox object, however, args are only strings.",
        "// Line_Reference 578: \t\t\t\t\tfuncConstructor(...args);",
        "// Line_Reference 579: \t\t\t\t} catch (e) {",
        "// Line_Reference 580: \t\t\t\t\tthrow internal.Decontextify.value(e);",
        "// Line_Reference 582: \t\t\t\t// Then async error",
        "// Line_Reference 583: \t\t\t\tthrow new VMError('Async not available');",
        "// Line_Reference 587: \t\tthrow new VMError('Async not available');",
        "// Line_Reference 711: \t\tconst hook = fixAsync ? makeCheckAsync(_internal) : null;",
        "// Line_Reference 1175: \t\t\tscript = this.options.strict ? code._compileNodeVMStrict() : code._compileNodeVM();",
        "// Line_Reference 1188: \t\t\tscript = new vm.Script(prefix +",
        "// Line_Reference 1189: \t\t\t\t\tthis._compiler(code, unresolvedFilename) + MODULE_SUFFIX, {"
    ]
}
