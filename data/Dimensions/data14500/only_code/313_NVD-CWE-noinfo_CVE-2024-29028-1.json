// GET /get/httpmeta?url={url} - Get website meta.
g.GET("/get/httpmeta", GetWebsiteMetadata)
// GetWebsiteMetadata godoc
//
//    @Summary    Get website metadata
//    @Tags        get
//    @Produce    json
//    @Param        url    query        string            true    "Website URL"
//    @Success    200    {object}    getter.HTMLMeta    "Extracted metadata"
//    @Failure    400    {object}    nil                "Missing website url | Wrong url"
//    @Failure    406    {object}    nil                "Failed to get website meta with url: %s"
//    @Router        /o/get/GetWebsiteMetadata [GET]
func GetWebsiteMetadata(c echo.Context) error {
urlStr := c.QueryParam("url")
if urlStr == "" {
return echo.NewHTTPError(http.StatusBadRequest, "Missing website url")
}
if _, err := url.Parse(urlStr); err != nil {
return echo.NewHTTPError(http.StatusBadRequest, "Wrong url").SetInternal(err)
}
htmlMeta, err := getter.GetHTMLMeta(urlStr)
if err != nil {
return echo.NewHTTPError(http.StatusNotAcceptable, fmt.Sprintf("Failed to get website meta with url: %s", urlStr)).SetInternal(err)
}
return c.JSON(http.StatusOK, htmlMeta)
}
