{
    "cve_id": "CVE-2022-45962",
    "cve_description": "Open Solutions for Education, Inc openSIS Community Edition v8.0 and earlier is vulnerable to SQL Injection via CalendarModal.php.",
    "cve_publish_date": "2023-02-13",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "Version 9.0 release\n\nOlder version shifted to branch: Version_8.0",
    "type_of_change": "ModificationType.ADD",
    "filename_of_changes": "SchoolCustomFields.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "39",
    "number_of_lines_deleted_vulnerable_to_cve": "23",
    "vulnerable_lines": [
        "// Line_Reference 188:                 $id = DBGet(DBQuery(\"SHOW TABLE STATUS LIKE 'school_custom_fields'\"));",
        "// Line_Reference 189:                 $id[1]['ID'] = $id[1]['AUTO_INCREMENT'];",
        "// Line_Reference 190:                 $id = $id[1]['ID'];",
        "// Line_Reference 191:                 $fields = \"CATEGORY_ID,SYSTEM_FIELD,\";",
        "// Line_Reference 192:                 $values = \"'\" . $_REQUEST['category_id'] . \"','N',\";",
        "// Line_Reference 252:                 $id = DBGet(DBQuery(\"SHOW TABLE STATUS LIKE 'student_field_categories'\"));",
        "// Line_Reference 253:                 $id[1]['ID'] = $id[1]['AUTO_INCREMENT'];",
        "// Line_Reference 254:                 $id = $id[1]['ID'];",
        "// Line_Reference 269:             $go = false;",
        "// Line_Reference 271:             foreach ($columns as $column => $value) {",
        "// Line_Reference 272:                 if (trim($value)) {",
        "// Line_Reference 273:                     $value = paramlib_validation($column, $value);",
        "// Line_Reference 274:                     $fields .= $column . ',';",
        "// Line_Reference 275:                     $values .= \"'\" . str_replace(\"\\'\", \"''\", $value) . \"',\";",
        "// Line_Reference 276:                     $go = true;",
        "// Line_Reference 277:                 }",
        "// Line_Reference 278:             }",
        "// Line_Reference 279:             $sql .= '(' . substr($fields, 0, -1) . ') values(' . substr($values, 0, -1) . ')';",
        "// Line_Reference 281:             if ($go && $flag == 0)",
        "// Line_Reference 282:                 DBQuery($sql);",
        "// Line_Reference 315:     $sql = \"SELECT SCHOOL_ID,CATEGORY_ID,TITLE,TYPE,SELECT_OPTIONS,DEFAULT_SELECTION,SORT_ORDER,REQUIRED,REQUIRED,HIDE FROM school_custom_fields WHERE ID='$_REQUEST[id]'\";",
        "// Line_Reference 334:         $action .= \"&id=\" . strip_tags(trim($_REQUEST[id]));",
        "// Line_Reference 359:     echo \"<input id=custom name=custom type=hidden value=\" . strip_tags(trim($_REQUEST[id])) . \" />\";"
    ]
}
