{
    "cve_id": "CVE-2018-13982",
    "cve_description": "Smarty_Security::isTrustedResourceDir() in Smarty before 3.1.33 is prone to a path traversal vulnerability due to insufficient template code sanitization. This allows attackers controlling the executed template code to bypass the trusted directory security restriction and read arbitrary files.",
    "cve_publish_date": "2018-09-18",
    "cwe_id": "CWE-22",
    "cwe_name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
    "cwe_description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
    "commit_message": "- bugfix  regarding Security Vulnerability did not solve the problem under Linux",
    "type_of_change": "Modification",
    "filename_of_changes": "Smarty.class.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "8",
    "number_of_lines_deleted_vulnerable_to_cve": "13",
    "vulnerable_lines": [
        "// Line_Reference 30:  * @version   3.1.32",
        "// Line_Reference 115:     const SMARTY_VERSION = '3.1.32';",
        "// Line_Reference 838:                 $this->plugins_dir[ $k ] = $this->_realpath(rtrim($v, \"/\\\\\") . DIRECTORY_SEPARATOR, true);",
        "// Line_Reference 1046:         static $sepDotsep = null;",
        "// Line_Reference 1047:         static $sepDot = null;",
        "// Line_Reference 1048:         static $sepSep =null;",
        "// Line_Reference 1051:             $sepDotsep = DIRECTORY_SEPARATOR . '.' . DIRECTORY_SEPARATOR;",
        "// Line_Reference 1052:             $sepDot = DIRECTORY_SEPARATOR . '.';",
        "// Line_Reference 1056:         $path = str_replace(array($nds[DIRECTORY_SEPARATOR], $sepDotsep), DIRECTORY_SEPARATOR, $path);",
        "// Line_Reference 1057:         if (strpos($path,$sepDot) === false && (($realpath === false && $path[0] === '.') || $realpath === null) && $path[0] !== '\\\\') {",
        "// Line_Reference 1058:             return $path;",
        "// Line_Reference 1059:         }",
        "// Line_Reference 1072:         $path = str_replace(array($sepDotsep,$sepSep), DIRECTORY_SEPARATOR, $path);"
    ]
}
