{
    "cve_id": "CVE-2021-20230",
    "cve_description": "A flaw was found in stunnel before 5.57, where it improperly validates client certificates when it is configured to use both redirect and verifyChain options. This flaw allows an attacker with a certificate signed by a Certificate Authority, which is not the one accepted by the stunnel server, to access the tunneled service instead of being redirected to the address specified in the redirect option. The highest threat from this vulnerability is to confidentiality.",
    "cve_publish_date": "2021-02-23",
    "cwe_id": "CWE-295",
    "cwe_name": "Improper Certificate Validation",
    "cwe_description": "The product does not validate, or incorrectly validates, a certificate.",
    "commit_message": "stunnel-5.57",
    "type_of_change": "Modification",
    "filename_of_changes": "options.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "153",
    "number_of_lines_deleted_vulnerable_to_cve": "102",
    "vulnerable_lines": [
        "// Line_Reference 3:  *   Copyright (C) 1998-2019 Michal Trojnara <Michal.Trojnara@stunnel.org>",
        "// Line_Reference 76: NOEXPORT char *parse_global_option(CMD, char *, char *);",
        "// Line_Reference 284:     \"TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256\";",
        "// Line_Reference 315:         parse_global_option(CMD_PRINT_HELP, NULL, NULL);",
        "// Line_Reference 320:         parse_global_option(CMD_PRINT_DEFAULTS, NULL, NULL);",
        "// Line_Reference 382:     if(options_file(configuration_file, type, &section))",
        "// Line_Reference 384:     if(init_section(1, &section))",
        "// Line_Reference 385:         return 1;",
        "// Line_Reference 386: ",
        "// Line_Reference 485:             errstr=parse_global_option(CMD_SET_VALUE, config_opt, config_arg);",
        "// Line_Reference 508:         errstr=parse_global_option(CMD_INITIALIZE, NULL, NULL);",
        "// Line_Reference 517:         if(*section_ptr==&new_service_options)",
        "// Line_Reference 518:             s_log(LOG_INFO, \"Initializing inetd mode configuration\");",
        "// Line_Reference 519:         else",
        "// Line_Reference 520:             s_log(LOG_INFO, \"Initializing service [%s]\",",
        "// Line_Reference 521:                 (*section_ptr)->servname);",
        "// Line_Reference 594:     parse_global_option(CMD_SET_DEFAULTS, NULL, NULL);",
        "// Line_Reference 616: void options_free() {",
        "// Line_Reference 617:     parse_global_option(CMD_FREE, NULL, NULL);",
        "// Line_Reference 646: NOEXPORT char *parse_global_option(CMD cmd, char *opt, char *arg) {",
        "// Line_Reference 658:         new_global_options.chroot_dir=NULL;",
        "// Line_Reference 663:         tmp=global_options.chroot_dir;",
        "// Line_Reference 664:         global_options.chroot_dir=NULL;",
        "// Line_Reference 670:         new_global_options.chroot_dir=str_dup(arg);",
        "// Line_Reference 686:         new_global_options.compression=COMP_NONE;",
        "// Line_Reference 702:             new_global_options.compression=COMP_DEFLATE;",
        "// Line_Reference 704:             new_global_options.compression=COMP_ZLIB;",
        "// Line_Reference 723:         new_global_options.egd_sock=EGD_SOCKET;",
        "// Line_Reference 725:         new_global_options.egd_sock=NULL;",
        "// Line_Reference 731:         tmp=global_options.egd_sock;",
        "// Line_Reference 732:         global_options.egd_sock=NULL;",
        "// Line_Reference 738:         new_global_options.egd_sock=str_dup(arg);",
        "// Line_Reference 837:         new_global_options.option.fips=0;",
        "// Line_Reference 848:         if(!strcasecmp(arg, \"yes\"))",
        "// Line_Reference 849:             new_global_options.option.fips=1;",
        "// Line_Reference 850:         else if(!strcasecmp(arg, \"no\"))",
        "// Line_Reference 851:             new_global_options.option.fips=0;",
        "// Line_Reference 852:         else",
        "// Line_Reference 853:             return \"The argument needs to be either 'yes' or 'no'\";",
        "// Line_Reference 855:         if(strcasecmp(arg, \"no\"))",
        "// Line_Reference 875:         new_global_options.option.foreground=0;",
        "// Line_Reference 876:         new_global_options.option.log_stderr=0;",
        "// Line_Reference 886:             new_global_options.option.foreground=1;",
        "// Line_Reference 887:             new_global_options.option.log_stderr=1;",
        "// Line_Reference 889:             new_global_options.option.foreground=1;",
        "// Line_Reference 890:             new_global_options.option.log_stderr=0;",
        "// Line_Reference 892:             new_global_options.option.foreground=0;",
        "// Line_Reference 893:             new_global_options.option.log_stderr=0;",
        "// Line_Reference 913:         new_global_options.icon[ICON_ACTIVE]=load_icon_default(ICON_ACTIVE);",
        "// Line_Reference 923:         if(!(new_global_options.icon[ICON_ACTIVE]=load_icon_file(arg)))",
        "// Line_Reference 938:         new_global_options.icon[ICON_ERROR]=load_icon_default(ICON_ERROR);",
        "// Line_Reference 948:         if(!(new_global_options.icon[ICON_ERROR]=load_icon_file(arg)))",
        "// Line_Reference 963:         new_global_options.icon[ICON_IDLE]=load_icon_default(ICON_IDLE);",
        "// Line_Reference 973:         if(!(new_global_options.icon[ICON_IDLE]=load_icon_file(arg)))",
        "// Line_Reference 990:         new_global_options.log_file_mode=FILE_MODE_APPEND;",
        "// Line_Reference 1000:             new_global_options.log_file_mode=FILE_MODE_APPEND;",
        "// Line_Reference 1002:             new_global_options.log_file_mode=FILE_MODE_OVERWRITE;",
        "// Line_Reference 1019:         new_global_options.output_file=NULL;",
        "// Line_Reference 1024:         tmp=global_options.output_file;",
        "// Line_Reference 1025:         global_options.output_file=NULL;",
        "// Line_Reference 1031:         new_global_options.output_file=str_dup(arg);",
        "// Line_Reference 1035:         if(!new_global_options.option.foreground /* daemonize() used */ &&",
        "// Line_Reference 1036:                 new_global_options.output_file /* log file enabled */ &&",
        "// Line_Reference 1037:                 new_global_options.output_file[0]!='/' /* relative path */)",
        "// Line_Reference 1052:         new_global_options.pidfile=NULL; /* do not create a pid file */",
        "// Line_Reference 1057:         tmp=global_options.pidfile;",
        "// Line_Reference 1058:         global_options.pidfile=NULL;",
        "// Line_Reference 1065:             new_global_options.pidfile=str_dup(arg);",
        "// Line_Reference 1067:             new_global_options.pidfile=NULL; /* empty -> do not create a pid file */",
        "// Line_Reference 1070:         if(!new_global_options.option.foreground /* daemonize() used */ &&",
        "// Line_Reference 1071:                 new_global_options.pidfile /* pid file enabled */ &&",
        "// Line_Reference 1072:                 new_global_options.pidfile[0]!='/' /* relative path */)",
        "// Line_Reference 1086:         new_global_options.random_bytes=RANDOM_BYTES;",
        "// Line_Reference 1097:             new_global_options.random_bytes=(long)strtol(arg, &tmp_str, 10);",
        "// Line_Reference 1116:         new_global_options.rand_file=str_dup(RANDOM_FILE);",
        "// Line_Reference 1118:         new_global_options.rand_file=NULL;",
        "// Line_Reference 1124:         tmp=global_options.rand_file;",
        "// Line_Reference 1125:         global_options.rand_file=NULL;",
        "// Line_Reference 1131:         new_global_options.rand_file=str_dup(arg);",
        "// Line_Reference 1148:         new_global_options.option.rand_write=1;",
        "// Line_Reference 1158:             new_global_options.option.rand_write=1;",
        "// Line_Reference 1160:             new_global_options.option.rand_write=0;",
        "// Line_Reference 1179:         new_global_options.option.log_syslog=1;",
        "// Line_Reference 1189:             new_global_options.option.log_syslog=1;",
        "// Line_Reference 1191:             new_global_options.option.log_syslog=0;",
        "// Line_Reference 1210:         new_global_options.option.taskbar=1;",
        "// Line_Reference 1220:             new_global_options.option.taskbar=1;",
        "// Line_Reference 1222:             new_global_options.option.taskbar=0;",
        "// Line_Reference 1249:         if(ssl_configure(&new_global_options)) /* configure global TLS settings */",
        "// Line_Reference 1275:         if(section==&service_options || section==&new_service_options)",
        "// Line_Reference 1276:             s_log(LOG_DEBUG, \"Deallocating section defaults\");",
        "// Line_Reference 3549:         s_log(LOG_NOTICE,",
        "// Line_Reference 3550:             \"%25slevel 0 - request and ignore peer cert\", \"\");",
        "// Line_Reference 3551:         s_log(LOG_NOTICE,",
        "// Line_Reference 3552:             \"%25slevel 1 - only validate peer cert if present\", \"\");",
        "// Line_Reference 3553:         s_log(LOG_NOTICE,",
        "// Line_Reference 3554:             \"%25slevel 2 - always require a valid peer cert\", \"\");",
        "// Line_Reference 3555:         s_log(LOG_NOTICE,",
        "// Line_Reference 3556:             \"%25slevel 3 - verify peer with locally installed cert\", \"\");",
        "// Line_Reference 3557:         s_log(LOG_NOTICE,",
        "// Line_Reference 3558:             \"%25slevel 4 - ignore CA chain and only verify peer cert\", \"\");",
        "// Line_Reference 3641:         if(section==&service_options)"
    ]
}
