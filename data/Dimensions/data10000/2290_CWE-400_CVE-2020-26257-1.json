{
    "cve_id": "CVE-2020-26257",
    "cve_description": "Matrix is an ecosystem for open federated Instant Messaging and VoIP. Synapse is a reference \"homeserver\" implementation of Matrix. A malicious or poorly-implemented homeserver can inject malformed events into a room by specifying a different room id in the path of a `/send_join`, `/send_leave`, `/invite` or `/exchange_third_party_invite` request. This can lead to a denial of service in which future events will not be correctly sent to other servers over federation. This affects any server which accepts federation requests from untrusted servers. The Matrix Synapse reference implementation before version 1.23.1 the implementation is vulnerable to this injection attack. Issue is fixed in version 1.23.1. As a workaround homeserver administrators could limit access to the federation API to trusted servers (for example via `federation_domain_whitelist`).",
    "cve_publish_date": "2020-12-09",
    "cwe_id": "CWE-400",
    "cwe_name": "Uncontrolled Resource Consumption",
    "cwe_description": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
    "commit_message": "Consistently use room_id from federation request body (#8776)\n\n* Consistently use room_id from federation request body\r\n\r\nSome federation APIs have a redundant `room_id` path param (see\r\nhttps://github.com/matrix-org/matrix-doc/issues/2330). We should make sure we\r\nconsistently use either the path param or the body param, and the body param is\r\neasier.\r\n\r\n* Kill off some references to \"context\"\r\n\r\nOnce upon a time, \"rooms\" were known as \"contexts\". I think this kills of the\r\nlast references to \"contexts\".",
    "type_of_change": "Modification",
    "filename_of_changes": "federation.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "5",
    "number_of_lines_deleted_vulnerable_to_cve": "5",
    "vulnerable_lines": [
        "// Line_Reference 2689:         self, room_id: str, event_dict: JsonDict",
        "// Line_Reference 2697:             room_id: The ID of the room.",
        "// Line_Reference 2698: ",
        "// Line_Reference 2699:             event_dict (dict[str, Any]): Dictionary containing the event body.",
        "// Line_Reference 2702:         room_version = await self.store.get_room_version_id(room_id)"
    ]
}
