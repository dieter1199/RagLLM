{
    "cve_id": "CVE-2020-12887",
    "cve_description": "Memory leaks were discovered in the CoAP library in Arm Mbed OS 5.15.3 when using the Arm mbed-coap library 5.1.5. The CoAP parser is responsible for parsing received CoAP packets. The function sn_coap_parser_options_parse() parses the CoAP option number field of all options present in the input packet. Each option number is calculated as a sum of the previous option number and a delta of the current option. The delta and the previous option number are expressed as unsigned 16-bit integers. Due to lack of overflow detection, it is possible to craft a packet that wraps the option number around and results in the same option number being processed again in a single packet. Certain options allocate memory by calling a memory allocation function. In the cases of COAP_OPTION_URI_QUERY, COAP_OPTION_URI_PATH, COAP_OPTION_LOCATION_QUERY, and COAP_OPTION_ETAG, there is no check on whether memory has already been allocated, which in conjunction with the option number integer overflow may lead to multiple assignments of allocated memory to a single pointer. This has been demonstrated to lead to memory leak by buffer orphaning. As a result, the memory is never freed.",
    "cve_publish_date": "2020-06-18",
    "cwe_id": "CWE-190",
    "cwe_name": "Integer Overflow or Wraparound",
    "cwe_description": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
    "commit_message": "Implemented measures to prevent memory leaks in sn_coap_parser_options_parse().\n\nAdded a helper uint16_t addition function with overflow detection. The function is used when calculating the extended length and option delta. The overlow detection is needed to avoid wrap-around of option number or length.\nAdditional checks in options using sn_coap_parser_options_parse_multiple_options() have been implemented to avoid overwriting of pointers pointing to previously allocated memory.",
    "type_of_change": "Modification",
    "filename_of_changes": "sn_coap_parser.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "60",
    "number_of_lines_deleted_vulnerable_to_cve": "11",
    "vulnerable_lines": [
        "// Line_Reference 400:                 option_number += option_ext;",
        "// Line_Reference 401:                 *message_left = sn_coap_parser_move_packet_ptr(packet_data_pptr,",
        "// Line_Reference 402:                                                                packet_data_start_ptr,",
        "// Line_Reference 403:                                                                packet_len,",
        "// Line_Reference 404:                                                                1);",
        "// Line_Reference 417:             option_number += 269;",
        "// Line_Reference 418:             *message_left = sn_coap_parser_move_packet_ptr(packet_data_pptr,",
        "// Line_Reference 419:                                                            packet_data_start_ptr,",
        "// Line_Reference 420:                                                            packet_len,",
        "// Line_Reference 421:                                                            2);",
        "// Line_Reference 502:         option_number += previous_option_number;"
    ]
}
