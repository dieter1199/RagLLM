{
    "cve_id": "CVE-2022-1071",
    "cve_description": "User after free in mrb_vm_exec in GitHub repository mruby/mruby prior to 3.2.",
    "cve_publish_date": "2022-03-26",
    "cwe_id": "CWE-416",
    "cwe_name": "Use After Free",
    "cwe_description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
    "commit_message": "vm.c: stack may be reallocated in functions calls.\n\nProbably due to recursive VM calls via `mrb_funcall()`.",
    "type_of_change": "Modification",
    "filename_of_changes": "vm.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "11",
    "number_of_lines_deleted_vulnerable_to_cve": "6",
    "vulnerable_lines": [
        "// Line_Reference 1397:         regs[a] = mrb_hash_get(mrb, va, vb);",
        "// Line_Reference 1404:           regs[a] = mrb_str_aref(mrb, va, vb, mrb_undef_value());",
        "// Line_Reference 1426:       regs[a] = mrb_vm_const_get(mrb, syms[b]);",
        "// Line_Reference 1436:       regs[a] = mrb_const_get(mrb, regs[a], syms[b]);",
        "// Line_Reference 2017:       mrb_value kdict;",
        "// Line_Reference 2024:       regs[a] = mrb_hash_get(mrb, kdict, k);"
    ]
}
