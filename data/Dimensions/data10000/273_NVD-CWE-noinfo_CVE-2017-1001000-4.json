{
    "cve_id": "CVE-2017-1001000",
    "cve_description": "The register_routes function in wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php in the REST API in WordPress 4.7.x before 4.7.2 does not require an integer identifier, which allows remote attackers to modify arbitrary pages via a request for wp-json/wp/v2/posts followed by a numeric value and a non-numeric value, as demonstrated by the wp-json/wp/v2/posts/123?id=123helloworld URI.",
    "cve_publish_date": "2017-04-03",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "REST API: Unify object access handling for simplicity.\n\nRather than repeating ourselves, unifying the access into a single method keeps everything tidy. While we're at it, add in additional schema handling for common parameters.\n\nSee #38792.\nBuilt from https://develop.svn.wordpress.org/trunk@39954\n\n\ngit-svn-id: http://core.svn.wordpress.org/trunk@39891 1a063a9b-81f0-0310-95a4-ce76da25c4cd",
    "type_of_change": "Modification",
    "filename_of_changes": "class-wp-rest-terms-controller.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "57",
    "number_of_lines_deleted_vulnerable_to_cve": "35",
    "vulnerable_lines": [
        "// Line_Reference 111: \t\t\t\t'args'                 => $this->get_endpoint_args_for_item_schema( WP_REST_Server::EDITABLE ),",
        "// Line_Reference 300: \t\t$tax_obj = get_taxonomy( $this->taxonomy );",
        "// Line_Reference 301: \t\tif ( ! $tax_obj || ! $this->check_is_taxonomy_allowed( $this->taxonomy ) ) {",
        "// Line_Reference 302: \t\t\treturn false;",
        "// Line_Reference 304: \t\tif ( 'edit' === $request['context'] && ! current_user_can( 'edit_term', (int) $request['id'] ) ) {",
        "// Line_Reference 320: ",
        "// Line_Reference 321: \t\t$term = get_term( (int) $request['id'], $this->taxonomy );",
        "// Line_Reference 322: ",
        "// Line_Reference 323: \t\tif ( ! $term || $term->taxonomy !== $this->taxonomy ) {",
        "// Line_Reference 324: \t\t\treturn new WP_Error( 'rest_term_invalid', __( 'Term does not exist.' ), array( 'status' => 404 ) );",
        "// Line_Reference 325: \t\t}",
        "// Line_Reference 326: ",
        "// Line_Reference 448: ",
        "// Line_Reference 449: \t\tif ( ! $this->check_is_taxonomy_allowed( $this->taxonomy ) ) {",
        "// Line_Reference 450: \t\t\treturn false;",
        "// Line_Reference 451: \t\t}",
        "// Line_Reference 452: ",
        "// Line_Reference 453: \t\t$term = get_term( (int) $request['id'], $this->taxonomy );",
        "// Line_Reference 454: ",
        "// Line_Reference 455: \t\tif ( ! $term ) {",
        "// Line_Reference 456: \t\t\treturn new WP_Error( 'rest_term_invalid', __( 'Term does not exist.' ), array( 'status' => 404 ) );",
        "// Line_Reference 490: \t\t$term = get_term( (int) $request['id'], $this->taxonomy );",
        "// Line_Reference 491: ",
        "// Line_Reference 501: \t\t$term = get_term( (int) $request['id'], $this->taxonomy );",
        "// Line_Reference 508: \t\t\t$meta_update = $this->meta->update_value( $request['meta'], (int) $request['id'] );",
        "// Line_Reference 538: \t\tif ( ! $this->check_is_taxonomy_allowed( $this->taxonomy ) ) {",
        "// Line_Reference 539: \t\t\treturn false;",
        "// Line_Reference 540: \t\t}",
        "// Line_Reference 541: ",
        "// Line_Reference 542: \t\t$term = get_term( (int) $request['id'], $this->taxonomy );",
        "// Line_Reference 543: ",
        "// Line_Reference 544: \t\tif ( ! $term ) {",
        "// Line_Reference 545: \t\t\treturn new WP_Error( 'rest_term_invalid', __( 'Term does not exist.' ), array( 'status' => 404 ) );",
        "// Line_Reference 573: \t\t$term = get_term( (int) $request['id'], $this->taxonomy );",
        "// Line_Reference 574: "
    ]
}
