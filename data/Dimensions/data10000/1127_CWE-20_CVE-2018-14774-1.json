{
    "cve_id": "CVE-2018-14774",
    "cve_description": "An issue was discovered in HttpKernel in Symfony 2.7.0 through 2.7.48, 2.8.0 through 2.8.43, 3.3.0 through 3.3.17, 3.4.0 through 3.4.13, 4.0.0 through 4.0.13, and 4.1.0 through 4.1.2. When using HttpCache, the values of the X-Forwarded-Host headers are implicitly set as trusted while this should be forbidden, leading to potential host header injection.",
    "cve_publish_date": "2018-08-03",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "[HttpKernel] fix trusted headers management in HttpCache and InlineFragmentRenderer",
    "type_of_change": "Modification",
    "filename_of_changes": "HttpCache.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "20",
    "vulnerable_lines": [
        "// Line_Reference 471:         // modify the X-Forwarded-For header if needed",
        "// Line_Reference 472:         $forwardedFor = $request->headers->get('X-Forwarded-For');",
        "// Line_Reference 473:         if ($forwardedFor) {",
        "// Line_Reference 474:             $request->headers->set('X-Forwarded-For', $forwardedFor.', '.$request->server->get('REMOTE_ADDR'));",
        "// Line_Reference 475:         } else {",
        "// Line_Reference 476:             $request->headers->set('X-Forwarded-For', $request->server->get('REMOTE_ADDR'));",
        "// Line_Reference 477:         }",
        "// Line_Reference 478: ",
        "// Line_Reference 479:         // fix the client IP address by setting it to 127.0.0.1 as HttpCache",
        "// Line_Reference 480:         // is always called from the same process as the backend.",
        "// Line_Reference 481:         $request->server->set('REMOTE_ADDR', '127.0.0.1');",
        "// Line_Reference 482: ",
        "// Line_Reference 483:         // make sure HttpCache is a trusted proxy",
        "// Line_Reference 484:         if (!\\in_array('127.0.0.1', $trustedProxies = Request::getTrustedProxies())) {",
        "// Line_Reference 485:             $trustedProxies[] = '127.0.0.1';",
        "// Line_Reference 486:             Request::setTrustedProxies($trustedProxies);",
        "// Line_Reference 487:         }",
        "// Line_Reference 488: ",
        "// Line_Reference 490:         $response = $this->kernel->handle($request, HttpKernelInterface::MASTER_REQUEST, $catch);",
        "// Line_Reference 491:         // FIXME: we probably need to also catch exceptions if raw === true"
    ]
}
