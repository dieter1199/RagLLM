{
    "cve_id": "CVE-2024-25130",
    "cve_description": "Tuleap is an open source suite to improve management of software developments and collaboration. Prior to version 15.5.99.76 of Tuleap Community Edition and prior to versions 15.5-4 and 15.4-7 of Tuleap Enterprise Edition, users with a read access to a tracker where the mass update feature is used might get access to restricted information. Tuleap Community Edition 15.5.99.76, Tuleap Enterprise Edition 15.5-4, and Tuleap Enterprise Edition 15.4-7 contain a patch for this issue.",
    "cve_publish_date": "2024-02-22",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "fix: request #36803 Mass update clears permissions on artifact\n\nAn additional checkbox is added to control if the field should be\nupdated or not when doing a masschange.\n\nChange-Id: I721298a0f5ec50c3aac1a59efcfba6166958baf0",
    "type_of_change": "Modification",
    "filename_of_changes": "MasschangeDataValueExtractorTest.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "49",
    "number_of_lines_deleted_vulnerable_to_cve": "32",
    "vulnerable_lines": [
        "// Line_Reference 25: use Mockery;",
        "// Line_Reference 26: use Mockery\\Adapter\\Phpunit\\MockeryPHPUnitIntegration;",
        "// Line_Reference 35:     use MockeryPHPUnitIntegration;",
        "// Line_Reference 38:     public function testItReturnsFieldWithItNewValue(): void",
        "// Line_Reference 40:         $form_element_factory           = Mockery::mock(Tracker_FormElementFactory::class);",
        "// Line_Reference 41:         $masschange_data_values_manager = new Tracker_MasschangeDataValueExtractor($form_element_factory);",
        "// Line_Reference 43:         $text_field_1    = Mockery::mock(Tracker_FormElement_Field_Text::class);",
        "// Line_Reference 44:         $text_field_1_id = 1;",
        "// Line_Reference 46:         $text_field_2    = Mockery::mock(Tracker_FormElement_Field_Text::class);",
        "// Line_Reference 47:         $text_field_2_id = 2;",
        "// Line_Reference 49:         $list_field_1    = Mockery::mock(Tracker_FormElement_Field_List::class);",
        "// Line_Reference 50:         $list_field_1_id = 3;",
        "// Line_Reference 51: ",
        "// Line_Reference 52:         $list_field_2    = Mockery::mock(Tracker_FormElement_Field_List::class);",
        "// Line_Reference 53:         $list_field_2_id = 4;",
        "// Line_Reference 54: ",
        "// Line_Reference 55:         $form_element_factory->shouldReceive('getFieldById')->withArgs([$text_field_1_id])->andReturn($text_field_1);",
        "// Line_Reference 56:         $form_element_factory->shouldReceive('getFieldById')->withArgs([$text_field_2_id])->andReturn($text_field_2);",
        "// Line_Reference 57:         $form_element_factory->shouldReceive('getFieldById')->withArgs([$list_field_1_id])->andReturn($list_field_1);",
        "// Line_Reference 58:         $form_element_factory->shouldReceive('getFieldById')->withArgs([$list_field_2_id])->andReturn($list_field_2);",
        "// Line_Reference 62:         $masschange_data = [",
        "// Line_Reference 63:             $text_field_1_id => 'Unchanged',",
        "// Line_Reference 64:             $text_field_2_id => 'Value01',",
        "// Line_Reference 65:             $list_field_1_id => ['-1'],",
        "// Line_Reference 66:             $list_field_2_id => ['Value02'],",
        "// Line_Reference 67:         ];",
        "// Line_Reference 68: ",
        "// Line_Reference 69:         $expected_result = [",
        "// Line_Reference 70:             $text_field_2_id => 'Value01',",
        "// Line_Reference 71:             $list_field_2_id => ['Value02'],",
        "// Line_Reference 72:         ];",
        "// Line_Reference 76:             $masschange_data_values_manager->getNewValues($masschange_data)"
    ]
}
