{
    "cve_id": "CVE-2022-37298",
    "cve_description": "Shinken Solutions Shinken Monitoring Version 2.4.3 affected is vulnerable to Incorrect Access Control. The SafeUnpickler class found in shinken/safepickle.py implements a weak authentication scheme when unserializing objects passed from monitoring nodes to the Shinken monitoring server.",
    "cve_publish_date": "2022-10-20",
    "cwe_id": "CWE-287",
    "cwe_name": "Improper Authentication",
    "cwe_description": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
    "commit_message": "Fix: Dailymotion team (Nicolas Perraud) found a way to bypass pickle.loads protection and execute code from daemon if you can exchange with it's internal port. Now we whitelist allowed class only :)\n\nBonus: update the changelog, Thanks & setup.py so we can release soon :)",
    "type_of_change": "Modification",
    "filename_of_changes": "test_safe_pickle.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "77",
    "number_of_lines_deleted_vulnerable_to_cve": "13",
    "vulnerable_lines": [
        "// Line_Reference 31: ",
        "// Line_Reference 44: ",
        "// Line_Reference 47: ",
        "// Line_Reference 48: ",
        "// Line_Reference 51: ",
        "// Line_Reference 52: ",
        "// Line_Reference 55: ",
        "// Line_Reference 56:         print \"Creating payload\"",
        "// Line_Reference 59:         print \"Payload\", buf",
        "// Line_Reference 60:         #self.assertEqual('HARD', host.state_type)",
        "// Line_Reference 61:         print \"Now loading payload\"",
        "// Line_Reference 68:         #SafeUnpickler.loads(buf)",
        "// Line_Reference 72:         print should_not_change"
    ]
}
