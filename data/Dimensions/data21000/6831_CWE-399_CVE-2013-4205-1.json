{
    "cve_id": "CVE-2013-4205",
    "cve_description": "Memory leak in the unshare_userns function in kernel/user_namespace.c in the Linux kernel before 3.10.6 allows local users to cause a denial of service (memory consumption) via an invalid CLONE_NEWUSER unshare call.",
    "cve_publish_date": "2013-08-25",
    "cwe_id": "CWE-399",
    "cwe_name": "Resource Management Errors",
    "cwe_description": "Weaknesses in this category are related to improper management of system resources.",
    "commit_message": "userns: unshare_userns(&cred) should not populate cred on failure\n\nunshare_userns(new_cred) does *new_cred = prepare_creds() before\ncreate_user_ns() which can fail. However, the caller expects that\nit doesn't need to take care of new_cred if unshare_userns() fails.\n\nWe could change the single caller, sys_unshare(), but I think it\nwould be more clean to avoid the side effects on failure, so with\nthis patch unshare_userns() does put_cred() itself and initializes\n*new_cred only if create_user_ns() succeeeds.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Oleg Nesterov <oleg@redhat.com>\nReviewed-by: Andy Lutomirski <luto@amacapital.net>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "user_namespace.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "9",
    "number_of_lines_deleted_vulnerable_to_cve": "4",
    "vulnerable_lines": [
        "// Line_Reference 113: \tif (!cred)",
        "// Line_Reference 114: \t\treturn -ENOMEM;",
        "// Line_Reference 116: \t*new_cred = cred;",
        "// Line_Reference 117: \treturn create_user_ns(cred);"
    ]
}
