{
    "cve_id": "CVE-2014-0038",
    "cve_description": "The compat_sys_recvmmsg function in net/compat.c in the Linux kernel before 3.13.2, when CONFIG_X86_X32 is enabled, allows local users to gain privileges via a recvmmsg system call with a crafted timeout pointer parameter.",
    "cve_publish_date": "2014-02-06",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "x86, x32: Correct invalid use of user timespec in the kernel\n\nThe x32 case for the recvmsg() timout handling is broken:\n\n  asmlinkage long compat_sys_recvmmsg(int fd, struct compat_mmsghdr __user *mmsg,\n                                      unsigned int vlen, unsigned int flags,\n                                      struct compat_timespec __user *timeout)\n  {\n          int datagrams;\n          struct timespec ktspec;\n\n          if (flags & MSG_CMSG_COMPAT)\n                  return -EINVAL;\n\n          if (COMPAT_USE_64BIT_TIME)\n                  return __sys_recvmmsg(fd, (struct mmsghdr __user *)mmsg, vlen,\n                                        flags | MSG_CMSG_COMPAT,\n                                        (struct timespec *) timeout);\n          ...\n\nThe timeout pointer parameter is provided by userland (hence the __user\nannotation) but for x32 syscalls it's simply cast to a kernel pointer\nand is passed to __sys_recvmmsg which will eventually directly\ndereference it for both reading and writing.  Other callers to\n__sys_recvmmsg properly copy from userland to the kernel first.\n\nThe bug was introduced by commit ee4fa23c4bfc (\"compat: Use\nCOMPAT_USE_64BIT_TIME in net/compat.c\") and should affect all kernels\nsince 3.4 (and perhaps vendor kernels if they backported x32 support\nalong with this code).\n\nNote that CONFIG_X86_X32_ABI gets enabled at build time and only if\nCONFIG_X86_X32 is enabled and ld can build x32 executables.\n\nOther uses of COMPAT_USE_64BIT_TIME seem fine.\n\nThis addresses CVE-2014-0038.\n\nSigned-off-by: PaX Team <pageexec@freemail.hu>\nSigned-off-by: H. Peter Anvin <hpa@linux.intel.com>\nCc: <stable@vger.kernel.org> # v3.4+\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "compat.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "2",
    "number_of_lines_deleted_vulnerable_to_cve": "7",
    "vulnerable_lines": [
        "// Line_Reference 783: \tif (COMPAT_USE_64BIT_TIME)",
        "// Line_Reference 784: \t\treturn __sys_recvmmsg(fd, (struct mmsghdr __user *)mmsg, vlen,",
        "// Line_Reference 785: \t\t\t\t      flags | MSG_CMSG_COMPAT,",
        "// Line_Reference 786: \t\t\t\t      (struct timespec *) timeout);",
        "// Line_Reference 787: ",
        "// Line_Reference 792: \tif (get_compat_timespec(&ktspec, timeout))",
        "// Line_Reference 797: \tif (datagrams > 0 && put_compat_timespec(&ktspec, timeout))"
    ]
}
