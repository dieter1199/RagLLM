{
    "cve_id": "CVE-2018-20683",
    "cve_description": "commands/rsync in Gitolite before 3.6.11, if .gitolite.rc enables rsync, mishandles the rsync command line, which allows attackers to have a \"bad\" impact by triggering use of an option other than -v, -n, -q, or -P.",
    "cve_publish_date": "2019-01-10",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "tighten up security for rsync\n\nNick Cleaton (nick@cleaton.net) found and reported a security issue\ncaused by trusting the remote rsync too much.  It appears that rsync\ncannot -- without special precautions -- be used in any \"restricted\"\nenvironment.\n\nGitolite ships with a \"bundle helper\" called \"rsync\" (disabled\nby default; more details below).  This fix tightens up this\nhelper to close this hole.\n\nTLDR for administrators and packagers:\n\n1.  Am I affected?\n\n    Look in ~/.gitolite.rc for \"rsync\"; if it is there, you are\n    affected.\n\n    This is NOT an essential program, and it is not enabled by\n    default.  You (or a previous administrator of your site)\n    would have to have explicitly enabled it for you to be\n    affected.\n\n2.  What's the quick fix?\n\n    Comment out the \"rsync\" line in ~/.gitolite.rc IMMEDIATELY.\n\n    DO NOT LEAVE IT ENABLED IF YOU ARE UNABLE TO UPGRADE IMMEDIATELY!\n    Uncomment it only after you have upgraded or patched.\n\n3.  That bad, huh?\n\n    Sadly, yes :(\n\nDETAILS:\n\nThis program is not a core program.  Despite the name, it will not\nfunction as a generic \"rsync\".\n\nThis is *only* meant to help out people who are on flaky connections,\ntrying to clone a large repo.\n\nBecause git clone is not resumable, one common technique is to have\nsomeone create a \"bundle\", then download the bundle to seed the local\nrepo, then \"git fetch\" to finish off.  Since the bundle is a single\nfile, you can use resumable mechanisms (like rsync) to download it.\n\nWhat this command does is allow that kind of bundling to happen\nautomatically, if an administrator enables it.\n\nThe user simply rsyncs a bundle file using his gitolite\ncredentials.  As a result, the rsync helper command that ships\nwith gitolite is executed.  This program manages the creation\nand expiry of bundle files, then passes control to the *real*\nrsync program to perform the actual data transfer.\n\nIt is this last step that requires special care when used in a\nrestricted environment, resulting in the need for this patch.",
    "type_of_change": "Modification",
    "filename_of_changes": "rsync",
    "code_language": "Perl",
    "number_of_lines_added_for_mitigation": "6",
    "number_of_lines_deleted_vulnerable_to_cve": "12",
    "vulnerable_lines": [
        "// Line_Reference 31: ",
        "// Line_Reference 32: GENERIC RSYNC SUPPORT",
        "// Line_Reference 33: ",
        "// Line_Reference 34:     TBD",
        "// Line_Reference 35: ",
        "// Line_Reference 46:         rsync -P git@host:repo.bundle .",
        "// Line_Reference 54: GENERIC RSYNC SUPPORT",
        "// Line_Reference 55: ",
        "// Line_Reference 56:     TBD",
        "// Line_Reference 65: if ( $ENV{SSH_ORIGINAL_COMMAND} =~ /^rsync --server --sender (-[-\\w=.]+ )+\\. (\\S+)\\.bundle$/ ) {",
        "// Line_Reference 67:     my $repo = $2;",
        "// Line_Reference 84: _warn \"invalid rsync command '$ENV{SSH_ORIGINAL_COMMAND}'\";"
    ]
}
