{
    "cve_id": "CVE-2014-3772",
    "cve_description": "TeamPass before 2.1.20 allows remote attackers to bypass access restrictions via a request to index.php followed by a direct request to a file that calls the session_start function before checking the CPM key, as demonstrated by a request to sources/upload/upload.files.php.",
    "cve_publish_date": "2014-08-07",
    "cwe_id": "CWE-264",
    "cwe_name": "Permissions, Privileges, and Access Controls",
    "cwe_description": "Weaknesses in this category are related to the management of permissions, privileges, and other security features that are used to perform access control.",
    "commit_message": "2.1.20",
    "type_of_change": "Modification",
    "filename_of_changes": "items.queries.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "142",
    "number_of_lines_deleted_vulnerable_to_cve": "45",
    "vulnerable_lines": [
        "// Line_Reference 105:                 $data = $db->fetchRow(\"SELECT COUNT(*) FROM \".$pre.\"items WHERE label = '\".addslashes($label).\"' AND inactif=0\");",
        "// Line_Reference 494:                                     WHERE i.field_id = '\".$field_data[0].\"'",
        "// Line_Reference 495:                                     AND i.item_id=\".$dataReceived['id']",
        "// Line_Reference 570:                         $dataTmp = $db->fetchRow(\"SELECT COUNT(*) FROM \".$pre.\"automatic_del WHERE item_id = '\".$dataReceived['id'].\"'\");",
        "// Line_Reference 1027:             $dataDeleted = $db->fetchRow(\"SELECT COUNT(*) FROM \".$pre.\"log_items WHERE id_item = '\".$_POST['id'].\"' AND action = 'at_delete'\");",
        "// Line_Reference 1028:             $dataRestored = $db->fetchRow(\"SELECT COUNT(*) FROM \".$pre.\"log_items WHERE id_item = '\".$_POST['id'].\"' AND action = 'at_restored'\");",
        "// Line_Reference 1387:         \t\"SELECT *",
        "// Line_Reference 1531:             /*",
        "// Line_Reference 1532:         * CASE",
        "// Line_Reference 1533:         * Generate a password",
        "// Line_Reference 1534:         */",
        "// Line_Reference 1535:         case \"pw_generate\":",
        "// Line_Reference 1536:             $pwgen = new SplClassLoader('Encryption\\PwGen', '../includes/libraries');",
        "// Line_Reference 1537:             $pwgen->register();",
        "// Line_Reference 1538:             $pwgen = new Encryption\\PwGen\\pwgen();",
        "// Line_Reference 1539:             // Set pw size",
        "// Line_Reference 1540:             $pwgen->setLength($_POST['size']);",
        "// Line_Reference 1541:             // Include at least one number in the password",
        "// Line_Reference 1542:             $pwgen->setNumerals(($_POST['num'] == \"true\")? true : false);",
        "// Line_Reference 1543:             // Include at least one capital letter in the password",
        "// Line_Reference 1544:             $pwgen->setCapitalize(($_POST['maj'] == \"true\")? true : false);",
        "// Line_Reference 1545:             // Include at least one symbol in the password",
        "// Line_Reference 1546:             $pwgen->setSymbols(($_POST['symb'] == \"true\")? true : false);",
        "// Line_Reference 1547:             // Complete random, hard to memorize password",
        "// Line_Reference 1548:             if (isset($_POST['secure']) && $_POST['secure'] == \"true\") {",
        "// Line_Reference 1549:                 $pwgen->setSecure(true);",
        "// Line_Reference 1550:                 $pwgen->setSymbols(true);",
        "// Line_Reference 1551:                 $pwgen->setCapitalize(true);",
        "// Line_Reference 1552:                 $pwgen->setNumerals(true);",
        "// Line_Reference 1553:             } else {",
        "// Line_Reference 1554:                 $pwgen->setSecure(false);",
        "// Line_Reference 1555:             }",
        "// Line_Reference 1556:             echo prepareExchangedData(array(\"key\" => $pwgen->generate()), \"encode\");",
        "// Line_Reference 1557:             break;",
        "// Line_Reference 1558: ",
        "// Line_Reference 1613:                 $data = $db->fetchRow(\"SELECT id, title FROM \".$pre.\"nested_tree WHERE title = '\".addslashes($title).\"'\");",
        "// Line_Reference 1620:             $tmp = $db->fetchRow(",
        "// Line_Reference 1727:                 $data_count = $db->fetchRow(\"SELECT COUNT(*) FROM \".$pre.\"items WHERE inactif = 0\");",
        "// Line_Reference 1728:                 $whereArg = \" AND i.id_tree=\".$_POST['id'];",
        "// Line_Reference 2109:                 $dataTmp = $db->fetchRow(\"SELECT timestamp, user_id FROM \".$pre.\"items_edition WHERE item_id = '\".$_POST['item_id'].\"'\");//echo \">\".$dataTmp[0];",
        "// Line_Reference 2118:                     $dataTmp = $db->fetchRow(\"SELECT timestamp, user_id FROM \".$pre.\"items_edition WHERE item_id = '\".$_POST['item_id'].\"'\");",
        "// Line_Reference 2146:             $data = $db->fetchRow(\"SELECT valeur FROM \".$pre.\"misc WHERE type='complex' AND intitule = '\".$_POST['groupe'].\"'\");",
        "// Line_Reference 2214:             $data = $db->fetchRow(\"SELECT name,id_item,file FROM \".$pre.\"files WHERE id = '\".$_POST['file_id'].\"'\");",
        "// Line_Reference 2585:             $data = $db->fetchRow(\"SELECT date FROM \".$pre.\"log_items WHERE action = 'at_modification' AND id_item = '\".$_POST['item_id'].\"' ORDER BY date DESC\");",
        "// Line_Reference 2626:     $data = $db->fetchRow(\"SELECT bloquer_creation,bloquer_modification,personal_folder FROM \".$pre.\"nested_tree WHERE id = '\".$groupe.\"'\");"
    ]
}
