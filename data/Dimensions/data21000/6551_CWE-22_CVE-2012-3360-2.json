{
    "cve_id": "CVE-2012-3360",
    "cve_description": "Directory traversal vulnerability in virt/disk/api.py in OpenStack Compute (Nova) Folsom (2012.2) and Essex (2012.1), when used over libvirt-based hypervisors, allows remote authenticated users to write arbitrary files to the disk image via a .. (dot dot) in the path attribute of a file element.",
    "cve_publish_date": "2012-07-22",
    "cwe_id": "CWE-22",
    "cwe_name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
    "cwe_description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
    "commit_message": "Prevent file injection writing to host filesystem.\n\nFix bug 1015531, CVE-2012-3360, CVE-2012-3361\n\nThis patch prevents the file injection code from writing into the host\nfilesystem if a user specifies a path for the injected file that\ncontains '..'.  The check is to make sure that the final normalized path\nthat is about to be written to is within the mounted guest filesystem.\n\nSigned-off-by: Russell Bryant <rbryant@redhat.com>\nSigned-off-by: PÃ¡draig Brady <pbrady@redhat.com>\nSigned-off-by: Mark McLoughlin <markmc@redhat.com>\n\nChange-Id: I658cd12fd319cee91eb9544cdf53c862c5d2c560",
    "type_of_change": "Modification",
    "filename_of_changes": "api.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "46",
    "number_of_lines_deleted_vulnerable_to_cve": "25",
    "vulnerable_lines": [
        "// Line_Reference 314: def _inject_file_into_fs(fs, path, contents):",
        "// Line_Reference 315:     absolute_path = os.path.join(fs, path.lstrip('/'))",
        "// Line_Reference 318:     utils.execute('tee', absolute_path, process_input=contents,",
        "// Line_Reference 319:           run_as_root=True)",
        "// Line_Reference 323:     metadata_path = os.path.join(fs, \"meta.js\")",
        "// Line_Reference 325: ",
        "// Line_Reference 326:     utils.execute('tee', metadata_path,",
        "// Line_Reference 327:                   process_input=jsonutils.dumps(metadata), run_as_root=True)",
        "// Line_Reference 336:     sshdir = os.path.join(fs, 'root', '.ssh')",
        "// Line_Reference 340:     keyfile = os.path.join(sshdir, 'authorized_keys')",
        "// Line_Reference 341:     key_data = [",
        "// Line_Reference 347:     ]",
        "// Line_Reference 348:     utils.execute('tee', '-a', keyfile,",
        "// Line_Reference 349:                   process_input=''.join(key_data), run_as_root=True)",
        "// Line_Reference 357:     netdir = os.path.join(os.path.join(fs, 'etc'), 'network')",
        "// Line_Reference 361:     netfile = os.path.join(netdir, 'interfaces')",
        "// Line_Reference 362:     utils.execute('tee', netfile, process_input=net, run_as_root=True)",
        "// Line_Reference 387:     utils.execute('cp', os.path.join(fs, 'etc', 'passwd'), tmp_passwd,",
        "// Line_Reference 388:                   run_as_root=True)",
        "// Line_Reference 389:     utils.execute('cp', os.path.join(fs, 'etc', 'shadow'), tmp_shadow,",
        "// Line_Reference 390:                   run_as_root=True)",
        "// Line_Reference 392:     utils.execute('cp', tmp_passwd, os.path.join(fs, 'etc', 'passwd'),",
        "// Line_Reference 393:                   run_as_root=True)",
        "// Line_Reference 395:     utils.execute('cp', tmp_shadow, os.path.join(fs, 'etc', 'shadow'),",
        "// Line_Reference 396:                   run_as_root=True)"
    ]
}
