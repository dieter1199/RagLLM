{
    "cve_id": "CVE-2014-9731",
    "cve_description": "The UDF filesystem implementation in the Linux kernel before 3.18.2 does not ensure that space is available for storing a symlink target's name along with a trailing \\0 character, which allows local users to obtain sensitive information via a crafted filesystem image, related to fs/udf/symlink.c and fs/udf/unicode.c.",
    "cve_publish_date": "2015-08-31",
    "cwe_id": "CWE-17",
    "cwe_name": "DEPRECATED: Code",
    "cwe_description": "This entry has been deprecated.  It was originally used for organizing the Development View (CWE-699) and some other views, but it introduced unnecessary complexity and depth to the resulting tree.",
    "commit_message": "udf: Check path length when reading symlink\n\nSymlink reading code does not check whether the resulting path fits into\nthe page provided by the generic code. This isn't as easy as just\nchecking the symlink size because of various encoding conversions we\nperform on path. So we have to check whether there is still enough space\nin the buffer on the fly.\n\nCC: stable@vger.kernel.org\nReported-by: Carl Henrik Lunde <chlunde@ping.uio.no>\nSigned-off-by: Jan Kara <jack@suse.cz>",
    "type_of_change": "Modification",
    "filename_of_changes": "unicode.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "16",
    "number_of_lines_deleted_vulnerable_to_cve": "12",
    "vulnerable_lines": [
        "// Line_Reference 31: static int udf_translate_to_linux(uint8_t *, uint8_t *, int, uint8_t *, int);",
        "// Line_Reference 336: int udf_get_filename(struct super_block *sb, uint8_t *sname, uint8_t *dname,",
        "// Line_Reference 337: \t\t     int flen)",
        "// Line_Reference 350: \tif (udf_build_ustr_exact(unifilename, sname, flen))",
        "// Line_Reference 369: \tlen = udf_translate_to_linux(dname, filename->u_name, filename->u_len,",
        "// Line_Reference 407: static int udf_translate_to_linux(uint8_t *newName, uint8_t *udfName,",
        "// Line_Reference 408: \t\t\t\t  int udfLen, uint8_t *fidName,",
        "// Line_Reference 409: \t\t\t\t  int fidNameLen)",
        "// Line_Reference 442: \t\t\tif (newIndex < 256)",
        "// Line_Reference 470: \t\t\tmaxFilenameLen = 250 - localExtIndex;",
        "// Line_Reference 475: \t\t} else if (newIndex > 250)",
        "// Line_Reference 476: \t\t\tnewIndex = 250;"
    ]
}
