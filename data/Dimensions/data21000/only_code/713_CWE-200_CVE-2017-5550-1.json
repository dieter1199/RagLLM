struct pipe_buffer *buf;
int idx = i->idx;
size_t off = i->iov_offset, orig_sz;
orig_sz = size;
size += off - pipe->bufs[idx].offset;
if (size <= buf->len)
size -= buf->len;
buf->len = size;
off = i->iov_offset = buf->offset + size;
}
if (off)
idx = next_idx(idx, pipe);
if (pipe->nrbufs) {
int unused = (pipe->curbuf + pipe->nrbufs) & (pipe->buffers - 1);
/* [curbuf,unused) is in use.  Free [idx,unused) */
while (idx != unused) {
pipe_buf_release(pipe, &pipe->bufs[idx]);
idx = next_idx(idx, pipe);
pipe->nrbufs--;
}
i->count -= orig_sz;
