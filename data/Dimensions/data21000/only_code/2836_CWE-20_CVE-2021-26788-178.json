* @file lpc546xx_eth_driver.h
* @brief LPC54608/LPC54618/LPC54628 Ethernet MAC driver
* Copyright (C) 2010-2020 Oryx Embedded SARL. All rights reserved.
* @version 2.0.0
#ifndef _LPC546XX_ETH_DRIVER_H
#define _LPC546XX_ETH_DRIVER_H
#ifndef LPC546XX_ETH_TX_BUFFER_COUNT
#define LPC546XX_ETH_TX_BUFFER_COUNT 3
#elif (LPC546XX_ETH_TX_BUFFER_COUNT < 1)
#error LPC546XX_ETH_TX_BUFFER_COUNT parameter is not valid
#ifndef LPC546XX_ETH_TX_BUFFER_SIZE
#define LPC546XX_ETH_TX_BUFFER_SIZE 1536
#elif (LPC546XX_ETH_TX_BUFFER_SIZE != 1536)
#error LPC546XX_ETH_TX_BUFFER_SIZE parameter is not valid
#ifndef LPC546XX_ETH_RX_BUFFER_COUNT
#define LPC546XX_ETH_RX_BUFFER_COUNT 6
#elif (LPC546XX_ETH_RX_BUFFER_COUNT < 1)
#error LPC546XX_ETH_RX_BUFFER_COUNT parameter is not valid
#ifndef LPC546XX_ETH_RX_BUFFER_SIZE
#define LPC546XX_ETH_RX_BUFFER_SIZE 1536
#elif (LPC546XX_ETH_RX_BUFFER_SIZE != 1536)
#error LPC546XX_ETH_RX_BUFFER_SIZE parameter is not valid
#ifndef LPC546XX_ETH_IRQ_PRIORITY_GROUPING
#define LPC546XX_ETH_IRQ_PRIORITY_GROUPING 4
#elif (LPC546XX_ETH_IRQ_PRIORITY_GROUPING < 0)
#error LPC546XX_ETH_IRQ_PRIORITY_GROUPING parameter is not valid
#ifndef LPC546XX_ETH_IRQ_GROUP_PRIORITY
#define LPC546XX_ETH_IRQ_GROUP_PRIORITY 6
#elif (LPC546XX_ETH_IRQ_GROUP_PRIORITY < 0)
#error LPC546XX_ETH_IRQ_GROUP_PRIORITY parameter is not valid
#ifndef LPC546XX_ETH_IRQ_SUB_PRIORITY
#define LPC546XX_ETH_IRQ_SUB_PRIORITY 0
#elif (LPC546XX_ETH_IRQ_SUB_PRIORITY < 0)
#error LPC546XX_ETH_IRQ_SUB_PRIORITY parameter is not valid
} Lpc546xxTxDmaDesc;
} Lpc546xxRxDmaDesc;
//LPC546xx Ethernet MAC driver
extern const NicDriver lpc546xxEthDriver;
//LPC546xx Ethernet MAC related functions
error_t lpc546xxEthInit(NetInterface *interface);
void lpc546xxEthInitGpio(NetInterface *interface);
void lpc546xxEthInitDmaDesc(NetInterface *interface);
void lpc546xxEthTick(NetInterface *interface);
void lpc546xxEthEnableIrq(NetInterface *interface);
void lpc546xxEthDisableIrq(NetInterface *interface);
void lpc546xxEthEventHandler(NetInterface *interface);
error_t lpc546xxEthSendPacket(NetInterface *interface,
error_t lpc546xxEthReceivePacket(NetInterface *interface);
error_t lpc546xxEthUpdateMacAddrFilter(NetInterface *interface);
error_t lpc546xxEthUpdateMacConfig(NetInterface *interface);
void lpc546xxEthWritePhyReg(uint8_t opcode, uint8_t phyAddr,
uint16_t lpc546xxEthReadPhyReg(uint8_t opcode, uint8_t phyAddr,