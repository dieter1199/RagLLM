function getLLMProvider(modelPreference = null) {
const vectorSelection = process.env.LLM_PROVIDER || "openai";
switch (vectorSelection) {
return new OpenAiLLM(embedder, modelPreference);
return new AzureOpenAiLLM(embedder, modelPreference);
return new AnthropicLLM(embedder, modelPreference);
return new GeminiLLM(embedder, modelPreference);
return new LMStudioLLM(embedder, modelPreference);
return new LocalAiLLM(embedder, modelPreference);
return new OllamaAILLM(embedder, modelPreference);
return new TogetherAiLLM(embedder, modelPreference);
return new PerplexityLLM(embedder, modelPreference);
return new OpenRouterLLM(embedder, modelPreference);
return new MistralLLM(embedder, modelPreference);
return new NativeLLM(embedder, modelPreference);
return new HuggingFaceLLM(embedder, modelPreference);
return new GroqLLM(embedder, modelPreference);