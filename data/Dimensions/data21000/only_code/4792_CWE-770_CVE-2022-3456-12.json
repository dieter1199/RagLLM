from parameterized import parameterized
default_config = {
'rate-limit': 5,
}
# When requesting multple time the login page
for i in range(0, 6):
self.getPage('/login/')
class LoginPageRateLimitWithSessionDirTest(rdiffweb.test.WebCase):
default_config = {
'rate-limit-dir': '/tmp',
'rate-limit': 5,
}
def test_login_ratelimit(self):
# When requesting multple time the login page
for i in range(0, 6):
self.getPage('/login/')
# Then a 429 error (too many request) is return
class LoginPageRateLimitTestWithXForwardedFor(rdiffweb.test.WebCase):
default_config = {
'rate-limit': 5,
}
def test_login_ratelimit(self):
# When requesting multple time the login page
for i in range(0, 6):
self.getPage('/login/', headers=[('X-Forwarded-For', '127.0.0.%s' % i)])
# Then a 429 error (too many request) is return
class LoginPageRateLimitTestWithXRealIP(rdiffweb.test.WebCase):
default_config = {
'rate-limit': 5,
}
def test_login_ratelimit(self):
# Given an unauthenticate
# When requesting multple time the login page
for i in range(0, 6):
self.getPage('/login/', headers=[('X-Real-IP', '127.0.0.%s' % i)])
# Then a 200 is return.
self.assertStatus(200)
