/*
* Find a device specified by @devid or @uuid in the list of @fs_devices, or
* return NULL.
*
* If devid and uuid are both specified, the match must be exact, otherwise
* only devid is used.
*/
static struct btrfs_device *find_device(struct btrfs_fs_devices *fs_devices,
u64 devid, const u8 *uuid)
{
struct btrfs_device *dev;
list_for_each_entry(dev, &fs_devices->devices, dev_list) {
if (dev->devid == devid &&
(!uuid || !memcmp(dev->uuid, uuid, BTRFS_UUID_SIZE))) {
return dev;
}
}
return NULL;
}
device = find_device(fs_devices, devid,
disk_super->dev_item.uuid);
disk_super->metadata_uuid);
disk_super->fsid);
NULL);
fs_uuid);
u64 devid, u8 *uuid, u8 *fsid)
device = find_device(fs_devices, devid, uuid);
if (device)
return device;
fs_devices = fs_devices->seed;
devid, uuid, NULL);
fs_uuid);
dev = btrfs_find_device(fs_info->fs_devices, stats->devid, NULL, NULL);
dev = btrfs_find_device(fs_info->fs_devices, devid, NULL, NULL);
dev = find_device(fs_info->fs_devices->seed, devid, NULL);
