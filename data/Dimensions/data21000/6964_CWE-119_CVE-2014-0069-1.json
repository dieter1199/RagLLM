{
    "cve_id": "CVE-2014-0069",
    "cve_description": "The cifs_iovec_write function in fs/cifs/file.c in the Linux kernel through 3.13.5 does not properly handle uncached write operations that copy fewer than the requested number of bytes, which allows local users to obtain sensitive information from kernel memory, cause a denial of service (memory corruption and system crash), or possibly gain privileges via a writev system call with a crafted pointer.",
    "cve_publish_date": "2014-02-28",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "cifs: ensure that uncached writes handle unmapped areas correctly\n\nIt's possible for userland to pass down an iovec via writev() that has a\nbogus user pointer in it. If that happens and we're doing an uncached\nwrite, then we can end up getting less bytes than we expect from the\ncall to iov_iter_copy_from_user. This is CVE-2014-0069\n\ncifs_iovec_write isn't set up to handle that situation however. It'll\nblindly keep chugging through the page array and not filling those pages\nwith anything useful. Worse yet, we'll later end up with a negative\nnumber in wdata->tailsz, which will confuse the sending routines and\ncause an oops at the very least.\n\nFix this by having the copy phase of cifs_iovec_write stop copying data\nin this situation and send the last write as a short one. At the same\ntime, we want to avoid sending a zero-length write to the server, so\nbreak out of the loop and set rc to -EFAULT if that happens. This also\nallows us to handle the case where no address in the iovec is valid.\n\n[Note: Marking this for stable on v3.4+ kernels, but kernels as old as\n       v2.6.38 may have a similar problem and may need similar fix]\n\nCc: <stable@vger.kernel.org> # v3.4+\nReviewed-by: Pavel Shilovsky <piastry@etersoft.ru>\nReported-by: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Jeff Layton <jlayton@redhat.com>\nSigned-off-by: Steve French <smfrench@gmail.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "file.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "34",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 2392: \tsize_t copied, len, cur_len;",
        "// Line_Reference 2447: \t\t\tcopied = min_t(const size_t, cur_len, PAGE_SIZE);",
        "// Line_Reference 2449: \t\t\t\t\t\t\t 0, copied);"
    ]
}
