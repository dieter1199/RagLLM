{
    "cve_id": "CVE-2022-46177",
    "cve_description": "Discourse is an option source discussion platform. Prior to version 2.8.14 on the `stable` branch and version 3.0.0.beta16 on the `beta` and `tests-passed` branches, when a user requests for a password reset link email, then changes their primary email, the old reset email is still valid. When the old reset email is used to reset the password, the Discourse account's primary email would be re-linked to the old email. If the old email address is compromised or has transferred ownership, this leads to an account takeover. This is however mitigated by the SiteSetting `email_token_valid_hours` which is currently 48 hours. Users should upgrade to versions 2.8.14 or 3.0.0.beta15 to receive a patch. As a workaround, lower `email_token_valid_hours ` as needed.",
    "cve_publish_date": "2023-01-05",
    "cwe_id": "CWE-613",
    "cwe_name": "Insufficient Session Expiration",
    "cwe_description": "According to WASC, \"Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization.\"",
    "commit_message": "SECURITY: Delete email tokens when a user's email is changed or deleted (#19735)\n\nCo-authored-by: OsamaSayegh <asooomaasoooma90@gmail.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "users_controller_spec.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "9",
    "number_of_lines_deleted_vulnerable_to_cve": "10",
    "vulnerable_lines": [
        "// Line_Reference 3659:     it \"can destroy associated email tokens\" do",
        "// Line_Reference 3663:       expect { updater.change_to(new_email) }",
        "// Line_Reference 3664:         .to change { user1.email_tokens.count }.by(1)",
        "// Line_Reference 3666:       expect { delete \"/u/#{user1.username}/preferences/email.json\", params: { email: new_email } }",
        "// Line_Reference 3667:         .to change { user1.email_tokens.count }.by(-1)",
        "// Line_Reference 3669:       expect(user1.email_tokens.first.email).to eq(user1.email)",
        "// Line_Reference 3925:         token.reload",
        "// Line_Reference 3926:         expect(token.expired?).to eq(true)",
        "// Line_Reference 4016:         token.reload",
        "// Line_Reference 4017:         expect(token.expired?).to eq(true)"
    ]
}
