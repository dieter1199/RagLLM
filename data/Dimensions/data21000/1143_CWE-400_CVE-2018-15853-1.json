{
    "cve_id": "CVE-2018-15853",
    "cve_description": "Endless recursion exists in xkbcomp/expr.c in xkbcommon and libxkbcommon before 0.8.1, which could be used by local attackers to crash xkbcommon users by supplying a crafted keymap file that triggers boolean negation.",
    "cve_publish_date": "2018-08-25",
    "cwe_id": "CWE-400",
    "cwe_name": "Uncontrolled Resource Consumption",
    "cwe_description": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
    "commit_message": "xkbcomp: fix stack overflow when evaluating boolean negation\n\nThe expression evaluator would go into an infinite recursion when\nevaluating something like this as a boolean: `!True`. Instead of\nrecursing to just `True` and negating, it recursed to `!True` itself\nagain.\n\nBug inherited from xkbcomp.\n\nCaught with the afl fuzzer.\n\nSigned-off-by: Ran Benita <ran234@gmail.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "expr.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 168:         ok = ExprResolveBoolean(ctx, expr, set_rtrn);"
    ]
}
