{
    "cve_id": "CVE-2022-26530",
    "cve_description": "swaylock before 1.6 allows attackers to trigger a crash and achieve unlocked access to a Wayland compositor.",
    "cve_publish_date": "2022-04-03",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Add support for ext-session-lock-v1\n\nThis is a new protocol to lock the session [1]. It should be more\nreliable than layer-shell + input-inhibitor.\n\n[1]: https://gitlab.freedesktop.org/wayland/wayland-protocols/-/merge_requests/131",
    "type_of_change": "Modification",
    "filename_of_changes": "main.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "96",
    "number_of_lines_deleted_vulnerable_to_cve": "29",
    "vulnerable_lines": [
        "// Line_Reference 123: static void create_layer_surface(struct swaylock_surface *surface) {",
        "// Line_Reference 137: \tsurface->layer_surface = zwlr_layer_shell_v1_get_layer_surface(",
        "// Line_Reference 138: \t\t\tstate->layer_shell, surface->surface, surface->output,",
        "// Line_Reference 139: \t\t\tZWLR_LAYER_SHELL_V1_LAYER_OVERLAY, \"lockscreen\");",
        "// Line_Reference 140: \tassert(surface->layer_surface);",
        "// Line_Reference 141: ",
        "// Line_Reference 142: \tzwlr_layer_surface_v1_set_size(surface->layer_surface, 0, 0);",
        "// Line_Reference 143: \tzwlr_layer_surface_v1_set_anchor(surface->layer_surface,",
        "// Line_Reference 144: \t\t\tZWLR_LAYER_SURFACE_V1_ANCHOR_TOP |",
        "// Line_Reference 145: \t\t\tZWLR_LAYER_SURFACE_V1_ANCHOR_RIGHT |",
        "// Line_Reference 146: \t\t\tZWLR_LAYER_SURFACE_V1_ANCHOR_BOTTOM |",
        "// Line_Reference 147: \t\t\tZWLR_LAYER_SURFACE_V1_ANCHOR_LEFT);",
        "// Line_Reference 148: \tzwlr_layer_surface_v1_set_exclusive_zone(surface->layer_surface, -1);",
        "// Line_Reference 149: \tzwlr_layer_surface_v1_set_keyboard_interactivity(",
        "// Line_Reference 150: \t\t\tsurface->layer_surface, true);",
        "// Line_Reference 151: \tzwlr_layer_surface_v1_add_listener(surface->layer_surface,",
        "// Line_Reference 152: \t\t\t&layer_surface_listener, surface);",
        "// Line_Reference 164: \twl_surface_commit(surface->surface);",
        "// Line_Reference 344: \t\t\tcreate_layer_surface(surface);",
        "// Line_Reference 1185: \tassert(state.compositor && state.layer_shell && state.shm);",
        "// Line_Reference 1186: \tif (!state.input_inhibit_manager) {",
        "// Line_Reference 1187: \t\tfree(state.args.font);",
        "// Line_Reference 1188: \t\tswaylock_log(LOG_ERROR, \"Compositor does not support the input \"",
        "// Line_Reference 1189: \t\t\t\t\"inhibitor protocol, refusing to run insecurely\");",
        "// Line_Reference 1193: \tzwlr_input_inhibit_manager_v1_get_inhibitor(state.input_inhibit_manager);",
        "// Line_Reference 1196: \t\tswaylock_log(LOG_ERROR, \"Exiting - failed to inhibit input:\"",
        "// Line_Reference 1197: \t\t\t\t\" is another lockscreen already running?\");",
        "// Line_Reference 1198: \t\treturn 2;",
        "// Line_Reference 1217: \t\tcreate_layer_surface(surface);"
    ]
}
