{
    "cve_id": "CVE-2014-4343",
    "cve_description": "Double free vulnerability in the init_ctx_reselect function in the SPNEGO initiator in lib/gssapi/spnego/spnego_mech.c in MIT Kerberos 5 (aka krb5) 1.10.x through 1.12.x before 1.12.2 allows remote attackers to cause a denial of service (memory corruption) or possibly execute arbitrary code via network traffic that appears to come from an intended acceptor, but specifies a security mechanism different from the one proposed by the initiator.",
    "cve_publish_date": "2014-08-14",
    "cwe_id": "CWE-415",
    "cwe_name": "Double Free",
    "cwe_description": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations.",
    "commit_message": "Fix double-free in SPNEGO [CVE-2014-4343]\n\nIn commit cd7d6b08 (\"Verify acceptor's mech in SPNEGO initiator\") the\npointer sc->internal_mech became an alias into sc->mech_set->elements,\nwhich should be considered constant for the duration of the SPNEGO\ncontext.  So don't free it.\n\nCVE-2014-4343:\n\nIn MIT krb5 releases 1.10 and newer, an unauthenticated remote\nattacker with the ability to spoof packets appearing to be from a\nGSSAPI acceptor can cause a double-free condition in GSSAPI initiators\n(clients) which are using the SPNEGO mechanism, by returning a\ndifferent underlying mechanism than was proposed by the initiator.  At\nthis stage of the negotiation, the acceptor is unauthenticated, and\nthe acceptor's response could be spoofed by an attacker with the\nability to inject traffic to the initiator.\n\nHistorically, some double-free vulnerabilities can be translated into\nremote code execution, though the necessary exploits must be tailored\nto the individual application and are usually quite\ncomplicated. Double-frees can also be exploited to cause an\napplication crash, for a denial of service.  However, most GSSAPI\nclient applications are not vulnerable, as the SPNEGO mechanism is not\nused by default (when GSS_C_NO_OID is passed as the mech_type argument\nto gss_init_sec_context()).  The most common use of SPNEGO is for\nHTTP-Negotiate, used in web browsers and other web clients.  Most such\nclients are believed to not offer HTTP-Negotiate by default, instead\nrequiring a whitelist of sites for which it may be used to be\nconfigured.  If the whitelist is configured to only allow\nHTTP-Negotiate over TLS connections (\"https://\"), a successful\nattacker must also spoof the web server's SSL certificate, due to the\nway the WWW-Authenticate header is sent in a 401 (Unauthorized)\nresponse message.  Unfortunately, many instructions for enabling\nHTTP-Negotiate in common web browsers do not include a TLS\nrequirement.\n\n    CVSSv2 Vector: AV:N/AC:H/Au:N/C:C/I:C/A:C/E:POC/RL:OF/RC:C\n\n[kaduk@mit.edu: CVE summary and CVSSv2 vector]\n\nticket: 7969 (new)\ntarget_version: 1.12.2\ntags: pullup",
    "type_of_change": "Modification",
    "filename_of_changes": "spnego_mech.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "0",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 821: \tgeneric_gss_release_oid(&tmpmin, &sc->internal_mech);"
    ]
}
