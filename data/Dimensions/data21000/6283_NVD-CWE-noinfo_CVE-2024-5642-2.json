{
    "cve_id": "CVE-2024-5642",
    "cve_description": "CPython 3.9 and earlier doesn't disallow configuring an empty list (\"[]\") for SSLContext.set_npn_protocols() which is an invalid value for the underlying OpenSSL API. This results in a buffer over-read when NPN is used (see CVE-2024-5535 for OpenSSL). This vulnerability is of low severity due to NPN being not widely used and specifying an empty list likely being uncommon in-practice (typically a protocol name would be configured).",
    "cve_publish_date": "2024-06-27",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "bpo-43669: PEP 644: Require OpenSSL 1.1.1 or newer (GH-23014)\n\n- Remove HAVE_X509_VERIFY_PARAM_SET1_HOST check\r\n- Update hashopenssl to require OpenSSL 1.1.1\r\n- multissltests only OpenSSL > 1.1.0\r\n- ALPN is always supported\r\n- SNI is always supported\r\n- Remove deprecated NPN code. Python wrappers are no-op.\r\n- ECDH is always supported\r\n- Remove OPENSSL_VERSION_1_1 macro\r\n- Remove locking callbacks\r\n- Drop PY_OPENSSL_1_1_API macro\r\n- Drop HAVE_SSL_CTX_CLEAR_OPTIONS macro\r\n- SSL_CTRL_GET_MAX_PROTO_VERSION is always defined now\r\n- security level is always available now\r\n- get_num_tickets is available with TLS 1.3\r\n- X509_V_ERR MISMATCH is always available now\r\n- Always set SSL_MODE_RELEASE_BUFFERS\r\n- X509_V_FLAG_TRUSTED_FIRST is always available\r\n- get_ciphers is always supported\r\n- SSL_CTX_set_keylog_callback is always available\r\n- Update Modules/Setup with static link example\r\n- Mention PEP in whatsnew\r\n- Drop 1.0.2 and 1.1.0 from GHA tests",
    "type_of_change": "Modification",
    "filename_of_changes": "setup.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "14",
    "number_of_lines_deleted_vulnerable_to_cve": "27",
    "vulnerable_lines": [
        "// Line_Reference 554:             print(\"Python requires an OpenSSL 1.0.2 or 1.1 compatible \"",
        "// Line_Reference 555:                   \"libssl with X509_VERIFY_PARAM_set1_host().\")",
        "// Line_Reference 556:             print(\"LibreSSL 2.6.4 and earlier do not provide the necessary \"",
        "// Line_Reference 557:                   \"APIs, https://github.com/libressl-portable/portable/issues/381\")",
        "// Line_Reference 2434:         # OpenSSL 1.0.2 uses Kerberos for KRB5 ciphers",
        "// Line_Reference 2435:         krb5_h = find_file(",
        "// Line_Reference 2436:             'krb5.h', self.inc_dirs,",
        "// Line_Reference 2437:             ['/usr/kerberos/include']",
        "// Line_Reference 2439:         if krb5_h:",
        "// Line_Reference 2440:             ssl_incs.extend(krb5_h)",
        "// Line_Reference 2471:         if config_vars.get(\"HAVE_X509_VERIFY_PARAM_SET1_HOST\"):",
        "// Line_Reference 2472:             self.add(",
        "// Line_Reference 2473:                 Extension(",
        "// Line_Reference 2474:                     '_ssl',",
        "// Line_Reference 2475:                     ['_ssl.c'],",
        "// Line_Reference 2476:                     depends=[",
        "// Line_Reference 2477:                         'socketmodule.h',",
        "// Line_Reference 2478:                         '_ssl/debughelpers.c',",
        "// Line_Reference 2479:                         '_ssl_data.h',",
        "// Line_Reference 2480:                         '_ssl_data_111.h',",
        "// Line_Reference 2481:                         '_ssl_data_300.h',",
        "// Line_Reference 2482:                     ],",
        "// Line_Reference 2483:                     **openssl_extension_kwargs",
        "// Line_Reference 2484:                 )",
        "// Line_Reference 2486:         else:",
        "// Line_Reference 2487:             self.missing.append('_ssl')",
        "// Line_Reference 2488: "
    ]
}
