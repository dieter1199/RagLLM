{
    "cve_id": "CVE-2014-125045",
    "cve_description": "A vulnerability has been found in meol1 and classified as critical. Affected by this vulnerability is the function GetAnimal of the file opdracht4/index.php. The manipulation of the argument where leads to sql injection. The identifier of the patch is 82441e413f87920d1e8f866e8ef9d7f353a7c583. It is recommended to apply a patch to fix this issue. The identifier VDB-217525 was assigned to this vulnerability.",
    "cve_publish_date": "2023-01-05",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "Opdracht 4 | Fixed SQL injection 3x\n\nDisabled fake prepares\nBindparams for dynamic contents\nHEXing of values\n\nThis still is injectable on my USBWebserver BTW :/",
    "type_of_change": "Modification",
    "filename_of_changes": "index.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "8",
    "number_of_lines_deleted_vulnerable_to_cve": "4",
    "vulnerable_lines": [
        "// Line_Reference 18: ",
        "// Line_Reference 19: \t\t    PDO::ATTR_ERRMODE            => PDO::ERRMODE_EXCEPTION,",
        "// Line_Reference 20: \t\t    PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC",
        "// Line_Reference 44: \t\t$whereCondition = 'WHERE ' . (is_numeric($where) ? 'id=\\''.$where.'\\'' : 'naam=\\''.$where.'\\'');"
    ]
}
