{
    "cve_id": "CVE-2022-31142",
    "cve_description": "@fastify/bearer-auth is a Fastify plugin to require bearer Authorization headers. @fastify/bearer-auth prior to versions 7.0.2 and 8.0.1 does not securely use crypto.timingSafeEqual. A malicious attacker could estimate the length of one valid bearer token. According to the corresponding RFC 6750, the bearer token has only base64 valid characters, reducing the range of characters for a brute force attack. Version 7.0.2 and 8.0.1 of @fastify/bearer-auth contain a patch. There are currently no known workarounds. The package fastify-bearer-auth, which covers versions 6.0.3 and prior, is also vulnerable starting at version 5.0.1. Users of fastify-bearer-auth should upgrade to a patched version of @fastify/bearer-auth.",
    "cve_publish_date": "2022-07-14",
    "cwe_id": "CWE-203",
    "cwe_name": "Observable Discrepancy",
    "cwe_description": "The product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not.",
    "commit_message": "Merge pull request from GHSA-376v-xgjx-7mfr\n\n* Correctly use crypto.timingSafeEqual\n\nSigned-off-by: Matteo Collina <hello@matteocollina.com>\nCo-Authored-By: Uzlopak <aras.abbasi@googlemail.com>\n\n* apply requested change\n\nCo-authored-by: Uzlopak <aras.abbasi@googlemail.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "plugin.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "14",
    "number_of_lines_deleted_vulnerable_to_cve": "5",
    "vulnerable_lines": [
        "// Line_Reference 92:   return keys.findIndex((a) => compare(a, key)) !== -1",
        "// Line_Reference 97:   try {",
        "// Line_Reference 98:     // may throw if they have different length, can't convert to Buffer, etc...",
        "// Line_Reference 99:     return crypto.timingSafeEqual(Buffer.from(a), Buffer.from(b))",
        "// Line_Reference 100:   } catch {"
    ]
}
