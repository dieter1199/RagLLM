{
    "cve_id": "CVE-2020-7247",
    "cve_description": "smtp_mailaddr in smtp_session.c in OpenSMTPD 6.6, as used in OpenBSD 6.6 and other products, allows remote attackers to execute arbitrary commands as root via a crafted SMTP session, as demonstrated by shell metacharacters in a MAIL FROM field. This affects the \"uncommented\" default configuration. The issue exists because of an incorrect return value upon failure of input validation.",
    "cve_publish_date": "2020-01-29",
    "cwe_id": "CWE-755",
    "cwe_name": "Improper Handling of Exceptional Conditions",
    "cwe_description": "The product does not handle or incorrectly handles an exceptional condition.",
    "commit_message": "Fix a security vulnerability discovered by Qualys which can lead to a\nprivileges escalation on mbox deliveries and unprivileged code execution\non lmtp deliveries, due to a logic issue causing a sanity check to be\nmissed.\n\nok eric@, millert@",
    "type_of_change": "Modification",
    "filename_of_changes": "smtp_session.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "14",
    "number_of_lines_deleted_vulnerable_to_cve": "16",
    "vulnerable_lines": [
        "// Line_Reference 1: /*\t$OpenBSD: smtp_session.c,v 1.421 2020/01/08 00:05:38 gilles Exp $\t*/",
        "// Line_Reference 2239: \tif (!valid_localpart(maddr->user) ||",
        "// Line_Reference 2240: \t    !valid_domainpart(maddr->domain)) {",
        "// Line_Reference 2241: \t\t/* accept empty return-path in MAIL FROM, required for bounces */",
        "// Line_Reference 2242: \t\tif (mailfrom && maddr->user[0] == '\\0' && maddr->domain[0] == '\\0')",
        "// Line_Reference 2243: \t\t\treturn (1);",
        "// Line_Reference 2245: \t\t/* no user-part, reject */",
        "// Line_Reference 2246: \t\tif (maddr->user[0] == '\\0')",
        "// Line_Reference 2247: \t\t\treturn (0);",
        "// Line_Reference 2248: ",
        "// Line_Reference 2249: \t\t/* no domain, local user */",
        "// Line_Reference 2250: \t\tif (maddr->domain[0] == '\\0') {",
        "// Line_Reference 2251: \t\t\t(void)strlcpy(maddr->domain, domain,",
        "// Line_Reference 2252: \t\t\t    sizeof(maddr->domain));",
        "// Line_Reference 2253: \t\t\treturn (1);",
        "// Line_Reference 2254: \t\t}"
    ]
}
