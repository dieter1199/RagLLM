{
    "cve_id": "CVE-2020-25613",
    "cve_description": "An issue was discovered in Ruby through 2.5.8, 2.6.x through 2.6.6, and 2.7.x through 2.7.1. WEBrick, a simple HTTP server bundled with Ruby, had not checked the transfer-encoding header value rigorously. An attacker may potentially exploit this issue to bypass a reverse proxy (which also has a poor header check), which may lead to an HTTP Request Smuggling attack.",
    "cve_publish_date": "2020-10-06",
    "cwe_id": "CWE-444",
    "cwe_name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')",
    "cwe_description": "The product acts as an intermediary HTTP agent\n         (such as a proxy or firewall) in the data flow between two\n         entities such as a client and server, but it does not\n         interpret malformed HTTP requests or responses in ways that\n         are consistent with how the messages will be processed by\n         those entities that are at the ultimate destination.",
    "commit_message": "Make it more strict to interpret some headers\n\nSome regexps were too tolerant.",
    "type_of_change": "Modification",
    "filename_of_changes": "httprequest.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "3",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 230:       if /close/io =~ self[\"connection\"]",
        "// Line_Reference 232:       elsif /keep-alive/io =~ self[\"connection\"]",
        "// Line_Reference 511:         when /chunked/io then read_chunked(socket, block)"
    ]
}
