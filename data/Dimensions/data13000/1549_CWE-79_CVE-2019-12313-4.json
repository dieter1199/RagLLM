{
    "cve_id": "CVE-2019-12313",
    "cve_description": "XSS exists in Shave before 2.5.3 because output encoding is mishandled during the overwrite of an HTML element.",
    "cve_publish_date": "2019-05-24",
    "cwe_id": "CWE-79",
    "cwe_name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "cwe_description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
    "commit_message": "[version] patch; @digitalcraft createTextNode() ðŸš€ (#146)",
    "type_of_change": "Modification",
    "filename_of_changes": "shave.min.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 1: !function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):e.shave=t()}(this,function(){\"use strict\";return function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};if(!t)throw Error(\"maxHeight is required\");var i=\"string\"==typeof e?document.querySelectorAll(e):e;if(i){var o=n.character||\"â€¦\",a=n.classname||\"js-shave\",s=\"boolean\"!=typeof n.spaces||n.spaces,r='<span class=\"js-shave-char\">'.concat(o,\"</span>\");\"length\"in i||(i=[i]);for(var c=0;c<i.length;c+=1){var h=i[c],l=h.style,f=h.querySelector(\".\".concat(a)),d=void 0===h.textContent?\"innerText\":\"textContent\";f&&(h.removeChild(h.querySelector(\".js-shave-char\")),h[d]=h[d]);var v=h[d],g=s?v.split(\" \"):v;if(!(g.length<2)){var p=l.height;l.height=\"auto\";var u=l.maxHeight;if(l.maxHeight=\"none\",h.offsetHeight<=t)l.height=p,l.maxHeight=u;else{for(var m=g.length-1,y=0,j=void 0;y<m;)j=y+m+1>>1,h[d]=s?g.slice(0,j).join(\" \"):g.slice(0,j),h.insertAdjacentHTML(\"beforeend\",r),h.offsetHeight>t?m=s?j-1:j-2:y=j;h[d]=s?g.slice(0,m).join(\" \"):g.slice(0,m),h.insertAdjacentHTML(\"beforeend\",r);var x=s?\" \".concat(g.slice(m).join(\" \")):g.slice(m);h.insertAdjacentHTML(\"beforeend\",'<span class=\"'.concat(a,'\" style=\"display:none;\">').concat(x,\"</span>\")),l.height=p,l.maxHeight=u}}}}}});"
    ]
}
