{
    "cve_id": "CVE-2021-20271",
    "cve_description": "A flaw was found in RPM's signature check functionality when reading a package file. This flaw allows an attacker who can convince a victim to install a seemingly verifiable package, whose signature header was modified, to cause RPM database corruption and execute code. The highest threat from this vulnerability is to data integrity, confidentiality, and system availability.",
    "cve_publish_date": "2021-03-26",
    "cwe_id": "CWE-345",
    "cwe_name": "Insufficient Verification of Data Authenticity",
    "cwe_description": "The product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.",
    "commit_message": "Be much more careful about copying data from the signature header\n\nOnly look for known tags, and ensure correct type and size where known\nbefore copying over. Bump the old arbitrary 16k count limit to 16M limit\nthough, it's not inconceivable that a package could have that many files.\nWhile at it, ensure none of these tags exist in the main header,\nwhich would confuse us greatly.\n\nThis is optimized for backporting ease, upstream can remove redundancies\nand further improve checking later.\n\nReported and initial patches by Demi Marie Obenour.\n\nFixes: RhBug:1935049, RhBug:1933867, RhBug:1935035, RhBug:1934125, ...\n\nFixes: CVE-2021-3421, CVE-2021-20271",
    "type_of_change": "Modification",
    "filename_of_changes": "package.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "51",
    "number_of_lines_deleted_vulnerable_to_cve": "63",
    "vulnerable_lines": [
        "// Line_Reference 40: void headerMergeLegacySigs(Header h, Header sigh)",
        "// Line_Reference 42:     HeaderIterator hi;",
        "// Line_Reference 45:     hi = headerInitIterator(sigh);",
        "// Line_Reference 46:     for (; headerNext(hi, &td); rpmtdFreeData(&td))",
        "// Line_Reference 47:     {",
        "// Line_Reference 48: \tswitch (td.tag) {",
        "// Line_Reference 49: \t/* XXX Translate legacy signature tag values. */",
        "// Line_Reference 50: \tcase RPMSIGTAG_SIZE:",
        "// Line_Reference 51: \t    td.tag = RPMTAG_SIGSIZE;",
        "// Line_Reference 52: \t    break;",
        "// Line_Reference 53: \tcase RPMSIGTAG_PGP:",
        "// Line_Reference 54: \t    td.tag = RPMTAG_SIGPGP;",
        "// Line_Reference 55: \t    break;",
        "// Line_Reference 56: \tcase RPMSIGTAG_MD5:",
        "// Line_Reference 57: \t    td.tag = RPMTAG_SIGMD5;",
        "// Line_Reference 58: \t    break;",
        "// Line_Reference 59: \tcase RPMSIGTAG_GPG:",
        "// Line_Reference 60: \t    td.tag = RPMTAG_SIGGPG;",
        "// Line_Reference 61: \t    break;",
        "// Line_Reference 62: \tcase RPMSIGTAG_PGP5:",
        "// Line_Reference 63: \t    td.tag = RPMTAG_SIGPGP5;",
        "// Line_Reference 64: \t    break;",
        "// Line_Reference 65: \tcase RPMSIGTAG_PAYLOADSIZE:",
        "// Line_Reference 66: \t    td.tag = RPMTAG_ARCHIVESIZE;",
        "// Line_Reference 67: \t    break;",
        "// Line_Reference 68: \tcase RPMSIGTAG_FILESIGNATURES:",
        "// Line_Reference 69: \t    td.tag = RPMTAG_FILESIGNATURES;",
        "// Line_Reference 71: \tcase RPMSIGTAG_FILESIGNATURELENGTH:",
        "// Line_Reference 72: \t    td.tag = RPMTAG_FILESIGNATURELENGTH;",
        "// Line_Reference 73: \t    break;",
        "// Line_Reference 74: \tcase RPMSIGTAG_VERITYSIGNATURES:",
        "// Line_Reference 75: \tcase RPMSIGTAG_VERITYSIGNATUREALGO:",
        "// Line_Reference 76: \tcase RPMSIGTAG_SHA1:",
        "// Line_Reference 77: \tcase RPMSIGTAG_SHA256:",
        "// Line_Reference 78: \tcase RPMSIGTAG_DSA:",
        "// Line_Reference 79: \tcase RPMSIGTAG_RSA:",
        "// Line_Reference 80: \tdefault:",
        "// Line_Reference 81: \t    if (!(td.tag >= HEADER_SIGBASE && td.tag < HEADER_TAGBASE))",
        "// Line_Reference 82: \t\tcontinue;",
        "// Line_Reference 83: \t    break;",
        "// Line_Reference 84: \t}",
        "// Line_Reference 85: \tif (!headerIsEntry(h, td.tag)) {",
        "// Line_Reference 86: \t    switch (td.type) {",
        "// Line_Reference 87: \t    case RPM_NULL_TYPE:",
        "// Line_Reference 88: \t\tcontinue;",
        "// Line_Reference 90: \t    case RPM_CHAR_TYPE:",
        "// Line_Reference 91: \t    case RPM_INT8_TYPE:",
        "// Line_Reference 92: \t    case RPM_INT16_TYPE:",
        "// Line_Reference 93: \t    case RPM_INT32_TYPE:",
        "// Line_Reference 94: \t    case RPM_INT64_TYPE:",
        "// Line_Reference 95: \t\tif (td.count != 1)",
        "// Line_Reference 96: \t\t    continue;",
        "// Line_Reference 98: \t    case RPM_STRING_TYPE:",
        "// Line_Reference 99: \t    case RPM_STRING_ARRAY_TYPE:",
        "// Line_Reference 100: \t    case RPM_BIN_TYPE:",
        "// Line_Reference 101: \t\tif (td.count >= 16*1024)",
        "// Line_Reference 102: \t\t    continue;",
        "// Line_Reference 104: \t    case RPM_I18NSTRING_TYPE:",
        "// Line_Reference 105: \t\tcontinue;",
        "// Line_Reference 107: \t    }",
        "// Line_Reference 108: \t    (void) headerPut(h, &td, HEADERPUT_DEFAULT);",
        "// Line_Reference 111:     headerFreeIterator(hi);",
        "// Line_Reference 383: \t    headerMergeLegacySigs(h, sigh);"
    ]
}
