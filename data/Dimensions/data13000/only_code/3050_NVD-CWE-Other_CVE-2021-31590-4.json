import Router from '../router'
user: null,
var countdown = this.user.exp*1000 - Date.now() - 60000 // Countdown to expiration less 1 minute
setTimeout(() => {
this.refreshToken()
}, countdown)
console.log(error)
Vue.prototype.$axios.get('users/refreshtoken')
.then((response) => {
var token = response.data.datas.token;
this.user = jwtDecode(token);
var countdown = this.user.exp*1000 - Date.now() - 60000 // Countdown to expiration less 1 minute
setTimeout(() => {
this.refreshToken()
}, countdown)
})
.catch(err => {
console.log(err)
if (err.response && err.response.data.datas.includes('Expired'))
Router.push('/login?tokenError=2')
else
Router.push('/login')
Vue.prototype.$axios.get('users/destroytoken')
.catch(err => Router.push('/login'))
},
checkToken() {
return new Promise((resolve, reject) => {
Vue.prototype.$axios.get(`users/checktoken`)
.then(data => {
var token = data.data.datas
var decoded = jwtDecode(token);
if (decoded) {
this.user = decoded;
resolve();
}
else
reject('InvalidToken');
resolve()
})
.catch((error) => {
reject(error);
})
return (this.user !== null);
