{
    "cve_id": "CVE-2021-32699",
    "cve_description": "Wings is the control plane software for the open source Pterodactyl game management system. All versions of Pterodactyl Wings prior to `1.4.4` are vulnerable to system resource exhaustion due to improper container process limits being defined. A malicious user can consume more resources than intended and cause downstream impacts to other clients on the same hardware, eventually causing the physical server to stop responding. Users should upgrade to `1.4.4` to mitigate the issue. There is no non-code based workaround for impacted versions of the software. Users running customized versions of this software can manually set a PID limit for containers created.",
    "cve_publish_date": "2021-06-22",
    "cwe_id": "CWE-770",
    "cwe_name": "Allocation of Resources Without Limits or Throttling",
    "cwe_description": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
    "commit_message": "[security] enforce process limits at a per-container level to avoid abusive clients impacting other instances",
    "type_of_change": "Modification",
    "filename_of_changes": "settings.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "24",
    "number_of_lines_deleted_vulnerable_to_cve": "15",
    "vulnerable_lines": [
        "// Line_Reference 31: // The build settings for a given server that impact docker container creation and",
        "// Line_Reference 32: // resource limits for a server instance.",
        "// Line_Reference 59: // Converts the CPU limit for a server build into a number that can be better understood",
        "// Line_Reference 60: // by the Docker environment. If there is no limit set, return -1 which will indicate to",
        "// Line_Reference 61: // Docker that it has unlimited CPU quota.",
        "// Line_Reference 70: // Set the hard limit for memory usage to be 5% more than the amount of memory assigned to",
        "// Line_Reference 71: // the server. If the memory limit for the server is < 4G, use 10%, if less than 2G use",
        "// Line_Reference 72: // 15%. This avoids unexpected crashes from processes like Java which run over the limit.",
        "// Line_Reference 87: // Returns the amount of swap available as a total in bytes. This is returned as the amount",
        "// Line_Reference 88: // of memory available to the server initially, PLUS the amount of additional swap to include",
        "// Line_Reference 89: // which is the format used by Docker.",
        "// Line_Reference 100: // Ugly hacky function to handle environment variables that get passed through as not-a-string",
        "// Line_Reference 101: // from the Panel. Ideally we'd just say only pass strings, but that is a fragile idea and if a",
        "// Line_Reference 102: // string wasn't passed through you'd cause a crash or the server to become unavailable. For now",
        "// Line_Reference 103: // try to handle the most likely values from the JSON and hope for the best."
    ]
}
