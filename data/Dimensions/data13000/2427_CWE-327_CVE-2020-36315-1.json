{
    "cve_id": "CVE-2020-36315",
    "cve_description": "In RELIC before 2020-08-01, RSA PKCS#1 v1.5 signature forgery can occur because certain checks of the padding (and of the first two bytes) are inadequate. NOTE: this requires that a low public exponent (such as 3) is being used. The product, by default, does not generate RSA keys with such a low number.",
    "cve_publish_date": "2021-04-07",
    "cwe_id": "CWE-327",
    "cwe_name": "Use of a Broken or Risky Cryptographic Algorithm",
    "cwe_description": "The product uses a broken or risky cryptographic algorithm or protocol.",
    "commit_message": "Fix #154 and #155 by inverting the padding check logic and being more rigorous.",
    "type_of_change": "Modification",
    "filename_of_changes": "relic_cp_rsa.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "117",
    "number_of_lines_deleted_vulnerable_to_cve": "117",
    "vulnerable_lines": [
        "// Line_Reference 132: \tint result = RLC_OK;",
        "// Line_Reference 156: \t\t\t\tif (!bn_is_zero(t)) {",
        "// Line_Reference 157: \t\t\t\t\tresult = RLC_ERR;",
        "// Line_Reference 158: \t\t\t\t}",
        "// Line_Reference 159: \t\t\t\t*p_len = 1;",
        "// Line_Reference 160: \t\t\t\tdo {",
        "// Line_Reference 161: \t\t\t\t\t(*p_len)++;",
        "// Line_Reference 162: \t\t\t\t\tm_len--;",
        "// Line_Reference 163: \t\t\t\t\tbn_rsh(t, m, 8 * m_len);",
        "// Line_Reference 164: \t\t\t\t\tpad = (uint8_t)t->dp[0];",
        "// Line_Reference 165: \t\t\t\t} while (pad == 0 && m_len > 0);",
        "// Line_Reference 166: \t\t\t\tif (pad != RSA_PAD) {",
        "// Line_Reference 167: \t\t\t\t\tresult = RLC_ERR;",
        "// Line_Reference 169: \t\t\t\tbn_mod_2b(m, m, (k_len - *p_len) * 8);",
        "// Line_Reference 254: \tint len, result = RLC_OK;",
        "// Line_Reference 285: \t\t\t\tif (!bn_is_zero(t)) {",
        "// Line_Reference 286: \t\t\t\t\tresult = RLC_ERR;",
        "// Line_Reference 287: \t\t\t\t}",
        "// Line_Reference 288: ",
        "// Line_Reference 289: \t\t\t\t*p_len = m_len;",
        "// Line_Reference 290: \t\t\t\tm_len--;",
        "// Line_Reference 291: \t\t\t\tbn_rsh(t, m, 8 * m_len);",
        "// Line_Reference 292: \t\t\t\tpad = (uint8_t)t->dp[0];",
        "// Line_Reference 293: \t\t\t\tif (pad != RSA_PUB) {",
        "// Line_Reference 294: \t\t\t\t\tresult = RLC_ERR;",
        "// Line_Reference 295: \t\t\t\t}",
        "// Line_Reference 296: \t\t\t\tdo {",
        "// Line_Reference 300: \t\t\t\t} while (pad != 0 && m_len > 0);",
        "// Line_Reference 301: \t\t\t\t/* Remove padding and trailing zero. */",
        "// Line_Reference 302: \t\t\t\t*p_len -= (m_len - 1);",
        "// Line_Reference 303: \t\t\t\tbn_mod_2b(m, m, (k_len - *p_len) * 8);",
        "// Line_Reference 344: \t\t\t\tif (!bn_is_zero(t)) {",
        "// Line_Reference 345: \t\t\t\t\tresult = RLC_ERR;",
        "// Line_Reference 346: \t\t\t\t}",
        "// Line_Reference 347: \t\t\t\tm_len--;",
        "// Line_Reference 348: \t\t\t\tbn_rsh(t, m, 8 * m_len);",
        "// Line_Reference 349: \t\t\t\tpad = (uint8_t)t->dp[0];",
        "// Line_Reference 350: \t\t\t\tif (pad != RSA_PRV) {",
        "// Line_Reference 351: \t\t\t\t\tresult = RLC_ERR;",
        "// Line_Reference 352: \t\t\t\t}",
        "// Line_Reference 353: \t\t\t\tdo {",
        "// Line_Reference 357: \t\t\t\t} while (pad != 0 && m_len > 0);",
        "// Line_Reference 358: \t\t\t\tif (m_len == 0) {",
        "// Line_Reference 359: \t\t\t\t\tresult = RLC_ERR;",
        "// Line_Reference 360: \t\t\t\t}",
        "// Line_Reference 361: \t\t\t\t/* Remove padding and trailing zero. */",
        "// Line_Reference 362: \t\t\t\tid = hash_id(MD_MAP, &len);",
        "// Line_Reference 363: \t\t\t\tm_len -= len;",
        "// Line_Reference 364: ",
        "// Line_Reference 365: \t\t\t\tbn_rsh(t, m, m_len * 8);",
        "// Line_Reference 366: \t\t\t\tint r = 0;",
        "// Line_Reference 367: \t\t\t\tfor (int i = 0; i < len; i++) {",
        "// Line_Reference 368: \t\t\t\t\tpad = (uint8_t)t->dp[0];",
        "// Line_Reference 369: \t\t\t\t\tr |= pad - id[len - i - 1];",
        "// Line_Reference 370: \t\t\t\t\tbn_rsh(t, t, 8);",
        "// Line_Reference 372: \t\t\t\t*p_len = k_len - m_len;",
        "// Line_Reference 373: \t\t\t\tbn_mod_2b(m, m, m_len * 8);",
        "// Line_Reference 374: \t\t\t\tresult = (r == 0 ? RLC_OK : RLC_ERR);",
        "// Line_Reference 379: \t\t\t\tif (!bn_is_zero(t)) {",
        "// Line_Reference 380: \t\t\t\t\tresult = RLC_ERR;",
        "// Line_Reference 381: \t\t\t\t}",
        "// Line_Reference 382: \t\t\t\tm_len--;",
        "// Line_Reference 383: \t\t\t\tbn_rsh(t, m, 8 * m_len);",
        "// Line_Reference 384: \t\t\t\tpad = (uint8_t)t->dp[0];",
        "// Line_Reference 385: \t\t\t\tif (pad != RSA_PRV) {",
        "// Line_Reference 386: \t\t\t\t\tresult = RLC_ERR;",
        "// Line_Reference 387: \t\t\t\t}",
        "// Line_Reference 388: \t\t\t\tdo {",
        "// Line_Reference 392: \t\t\t\t} while (pad != 0 && m_len > 0);",
        "// Line_Reference 393: \t\t\t\tif (m_len == 0) {",
        "// Line_Reference 394: \t\t\t\t\tresult = RLC_ERR;",
        "// Line_Reference 396: \t\t\t\t/* Remove padding and trailing zero. */",
        "// Line_Reference 397: \t\t\t\t*p_len = k_len - m_len;",
        "// Line_Reference 398: \t\t\t\tbn_mod_2b(m, m, m_len * 8);",
        "// Line_Reference 429: \tint result = RLC_OK;",
        "// Line_Reference 470: \t\t\t\tif (!bn_is_zero(t)) {",
        "// Line_Reference 471: \t\t\t\t\tresult = RLC_ERR;",
        "// Line_Reference 472: \t\t\t\t}",
        "// Line_Reference 473: \t\t\t\tm_len -= RLC_MD_LEN;",
        "// Line_Reference 474: \t\t\t\tbn_rsh(t, m, 8 * m_len);",
        "// Line_Reference 475: \t\t\t\tbn_write_bin(h1, RLC_MD_LEN, t);",
        "// Line_Reference 476: \t\t\t\tbn_mod_2b(m, m, 8 * m_len);",
        "// Line_Reference 477: \t\t\t\tbn_write_bin(mask, m_len, m);",
        "// Line_Reference 478: \t\t\t\tmd_mgf(h2, RLC_MD_LEN, mask, m_len);",
        "// Line_Reference 479: \t\t\t\tfor (int i = 0; i < RLC_MD_LEN; i++) {",
        "// Line_Reference 480: \t\t\t\t\th1[i] ^= h2[i];",
        "// Line_Reference 481: \t\t\t\t}",
        "// Line_Reference 482: \t\t\t\tmd_mgf(mask, k_len - RLC_MD_LEN - 1, h1, RLC_MD_LEN);",
        "// Line_Reference 483: \t\t\t\tbn_read_bin(t, mask, k_len - RLC_MD_LEN - 1);",
        "// Line_Reference 484: \t\t\t\tfor (int i = 0; i < t->used; i++) {",
        "// Line_Reference 485: \t\t\t\t\tm->dp[i] ^= t->dp[i];",
        "// Line_Reference 486: \t\t\t\t}",
        "// Line_Reference 487: \t\t\t\tm_len -= RLC_MD_LEN;",
        "// Line_Reference 488: \t\t\t\tbn_rsh(t, m, 8 * m_len);",
        "// Line_Reference 489: \t\t\t\tbn_write_bin(h2, RLC_MD_LEN, t);",
        "// Line_Reference 490: \t\t\t\tmd_map(h1, NULL, 0);",
        "// Line_Reference 491: \t\t\t\tpad = 0;",
        "// Line_Reference 492: \t\t\t\tfor (int i = 0; i < RLC_MD_LEN; i++) {",
        "// Line_Reference 493: \t\t\t\t\tpad |= h1[i] - h2[i];",
        "// Line_Reference 494: \t\t\t\t}",
        "// Line_Reference 495: \t\t\t\tif (result == RLC_OK) {",
        "// Line_Reference 496: \t\t\t\t\tresult = (pad ? RLC_ERR : RLC_OK);",
        "// Line_Reference 497: \t\t\t\t}",
        "// Line_Reference 498: \t\t\t\tbn_mod_2b(m, m, 8 * m_len);",
        "// Line_Reference 499: \t\t\t\t*p_len = bn_size_bin(m);",
        "// Line_Reference 500: \t\t\t\t(*p_len)--;",
        "// Line_Reference 501: \t\t\t\tbn_rsh(t, m, *p_len * 8);",
        "// Line_Reference 502: \t\t\t\tif (bn_cmp_dig(t, 1) != RLC_EQ) {",
        "// Line_Reference 503: \t\t\t\t\tresult = RLC_ERR;",
        "// Line_Reference 505: \t\t\t\tbn_mod_2b(m, m, *p_len * 8);",
        "// Line_Reference 506: \t\t\t\t*p_len = k_len - *p_len;",
        "// Line_Reference 536: \t\t\t\tif (bn_cmp_dig(t, RSA_PSS) != RLC_EQ) {",
        "// Line_Reference 537: \t\t\t\t\tresult = RLC_ERR;",
        "// Line_Reference 538: \t\t\t\t} else {",
        "// Line_Reference 541: \t\t\t\t\t\t\tresult = RLC_ERR;",
        "// Line_Reference 558: \t\t\t\t\tif (!bn_is_zero(m)) {",
        "// Line_Reference 559: \t\t\t\t\t\tresult = RLC_ERR;"
    ]
}
