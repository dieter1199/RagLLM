{
    "cve_id": "CVE-2021-21290",
    "cve_description": "Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method \"File.createTempFile\" on unix-like systems creates a random file, but, by default will create this file with the permissions \"-rw-r--r--\". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's \"AbstractDiskHttpData\" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own \"java.io.tmpdir\" when you start the JVM or use \"DefaultHttpDataFactory.setBaseDir(...)\" to set the directory to something that is only readable by the current user.",
    "cve_publish_date": "2021-02-08",
    "cwe_id": "CWE-378",
    "cwe_name": "Creation of Temporary File With Insecure Permissions",
    "cwe_description": "Opening temporary files without appropriate measures or controls can leave the file, its contents and any function that it impacts vulnerable to attack.",
    "commit_message": "Use Files.createTempFile(...) to ensure the file is created with proper permissions\n\nMotivation:\n\nFile.createTempFile(String, String)` will create a temporary file in the system temporary directory if the 'java.io.tmpdir'. The permissions on that file utilize the umask. In a majority of cases, this means that the file that java creates has the permissions: `-rw-r--r--`, thus, any other local user on that system can read the contents of that file.\nThis can be a security concern if any sensitive data is stored in this file.\n\nThis was reported by Jonathan Leitschuh <jonathan.leitschuh@gmail.com> as a security problem.\n\nModifications:\n\nUse Files.createTempFile(...) which will use safe-defaults when running on java 7 and later. If running on java 6 there isnt much we can do, which is fair enough as java 6 shouldnt be considered \"safe\" anyway.\n\nResult:\n\nCreate temporary files with sane permissions by default.",
    "type_of_change": "Modification",
    "filename_of_changes": "ChunkedWriteHandlerTest.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "2",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 58:             TMP = File.createTempFile(\"netty-chunk-\", \".tmp\");"
    ]
}
