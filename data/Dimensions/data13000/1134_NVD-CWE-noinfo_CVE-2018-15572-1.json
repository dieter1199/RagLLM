{
    "cve_id": "CVE-2018-15572",
    "cve_description": "The spectre_v2_select_mitigation function in arch/x86/kernel/cpu/bugs.c in the Linux kernel before 4.18.1 does not always fill RSB upon a context switch, which makes it easier for attackers to conduct userspace-userspace spectreRSB attacks.",
    "cve_publish_date": "2018-08-20",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "x86/speculation: Protect against userspace-userspace spectreRSB\n\nThe article \"Spectre Returns! Speculation Attacks using the Return Stack \nBuffer\" [1] describes two new (sub-)variants of spectrev2-like attacks, \nmaking use solely of the RSB contents even on CPUs that don't fallback to \nBTB on RSB underflow (Skylake+).\n\nMitigate userspace-userspace attacks by always unconditionally filling RSB on\ncontext switch when the generic spectrev2 mitigation has been enabled.\n\n[1] https://arxiv.org/pdf/1807.07940.pdf\n\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nReviewed-by: Josh Poimboeuf <jpoimboe@redhat.com>\nAcked-by: Tim Chen <tim.c.chen@linux.intel.com>\nCc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>\nCc: Borislav Petkov <bp@suse.de>\nCc: David Woodhouse <dwmw@amazon.co.uk>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: stable@vger.kernel.org\nLink: https://lkml.kernel.org/r/nycvar.YFH.7.76.1807261308190.997@cbobk.fhfr.pm",
    "type_of_change": "Modification",
    "filename_of_changes": "bugs.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "7",
    "number_of_lines_deleted_vulnerable_to_cve": "31",
    "vulnerable_lines": [
        "// Line_Reference 316: /* Check for Skylake-like CPUs (for RSB handling) */",
        "// Line_Reference 317: static bool __init is_skylake_era(void)",
        "// Line_Reference 318: {",
        "// Line_Reference 319: \tif (boot_cpu_data.x86_vendor == X86_VENDOR_INTEL &&",
        "// Line_Reference 320: \t    boot_cpu_data.x86 == 6) {",
        "// Line_Reference 321: \t\tswitch (boot_cpu_data.x86_model) {",
        "// Line_Reference 322: \t\tcase INTEL_FAM6_SKYLAKE_MOBILE:",
        "// Line_Reference 323: \t\tcase INTEL_FAM6_SKYLAKE_DESKTOP:",
        "// Line_Reference 324: \t\tcase INTEL_FAM6_SKYLAKE_X:",
        "// Line_Reference 325: \t\tcase INTEL_FAM6_KABYLAKE_MOBILE:",
        "// Line_Reference 326: \t\tcase INTEL_FAM6_KABYLAKE_DESKTOP:",
        "// Line_Reference 327: \t\t\treturn true;",
        "// Line_Reference 328: \t\t}",
        "// Line_Reference 329: \t}",
        "// Line_Reference 330: \treturn false;",
        "// Line_Reference 331: }",
        "// Line_Reference 332: ",
        "// Line_Reference 393: \t * If neither SMEP nor PTI are available, there is a risk of",
        "// Line_Reference 394: \t * hitting userspace addresses in the RSB after a context switch",
        "// Line_Reference 395: \t * from a shallow call stack to a deeper one. To prevent this fill",
        "// Line_Reference 396: \t * the entire RSB, even when using IBRS.",
        "// Line_Reference 398: \t * Skylake era CPUs have a separate issue with *underflow* of the",
        "// Line_Reference 399: \t * RSB, when they will predict 'ret' targets from the generic BTB.",
        "// Line_Reference 400: \t * The proper mitigation for this is IBRS. If IBRS is not supported",
        "// Line_Reference 401: \t * or deactivated in favour of retpolines the RSB fill on context",
        "// Line_Reference 402: \t * switch is required.",
        "// Line_Reference 404: \tif ((!boot_cpu_has(X86_FEATURE_PTI) &&",
        "// Line_Reference 405: \t     !boot_cpu_has(X86_FEATURE_SMEP)) || is_skylake_era()) {",
        "// Line_Reference 406: \t\tsetup_force_cpu_cap(X86_FEATURE_RSB_CTXSW);",
        "// Line_Reference 407: \t\tpr_info(\"Spectre v2 mitigation: Filling RSB on context switch\\n\");",
        "// Line_Reference 408: \t}"
    ]
}
