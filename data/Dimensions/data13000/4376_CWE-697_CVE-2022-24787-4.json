{
    "cve_id": "CVE-2022-24787",
    "cve_description": "Vyper is a Pythonic Smart Contract Language for the Ethereum Virtual Machine. In version 0.3.1 and prior, bytestrings can have dirty bytes in them, resulting in the word-for-word comparisons giving incorrect results. Even without dirty nonzero bytes, two bytestrings can compare to equal if one ends with `\"\\x00\"` because there is no comparison of the length. A patch is available and expected to be part of the 0.3.2 release. There are currently no known workarounds.",
    "cve_publish_date": "2022-04-04",
    "cwe_id": "CWE-697",
    "cwe_name": "Incorrect Comparison",
    "cwe_description": "The product compares two entities in a security-relevant context, but the comparison is incorrect, which may lead to resultant weaknesses.",
    "commit_message": "Merge pull request from GHSA-7vrm-3jc8-5wwm\n\n* add more tests for string comparison\n\nexplicitly test the codepath with <= 32 bytes\n\n* refactor keccak256 helper a bit\n\n* fix bytestring equality\n\nexisting bytestring equality checks do not check length equality or for\ndirty bytes.",
    "type_of_change": "Modification",
    "filename_of_changes": "test_string.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "101",
    "number_of_lines_deleted_vulnerable_to_cve": "58",
    "vulnerable_lines": [
        "// Line_Reference 171: def test_string_equality(get_contract_with_gas_estimation):",
        "// Line_Reference 172:     code = \"\"\"",
        "// Line_Reference 173: _compA: String[100]",
        "// Line_Reference 174: _compB: String[100]",
        "// Line_Reference 178:     compA: String[100] = \"The quick brown fox jumps over the lazy dog\"",
        "// Line_Reference 179:     compB: String[100] = \"The quick brown fox jumps over the lazy dog\"",
        "// Line_Reference 180:     return compA == compB",
        "// Line_Reference 184:     compA: String[100] = \"The quick brown fox jumps over the lazy dog\"",
        "// Line_Reference 185:     compB: String[100] = \"The quick brown fox jumps over the lazy hog\"",
        "// Line_Reference 186:     return compA == compB",
        "// Line_Reference 190:     compA: String[100] = \"The quick brown fox jumps over the lazy dog\"",
        "// Line_Reference 191:     compB: String[100] = \"The quick brown fox jumps over the lazy hog\"",
        "// Line_Reference 192:     return compA != compB",
        "// Line_Reference 196:     compA: String[100] = \"The quick brown fox jumps over the lazy dog\"",
        "// Line_Reference 197:     compB: String[100] = \"The quick brown fox jumps over the lazy dog\"",
        "// Line_Reference 198:     return compA != compB",
        "// Line_Reference 202:     return \"The quick brown fox jumps over the lazy dog\" == \\",
        "// Line_Reference 203:     \"The quick brown fox jumps over the lazy dog\"",
        "// Line_Reference 207:     return \"The quick brown fox jumps over the lazy dog\" == \\",
        "// Line_Reference 208:     \"The quick brown fox jumps over the lazy hog\"",
        "// Line_Reference 212:     return \"The quick brown fox jumps over the lazy dog\" != \\",
        "// Line_Reference 213:     \"The quick brown fox jumps over the lazy hog\"",
        "// Line_Reference 217:     return \"The quick brown fox jumps over the lazy dog\" != \\",
        "// Line_Reference 218:     \"The quick brown fox jumps over the lazy dog\"",
        "// Line_Reference 222:     self._compA = \"The quick brown fox jumps over the lazy dog\"",
        "// Line_Reference 223:     self._compB = \"The quick brown fox jumps over the lazy dog\"",
        "// Line_Reference 224:     return self._compA == self._compB",
        "// Line_Reference 228:     self._compA = \"The quick brown fox jumps over the lazy dog\"",
        "// Line_Reference 229:     self._compB = \"The quick brown fox jumps over the lazy hog\"",
        "// Line_Reference 230:     return self._compA == self._compB",
        "// Line_Reference 234:     self._compA = \"The quick brown fox jumps over the lazy dog\"",
        "// Line_Reference 235:     self._compB = \"The quick brown fox jumps over the lazy hog\"",
        "// Line_Reference 236:     return self._compA != self._compB",
        "// Line_Reference 240:     self._compA = \"The quick brown fox jumps over the lazy dog\"",
        "// Line_Reference 241:     self._compB = \"The quick brown fox jumps over the lazy dog\"",
        "// Line_Reference 242:     return self._compA != self._compB",
        "// Line_Reference 245: def string_compare_equal(str1: String[100], str2: String[100]) -> bool:",
        "// Line_Reference 249: def string_compare_not_equal(str1: String[100], str2: String[100]) -> bool:",
        "// Line_Reference 253: def compare_passed_storage_equal(str: String[100]) -> bool:",
        "// Line_Reference 254:     self._compA = \"The quick brown fox jumps over the lazy dog\"",
        "// Line_Reference 255:     return self._compA == str",
        "// Line_Reference 258: def compare_passed_storage_not_equal(str: String[100]) -> bool:",
        "// Line_Reference 259:     self._compA = \"The quick brown fox jumps over the lazy dog\"",
        "// Line_Reference 260:     return self._compA != str",
        "// Line_Reference 264:     self._compA = \"The quick brown fox jumps over the lazy dog\"",
        "// Line_Reference 265:     compB: String[100] = \"The quick brown fox jumps over the lazy dog\"",
        "// Line_Reference 266:     return self._compA == compB",
        "// Line_Reference 270:     self._compA = \"The quick brown fox jumps over the lazy dog\"",
        "// Line_Reference 271:     compB: String[100] = \"The quick brown fox jumps over the lazy hog\"",
        "// Line_Reference 272:     return self._compA == compB",
        "// Line_Reference 276:     self._compA = \"The quick brown fox jumps over the lazy dog\"",
        "// Line_Reference 277:     compB: String[100] = \"The quick brown fox jumps over the lazy hog\"",
        "// Line_Reference 278:     return self._compA != compB",
        "// Line_Reference 282:     self._compA = \"The quick brown fox jumps over the lazy dog\"",
        "// Line_Reference 283:     compB: String[100] = \"The quick brown fox jumps over the lazy dog\"",
        "// Line_Reference 284:     return self._compA != compB",
        "// Line_Reference 301:     a = \"The quick brown fox jumps over the lazy dog\"",
        "// Line_Reference 302:     b = \"The quick brown fox jumps over the lazy hog\""
    ]
}
