{
    "cve_id": "CVE-2016-6187",
    "cve_description": "The apparmor_setprocattr function in security/apparmor/lsm.c in the Linux kernel before 4.6.5 does not validate the buffer size, which allows local users to gain privileges by triggering an AppArmor setprocattr hook.",
    "cve_publish_date": "2016-08-06",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "apparmor: fix oops, validate buffer size in apparmor_setprocattr()\n\nWhen proc_pid_attr_write() was changed to use memdup_user apparmor's\n(interface violating) assumption that the setprocattr buffer was always\na single page was violated.\n\nThe size test is not strictly speaking needed as proc_pid_attr_write()\nwill reject anything larger, but for the sake of robustness we can keep\nit in.\n\nSMACK and SELinux look safe to me, but somebody else should probably\nhave a look just in case.\n\nBased on original patch from Vegard Nossum <vegard.nossum@oracle.com>\nmodified for the case that apparmor provides null termination.\n\nFixes: bb646cdb12e75d82258c2f2e7746d5952d3e321a\nReported-by: Vegard Nossum <vegard.nossum@oracle.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: John Johansen <john.johansen@canonical.com>\nCc: Paul Moore <paul@paul-moore.com>\nCc: Stephen Smalley <sds@tycho.nsa.gov>\nCc: Eric Paris <eparis@parisplace.org>\nCc: Casey Schaufler <casey@schaufler-ca.com>\nCc: stable@kernel.org\nSigned-off-by: John Johansen <john.johansen@canonical.com>\nReviewed-by: Tyler Hicks <tyhicks@canonical.com>\nSigned-off-by: James Morris <james.l.morris@oracle.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "lsm.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "19",
    "number_of_lines_deleted_vulnerable_to_cve": "17",
    "vulnerable_lines": [
        "// Line_Reference 503: \tchar *command, *args = value;",
        "// Line_Reference 509: \t/* args points to a PAGE_SIZE buffer, AppArmor requires that",
        "// Line_Reference 510: \t * the buffer must be null terminated or have size <= PAGE_SIZE -1",
        "// Line_Reference 511: \t * so that AppArmor can null terminate them",
        "// Line_Reference 512: \t */",
        "// Line_Reference 513: \tif (args[size - 1] != '\\0') {",
        "// Line_Reference 514: \t\tif (size == PAGE_SIZE)",
        "// Line_Reference 515: \t\t\treturn -EINVAL;",
        "// Line_Reference 516: \t\targs[size] = '\\0';",
        "// Line_Reference 517: \t}",
        "// Line_Reference 518: ",
        "// Line_Reference 523: \targs = value;",
        "// Line_Reference 527: \t\treturn -EINVAL;",
        "// Line_Reference 530: \t\treturn -EINVAL;",
        "// Line_Reference 556: \t\treturn -EINVAL;",
        "// Line_Reference 568: \taad.error = -EINVAL;",
        "// Line_Reference 570: \treturn -EINVAL;"
    ]
}
