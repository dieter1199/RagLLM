{
    "cve_id": "CVE-2022-39236",
    "cve_description": "Matrix Javascript SDK is the Matrix Client-Server SDK for JavaScript. Starting with version 17.1.0-rc.1, improperly formed beacon events can disrupt or impede the matrix-js-sdk from functioning properly, potentially impacting the consumer's ability to process data safely. Note that the matrix-js-sdk can appear to be operating normally but be excluding or corrupting runtime data presented to the consumer. This is patched in matrix-js-sdk v19.7.0. Redacting applicable events, waiting for the sync processor to store data, and restarting the client are possible workarounds. Alternatively, redacting the applicable events and clearing all storage will fix the further perceived issues. Downgrading to an unaffected version, noting that such a version may be subject to other vulnerabilities, will additionally resolve the issue.",
    "cve_publish_date": "2022-09-28",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "Resolve multiple CVEs\n\nCVE-2022-39249\nCVE-2022-39250\nCVE-2022-39251\nCVE-2022-39236",
    "type_of_change": "Modification",
    "filename_of_changes": "OlmDevice.ts",
    "code_language": "TypeScript",
    "number_of_lines_added_for_mitigation": "51",
    "number_of_lines_deleted_vulnerable_to_cve": "14",
    "vulnerable_lines": [
        "// Line_Reference 1104:         extraSessionData: Record<string, any> = {},",
        "// Line_Reference 1136:                                 if (existingSession.first_known_index()",
        "// Line_Reference 1137:                                     <= session.first_known_index()",
        "// Line_Reference 1138:                                     && !(existingSession.first_known_index() == session.first_known_index()",
        "// Line_Reference 1139:                                         && !extraSessionData.untrusted",
        "// Line_Reference 1140:                                         && existingSessionData.untrusted)) {",
        "// Line_Reference 1141:                                     // existing session has lower index (i.e. can",
        "// Line_Reference 1142:                                     // decrypt more), or they have the same index and",
        "// Line_Reference 1143:                                     // the new sessions trust does not win over the old",
        "// Line_Reference 1144:                                     // sessions trust, so keep it",
        "// Line_Reference 1145:                                     logger.log(`Keeping existing megolm session ${sessionId}`);",
        "// Line_Reference 1146:                                     return;",
        "// Line_Reference 1433:                             \"forwarding_curve25519_key_chain\":",
        "// Line_Reference 1434:                                 sessionData.forwardingCurve25519KeyChain || [],"
    ]
}
