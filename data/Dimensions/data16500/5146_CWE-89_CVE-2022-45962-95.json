{
    "cve_id": "CVE-2022-45962",
    "cve_description": "Open Solutions for Education, Inc openSIS Community Edition v8.0 and earlier is vulnerable to SQL Injection via CalendarModal.php.",
    "cve_publish_date": "2023-02-13",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "Version 9.0 release\n\nOlder version shifted to branch: Version_8.0",
    "type_of_change": "ModificationType.ADD",
    "filename_of_changes": "Periods.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "149",
    "number_of_lines_deleted_vulnerable_to_cve": "176",
    "vulnerable_lines": [
        "// Line_Reference 37: ",
        "// Line_Reference 39: ",
        "// Line_Reference 42: ",
        "// Line_Reference 44: ",
        "// Line_Reference 91:             //  echo '<pre>';",
        "// Line_Reference 92:             //  print_r($_REQUEST);",
        "// Line_Reference 93:             //  echo '</pre>';",
        "// Line_Reference 94: ",
        "// Line_Reference 95:             //  echo '<pre>';",
        "// Line_Reference 96:             //  print_r($columns);",
        "// Line_Reference 97:             //  echo '</pre>';",
        "// Line_Reference 98:             if((isset($_REQUEST['values'][$id]['TITLE']) && $_REQUEST['values'][$id]['TITLE'] != $exist_pr[1]['TITLE']) || (isset($_REQUEST['values'][$id]['SHORT_NAME']) && $_REQUEST['values'][$id]['SHORT_NAME'] != $exist_pr[1]['SHORT_NAME']) || (isset($_REQUEST['values'][$id]['SORT_ORDER']) && $_REQUEST['values'][$id]['SORT_ORDER'] != $exist_pr[1]['SORT_ORDER']) || (isset($_REQUEST['values'][$id]['START_TIME']) && strtotime($_REQUEST['values'][$id]['START_TIME']) != strtotime($exist_pr[1]['START_TIME'])) || (isset($_REQUEST['values'][$id]['END_TIME']) && strtotime($_REQUEST['values'][$id]['END_TIME']) != strtotime($exist_pr[1]['END_TIME'])) || (isset($_REQUEST['values'][$id]['IGNORE_SCHEDULING']) && $_REQUEST['values'][$id]['IGNORE_SCHEDULING'] != $exist_pr[1]['IGNORE_SCHEDULING']) || (isset($_REQUEST['values'][$id]['ATTENDANCE']) && $_REQUEST['values'][$id]['ATTENDANCE'] != $exist_pr[1]['ATTENDANCE'])){",
        "// Line_Reference 99:                 $sql = 'UPDATE school_periods SET ';",
        "// Line_Reference 100:                 $title_change = '';",
        "// Line_Reference 101:                 foreach ($columns as $column => $value) {",
        "// Line_Reference 102:                     $value = trim(paramlib_validation($column, $value));",
        "// Line_Reference 103:                     if ($column == 'ignore_scheduling' && $value == '') {",
        "// Line_Reference 104:                         $sql .= $column . '=NULL';",
        "// Line_Reference 105:                         $go = true;",
        "// Line_Reference 106:                     } elseif ($column == 'ATTENDANCE') {",
        "// Line_Reference 107:                         if ($value == '') {",
        "// Line_Reference 108:                             $per_attn_check = DBGet(DBQuery('SELECT COUNT(*) AS TOTAL FROM course_period_var WHERE PERIOD_ID=' . $id . ' AND DOES_ATTENDANCE=\\'Y\\''));",
        "// Line_Reference 109: ",
        "// Line_Reference 110: ",
        "// Line_Reference 111:                             if ($per_attn_check[1]['TOTAL'] > 0) {",
        "// Line_Reference 112:                                 $err = _cannotModifyUsedForAttendanceAsPeriodIsAssociated;",
        "// Line_Reference 113:                                 $go = false;",
        "// Line_Reference 118:                         } else {",
        "// Line_Reference 119:                             $sql .= $column . '=\\'' . str_replace(\"'\", \"''\", str_replace(\"\\'\", \"'\", $value)) . '\\',';",
        "// Line_Reference 120:                             $go = true;",
        "// Line_Reference 121:                         }",
        "// Line_Reference 122:                     } elseif (strtolower($column) == 'start_time' || strtolower($column) == 'end_time') {",
        "// Line_Reference 123:                         $checker = DBGet(DBQuery('SELECT COUNT(1) as TOTAL FROM schedule s,course_period_var cp WHERE cp.COURSE_PERIOD_ID=s.COURSE_PERIOD_ID AND (s.END_DATE>\\'' . date('Y-m-d') . '\\' OR s.END_DATE IS NULL) AND cp.PERIOD_ID=\\'' . $id . '\\' '));",
        "// Line_Reference 124:                         if ($checker[1]['TOTAL'] == 0) {",
        "// Line_Reference 125:                             $sql .= $column . '=\\'' . str_replace(\"'\", \"'\", str_replace(\"\\'\", \"'\", $value)) . '\\',';",
        "// Line_Reference 126:                             $go = true;",
        "// Line_Reference 127:                         } else {",
        "// Line_Reference 128:                             $check_for_change=DBGet(DBQuery('SELECT COUNT(*) AS REC_EX FROM school_periods WHERE PERIOD_ID='.$id.' AND '.$column.'=\\''.$value.'\\'' ));",
        "// Line_Reference 129:                             if($check_for_change[1]['REC_EX']==0){",
        "// Line_Reference 130:                                 $err = _cannotModifyStartTimeOrEndTimeAsPeriodIsAssociated;",
        "// Line_Reference 131:                                 $go = false;",
        "// Line_Reference 133: ",
        "// Line_Reference 134:                         }",
        "// Line_Reference 135:                     } else {",
        "// Line_Reference 136:                         if ($column == 'TITLE' && !isset($_REQUEST['values'][$id]['SHORT_NAME'])) {",
        "// Line_Reference 137:                             $exist_pr_title = DBGet(DBQuery('SELECT count(PERIOD_ID) AS TOT FROM  school_periods WHERE title=\\'' . $value . '\\' AND SHORT_NAME=\\'' . $exist_pr[1]['SHORT_NAME'] . '\\' AND SYEAR= \\'' . UserSyear() . '\\' AND SCHOOL_ID=\\'' . UserSchool() . '\\' AND period_id<>\\'' . $id . '\\''));",
        "// Line_Reference 139:                             if ($exist_pr_title[1]['TOT'] > 0) {",
        "// Line_Reference 141:                                 $not_up = 1;",
        "// Line_Reference 143:                         }",
        "// Line_Reference 145:                         if ($column == 'SHORT_NAME' && !isset($_REQUEST['values'][$id]['TITLE'])) {",
        "// Line_Reference 146:                             $exist_pr_title = DBGet(DBQuery('SELECT count(PERIOD_ID) AS TOT FROM  school_periods WHERE title=\\'' . $exist_pr[1]['TITLE'] . '\\' AND SHORT_NAME=\\'' . $value . '\\' AND SYEAR= \\'' . UserSyear() . '\\' AND SCHOOL_ID=\\'' . UserSchool() . '\\' AND period_id<>\\'' . $id . '\\''));",
        "// Line_Reference 148:                             if ($exist_pr_title[1]['TOT'] > 0) {",
        "// Line_Reference 150:                                 $not_up = 1;",
        "// Line_Reference 152:                         }",
        "// Line_Reference 153:                         if ($column == 'TITLE') {",
        "// Line_Reference 154:                             $title_change = str_replace(\"'\", \"''\", str_replace(\"\\'\", \"'\", $value));",
        "// Line_Reference 155:                         }",
        "// Line_Reference 157:                         $sql .= $column . '=\\'' . str_replace(\"'\", \"''\", str_replace(\"\\'\", \"'\", $value)) . '\\',';",
        "// Line_Reference 158:                         $go = true;",
        "// Line_Reference 160:                 }",
        "// Line_Reference 161:                 $sql = substr($sql, 0, -1) . ' WHERE PERIOD_ID=\\'' . $id . '\\'';",
        "// Line_Reference 162: ",
        "// Line_Reference 163:                 $sql = str_replace('&amp;', \"\", $sql);",
        "// Line_Reference 164:                 $sql = str_replace('&quot', \"\", $sql);",
        "// Line_Reference 165:                 $sql = str_replace('&#039;', \"\", $sql);",
        "// Line_Reference 166:                 $sql = str_replace('&lt;', \"\", $sql);",
        "// Line_Reference 167:                 $sql = str_replace('&gt;', \"\", $sql);",
        "// Line_Reference 168:                 if ($go && $not_up != 1) {",
        "// Line_Reference 169:                     DBQuery($sql);",
        "// Line_Reference 170:                     if ($title_change != '') {",
        "// Line_Reference 171:                         $check_for_cps = DBGet(DBQuery('SELECT COURSE_PERIOD_ID,TITLE FROM course_periods WHERE COURSE_PERIOD_ID=' . $id));",
        "// Line_Reference 172:                         foreach ($check_for_cps as $cpi => $cpd) {",
        "// Line_Reference 173:                             $old_title = explode('-', $cpd['TITLE']);",
        "// Line_Reference 174:                             $old_title[0] = $title_change;",
        "// Line_Reference 175:                             $old_title = implode(' - ', $old_title);",
        "// Line_Reference 176:                             $old_title = str_replace(\"'\", \"''\", str_replace(\"\\'\", \"''\", $old_title));",
        "// Line_Reference 177:                             DBQuery('UPDATE course_periods SET TITLE=\\'' . $old_title . '\\' WHERE COURSE_PERIOD_ID=' . $cpd['COURSE_PERIOD_ID']);",
        "// Line_Reference 180:                 }",
        "// Line_Reference 181:                 if ($not_up == 1) {",
        "// Line_Reference 182:                     $err_msg = _alreadyAPeriodIsCreatedWithSameTitleOrShortname;",
        "// Line_Reference 183:                 }",
        "// Line_Reference 185:                 # -------------------------- Length Update Start -------------------------- #",
        "// Line_Reference 187:                 $sql_get_length = 'SELECT start_time, end_time from school_periods WHERE period_id=\\'' . $id . '\\'';",
        "// Line_Reference 189:                 $row_get_length = DBGet(DBQuery($sql_get_length));",
        "// Line_Reference 190:                 $start_time = strtotime(date('m/d/Y') . ' ' . $row_get_length[1]['START_TIME']);",
        "// Line_Reference 191:                 $end_time = strtotime(date('m/d/Y') . ' ' . $row_get_length[1]['END_TIME']);",
        "// Line_Reference 192:                 if ($start_time > $end_time)",
        "// Line_Reference 193:                     $end_time = strtotime(date('m/d/Y') . ' ' . $row_get_length[1]['END_TIME']) + 86400;",
        "// Line_Reference 195:                 $length = ($end_time - $start_time) / 60;",
        "// Line_Reference 197:                 $sql_length_update = 'UPDATE school_periods set length = ' . $length . ' where period_id=\\'' . $id . '\\'';",
        "// Line_Reference 198:                 $res_length_update = DBQuery($sql_length_update);",
        "// Line_Reference 200:                 # --------------------------- Length Update End --------------------------- #",
        "// Line_Reference 202: ",
        "// Line_Reference 203:             }",
        "// Line_Reference 204:             else {",
        "// Line_Reference 213:                     $end_time[$i] = strtotime($periods[$i]['END_TIME']);",
        "// Line_Reference 215:                 if (in_array(strtoupper(str_replace(' ', '', $columns['TITLE'])), $p_title) || in_array(strtoupper(str_replace(' ', '', $columns['SHORT_NAME'])), $shortname)) {",
        "// Line_Reference 219: //                    $sql_end_ex = 'SELECT TITLE,SHORT_NAME,SORT_ORDER,START_TIME,END_TIME FROM  school_periods WHERE SYEAR= \\'' . UserSyear() . '\\' AND SCHOOL_ID=\\'' . UserSchool() . '\\' AND END_TIME=\\'' . $columns['START_TIME'] . ':00\\'';",
        "// Line_Reference 220: //                    $sql_end_ex_count = DBGET(DBQuery($sql_end_ex));",
        "// Line_Reference 221: //                    if (count($sql_end_ex_count) > 0) {",
        "// Line_Reference 222: //                        $err = \" End time of a period cannot be same with another period start time.\";",
        "// Line_Reference 223: //                        break;",
        "// Line_Reference 224: //                    } else {",
        "// Line_Reference 225: ",
        "// Line_Reference 226:                         $sql = 'INSERT INTO school_periods ';",
        "// Line_Reference 227:                         $fields = 'SCHOOL_ID,SYEAR,';",
        "// Line_Reference 228:                         $values = '\\'' . UserSchool() . '\\',\\'' . UserSyear() . '\\',';",
        "// Line_Reference 229:                         $go = 0;",
        "// Line_Reference 230:                         if ($columns['START_TIME'] == $columns['END_TIME']) {",
        "// Line_Reference 231:                             $err_msg = _startTimeAndEndTimeCanNotBeSame;",
        "// Line_Reference 232:                             break;",
        "// Line_Reference 233:                         }",
        "// Line_Reference 234:                         foreach ($columns as $column => $value) {",
        "// Line_Reference 235:                             if (trim($value)) {",
        "// Line_Reference 236:                                 $value = trim(paramlib_validation($column, $value));",
        "// Line_Reference 237:                                 $fields .= $column . ',';",
        "// Line_Reference 238:                                 $values .= '\\'' . str_replace(\"'\", \"''\", str_replace(\"\\'\", \"'\", $value)) . '\\',';",
        "// Line_Reference 239:                                 $go = true;",
        "// Line_Reference 240:                             }",
        "// Line_Reference 242:                         $sql .= '(' . substr($fields, 0, -1) . ') values(' . substr($values, 0, -1) . ')';",
        "// Line_Reference 244:                         if ($go) {",
        "// Line_Reference 245:                             DBQuery($sql);",
        "// Line_Reference 246:                         }",
        "// Line_Reference 248:                         # ----------------------------- Length Calculate start --------------------- #",
        "// Line_Reference 250:                         $p_id = DBGet(DBQuery('SELECT max(PERIOD_ID) AS period_id FROM school_periods WHERE SYEAR=\\'' . UserSyear() . '\\' AND SCHOOL_ID=\\'' . UserSchool() . '\\''));",
        "// Line_Reference 251:                         $period_id = $p_id[1]['PERIOD_ID'];",
        "// Line_Reference 253:                         $time_chk = DBGet(DBQuery('SELECT START_TIME,END_TIME FROM school_periods WHERE PERIOD_ID=\\'' . $period_id . '\\' AND SYEAR=\\'' . UserSyear() . '\\' AND SCHOOL_ID=\\'' . UserSchool() . '\\''));",
        "// Line_Reference 254:                         $start_tm_chk = $time_chk[1]['START_TIME'];",
        "// Line_Reference 255:                         $end_tm_chk = $time_chk[1]['END_TIME'];",
        "// Line_Reference 257:                         $start_time = strtotime(date('m/d/Y') . ' ' . $start_tm_chk);",
        "// Line_Reference 258:                         $end_time = strtotime(date('m/d/Y') . ' ' . $end_tm_chk);",
        "// Line_Reference 259:                         if ($start_time > $end_time)",
        "// Line_Reference 260:                             $end_time = strtotime(date('m/d/Y') . ' ' . $end_tm_chk) + 86400;",
        "// Line_Reference 262:                         $length = ($end_time - $start_time) / 60;",
        "// Line_Reference 264:                         $sql_up = 'update school_periods set length = ' . $length . ' where period_id=\\'' . $period_id . '\\' and syear=\\'' . UserSyear() . '\\' and school_id=\\'' . UserSchool() . '\\'';",
        "// Line_Reference 265:                         $res_up = DBQuery($sql_up);",
        "// Line_Reference 267:                         # -------------------------------------------------------------------------- #",
        "// Line_Reference 277: DrawBC(\"\"._schoolSetup.\" <i class=\\\"icon-arrow-right13\\\"></i> \" . ProgramTitle());",
        "// Line_Reference 280:     $prd_id = paramlib_validation($colmn = PERIOD_ID, $_REQUEST[id]);",
        "// Line_Reference 284:         UnableDeletePrompt( _cannotDeleteBecauseCoursePeriodsAreCreatedOnThisPeriod.'.');",
        "// Line_Reference 305:     $columns = array('TITLE' =>_title, 'SHORT_NAME' =>_shortName, 'SORT_ORDER' =>_sortOrder, 'START_TIME' =>_startTime, 'END_TIME' =>_endTime, 'LENGTH' => _length.'<div></div>('._minutes.')', 'ATTENDANCE' => _usedFor.' <div></div>'._attendance, 'IGNORE_SCHEDULING' => _ignoreFor.' <div></div>'._scheduling);",
        "// Line_Reference 314:         echo '<button type=\"button\" class=\"close\" data-dismiss=\"alert\"><span>×</span><span class=\"sr-only\">'._close.'</span></button>' . $err_msg . '</div>';",
        "// Line_Reference 321:         array_push($period_id_arr, $td[PERIOD_ID]);",
        "// Line_Reference 325:     echo \"<FORM name=F1 id=F1 action=Modules.php?modname=\" . strip_tags(trim($_REQUEST[modname])) . \"&modfunc=update method=POST>\";",
        "// Line_Reference 330:     ListOutputPeriod($periods_RET, $columns, period, periods, $link);",
        "// Line_Reference 336:         $maxPeriodId = $maxPeriodId[1][MAXPERIODID];",
        "// Line_Reference 345: function _makeTextInput($value, $name) {",
        "// Line_Reference 361: function _makeTextInputMod($value, $name) {",
        "// Line_Reference 377: function _makeTextInputMod2($value, $name) {",
        "// Line_Reference 391: function _makeCheckboxInput($value, $name) {",
        "// Line_Reference 399:     return '<div class=\"text-center\">'.CheckboxInputSwitch($value, 'values[' . $id . '][' . $name . ']', '', '', ($id == 'new' ? true : false), 'Yes', 'No', '', 'switch-success').'</div>';",
        "// Line_Reference 405: function _makeTimeInput($value, $name) {",
        "// Line_Reference 439: //    if ($id != 'new' && $value) {",
        "// Line_Reference 440: //",
        "// Line_Reference 441: //",
        "// Line_Reference 442: //        return '<DIV id=time' . $id . '><div onclick=\\'addHTML(\"<TABLE><TR><TD>' . str_replace('\"', '\\\"', SelectInput($hour, 'values[' . $id . '][START_HOUR]', '', $hour_options, false, 'style=\"width: 60px;\"', false)) . '</TD><TD>' . str_replace('\"', '\\\"', SelectInput($fn_min_s, 'values[' . $id . '][START_MINUTE]', '', $minute_options, false, 'style=\"width: 60px;\"', false)) . '</TD><TD>' . str_replace('\"', '\\\"', SelectInput($f_ampm_s, 'values[' . $id . '][START_M]', '', array('AM' => 'AM', 'PM' => 'PM'), false, 'style=\"width: 60px;\"', false)) . '</TD></TR></TABLE>\",\"time' . $id . '\",true);\\'>' . $value . '</div></DIV>';",
        "// Line_Reference 443: //    }",
        "// Line_Reference 444: //    else",
        "// Line_Reference 445: //        return '<TABLE cellspacing=0 cellpadding=0><TR><TD>' . SelectInput($hour, 'values[' . $id . '][START_HOUR]', '', $hour_options, 'N/A', '', false) . '</TD><TD>' . SelectInput($fn_min_s, 'values[' . $id . '][START_MINUTE]', '', $minute_options, 'N/A', '', false) . '</TD><TD>' . SelectInput($f_ampm_s, 'values[' . $id . '][START_M]', '', array('AM' => 'AM', 'PM' => 'PM'), 'N/A', '', false) . '</TD></TR></TABLE>';",
        "// Line_Reference 446:     if($id!='new')",
        "// Line_Reference 447:         return TextInput_time($hour.':'.$fn_min_s.' '.$f_ampm_s, 'values[' . $id . '][START_TIME]', '', $extra);",
        "// Line_Reference 449:         return TextInput_time('', 'values[' . $id . '][START_TIME]', '', $extra);",
        "// Line_Reference 450:     }",
        "// Line_Reference 452: function _makeTimeInputEnd($value, $name) {",
        "// Line_Reference 486: ",
        "// Line_Reference 487: //    if ($id != 'new' && $value)",
        "// Line_Reference 488: //        return '<DIV id=etime' . $id . '><div onclick=\\'addHTML(\"<TABLE><TR><TD>' . str_replace('\"', '\\\"', SelectInput($hour, 'values[' . $id . '][END_HOUR]', '', $hour_options, false, '', false)) . '</TD><TD>' . str_replace('\"', '\\\"', SelectInput($fn_min, 'values[' . $id . '][END_MINUTE]', '', $minute_options, false, '', false)) . '</TD><TD>' . str_replace('\"', '\\\"', SelectInput($f_ampm, 'values[' . $id . '][END_M]', '', array('AM' => 'AM', 'PM' => 'PM'), false, '', false)) . '</TD></TR></TABLE>\",\"etime' . $id . '\",true);\\'>' . $value . '</div></DIV>';",
        "// Line_Reference 489: //    else",
        "// Line_Reference 490: //        return '<TABLE cellspacing=0 cellpadding=0><TR><TD>' . SelectInput($hour, 'values[' . $id . '][END_HOUR]', '', $hour_options, 'N/A', '', false) . '</TD><TD>' . SelectInput($fn_min, 'values[' . $id . '][END_MINUTE]', '', $minute_options, 'N/A', '', false) . '</TD><TD>' . SelectInput($f_ampm, 'values[' . $id . '][END_M]', '', array('AM' => 'AM', 'PM' => 'PM'), 'N/A', '', false) . '</TD></TR></TABLE>';",
        "// Line_Reference 491: ",
        "// Line_Reference 492:     if($id!='new')",
        "// Line_Reference 493:         return TextInput_time($hour.':'.$fn_min.' '.$f_ampm, 'values[' . $id . '][END_TIME]', '', $extra);",
        "// Line_Reference 495:         return TextInput_time('', 'values[' . $id . '][END_TIME]', '', $extra);",
        "// Line_Reference 496:     }",
        "// Line_Reference 497: ",
        "// Line_Reference 498: ?>"
    ]
}
