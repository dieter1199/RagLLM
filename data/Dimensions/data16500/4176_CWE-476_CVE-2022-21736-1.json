{
    "cve_id": "CVE-2022-21736",
    "cve_description": "Tensorflow is an Open Source Machine Learning Framework. The implementation of `SparseTensorSliceDataset` has an undefined behavior: under certain condition it can be made to dereference a `nullptr` value. The 3 input arguments to `SparseTensorSliceDataset` represent a sparse tensor. However, there are some preconditions that these arguments must satisfy but these are not validated in the implementation. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
    "cve_publish_date": "2022-02-03",
    "cwe_id": "CWE-476",
    "cwe_name": "NULL Pointer Dereference",
    "cwe_description": "The product dereferences a pointer that it expects to be valid but is NULL.",
    "commit_message": "Properly validate sparse tensor in `SparseTensorSliceDataset`\n\nExisting validation was incomplete.\n\nPiperOrigin-RevId: 415375048\nChange-Id: I14cd18f29ede73286f3ffac35171bd15828997e9",
    "type_of_change": "Modification",
    "filename_of_changes": "sparse_tensor_slice_dataset_op.cc",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "20",
    "number_of_lines_deleted_vulnerable_to_cve": "19",
    "vulnerable_lines": [
        "// Line_Reference 243:                 errors::InvalidArgument(",
        "// Line_Reference 244:                     \"Input indices should be a matrix but received shape \",",
        "// Line_Reference 245:                     indices->shape().DebugString()));",
        "// Line_Reference 246: ",
        "// Line_Reference 247:     const auto num_indices = indices->NumElements();",
        "// Line_Reference 248:     const auto num_values = values->NumElements();",
        "// Line_Reference 249:     if (num_indices == 0 || num_values == 0) {",
        "// Line_Reference 250:       OP_REQUIRES(ctx, num_indices == num_values,",
        "// Line_Reference 251:                   errors::InvalidArgument(",
        "// Line_Reference 252:                       \"If indices or values are empty, the other one must also \"",
        "// Line_Reference 253:                       \"be. Got indices of shape \",",
        "// Line_Reference 254:                       indices->shape().DebugString(), \" and values of shape \",",
        "// Line_Reference 255:                       values->shape().DebugString()));",
        "// Line_Reference 256:     }",
        "// Line_Reference 258:                 errors::InvalidArgument(",
        "// Line_Reference 259:                     \"Input values should be a vector but received shape \",",
        "// Line_Reference 260:                     indices->shape().DebugString()));",
        "// Line_Reference 263:                     \"Input shape should be a vector but received shape \",",
        "// Line_Reference 264:                     dense_shape->shape().DebugString()));"
    ]
}
