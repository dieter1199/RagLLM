{
    "cve_id": "CVE-2019-15691",
    "cve_description": "TigerVNC version prior to 1.10.1 is vulnerable to stack use-after-return, which occurs due to incorrect usage of stack memory in ZRLEDecoder. If decoding routine would throw an exception, ZRLEDecoder may try to access stack variable, which has been already freed during the process of stack unwinding. Exploitation of this vulnerability could potentially result into remote code execution. This attack appear to be exploitable via network connectivity.",
    "cve_publish_date": "2019-12-26",
    "cwe_id": "CWE-672",
    "cwe_name": "Operation on a Resource after Expiration or Release",
    "cwe_description": "The product uses, accesses, or otherwise operates on a resource after that resource has been expired, released, or revoked.",
    "commit_message": "Make ZlibInStream more robust against failures\n\nMove the checks around to avoid missing cases where we might access\nmemory that is no longer valid. Also avoid touching the underlying\nstream implicitly (e.g. via the destructor) as it might also no\nlonger be valid.\n\nA malicious server could theoretically use this for remote code\nexecution in the client.\n\nIssue found by Pavel Cheremushkin from Kaspersky Lab",
    "type_of_change": "Modification",
    "filename_of_changes": "zrleDecode.h",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "2",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 177:   zis->removeUnderlying();"
    ]
}
