{
    "cve_id": "CVE-2022-41917",
    "cve_description": "OpenSearch is a community-driven, open source fork of Elasticsearch and Kibana. OpenSearch allows users to specify a local file when defining text analyzers to process data for text analysis. An issue in the implementation of this feature allows certain specially crafted queries to return a response containing the first line of text from arbitrary files. The list of potentially impacted files is limited to text files with read permissions allowed in the Java Security Manager policy configuration. OpenSearch version 1.3.7 and 2.4.0 contain a fix for this issue. Users are advised to upgrade. There are no known workarounds for this issue.",
    "cve_publish_date": "2022-11-16",
    "cwe_id": "CWE-755",
    "cwe_name": "Improper Handling of Exceptional Conditions",
    "cwe_description": "The product does not handle or incorrectly handles an exceptional condition.",
    "commit_message": "Merge pull request from GHSA-w3rx-m34v-wrqx\n\n* Fix error handling while reading analyzer mapping rules\n\nAdd new parseWordList method that takes a parser as a parameter. It reads custom rules from settings or a file, parses and handles errors. Make error messages less verbose for rules files outside config directory.\n\nSigned-off-by: Rabi Panda <adnapibar@gmail.com>\n\n* Add CHANGELOG.md\n\nSigned-off-by: Rabi Panda <adnapibar@gmail.com>\n\nSigned-off-by: Rabi Panda <adnapibar@gmail.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "KuromojiTokenizerFactory.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "22",
    "number_of_lines_deleted_vulnerable_to_cve": "16",
    "vulnerable_lines": [
        "// Line_Reference 84:             List<String> ruleList = Analysis.getWordList(env, settings, USER_DICT_PATH_OPTION, USER_DICT_RULES_OPTION, false);",
        "// Line_Reference 88:             Set<String> dup = new HashSet<>();",
        "// Line_Reference 89:             int lineNum = 0;",
        "// Line_Reference 90:             for (String line : ruleList) {",
        "// Line_Reference 91:                 // ignore comments",
        "// Line_Reference 92:                 if (line.startsWith(\"#\") == false) {",
        "// Line_Reference 93:                     String[] values = CSVUtil.parse(line);",
        "// Line_Reference 94:                     if (dup.add(values[0]) == false) {",
        "// Line_Reference 95:                         throw new IllegalArgumentException(",
        "// Line_Reference 96:                             \"Found duplicate term [\" + values[0] + \"] in user dictionary \" + \"at line [\" + lineNum + \"]\"",
        "// Line_Reference 97:                         );",
        "// Line_Reference 98:                     }",
        "// Line_Reference 99:                 }",
        "// Line_Reference 100:                 ++lineNum;",
        "// Line_Reference 101:             }",
        "// Line_Reference 108:             throw new OpenSearchException(\"failed to load kuromoji user dictionary\", e);"
    ]
}
