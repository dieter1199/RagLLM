{
    "cve_id": "CVE-2022-45962",
    "cve_description": "Open Solutions for Education, Inc openSIS Community Edition v8.0 and earlier is vulnerable to SQL Injection via CalendarModal.php.",
    "cve_publish_date": "2023-02-13",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "Version 9.0 release\n\nOlder version shifted to branch: Version_8.0",
    "type_of_change": "ModificationType.ADD",
    "filename_of_changes": "DbGetFnc.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "22",
    "number_of_lines_deleted_vulnerable_to_cve": "29",
    "vulnerable_lines": [
        "// Line_Reference 45: \tCOURSE_ID,COURSE_WEIGHT,COURSE_PERIOD_ID from course_periods, and choose to index by",
        "// Line_Reference 49: function DBGet($QI,$functions=array(),$index=array())",
        "// Line_Reference 50: {\tglobal $THIS_RET;",
        "// Line_Reference 52: \t$index_count = count($index);",
        "// Line_Reference 56: \twhile($RET=db_fetch_row($QI))",
        "// Line_Reference 57: \t{",
        "// Line_Reference 59: ",
        "// Line_Reference 60: \t\tif($index_count)",
        "// Line_Reference 61: \t\t{",
        "// Line_Reference 63: \t\t\tforeach($index as $col)",
        "// Line_Reference 64: \t\t\t\t$ind .= \"['\".singleQuoteReplace(\"'\",\"\\'\",$THIS_RET[$col]).\"']\";",
        "// Line_Reference 65: \t\t\teval('$s'.$ind.'++;$this_ind=$s'.$ind.';');",
        "// Line_Reference 67: \t\telse",
        "// Line_Reference 68: \t\t\t$s++; // 1-based if no index specified",
        "// Line_Reference 69: \t\tforeach($RET as $key=>$value)",
        "// Line_Reference 70: \t\t{",
        "// Line_Reference 71:                     if(strlen($value) == strlen(strip_tags($value)))",
        "// Line_Reference 72:                     $value=  htmlentities($value);",
        "// Line_Reference 73: \t\t\tif($functions[$key] && function_exists($functions[$key]))",
        "// Line_Reference 74: \t\t\t{",
        "// Line_Reference 75: \t\t\t\tif($index_count)",
        "// Line_Reference 76: \t\t\t\t\teval('$results'.$ind.'[$this_ind][$key] = $functions[$key]($value,$key);');",
        "// Line_Reference 78: \t\t\t\t\t$results[$s][$key] = $functions[$key]($value,$key);",
        "// Line_Reference 79: \t\t\t}",
        "// Line_Reference 80: \t\t\telse",
        "// Line_Reference 81: \t\t\t{",
        "// Line_Reference 82: \t\t\t\tif($index_count)",
        "// Line_Reference 83: \t\t\t\t\teval('$results'.$ind.'[$this_ind][$key] = $value;');",
        "// Line_Reference 93: ?>"
    ]
}
