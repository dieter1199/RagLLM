{
    "cve_id": "CVE-2024-40631",
    "cve_description": "Plate media is an open source, rich-text editor for React. Editors that use `MediaEmbedElement` and pass custom `urlParsers` to the `useMediaState` hook may be vulnerable to XSS if a custom parser allows `javascript:`, `data:` or `vbscript:` URLs to be embedded. Editors that do not use `urlParsers` and consume the `url` property directly may also be vulnerable if the URL is not sanitised. The default parsers `parseTwitterUrl` and `parseVideoUrl` are not affected. `@udecode/plate-media` 36.0.10 resolves this issue by only allowing HTTP and HTTPS URLs during parsing. This affects only the `embed` property returned from `useMediaState`. In addition, the `url` property returned from `useMediaState` has been renamed to `unsafeUrl` to indicate that it has not been sanitised. The `url` property on `element` is also unsafe, but has not been renamed. If you're using either of these properties directly, you will still need to validate the URL yourself. Users are advised to upgrade. Users unable to upgrade should ensure that any custom `urlParsers` do not allow `javascript:`, `data:` or `vbscript:` URLs to be returned in the `url` property of their return values. If `url` is consumed directly, validate the URL protocol before passing it to the `iframe` element.\n\n",
    "cve_publish_date": "2024-07-15",
    "cwe_id": "NVD-CWE-noinfo",
    "commit_message": "Harden media embed element against XSS",
    "type_of_change": "Modification",
    "filename_of_changes": "useMediaState.ts",
    "code_language": "TypeScript",
    "number_of_lines_added_for_mitigation": "30",
    "number_of_lines_deleted_vulnerable_to_cve": "10",
    "vulnerable_lines": [
        "// Line_Reference 8: import { VIDEO_PROVIDERS, ELEMENT_MEDIA_EMBED} from '../media-embed';",
        "// Line_Reference 31:     if (!urlParsers || (type !== ELEMENT_VIDEO && type !== ELEMENT_MEDIA_EMBED)) return;",
        "// Line_Reference 33:     for (const parser of urlParsers) {",
        "// Line_Reference 34:       const data = parser(url);",
        "// Line_Reference 35: ",
        "// Line_Reference 36:       if (data) {",
        "// Line_Reference 37:         return data;",
        "// Line_Reference 38:       }",
        "// Line_Reference 39:     }",
        "// Line_Reference 59:     url,"
    ]
}
