{
    "cve_id": "CVE-2017-15195",
    "cve_description": "In Kanboard before 1.0.47, by altering form data, an authenticated user can edit swimlanes of a private project of another user.",
    "cve_publish_date": "2017-10-11",
    "cwe_id": "CWE-639",
    "cwe_name": "Authorization Bypass Through User-Controlled Key",
    "cwe_description": "The system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.",
    "commit_message": "Do not expose IDs in forms",
    "type_of_change": "Modification",
    "filename_of_changes": "TaskExternalLinkController.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "16",
    "number_of_lines_deleted_vulnerable_to_cve": "21",
    "vulnerable_lines": [
        "// Line_Reference 111:         $link_id = $this->request->getIntegerParam('link_id');",
        "// Line_Reference 112: ",
        "// Line_Reference 113:         if ($link_id > 0) {",
        "// Line_Reference 114:             $values = $this->taskExternalLinkModel->getById($link_id);",
        "// Line_Reference 115:         }",
        "// Line_Reference 116: ",
        "// Line_Reference 117:         if (empty($values)) {",
        "// Line_Reference 118:             throw new PageNotFoundException();",
        "// Line_Reference 119:         }",
        "// Line_Reference 120: ",
        "// Line_Reference 121:         $provider = $this->externalLinkManager->getProvider($values['link_type']);",
        "// Line_Reference 124:             'values' => $values,",
        "// Line_Reference 125:             'errors' => $errors,",
        "// Line_Reference 126:             'task' => $task,",
        "// Line_Reference 158:         $link_id = $this->request->getIntegerParam('link_id');",
        "// Line_Reference 159:         $link = $this->taskExternalLinkModel->getById($link_id);",
        "// Line_Reference 160: ",
        "// Line_Reference 161:         if (empty($link)) {",
        "// Line_Reference 162:             throw new PageNotFoundException();",
        "// Line_Reference 163:         }",
        "// Line_Reference 181:         if ($this->taskExternalLinkModel->remove($this->request->getIntegerParam('link_id'))) {"
    ]
}
