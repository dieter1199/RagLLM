{
    "cve_id": "CVE-2022-45962",
    "cve_description": "Open Solutions for Education, Inc openSIS Community Edition v8.0 and earlier is vulnerable to SQL Injection via CalendarModal.php.",
    "cve_publish_date": "2023-02-13",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "Version 9.0 release\n\nOlder version shifted to branch: Version_8.0",
    "type_of_change": "ModificationType.ADD",
    "filename_of_changes": "Menu.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "29",
    "number_of_lines_deleted_vulnerable_to_cve": "40",
    "vulnerable_lines": [
        "// Line_Reference 28: if(!$_SESSION['STAFF_ID'] && !$_SESSION['STUDENT_ID'] && (strpos($_SERVER['PHP_SELF'],'index.php'))===false)",
        "// Line_Reference 29: \t{",
        "// Line_Reference 30: \t\theader('Location: index.php');",
        "// Line_Reference 31: \t\texit;",
        "// Line_Reference 32: \t}",
        "// Line_Reference 33: if(!$_openSIS['Menu'])",
        "// Line_Reference 34: {",
        "// Line_Reference 35: \tforeach($openSISModules as $module=>$include)",
        "// Line_Reference 36: \t\tif($include)",
        "// Line_Reference 41: \tif($profile!='student')",
        "// Line_Reference 42: \t\tif(User('PROFILE_ID')!='')",
        "// Line_Reference 43:                 {",
        "// Line_Reference 44: ",
        "// Line_Reference 45:                     $can_use_RET = DBGet(DBQuery(\"SELECT MODNAME FROM profile_exceptions WHERE PROFILE_ID='\".User('PROFILE_ID').\"' AND CAN_USE='Y'\"),array(),array('MODNAME'));",
        "// Line_Reference 46: ",
        "// Line_Reference 47:                 }  else",
        "// Line_Reference 48:                         {",
        "// Line_Reference 49:                         $profile_id_mod=DBGet(DBQuery(\"SELECT PROFILE_ID FROM staff WHERE USER_ID='\".User('STAFF_ID')));",
        "// Line_Reference 50:                         $profile_id_mod=$profile_id_mod[1]['PROFILE_ID'];",
        "// Line_Reference 51:                         if($profile_id_mod!='')",
        "// Line_Reference 52:                         $can_use_RET = DBGet(DBQuery(\"SELECT MODNAME FROM profile_exceptions WHERE PROFILE_ID='\".$profile_id_mod.\"' AND CAN_USE='Y'\"),array(),array('MODNAME'));",
        "// Line_Reference 53:                         }",
        "// Line_Reference 54: else",
        "// Line_Reference 55: \t{",
        "// Line_Reference 56: \t\t$can_use_RET = DBGet(DBQuery(\"SELECT MODNAME FROM profile_exceptions WHERE PROFILE_ID='3' AND CAN_USE='Y'\"),array(),array('MODNAME'));",
        "// Line_Reference 59: ",
        "// Line_Reference 60: \tforeach($menu as $modcat=>$profiles)",
        "// Line_Reference 61: \t{",
        "// Line_Reference 62: \t \t$menuprof = $menu;",
        "// Line_Reference 64: \t\tforeach($programs as $program=>$title)",
        "// Line_Reference 65: \t\t{",
        "// Line_Reference 66: \t\t\tif(!is_numeric($program))",
        "// Line_Reference 67: \t\t\t{",
        "// Line_Reference 68: \t\t\t\tif($can_use_RET[$program] && ($profile!='admin' || !$exceptions[$modcat][$program] || AllowEdit($program)))",
        "// Line_Reference 70: \t\t\t}",
        "// Line_Reference 71: \t\t\telse",
        "// Line_Reference 72:                         {",
        "// Line_Reference 74:                         }",
        "// Line_Reference 78: \tif(User('PROFILE')=='student')",
        "// Line_Reference 81: ?>"
    ]
}
