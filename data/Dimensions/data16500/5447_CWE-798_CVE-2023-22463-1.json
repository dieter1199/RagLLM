{
    "cve_id": "CVE-2023-22463",
    "cve_description": "KubePi is a k8s panel. The jwt authentication function of KubePi through version 1.6.2 uses hard-coded Jwtsigkeys, resulting in the same Jwtsigkeys for all online projects. This means that an attacker can forge any jwt token to take over the administrator account of any online project. Furthermore, they may use the administrator to take over the k8s cluster of the target enterprise. `session.go`, the use of hard-coded JwtSigKey, allows an attacker to use this value to forge jwt tokens arbitrarily. The JwtSigKey is confidential and should not be hard-coded in the code. The vulnerability has been fixed in 1.6.3. In the patch, JWT key is specified in app.yml. If the user leaves it blank, a random key will be used. There are no workarounds aside from upgrading.",
    "cve_publish_date": "2023-01-04",
    "cwe_id": "CWE-798",
    "cwe_name": "Use of Hard-coded Credentials",
    "cwe_description": "The product contains hard-coded credentials, such as a password or cryptographic key.",
    "commit_message": "fix: 解决 jwt 硬编码导致的 k8s 集群接管漏洞",
    "type_of_change": "Modification",
    "filename_of_changes": "config.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "25",
    "number_of_lines_deleted_vulnerable_to_cve": "5",
    "vulnerable_lines": [
        "// Line_Reference 20: func ReadConfig(c *config.Config, path ...string)  error {",
        "// Line_Reference 48: \t\treturn  err",
        "// Line_Reference 52: \t\treturn  err",
        "// Line_Reference 55: \t\treturn  nil",
        "// Line_Reference 57: \treturn  nil"
    ]
}
