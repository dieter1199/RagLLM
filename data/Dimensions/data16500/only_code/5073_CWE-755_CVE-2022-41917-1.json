List<String> pathLoadedWords = getWordList(env, settings, name);
List<String> wordList = getWordList(env, settings, settingsPrefix);
* Fetches a list of words from the specified settings file. The list should either be available at the key
* specified by settingsPrefix or in a file specified by settingsPrefix + _path.
public static List<String> getWordList(Environment env, Settings settings, String settingPrefix) {
return getWordList(env, settings, settingPrefix + "_path", settingPrefix, true);
public static List<String> getWordList(
Environment env,
Settings settings,
String settingPath,
String settingList,
boolean removeComments
) {
List<String> explicitWordList = settings.getAsList(settingList, null);
if (explicitWordList == null) {
return null;
} else {
return explicitWordList;
}
final Path path = env.configDir().resolve(wordListPath);
return loadWordList(path, removeComments);
"Unsupported character encoding detected while reading %s: %s - files must be UTF-8 encoded",
settingPath,
path.toString()
throw new IllegalArgumentException(message, ex);
String message = String.format(Locale.ROOT, "IOException while reading %s: %s", settingPath, path.toString());
throw new IllegalArgumentException(message, ioe);
private static List<String> loadWordList(Path path, boolean removeComments) throws IOException {
if (removeComments == false || word.startsWith("#") == false) {
result.add(word.trim());
}
final Path path = env.configDir().resolve(filePath);
"Unsupported character encoding detected while reading %s_path: %s files must be UTF-8 encoded",
settingPrefix,
path.toString()
throw new IllegalArgumentException(message, ex);
String message = String.format(Locale.ROOT, "IOException while reading %s_path: %s", settingPrefix, path.toString());
throw new IllegalArgumentException(message, ioe);