import { Extension, ScanResult, ReportVO, PackageJson, FileImportDescription } from "./type";
import { join as pathJoin, dirname, join, normalize, relative } from "path";
import { join as arrayJoin, map, isArray, isString, concat, filter, keys } from "@newdash/newdash";
import { includes } from "@newdash/newdash/includes"
import { readFileSync, writeFileSync, existsSync } from "fs";
import { tmpdir, platform } from "os";
import { exec } from "child_process";
const extensions = [
"js", "jsx", "ts", "tsx", "mjs"
]
export const writeFileToTmpDirAndOpenIt = (filename: string, content: string) => {
const path = join(tmpdir(), filename);
writeFileSync(path, content);
if (platform() === "win32") {
exec(`start ${path}`)
} else {
exec(`open ${path}`)
}
}
