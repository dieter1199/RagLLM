if(clean_param($_REQUEST['values'], PARAM_NOTAGS) && ($_POST['values'] || $_REQUEST['ajax']) && AllowEdit())
{
$mflag=0;
foreach ($_REQUEST['values'] as $id => $columns)
{
if (!(isset($columns['TITLE']) && trim($columns['TITLE']) == ''))
{
if($id != 'new')
{
foreach ($columns as $column => $value)
{
if ($column == 'TITLE')
{
if ($column == 'CAPACITY')
{
if (count($assoc_check) == 0)
{
}
else
{
foreach ($assoc_check as $ai => $ad)
{
if ($go_tot_seat == 'y')
{
foreach ($assoc_check as $ai => $ad)
{
}
else
{
echo '<button type="button" class="close" data-dismiss="alert"><span>×</span><span class="sr-only">'._close.'</span></button>';
echo cannotChangeRoomCapacityAsItHasAssociation.'.';
if ($column == 'SORT_ORDER')
{
if(count($validate_title) != 0)
{
$mflag=1;
//                } else if (isset($validate_srt_odr) && count($validate_srt_odr) != 0) {
//                    $samedata = DBGet(DBQuery("select SORT_ORDER from rooms  WHERE room_id='$id'"));
//                    $samedata = $samedata[1]['SORT_ORDER'];
//                    if ($samedata != $srt_odr) {
//                        echo '<div class="alert bg-danger alert-styled-left">';
//                        echo '<button type="button" class="close" data-dismiss="alert"><span>×</span><span class="sr-only">Close</span></button>';
//                        echo 'Unable to save data, because sort order already exists.';
//                        echo '</div>';
//                    }
DBQuery($sql);
foreach ($columns as $column => $value)
{
if ($column == 'TITLE')
{
if($column == 'SORT_ORDER')
{
if ($value != '')
{
//                            $validate_srtodr = DBGet(DBQuery('SELECT count(*) as NO  FROM rooms WHERE  SORT_ORDER=\'' . $value . '\' AND SCHOOL_ID=\'' . UserSchool() . '\''));
//                            if ($validate_srtodr[1]['NO'] > 0) {
//                                echo '<div class="alert bg-danger alert-styled-left">';
//                                echo '<button type="button" class="close" data-dismiss="alert"><span>×</span><span class="sr-only">Close</span></button>';
//                                echo 'Unable to save data, because sort order already exists.';
//                                echo '</div>';
//                                $go = false;
//                            } else {
$fields .= $column . ',';
$values .= '\'' . singleQuoteReplace("'", "''", $value) . ' \',';
$go = true;
//                            }
}
else
{
if(count($validate_title) != 0)
{
$mflag=1;
/*echo '<div class="alert alert-info">';
echo '<button type="button" class="close" data-dismiss="alert"><span>×</span><span class="sr-only">Close</span></button>';
echo 'Room with similar title already exists.';
echo '</div>';*/
}
//else {
if ($go)
DBQuery($sql1);
//}
if($mflag == 1)
{
echo '<button type="button" class="close" data-dismiss="alert"><span>×</span><span class="sr-only">'._close.'</span></button>';
DrawBC(""._schoolSetup." > " . ProgramTitle());
$room_id = paramlib_validation($colmn = PERIOD_ID, $_REQUEST[id]);
UnableDeletePromptMod(''._cannotDeleteBecauseRoomAreAssociated.'.', 'delete', $qs);
array_push($room_id_arr, $td[ROOM_ID]);
$columns = array('TITLE' =>_title, 'CAPACITY' =>_capacity, 'DESCRIPTION' =>_description, 'SORT_ORDER' =>_sortOrder);
echo "<FORM name=F1 id=F1 action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&modfunc=update method=POST>";
function _makeTextInput($value, $name) {
$extra = 'size=5 maxlength=10 placeholder='.ucwords(strtolower(str_replace ('_', ' ', $name))).' class=form-control  id=' . $name . '_' . $id . '';
$extra = 'class=form-control placeholder='.ucwords(strtolower(str_replace ('_', ' ', $name))).' id=' . $name . '_' . $id . ' ';
$extra .= ' onkeyup=\"fill_rooms(this,' . $id . ');\"  placeholder='.ucwords(strtolower(str_replace ('_', ' ', $name)));
$extra = ' size=5 maxlength=10 class=form-control placeholder='.ucwords(strtolower(str_replace ('_', ' ', $name))).' id=' . $name . '_' . $id . ' onkeydown="return numberOnly(event);"';
$extra = ' size=5 maxlength=10 class=form-control placeholder='.ucwords(strtolower(str_replace ('_', ' ', $name))).' id=' . $name . '_' . $id . ' onkeydown="return numberOnly(event);"';
$extra = 'size=30 placeholder='.ucwords(strtolower(str_replace ('_', ' ', $name)));
function _makeIntInput($value, $name) {
$extra = 'size=5 maxlength=10 class=form-control placeholder='.ucwords(strtolower(str_replace ('_', ' ', $name))).' onkeydown=\"return numberOnly(event);\"';
$extra = 'size=5 maxlength=10 class=form-control placeholder='.ucwords(strtolower(str_replace ('_', ' ', $name))).' onkeydown="return numberOnly(event);"';
?>
