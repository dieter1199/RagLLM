use Symfony\Component\HttpFoundation\Response;
/** @var string */
protected $nonce;
* Sets CSP 'script-src' headers to restrict the forms of script that can
* run on the page.
public function setScriptSrc(Response $response)
return;
$value = 'script-src ' . implode(' ', $parts);
$response->headers->set('Content-Security-Policy', $value, false);
* Sets CSP "frame-ancestors" headers to restrict the hosts that BookStack can be
* iframed within. Also adjusts the cookie samesite options so that cookies will
* operate in the third-party context.
public function setFrameAncestors(Response $response)
$cspValue = 'frame-ancestors ' . implode(' ', $iframeHosts);
$response->headers->set('Content-Security-Policy', $cspValue, false);
* Check if the user has configured some allowed iframe hosts.
public function allowedIFrameHostsConfigured(): bool
return count($this->getAllowedIframeHosts()) > 0;
* Sets CSP 'object-src' headers to restrict the types of dynamic content
public function setObjectSrc(Response $response)
return;
$response->headers->set('Content-Security-Policy', 'object-src \'self\'', false);
* Sets CSP 'base-uri' headers to restrict what base tags can be set on
public function setBaseUri(Response $response)
$response->headers->set('Content-Security-Policy', 'base-uri \'self\'', false);