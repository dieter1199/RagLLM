{
    "cve_id": "CVE-2023-1326",
    "cve_description": "A privilege escalation attack was found in apport-cli 2.26.0 and earlier which is similar to CVE-2023-26604. If a system is specially configured to allow unprivileged users to run sudo apport-cli, less is configured as the pager, and the terminal size can be set: a local attacker can escalate privilege. It is extremely unlikely that a system administrator would configure sudo to allow unprivileged users to perform this class of exploit.",
    "cve_publish_date": "2023-04-13",
    "cwe_id": "CWE-269",
    "cwe_name": "Improper Privilege Management",
    "cwe_description": "The product does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor.",
    "commit_message": "fix: Do not run sensible-pager as root if using sudo/pkexec\n\nThe apport-cli supports view a crash. These features invoke the default\npager, which is likely to be less, other functions may apply.\n\nIt can be used to break out from restricted environments by spawning an\ninteractive system shell. If the binary is allowed to run as superuser\nby sudo, it does not drop the elevated privileges and may be used to\naccess the file system, escalate or maintain privileged access.\n\napport-cli should normally not be called with sudo or pkexec. In case it\nis called via sudo or pkexec execute `sensible-pager` as the original\nuser to avoid privilege elevation.\n\nProof of concept:\n\n```\n$ sudo apport-cli -c /var/crash/xxx.crash\n[...]\nPlease choose (S/E/V/K/I/C): v\n!id\nuid=0(root) gid=0(root) groups=0(root)\n!done  (press RETURN)\n```\n\nThis fixes CVE-2023-1326.\n\nBug: https://launchpad.net/bugs/2016023\nSigned-off-by: Benjamin Drung <benjamin.drung@canonical.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "ui.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "11",
    "number_of_lines_deleted_vulnerable_to_cve": "4",
    "vulnerable_lines": [
        "// Line_Reference 122: def run_as_real_user(args: list[str]) -> None:",
        "// Line_Reference 130:         subprocess.run(args, check=False)",
        "// Line_Reference 143:     } | _get_users_environ(uid)",
        "// Line_Reference 1820:                 run_as_real_user([\"xdg-open\", url])"
    ]
}
