{
    "cve_id": "CVE-2022-39288",
    "cve_description": "fastify is a fast and low overhead web framework, for Node.js. Affected versions of fastify are subject to a denial of service via malicious use of the Content-Type header. An attacker can send an invalid Content-Type header that can cause the application to crash. This issue has been addressed in commit `fbb07e8d` and will be included in release version 4.8.1. Users are advised to upgrade. Users unable to upgrade may manually filter out http content with malicious Content-Type headers.",
    "cve_publish_date": "2022-10-10",
    "cwe_id": "CWE-754",
    "cwe_name": "Improper Check for Unusual or Exceptional Conditions",
    "cwe_description": "The product does not check or incorrectly checks for unusual or exceptional conditions that are not expected to occur frequently during day to day operation of the product.",
    "commit_message": "Merge pull request from GHSA-455w-c45v-86rg\n\n* Add safeguard against malicious content types\n\n* Update lib/contentTypeParser.js\n\nCo-authored-by: Manuel Spigolon <behemoth89@gmail.com>\n\n* Apply spelling fixes from code review\n\nCo-authored-by: James Sumners <james@sumners.email>\n\nCo-authored-by: Manuel Spigolon <behemoth89@gmail.com>\nCo-authored-by: Frazer Smith <frazer.dev@outlook.com>\nCo-authored-by: James Sumners <james@sumners.email>",
    "type_of_change": "Modification",
    "filename_of_changes": "contentTypeParser.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "20",
    "number_of_lines_deleted_vulnerable_to_cve": "19",
    "vulnerable_lines": [
        "// Line_Reference 32:   this.customParsers = {}",
        "// Line_Reference 33:   this.customParsers['application/json'] = new Parser(true, false, bodyLimit, this[kDefaultJsonParse])",
        "// Line_Reference 34:   this.customParsers['text/plain'] = new Parser(true, false, bodyLimit, defaultPlainTextParser)",
        "// Line_Reference 65:     this.customParsers[''] = parser",
        "// Line_Reference 72:     this.customParsers[contentType] = parser",
        "// Line_Reference 77:   return contentType in this.customParsers",
        "// Line_Reference 81:   if (contentType === 'application/json') {",
        "// Line_Reference 82:     return this.customParsers['application/json'] && this.customParsers['application/json'].fn !== this[kDefaultJsonParse]",
        "// Line_Reference 84:   if (contentType === 'text/plain') {",
        "// Line_Reference 85:     return this.customParsers['text/plain'] && this.customParsers['text/plain'].fn !== defaultPlainTextParser",
        "// Line_Reference 88:   return contentType in this.customParsers",
        "// Line_Reference 92:   if (contentType in this.customParsers) {",
        "// Line_Reference 93:     return this.customParsers[contentType]",
        "// Line_Reference 104:       const parser = this.customParsers[parserName]",
        "// Line_Reference 114:       const parser = this.customParsers[parserRegExp]",
        "// Line_Reference 120:   return this.customParsers['']",
        "// Line_Reference 124:   this.customParsers = {}",
        "// Line_Reference 133:   delete this.customParsers[contentType]",
        "// Line_Reference 292:   Object.assign(contentTypeParser.customParsers, c.customParsers)"
    ]
}
