{
    "cve_id": "CVE-2022-38301",
    "cve_description": "Onedev v7.4.14 contains a path traversal vulnerability which allows attackers to access restricted files and directories via uploading a crafted JAR file into the directory /opt/onedev/lib.",
    "cve_publish_date": "2022-09-14",
    "cwe_id": "CWE-22",
    "cwe_name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
    "cwe_description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
    "commit_message": "Fix issue #842 - A security vulnerability relating to path traversal",
    "type_of_change": "Modification",
    "filename_of_changes": "ArtifactUploadPanel.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "25",
    "number_of_lines_deleted_vulnerable_to_cve": "20",
    "vulnerable_lines": [
        "// Line_Reference 81: \t\t\t\tLockUtils.write(getBuild().getArtifactsLockKey(), new Callable<Void>() {",
        "// Line_Reference 83: \t\t\t\t\t@Override",
        "// Line_Reference 84: \t\t\t\t\tpublic Void call() throws Exception {",
        "// Line_Reference 85: \t\t\t\t\t\tFile artifactsDir = getBuild().getArtifactsDir();",
        "// Line_Reference 86: \t\t\t\t\t\tfor (FileUpload upload: uploads) {",
        "// Line_Reference 87: \t\t\t\t\t\t\tString filePath = FilenameUtils.sanitizeFilename(upload.getFileName());",
        "// Line_Reference 88: \t\t\t\t\t\t\tif (directory != null)",
        "// Line_Reference 89: \t\t\t\t\t\t\t\tfilePath = directory + \"/\" + filePath;",
        "// Line_Reference 90: \t\t\t\t\t\t\tFile file = new File(artifactsDir, filePath);",
        "// Line_Reference 91: \t\t\t\t\t\t\tFileUtils.createDir(file.getParentFile());",
        "// Line_Reference 92: \t\t\t\t\t\t\ttry (\tInputStream is = upload.getInputStream();",
        "// Line_Reference 93: \t\t\t\t\t\t\t\t\tOutputStream os = new FileOutputStream(file)) {",
        "// Line_Reference 94: \t\t\t\t\t\t\t\tIOUtils.copy(is, os);",
        "// Line_Reference 95: \t\t\t\t\t\t\t} finally {",
        "// Line_Reference 96: \t\t\t\t\t\t\t\tupload.release();",
        "// Line_Reference 99: \t\t\t\t\t\treturn null;",
        "// Line_Reference 100: \t\t\t\t\t}",
        "// Line_Reference 102: \t\t\t\t});",
        "// Line_Reference 103: ",
        "// Line_Reference 104: \t\t\t\tonUploaded(target);"
    ]
}
