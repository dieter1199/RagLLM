{
    "cve_id": "CVE-2020-13692",
    "cve_description": "PostgreSQL JDBC Driver (aka PgJDBC) before 42.2.13 allows XXE.",
    "cve_publish_date": "2020-06-04",
    "cwe_id": "CWE-611",
    "cwe_name": "Improper Restriction of XML External Entity Reference",
    "cwe_description": "The product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",
    "commit_message": "Merge pull request from GHSA-37xm-4h3m-5w3v\n\n* refactor: Clean up whitespace in existing PgSQLXMLTest\n\n* fix: Fix XXE vulnerability in PgSQLXML by disabling external access and doctypes\n\nFixes XXE vulnerability by defaulting to disabling external access and doc types. The\nlegacy insecure behavior can be restored via the new connection property xmlFactoryFactory\nwith a value of LEGACY_INSECURE. Alternatively, a custom class name can be specified that\nimplements org.postgresql.xml.PGXmlFactoryFactory and takes a no argument constructor.\n\n* fix: Add missing getter and setter for XML_FACTORY_FACTORY to BasicDataSource",
    "type_of_change": "Modification",
    "filename_of_changes": "PgSQLXML.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "17",
    "number_of_lines_deleted_vulnerable_to_cve": "26",
    "vulnerable_lines": [
        "// Line_Reference 13: import org.xml.sax.ErrorHandler;",
        "// Line_Reference 15: import org.xml.sax.SAXParseException;",
        "// Line_Reference 30: import javax.xml.parsers.DocumentBuilderFactory;",
        "// Line_Reference 135:         DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();",
        "// Line_Reference 136:         DocumentBuilder builder = factory.newDocumentBuilder();",
        "// Line_Reference 137:         builder.setErrorHandler(new NonPrintingErrorHandler());",
        "// Line_Reference 142:         return (T) new SAXSource(is);",
        "// Line_Reference 146:         XMLInputFactory xif = XMLInputFactory.newInstance();",
        "// Line_Reference 194:         SAXTransformerFactory transformerFactory =",
        "// Line_Reference 195:             (SAXTransformerFactory) SAXTransformerFactory.newInstance();",
        "// Line_Reference 212:         XMLOutputFactory xof = XMLOutputFactory.newInstance();",
        "// Line_Reference 275:         TransformerFactory factory = TransformerFactory.newInstance();",
        "// Line_Reference 301: ",
        "// Line_Reference 302:   // Don't clutter System.err with errors the user can't silence.",
        "// Line_Reference 303:   // If something bad really happens an exception will be thrown.",
        "// Line_Reference 304:   static class NonPrintingErrorHandler implements ErrorHandler {",
        "// Line_Reference 305:     public void error(SAXParseException e) {",
        "// Line_Reference 306:     }",
        "// Line_Reference 307: ",
        "// Line_Reference 308:     public void fatalError(SAXParseException e) {",
        "// Line_Reference 309:     }",
        "// Line_Reference 310: ",
        "// Line_Reference 311:     public void warning(SAXParseException e) {",
        "// Line_Reference 312:     }",
        "// Line_Reference 313:   }",
        "// Line_Reference 314: "
    ]
}
