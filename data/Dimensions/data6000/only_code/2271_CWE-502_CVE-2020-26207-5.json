create.Click += (s, ea) => new SqlTasks(sqlType).BuildAllTableDdl(schema);
deletes.Click += (s, ea) => new SqlTasks(sqlType).DeleteAllData(schema);
create.Click += (s, ea) => new SqlTasks(sqlType).BuildPackage(pack);
create.Click += (s, ea) => new SqlTasks(sqlType).BuildFunction(fun);
create.Click += (s, ea) => new SqlTasks(sqlType).BuildProcedure(sproc);
code.Click += (s, ea) => new SqlTasks(sqlType).BuildProcedureCode(_databaseSchema, sproc);
add.Click += (s, ea) => new SqlTasks(sqlType).BuildAddColumn(column);
alter.Click += (s, ea) => new SqlTasks(sqlType).BuildAlterColumn(column);
add.Click += (s, ea) => new SqlTasks(sqlType).BuildAddConstraint(parentTable, constraint);
drop.Click += (s, ea) => new SqlTasks(sqlType).BuildDropConstraint(parentTable, constraint);
add.Click += (s, ea) => new SqlTasks(sqlType).BuildAddTrigger(parentTable, trigger);
drop.Click += (s, ea) => new SqlTasks(sqlType).BuildDropTrigger(trigger);
add.Click += (s, ea) => new SqlTasks(sqlType).BuildAddIndex(parentTable, index);
drop.Click += (s, ea) => new SqlTasks(sqlType).BuildDropIndex(parentTable, index);
create.Click += (s, ea) => new SqlTasks(sqlType).BuildView(view);
select.Click += (s, ea) => new SqlTasks(sqlType).BuildTableSelect(view);
selectPaged.Click += (s, ea) => new SqlTasks(sqlType).BuildTableSelectPaged(view);
create.Click += (s, ea) => new SqlTasks(sqlType).BuildTableDdl(table);
drop.Click += (s, ea) => new SqlTasks(sqlType).BuildDropTable(table);
select.Click += (s, ea) => new SqlTasks(sqlType).BuildTableSelect(table);
selectPaged.Click += (s, ea) => new SqlTasks(sqlType).BuildTableSelectPaged(table);
insert.Click += (s, ea) => new SqlTasks(sqlType).BuildTableInsert(table);
update.Click += (s, ea) => new SqlTasks(sqlType).BuildTableUpdate(table);
code.Click += (s, ea) => new SqlTasks(sqlType).BuildClass(table);
data.Click += (s, ea) => new SqlTasks(sqlType).GetData(table, ConnectionString.Text.Trim(), (string)DataProviders.SelectedItem);