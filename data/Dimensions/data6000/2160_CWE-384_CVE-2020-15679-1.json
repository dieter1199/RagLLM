{
    "cve_id": "CVE-2020-15679",
    "cve_description": "An OAuth session fixation vulnerability existed in the VPN login flow, where an attacker could craft a custom login URL, convince a VPN user to login via that URL, and obtain authenticated access as that user. This issue is limited to cases where attacker and victim are sharing the same source IP and could allow the ability to view session states and disconnect VPN sessions. This vulnerability affects Mozilla VPN iOS 1.0.7 < (929), Mozilla VPN Windows < 1.2.2, and Mozilla VPN Android 1.1.0 < (1360).",
    "cve_publish_date": "2022-12-22",
    "cwe_id": "CWE-384",
    "cwe_name": "Session Fixation",
    "cwe_description": "Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.",
    "commit_message": "PGAND-410 Resolve oauth session fixation on iOS (#272)\n\n* update login flow with PKCE\r\n\r\n* fix MockGuardianAPI",
    "type_of_change": "Modification",
    "filename_of_changes": "GuardianAPI.swift",
    "code_language": "Swift",
    "number_of_lines_added_for_mitigation": "15",
    "number_of_lines_deleted_vulnerable_to_cve": "15",
    "vulnerable_lines": [
        "// Line_Reference 23:     func initiateUserLogin(completion: @escaping (Result<LoginCheckpointModel, GuardianAPIError>) -> Void) {",
        "// Line_Reference 24:         let urlRequest = GuardianURLRequest.urlRequest(request: .login, type: .POST)",
        "// Line_Reference 25:         networkLayer.fire(urlRequest: urlRequest) { result in",
        "// Line_Reference 26:             DispatchQueue.main.async {",
        "// Line_Reference 27:                 completion(result.decode(to: LoginCheckpointModel.self))",
        "// Line_Reference 28:             }",
        "// Line_Reference 29:         }",
        "// Line_Reference 30:     }",
        "// Line_Reference 31: ",
        "// Line_Reference 41:     func verify(urlString: String, completion: @escaping (Result<VerifyResponse, GuardianAPIError>) -> Void) {",
        "// Line_Reference 42:         let urlRequest = GuardianURLRequest.urlRequest(with: urlString, type: .GET)",
        "// Line_Reference 109:     private func headers(with token: String) -> [String: String] {",
        "// Line_Reference 110:         return [\"Authorization\": \"Bearer \\(token)\",",
        "// Line_Reference 111:             \"Content-Type\": \"application/json\",",
        "// Line_Reference 112:             \"User-Agent\": userAgentInfo]"
    ]
}
