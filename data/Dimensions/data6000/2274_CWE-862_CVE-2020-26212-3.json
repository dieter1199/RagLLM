{
    "cve_id": "CVE-2020-26212",
    "cve_description": "GLPI stands for Gestionnaire Libre de Parc Informatique and it is a Free Asset and IT Management Software package, that provides ITIL Service Desk features, licenses tracking and software auditing. In GLPI before version 9.5.3, any authenticated user has read-only permissions to the planning of every other user, even admin ones. Steps to reproduce the behavior: 1. Create a new planning with 'eduardo.mozart' user (from 'IT' group that belongs to 'Super-admin') into it's personal planning at 'Assistance' > 'Planning'. 2. Copy the CalDAV url and use a CalDAV client (e.g. Thunderbird) to sync the planning with the provided URL. 3. Inform the username and password from any valid user (e.g. 'camila' from 'Proativa' group). 4. 'Camila' has read-only access to 'eduardo.mozart' personal planning. The same behavior happens to any group. E.g. 'Camila' has access to 'IT' group planning, even if she doesn't belong to this group and has a 'Self-service' profile permission). This issue is fixed in version 9.5.3. As a workaround, one can remove the `caldav.php` file to block access to CalDAV server.",
    "cve_publish_date": "2020-11-25",
    "cwe_id": "CWE-862",
    "cwe_name": "Missing Authorization",
    "cwe_description": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
    "commit_message": "Merge pull request from GHSA-qmw3-87hr-5wgx",
    "type_of_change": "Modification",
    "filename_of_changes": "principal.class.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "4",
    "number_of_lines_deleted_vulnerable_to_cve": "41",
    "vulnerable_lines": [
        "// Line_Reference 61:       global $DB;",
        "// Line_Reference 62: ",
        "// Line_Reference 67:             if (!\\Session::haveRight(\\Planning::$rightname, \\Planning::READALL)",
        "// Line_Reference 68:                 && empty($_SESSION['glpigroups'])) {",
        "// Line_Reference 69:                // User cannot read planning of everyone and has no groups.",
        "// Line_Reference 70:                break;",
        "// Line_Reference 71:             }",
        "// Line_Reference 72: ",
        "// Line_Reference 73:             $groups_criteria = getEntitiesRestrictCriteria(",
        "// Line_Reference 74:                \\Group::getTable(),",
        "// Line_Reference 75:                'entities_id',",
        "// Line_Reference 76:                $_SESSION['glpiactiveentities'],",
        "// Line_Reference 77:                true",
        "// Line_Reference 78:             );",
        "// Line_Reference 79: ",
        "// Line_Reference 80:             // Limit to groups visible in planning (see Planning::showAddGroupForm())",
        "// Line_Reference 81:             $groups_criteria['is_task'] = 1;",
        "// Line_Reference 82: ",
        "// Line_Reference 83:             // Limit to users groups if user cannot read planning of everyone",
        "// Line_Reference 84:             if (!\\Session::haveRight(\\Planning::$rightname, \\Planning::READALL)) {",
        "// Line_Reference 85:                $groups_criteria['id'] = $_SESSION['glpigroups'];",
        "// Line_Reference 86:             }",
        "// Line_Reference 87: ",
        "// Line_Reference 88:             $groups_iterator = $DB->request(",
        "// Line_Reference 89:                [",
        "// Line_Reference 90:                   'FROM'  => \\Group::getTable(),",
        "// Line_Reference 91:                   'WHERE' => $groups_criteria,",
        "// Line_Reference 92:                ]",
        "// Line_Reference 93:             );",
        "// Line_Reference 99:             if (!\\Session::haveRightsOr(\\Planning::$rightname, [\\Planning::READALL, \\Planning::READGROUP])) {",
        "// Line_Reference 100:                // Can see only personnal planning",
        "// Line_Reference 101:                $rights = 'id';",
        "// Line_Reference 102:             } else if (\\Session::haveRight(\\Planning::$rightname, \\Planning::READGROUP)",
        "// Line_Reference 103:                 && !\\Session::haveRight(\\Planning::$rightname, \\Planning::READALL)) {",
        "// Line_Reference 104:                // Can see only planning from users sharing same groups",
        "// Line_Reference 105:                $rights = 'groups';",
        "// Line_Reference 106:             } else {",
        "// Line_Reference 107:                // Can see planning from users having rights on planning elements",
        "// Line_Reference 108:                $rights = ['change', 'problem', 'reminder', 'task', 'projecttask'];",
        "// Line_Reference 109:             }",
        "// Line_Reference 110:             $users_iterator = \\User::getSqlSearchResult(false, $rights);"
    ]
}
