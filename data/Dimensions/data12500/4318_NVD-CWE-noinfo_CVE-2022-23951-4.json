{
    "cve_id": "CVE-2022-23951",
    "cve_description": "In Keylime before 6.3.0, quote responses from the agent can contain possibly untrusted ZIP data which can lead to zip bombs.",
    "cve_publish_date": "2022-09-21",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "tpm: do not compress quote with zlib by default\n\nPythons zlib decompression has no mitigations against zip bombs or similar\nattacks, so we remove the compression for the quote data.\n\nThe data itself is rather small compared to the IMA or UEFI event log.\n\nSigned-off-by: Thore Sommer <mail@thson.de>",
    "type_of_change": "Modification",
    "filename_of_changes": "tpm_main.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "22",
    "number_of_lines_deleted_vulnerable_to_cve": "10",
    "vulnerable_lines": [
        "// Line_Reference 962:     def create_quote(self, nonce, data=None, pcrmask=tpm_abstract.AbstractTPM.EMPTYMASK, hash_alg=None):",
        "// Line_Reference 995:                 quote_b64encode = base64.b64encode(zlib.compress(quoteraw))",
        "// Line_Reference 997:                 sigraw_b64encode = base64.b64encode(zlib.compress(sigraw))",
        "// Line_Reference 999:                 pcrraw_b64encode = base64.b64encode(zlib.compress(pcrraw))",
        "// Line_Reference 1021:     def _tpm2_checkquote(self, aikTpmFromRegistrar, quote, nonce, hash_alg):",
        "// Line_Reference 1045:         quoteblob = zlib.decompress(base64.b64decode(quote_tokens[0]))",
        "// Line_Reference 1046:         sigblob = zlib.decompress(base64.b64decode(quote_tokens[1]))",
        "// Line_Reference 1047:         pcrblob = zlib.decompress(base64.b64decode(quote_tokens[2]))",
        "// Line_Reference 1103:                     mb_measurement_list=None, mb_refstate=None) -> Failure:",
        "// Line_Reference 1108:         retout, success = self._tpm2_checkquote(aikTpmFromRegistrar, quote, nonce, hash_alg)"
    ]
}
