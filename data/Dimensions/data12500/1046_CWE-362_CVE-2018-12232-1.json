{
    "cve_id": "CVE-2018-12232",
    "cve_description": "In net/socket.c in the Linux kernel through 4.17.1, there is a race condition between fchownat and close in cases where they target the same socket file descriptor, related to the sock_close and sockfs_setattr functions. fchownat does not increment the file descriptor reference count, which allows close to set the socket to NULL during fchownat's execution, leading to a NULL pointer dereference and system crash.",
    "cve_publish_date": "2018-06-12",
    "cwe_id": "CWE-362",
    "cwe_name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
    "cwe_description": "The product contains a code sequence that can run concurrently with other code, and the code sequence requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence that is operating concurrently.",
    "commit_message": "socket: close race condition between sock_close() and sockfs_setattr()\n\nfchownat() doesn't even hold refcnt of fd until it figures out\nfd is really needed (otherwise is ignored) and releases it after\nit resolves the path. This means sock_close() could race with\nsockfs_setattr(), which leads to a NULL pointer dereference\nsince typically we set sock->sk to NULL in ->release().\n\nAs pointed out by Al, this is unique to sockfs. So we can fix this\nin socket layer by acquiring inode_lock in sock_close() and\nchecking against NULL in sockfs_setattr().\n\nsock_release() is called in many places, only the sock_close()\npath matters here. And fortunately, this should not affect normal\nsock_close() as it is only called when the last fd refcnt is gone.\nIt only affects sock_close() with a parallel sockfs_setattr() in\nprogress, which is not common.\n\nFixes: 86741ec25462 (\"net: core: Add a UID field to struct sock.\")\nReported-by: shankarapailoor <shankarapailoor@gmail.com>\nCc: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>\nCc: Lorenzo Colitti <lorenzo@google.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Cong Wang <xiyou.wangcong@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "type_of_change": "Modification",
    "filename_of_changes": "socket.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "15",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 544: \t\tsock->sk->sk_uid = iattr->ia_uid;",
        "// Line_Reference 593: void sock_release(struct socket *sock)",
        "// Line_Reference 1174: \tsock_release(SOCKET_I(inode));"
    ]
}
