{
    "cve_id": "CVE-2018-18546",
    "cve_description": "ThinkPHP 3.2.4 has SQL Injection via the order parameter because the Library/Think/Db/Driver.class.php parseOrder function mishandles the key variable.",
    "cve_publish_date": "2018-10-21",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "改进",
    "type_of_change": "Modification",
    "filename_of_changes": "Driver.class.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "13",
    "number_of_lines_deleted_vulnerable_to_cve": "13",
    "vulnerable_lines": [
        "// Line_Reference 764:                     if (false === strpos($val, '(') && false === strpos($val, ';')) {",
        "// Line_Reference 765:                         $array[] = $this->parseKey($val);",
        "// Line_Reference 766:                     }",
        "// Line_Reference 767:                 } elseif (false === strpos($key, ')') && false === strpos($key, '#')) {",
        "// Line_Reference 768:                     $sort    = in_array(strtolower($val), array('asc', 'desc')) ? ' ' . $val : '';",
        "// Line_Reference 775:         } else {",
        "// Line_Reference 776:             foreach (explode(',', $order) as $val) {",
        "// Line_Reference 777:                 if (preg_match('/\\s+(ASC|DESC)$/i', rtrim($val), $match, PREG_OFFSET_CAPTURE)) {",
        "// Line_Reference 778:                     $array[] = $this->parseKey(ltrim(substr($val, 0, $match[0][1]))) . ' ' . $match[1][0];",
        "// Line_Reference 779:                 } elseif (false === strpos($val, '(') && false === strpos($val, ';')) {",
        "// Line_Reference 780:                     $array[] = $this->parseKey($val);",
        "// Line_Reference 781:                 }",
        "// Line_Reference 782:             }"
    ]
}
