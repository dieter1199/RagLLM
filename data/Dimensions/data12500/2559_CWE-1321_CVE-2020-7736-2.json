{
    "cve_id": "CVE-2020-7736",
    "cve_description": "The package bmoor before 0.8.12 are vulnerable to Prototype Pollution via the set function.",
    "cve_publish_date": "2020-10-02",
    "cwe_id": "CWE-1321",
    "cwe_name": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')",
    "cwe_description": "The product receives input from an upstream component that specifies attributes that are to be initialized or updated in an object, but it does not properly control modifications of attributes of the object prototype.",
    "commit_message": "fix: prototype pollution",
    "type_of_change": "Modification",
    "filename_of_changes": "object.spec.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "55",
    "number_of_lines_deleted_vulnerable_to_cve": "53",
    "vulnerable_lines": [
        "// Line_Reference 8: \tit('should operate explode correctly', function(){",
        "// Line_Reference 9: \t\tvar t = {",
        "// Line_Reference 10: \t\t\t'eins.zwei': 12,",
        "// Line_Reference 11: \t\t\t'eins.drei': 13,",
        "// Line_Reference 12: \t\t\t'fier': 4",
        "// Line_Reference 13: \t\t};",
        "// Line_Reference 14: ",
        "// Line_Reference 15: \t\texpect(bmoor.object.explode(t))",
        "// Line_Reference 16: \t\t.to.deep.equal({",
        "// Line_Reference 17: \t\t\teins: {",
        "// Line_Reference 18: \t\t\t\tzwei: 12,",
        "// Line_Reference 19: \t\t\t\tdrei: 13",
        "// Line_Reference 20: \t\t\t},",
        "// Line_Reference 21: \t\t\tfier: 4",
        "// Line_Reference 22: \t\t});",
        "// Line_Reference 23: \t});",
        "// Line_Reference 24: ",
        "// Line_Reference 25: \tit('should operate makeExploder correctly', function(){",
        "// Line_Reference 26: \t\tvar t = {",
        "// Line_Reference 30: \t\t\t},",
        "// Line_Reference 31: \t\t\texplode = bmoor.object.makeExploder( Object.keys(t) );",
        "// Line_Reference 33: \t\texpect(explode(t))",
        "// Line_Reference 34: \t\t.to.deep.equal({",
        "// Line_Reference 35: \t\t\teins: {",
        "// Line_Reference 36: \t\t\t\tzwei: 12,",
        "// Line_Reference 37: \t\t\t\tdrei: 13",
        "// Line_Reference 38: \t\t\t},",
        "// Line_Reference 39: \t\t\tfier: 4",
        "// Line_Reference 43: \tdescribe(':: implode', function(){",
        "// Line_Reference 116: \t});",
        "// Line_Reference 118: \tit('should operate implode correctly - with an ignore', function(){",
        "// Line_Reference 119: \t\tvar t = {",
        "// Line_Reference 120: \t\t\ttime: {",
        "// Line_Reference 121: \t\t\t\tstart: 99,",
        "// Line_Reference 122: \t\t\t\tstop: 100",
        "// Line_Reference 123: \t\t\t},",
        "// Line_Reference 124: \t\t\tid: 'woot',",
        "// Line_Reference 125: \t\t\tfoo: {",
        "// Line_Reference 126: \t\t\t\tbar: {",
        "// Line_Reference 127: \t\t\t\t\thello: 'world'",
        "// Line_Reference 129: \t\t\t}",
        "// Line_Reference 130: \t\t};",
        "// Line_Reference 132: \t\texpect(bmoor.object.implode(t, {",
        "// Line_Reference 133: \t\t\tignore: {",
        "// Line_Reference 134: \t\t\t\ttime:{",
        "// Line_Reference 135: \t\t\t\t\tstart:true",
        "// Line_Reference 136: \t\t\t\t},",
        "// Line_Reference 137: \t\t\t\tid: true,",
        "// Line_Reference 138: \t\t\t\tfoo: true",
        "// Line_Reference 139: \t\t\t}",
        "// Line_Reference 140: \t\t})).to.deep.equal({",
        "// Line_Reference 141: \t\t\t'time.stop': 100",
        "// Line_Reference 180: });"
    ]
}
