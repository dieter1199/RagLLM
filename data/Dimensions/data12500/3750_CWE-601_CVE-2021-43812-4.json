{
    "cve_id": "CVE-2021-43812",
    "cve_description": "The Auth0 Next.js SDK is a library for implementing user authentication in Next.js applications. Versions before 1.6.2 do not filter out certain returnTo parameter values from the login url, which expose the application to an open redirect vulnerability. Users are advised to upgrade as soon as possible. There are no known workarounds for this issue.",
    "cve_publish_date": "2021-12-16",
    "cwe_id": "CWE-601",
    "cwe_name": "URL Redirection to Untrusted Site ('Open Redirect')",
    "cwe_description": "A web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a Redirect. This simplifies phishing attacks.",
    "commit_message": "Enforce configured host on user supplied returnTo (#557)\n\n* Enforce configured host on user supplied returnTo\r\n\r\n* Test improvements per PR suggestions",
    "type_of_change": "Modification",
    "filename_of_changes": "url-helpers.test.ts",
    "code_language": "TypeScript",
    "number_of_lines_added_for_mitigation": "19",
    "number_of_lines_deleted_vulnerable_to_cve": "10",
    "vulnerable_lines": [
        "// Line_Reference 1: import isSafeRedirect from '../../src/utils/url-helpers';",
        "// Line_Reference 6:       expect(isSafeRedirect('file://foo')).toEqual(false);",
        "// Line_Reference 7:       expect(isSafeRedirect('https://foo')).toEqual(false);",
        "// Line_Reference 8:       expect(isSafeRedirect('http://foo')).toEqual(false);",
        "// Line_Reference 12:       expect(isSafeRedirect('/foo')).toEqual(true);",
        "// Line_Reference 13:       expect(isSafeRedirect('/foo?some=value')).toEqual(true);",
        "// Line_Reference 17:       expect(isSafeRedirect('//google.com')).toEqual(false);",
        "// Line_Reference 18:       expect(isSafeRedirect('///google.com')).toEqual(false);",
        "// Line_Reference 21:     test('should throw when non string provided', () => {",
        "// Line_Reference 22:       expect(isSafeRedirect.bind(null)).toThrow('Invalid url: undefined');"
    ]
}
