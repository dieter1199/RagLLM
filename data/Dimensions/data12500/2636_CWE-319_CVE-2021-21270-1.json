{
    "cve_id": "CVE-2021-21270",
    "cve_description": "OctopusDSC is a PowerShell module with DSC resources that can be used to install and configure an Octopus Deploy Server and Tentacle agent. In OctopusDSC version 4.0.977 and earlier a customer API key used to connect to Octopus Server is exposed via logging in plaintext. This vulnerability is patched in version 4.0.1002.",
    "cve_publish_date": "2021-01-22",
    "cwe_id": "CWE-319",
    "cwe_name": "Cleartext Transmission of Sensitive Information",
    "cwe_description": "The product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.",
    "commit_message": "[Bug fix] Prevent exposing API key secret in stdout logging (#270)\n\n* remove Write-Verbose line\r\n\r\n* use masking function in commands\r\n\r\n* simplify masking function",
    "type_of_change": "Modification",
    "filename_of_changes": "OctopusDSCHelpers.ps1",
    "code_language": "PowerShell",
    "number_of_lines_added_for_mitigation": "23",
    "number_of_lines_deleted_vulnerable_to_cve": "40",
    "vulnerable_lines": [
        "// Line_Reference 156: Function Get-MaskedOutput",
        "// Line_Reference 157: {",
        "// Line_Reference 161:     $reg = [System.Text.RegularExpressions.RegEx]::new(\"--masterkey|--password|--license\",",
        "// Line_Reference 162:                 [System.Text.RegularExpressions.RegexOptions]::IgnoreCase)",
        "// Line_Reference 164:     if(($arguments -match \"--masterkey|--password|--license\"))",
        "// Line_Reference 165:     {",
        "// Line_Reference 166:         for($x=0;$x -lt $arguments.count; $x++)",
        "// Line_Reference 167:         {",
        "// Line_Reference 168:             if(($arguments[$x] -match \"--masterkey|--password|--license|--trust|--remove-trust|--apikey|--password|--pw|--pfx-password|--proxyPassword\"))",
        "// Line_Reference 169:             {",
        "// Line_Reference 170:                 $arguments[$x+1] = $arguments[$x+1] -replace \".\", \"*\"",
        "// Line_Reference 171:             }",
        "// Line_Reference 173:         $out = $arguments",
        "// Line_Reference 174:     }",
        "// Line_Reference 175:     elseif(($arguments -match \"password|pwd\"))",
        "// Line_Reference 176:     {",
        "// Line_Reference 177:         $out = $arguments -replace \"(password|pwd)=[^;|`\"]*\", \"`$1=********\"",
        "// Line_Reference 178:     }",
        "// Line_Reference 179:     else",
        "// Line_Reference 180:     {",
        "// Line_Reference 181:         $out = @(\"************************\")",
        "// Line_Reference 183:     return $out",
        "// Line_Reference 187:     # todo: fix this up",
        "// Line_Reference 188:     if ((($cmdArgs -match \"masterkey|password|license|pwd=\").Count -eq 0)) {",
        "// Line_Reference 189:         Write-Verbose \"Executing command '$octopusServerExePath $($cmdArgs -join ' ')'\"",
        "// Line_Reference 190:     } else {",
        "// Line_Reference 191:         $copiedarguments = @() # hack to pass a copy of the array, not a reference",
        "// Line_Reference 192:         $copiedarguments += $cmdArgs",
        "// Line_Reference 193:         $maskedarguments = Get-MaskedOutput $copiedarguments",
        "// Line_Reference 194:         Write-Verbose \"Executing command '$octopusServerExePath $($maskedarguments -join ' ')'\"",
        "// Line_Reference 195:     }",
        "// Line_Reference 213:     # todo: fix this up",
        "// Line_Reference 214:     if ((($cmdArgs -match \"masterkey|password|license|pwd=\").Count -eq 0)) {",
        "// Line_Reference 215:         Write-Verbose \"Executing command '$tentacleExePath $($cmdArgs -join ' ')'\"",
        "// Line_Reference 216:     } else {",
        "// Line_Reference 217:         $copiedarguments = @() # hack to pass a copy of the array, not a reference",
        "// Line_Reference 218:         $copiedarguments += $cmdArgs",
        "// Line_Reference 219:         $maskedarguments = Get-MaskedOutput $copiedarguments",
        "// Line_Reference 220:         Write-Verbose \"Executing command '$tentacleExePath $($maskedarguments -join ' ')'\"",
        "// Line_Reference 221:     }"
    ]
}
