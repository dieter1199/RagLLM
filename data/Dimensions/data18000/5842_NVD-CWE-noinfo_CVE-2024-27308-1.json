{
    "cve_id": "CVE-2024-27308",
    "cve_description": "Mio is a Metal I/O library for Rust. When using named pipes on Windows, mio will under some circumstances return invalid tokens that correspond to named pipes that have already been deregistered from the mio registry. The impact of this vulnerability depends on how mio is used. For some applications, invalid tokens may be ignored or cause a warning or a crash. On the other hand, for applications that store pointers in the tokens, this vulnerability may result in a use-after-free. For users of Tokio, this vulnerability is serious and can result in a use-after-free in Tokio. The vulnerability is Windows-specific, and can only happen if you are using named pipes. Other IO resources are not affected. This vulnerability has been fixed in mio v0.8.11. All versions of mio between v0.7.2 and v0.8.10 are vulnerable. Tokio is vulnerable when you are using a vulnerable version of mio AND you are using at least Tokio v1.30.0. Versions of Tokio prior to v1.30.0 will ignore invalid tokens, so they are not vulnerable. Vulnerable libraries that use mio can work around this issue by detecting and ignoring invalid tokens.",
    "cve_publish_date": "2024-03-06",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "named-pipes: fix receiving IOCP events after deregister\n\nBackport of the following commits\n * 04c3bb6ef23d217ee7f8f68e3e6d0d9fcddd1520\n * dc3b3f63ba34e2189d9e57fd83b1d4ce5a52385e\n * 6fd5dd0d615a66a30a449d3f8eb1266dad96af62",
    "type_of_change": "Modification",
    "filename_of_changes": "named_pipe.rs",
    "code_language": "Rust",
    "number_of_lines_added_for_mitigation": "71",
    "number_of_lines_deleted_vulnerable_to_cve": "12",
    "vulnerable_lines": [
        "// Line_Reference 113:         // `read` is after `connect: Overlapped` and `read: Overlapped`.",
        "// Line_Reference 727:                 io.notify_readable(events);",
        "// Line_Reference 790:                 io.notify_writable(events);",
        "// Line_Reference 800:                 io.notify_writable(events);",
        "// Line_Reference 880:     io.notify_readable(events);",
        "// Line_Reference 898:             io.notify_writable(events);",
        "// Line_Reference 912:                     io.notify_writable(events);",
        "// Line_Reference 920:                 io.notify_writable(events);",
        "// Line_Reference 941:     fn notify_readable(&self, events: Option<&mut Vec<Event>>) {",
        "// Line_Reference 949:                 let _ = self.cp.as_ref().unwrap().post(ev.to_completion_status());",
        "// Line_Reference 954:     fn notify_writable(&self, events: Option<&mut Vec<Event>>) {",
        "// Line_Reference 962:                 let _ = self.cp.as_ref().unwrap().post(ev.to_completion_status());"
    ]
}
