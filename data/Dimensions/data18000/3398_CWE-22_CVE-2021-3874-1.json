{
    "cve_id": "CVE-2021-3874",
    "cve_description": "bookstack is vulnerable to Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
    "cve_publish_date": "2021-10-15",
    "cwe_id": "CWE-22",
    "cwe_name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
    "cwe_description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
    "commit_message": "Added protections against path traversal in file system operations\n\n- Files within the storage/ path could be accessed via path traversal\n  references in content, accessed upon HTML export.\n- This addresses this via two layers:\n  - Scoped local flysystem filesystems down to the specific image &\n    file folders since flysystem has built-in checking against the\n    escaping of the root folder.\n  - Added path normalization before enforcement of uploads/{images,file}\n    prefix to prevent traversal at a path level.\n\nThanks to @Haxatron via huntr.dev for discovery and reporting.\nRef: https://huntr.dev/bounties/ac268a17-72b5-446f-a09a-9945ef58607a/",
    "type_of_change": "Modification",
    "filename_of_changes": "AttachmentService.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "41",
    "number_of_lines_deleted_vulnerable_to_cve": "36",
    "vulnerable_lines": [
        "// Line_Reference 33:         // Override default location if set to local public to ensure not visible.",
        "// Line_Reference 34:         if ($storageType === 'local') {",
        "// Line_Reference 35:             $storageType = 'local_secure';",
        "// Line_Reference 38:         return $this->fileSystem->disk($storageType);",
        "// Line_Reference 48:         return $this->getStorage()->get($attachment->path);",
        "// Line_Reference 53:      *",
        "// Line_Reference 54:      * @param UploadedFile $uploadedFile",
        "// Line_Reference 55:      * @param int          $page_id",
        "// Line_Reference 56:      *",
        "// Line_Reference 58:      *",
        "// Line_Reference 59:      * @return Attachment",
        "// Line_Reference 61:     public function saveNewUpload(UploadedFile $uploadedFile, $page_id)",
        "// Line_Reference 65:         $largestExistingOrder = Attachment::where('uploaded_to', '=', $page_id)->max('order');",
        "// Line_Reference 67:         $attachment = Attachment::forceCreate([",
        "// Line_Reference 81:      * Store a upload, saving to a file and deleting any existing uploads",
        "// Line_Reference 84:      * @param UploadedFile $uploadedFile",
        "// Line_Reference 85:      * @param Attachment   $attachment",
        "// Line_Reference 86:      *",
        "// Line_Reference 88:      *",
        "// Line_Reference 89:      * @return Attachment",
        "// Line_Reference 91:     public function saveUpdatedUpload(UploadedFile $uploadedFile, Attachment $attachment)",
        "// Line_Reference 162:      *",
        "// Line_Reference 163:      * @param Attachment $attachment",
        "// Line_Reference 164:      *",
        "// Line_Reference 182:      *",
        "// Line_Reference 183:      * @param Attachment $attachment",
        "// Line_Reference 188:         $dirPath = dirname($attachment->path);",
        "// Line_Reference 190:         $storage->delete($attachment->path);",
        "// Line_Reference 198:      *",
        "// Line_Reference 199:      * @param UploadedFile $uploadedFile",
        "// Line_Reference 200:      *",
        "// Line_Reference 202:      *",
        "// Line_Reference 203:      * @return string",
        "// Line_Reference 205:     protected function putFileInStorage(UploadedFile $uploadedFile)",
        "// Line_Reference 213:         while ($storage->exists($basePath . $uploadFileName)) {",
        "// Line_Reference 220:             $storage->put($attachmentPath, $attachmentData);"
    ]
}
