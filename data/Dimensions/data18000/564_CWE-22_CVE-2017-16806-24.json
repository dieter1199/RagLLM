{
    "cve_id": "CVE-2017-16806",
    "cve_description": "The Process function in RemoteTaskServer/WebServer/HttpServer.cs in Ulterius before 1.9.5.0 allows HTTP server directory traversal.",
    "cve_publish_date": "2017-11-13",
    "cwe_id": "CWE-22",
    "cwe_name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
    "cwe_description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
    "commit_message": "Stability patch, fixes broken GPU detection code, updates the websocket framework to be real-time, removes crappy agent spawning system, removes IPC, fixes HTTP server traversal,",
    "type_of_change": "Modification",
    "filename_of_changes": "Program.cs",
    "code_language": "C#",
    "number_of_lines_added_for_mitigation": "25",
    "number_of_lines_deleted_vulnerable_to_cve": "82",
    "vulnerable_lines": [
        "// Line_Reference 3: using System;",
        "// Line_Reference 4: using System.Collections.ObjectModel;",
        "// Line_Reference 5: using System.Net.Security;",
        "// Line_Reference 6: using System.Runtime.InteropServices;",
        "// Line_Reference 7: using System.ServiceModel;",
        "// Line_Reference 8: using System.ServiceModel.Channels;",
        "// Line_Reference 9: using System.ServiceModel.Description;",
        "// Line_Reference 10: using System.ServiceModel.Dispatcher;",
        "// Line_Reference 11: using AgentInterface;",
        "// Line_Reference 12: using AgentInterface.Api.ScreenShare;",
        "// Line_Reference 13: using UlteriusAgent.Networking;",
        "// Line_Reference 19: ",
        "// Line_Reference 23:         private const int SW_HIDE = 0;",
        "// Line_Reference 24:         private const int SW_SHOW = 5;",
        "// Line_Reference 25: ",
        "// Line_Reference 26:         [DllImport(\"user32.dll\")]",
        "// Line_Reference 27:         private static extern bool SetProcessDPIAware();",
        "// Line_Reference 28: ",
        "// Line_Reference 29:         [DllImport(\"kernel32.dll\")]",
        "// Line_Reference 30:         private static extern IntPtr GetConsoleWindow();",
        "// Line_Reference 31: ",
        "// Line_Reference 32:         [DllImport(\"user32.dll\")]",
        "// Line_Reference 33:         private static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);",
        "// Line_Reference 34: ",
        "// Line_Reference 35: ",
        "// Line_Reference 38:             if (Environment.OSVersion.Version.Major >= 6)",
        "// Line_Reference 40:                 SetProcessDPIAware();",
        "// Line_Reference 41:             }",
        "// Line_Reference 42:             var handle = GetConsoleWindow();",
        "// Line_Reference 43: ",
        "// Line_Reference 44:             // Hide",
        "// Line_Reference 45:             ShowWindow(handle, SW_HIDE);",
        "// Line_Reference 46: ",
        "// Line_Reference 47:             Tools.KillAllButMe();",
        "// Line_Reference 48:             try",
        "// Line_Reference 50:                 ScreenData.SetupDuplication();",
        "// Line_Reference 51:                 var inputAddress = \"net.tcp://localhost/ulterius/agent/input/\";",
        "// Line_Reference 52:                 var frameAddress = \"net.pipe://localhost/ulterius/agent/frames/\";",
        "// Line_Reference 53: ",
        "// Line_Reference 54:                 var inputService = new ServiceHost(typeof(InputAgent));",
        "// Line_Reference 55:                 var frameService = new ServiceHost(typeof(FrameAgent));",
        "// Line_Reference 56:                 var inputBinding = new NetTcpBinding",
        "// Line_Reference 57:                 {",
        "// Line_Reference 58:                     Security = new NetTcpSecurity",
        "// Line_Reference 59:                     {",
        "// Line_Reference 60:                         Transport = {ProtectionLevel = ProtectionLevel.None},",
        "// Line_Reference 61:                         Mode = SecurityMode.None",
        "// Line_Reference 62:                     },",
        "// Line_Reference 63:                     MaxReceivedMessageSize = int.MaxValue",
        "// Line_Reference 64:                 };",
        "// Line_Reference 65:                 var frameBinding = new NetNamedPipeBinding",
        "// Line_Reference 67:                     Security = new NetNamedPipeSecurity",
        "// Line_Reference 68:                     {",
        "// Line_Reference 69:                         Transport = { ProtectionLevel = ProtectionLevel.None },",
        "// Line_Reference 70:                         Mode = NetNamedPipeSecurityMode.None",
        "// Line_Reference 71:                     },",
        "// Line_Reference 72:                     MaxReceivedMessageSize = int.MaxValue",
        "// Line_Reference 73:                 };",
        "// Line_Reference 74:                 inputService.AddServiceEndpoint(typeof(IInputContract), inputBinding, inputAddress);",
        "// Line_Reference 75:                 frameService.AddServiceEndpoint(typeof(IFrameContract), frameBinding, frameAddress);",
        "// Line_Reference 76:                 inputService.Opened += delegate(object sender, EventArgs eventArgs)",
        "// Line_Reference 77:                  {",
        "// Line_Reference 78:                      Console.WriteLine(\"Input started\");",
        "// Line_Reference 79:                  };",
        "// Line_Reference 80:                 frameService.Opened += delegate (object sender, EventArgs eventArgs)",
        "// Line_Reference 82:                     Console.WriteLine(\"Frame started\");",
        "// Line_Reference 83:                 };",
        "// Line_Reference 84:                 inputService.Open();",
        "// Line_Reference 85:                 frameService.Open();",
        "// Line_Reference 86:                 Console.WriteLine(\"Test\");",
        "// Line_Reference 87:                 Console.Read();",
        "// Line_Reference 88:             }",
        "// Line_Reference 89:             catch (Exception ex)",
        "// Line_Reference 90:             {",
        "// Line_Reference 91:                 Console.WriteLine(ex.Message + \" \\n \" + ex.StackTrace);",
        "// Line_Reference 92:             }",
        "// Line_Reference 93:             Console.Read();",
        "// Line_Reference 94:         }",
        "// Line_Reference 95: ",
        "// Line_Reference 96:         private static void host_faulted(object sender, EventArgs e)",
        "// Line_Reference 97:         {",
        "// Line_Reference 98: "
    ]
}
