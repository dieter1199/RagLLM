{
    "cve_id": "CVE-2022-4595",
    "cve_description": "A vulnerability classified as problematic has been found in django-openipam. This affects an unknown part of the file openipam/report/templates/report/exposed_hosts.html. The manipulation of the argument description leads to cross site scripting. It is possible to initiate the attack remotely. The name of the patch is a6223a1150d60cd036106ba6a8e676c1bfc3cc85. It is recommended to apply a patch to fix this issue. The identifier VDB-216189 was assigned to this vulnerability.",
    "cve_publish_date": "2022-12-18",
    "cwe_id": "CWE-707",
    "cwe_name": "Improper Neutralization",
    "cwe_description": "The product does not ensure or incorrectly ensures that structured messages or data are well-formed and that certain security properties are met before being read from an upstream component or sent to a downstream component.",
    "commit_message": "Exposed Hosts Improvements (#205)\n\n* Fixed XSS issue by rendering description as text. Also, drastically improved performance of exposed host report via a ridiculous sql query.\r\n\r\n* Run black & remove unused imports\r\n\r\n* Remove trailing whitespace\r\n\r\n* There was still a trailing whitespace trailing behind",
    "type_of_change": "Modification",
    "filename_of_changes": "report.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "42",
    "number_of_lines_deleted_vulnerable_to_cve": "55",
    "vulnerable_lines": [
        "// Line_Reference 16: from django.contrib.contenttypes.models import ContentType",
        "// Line_Reference 19: from django.db.models import Q, F",
        "// Line_Reference 22: from openipam.hosts.models import Host",
        "// Line_Reference 27: from openipam.conf.ipam_settings import CONFIG, CONFIG_DEFAULTS",
        "// Line_Reference 32: from guardian.models import UserObjectPermission, GroupObjectPermission",
        "// Line_Reference 33: ",
        "// Line_Reference 427:         \"master_ip_address\",",
        "// Line_Reference 438:         hosts = (",
        "// Line_Reference 439:             Host.objects.prefetch_related(\"addresses\")",
        "// Line_Reference 440:             .filter(",
        "// Line_Reference 441:                 structured_attributes__structured_attribute_value__attribute__name=\"nac-profile\",",
        "// Line_Reference 442:                 structured_attributes__structured_attribute_value__value__startswith=CONFIG_DEFAULTS[",
        "// Line_Reference 443:                     \"NAC_PROFILE_IS_SERVER_PREFIX\"",
        "// Line_Reference 444:                 ],",
        "// Line_Reference 445:             )",
        "// Line_Reference 446:             .annotate(",
        "// Line_Reference 447:                 nac_profile=F(",
        "// Line_Reference 448:                     \"structured_attributes__structured_attribute_value__value\"",
        "// Line_Reference 449:                 ),",
        "// Line_Reference 450:             )",
        "// Line_Reference 451:         )",
        "// Line_Reference 452: ",
        "// Line_Reference 453:         user_perms_prefetch = UserObjectPermission.objects.select_related(",
        "// Line_Reference 454:             \"permission\", \"user\"",
        "// Line_Reference 455:         ).filter(",
        "// Line_Reference 456:             content_type=ContentType.objects.get_for_model(Host),",
        "// Line_Reference 457:             object_pk__in=[str(host.mac) for host in hosts],",
        "// Line_Reference 458:             permission__codename=\"is_owner_host\",",
        "// Line_Reference 459:         )",
        "// Line_Reference 460:         group_perms_prefetch = GroupObjectPermission.objects.select_related(",
        "// Line_Reference 461:             \"permission\", \"group\"",
        "// Line_Reference 462:         ).filter(",
        "// Line_Reference 463:             content_type=ContentType.objects.get_for_model(Host),",
        "// Line_Reference 464:             object_pk__in=[str(host.mac) for host in hosts],",
        "// Line_Reference 465:             permission__codename=\"is_owner_host\",",
        "// Line_Reference 468:         data = []",
        "// Line_Reference 469:         for host in hosts:",
        "// Line_Reference 470:             owners = host.get_owners(",
        "// Line_Reference 471:                 name_only=True,",
        "// Line_Reference 472:                 user_perms_prefetch=user_perms_prefetch,",
        "// Line_Reference 473:                 group_perms_prefetch=group_perms_prefetch,",
        "// Line_Reference 474:             )",
        "// Line_Reference 475:             data.append(",
        "// Line_Reference 476:                 {",
        "// Line_Reference 477:                     \"hostname\": host.hostname,",
        "// Line_Reference 478:                     \"mac\": str(host.mac),",
        "// Line_Reference 479:                     \"description\": host.description,",
        "// Line_Reference 480:                     \"master_ip_address\": host.ip_addresses[0]",
        "// Line_Reference 481:                     if host.ip_addresses",
        "// Line_Reference 482:                     else None,",
        "// Line_Reference 483:                     \"user_owners\": \", \".join(owners[0]),",
        "// Line_Reference 484:                     \"group_owners\": \", \".join(owners[1]),",
        "// Line_Reference 485:                     \"nac_profile\": host.nac_profile,",
        "// Line_Reference 486:                 }",
        "// Line_Reference 487:             )"
    ]
}
