{
    "cve_id": "CVE-2022-36036",
    "cve_description": "mdx-mermaid provides plug and play access to Mermaid in MDX. There is a potential for an arbitrary javascript injection in versions less than 1.3.0 and 2.0.0-rc1. Modify any mermaid code blocks with arbitrary code and it will execute when the component is loaded by MDXjs. This vulnerability was patched in version(s) 1.3.0 and 2.0.0-rc2. There are currently no known workarounds.",
    "cve_publish_date": "2022-08-29",
    "cwe_id": "CWE-94",
    "cwe_name": "Improper Control of Generation of Code ('Code Injection')",
    "cwe_description": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
    "commit_message": "Merge pull request from GHSA-rvgm-35jw-q628",
    "type_of_change": "Modification",
    "filename_of_changes": "mdxast-mermaid.spec.ts",
    "code_language": "TypeScript",
    "number_of_lines_added_for_mitigation": "154",
    "number_of_lines_deleted_vulnerable_to_cve": "30",
    "vulnerable_lines": [
        "// Line_Reference 27:   expect(result.contents).toEqual('\\n\\n\\nconst layoutProps = {\\n  \\n};\\nconst MDXLayout = \"wrapper\"\\nexport default function MDXContent({\\n  components,\\n  ...props\\n}) {\\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\\n    <h1>{`Heading 1`}</h1>\\n    <p>{`No Mermaid diagram :(`}</p>\\n    </MDXLayout>;\\n}\\n\\n;\\nMDXContent.isMDXComponent = true;')",
        "// Line_Reference 40:   expect(result.contents).toEqual(\"import { Mermaid } from 'mdx-mermaid/lib/Mermaid';\\n\\n\\nconst layoutProps = {\\n  \\n};\\nconst MDXLayout = \\\"wrapper\\\"\\nexport default function MDXContent({\\n  components,\\n  ...props\\n}) {\\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\\\"MDXLayout\\\">\\n\\n    <h1>{`Heading 1`}</h1>\\n    <Mermaid config={{}} chart={`graph TD;\\n    A-->B;\\n    A-->C;\\n    B-->D;\\n    C-->D;`} mdxType=\\\"Mermaid\\\" />\\n    </MDXLayout>;\\n}\\n\\n;\\nMDXContent.isMDXComponent = true;\")",
        "// Line_Reference 53:   expect(result.contents).toEqual(\"import { Mermaid } from 'mdx-mermaid/lib/Mermaid';\\n\\n\\nconst layoutProps = {\\n  \\n};\\nconst MDXLayout = \\\"wrapper\\\"\\nexport default function MDXContent({\\n  components,\\n  ...props\\n}) {\\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\\\"MDXLayout\\\">\\n\\n    <h1>{`Heading 1`}</h1>\\n    <Mermaid config={{}} chart={`graph TD;\\n    A-->B;\\n    A-->C;\\n    B-->D;\\n    C-->D;`} mdxType=\\\"Mermaid\\\" />\\n    </MDXLayout>;\\n}\\n\\n;\\nMDXContent.isMDXComponent = true;\")",
        "// Line_Reference 66:   expect(result.contents).toEqual(\"import { Mermaid } from 'mdx-mermaid/Mermaid';\\n\\n\\nconst layoutProps = {\\n  \\n};\\nconst MDXLayout = \\\"wrapper\\\"\\nexport default function MDXContent({\\n  components,\\n  ...props\\n}) {\\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\\\"MDXLayout\\\">\\n\\n    <h1>{`Heading 1`}</h1>\\n    <Mermaid config={{}} chart={`graph TD;\\n    A-->B;\\n    A-->C;\\n    B-->D;\\n    C-->D;`} mdxType=\\\"Mermaid\\\" />\\n    </MDXLayout>;\\n}\\n\\n;\\nMDXContent.isMDXComponent = true;\")",
        "// Line_Reference 79:   expect(result.contents).toEqual(\"import { Mermaid } from 'mdx-mermaid/lib/Mermaid';\\nimport { A } from 'a';\\n\\n\\nconst layoutProps = {\\n  \\n};\\nconst MDXLayout = \\\"wrapper\\\"\\nexport default function MDXContent({\\n  components,\\n  ...props\\n}) {\\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\\\"MDXLayout\\\">\\n\\n\\n    <h1>{`Heading 1`}</h1>\\n    <Mermaid config={{}} chart={`graph TD;\\n    A-->B;\\n    A-->C;\\n    B-->D;\\n    C-->D;`} mdxType=\\\"Mermaid\\\" />\\n    </MDXLayout>;\\n}\\n\\n;\\nMDXContent.isMDXComponent = true;\")",
        "// Line_Reference 104:     <Mermaid config={{}} chart={\\`graph TD;",
        "// Line_Reference 147:     <Mermaid config={{}} chart={\\`graph TD;",
        "// Line_Reference 181:     <Mermaid config={{",
        "// Line_Reference 182:       \"mermaid\": {",
        "// Line_Reference 183:         \"theme\": \"dark\"",
        "// Line_Reference 184:       }",
        "// Line_Reference 185:     }} chart={\\`graph TD;",
        "// Line_Reference 186:     A-->B;",
        "// Line_Reference 187:     A-->C;",
        "// Line_Reference 188:     B-->D;",
        "// Line_Reference 189:     C-->D;\\`} mdxType=\"Mermaid\" />",
        "// Line_Reference 217:     <Mermaid config={{",
        "// Line_Reference 218:       \"mermaid\": {",
        "// Line_Reference 219:         \"theme\": \"dark\"",
        "// Line_Reference 220:       }",
        "// Line_Reference 221:     }} chart={\\`graph TD;",
        "// Line_Reference 260:     <Mermaid config={{",
        "// Line_Reference 261:       \"mermaid\": {",
        "// Line_Reference 262:         \"theme\": \"dark\"",
        "// Line_Reference 263:       }",
        "// Line_Reference 264:     }} chart={\\`graph TD;",
        "// Line_Reference 265:     A-->B;",
        "// Line_Reference 266:     A-->C;",
        "// Line_Reference 267:     B-->D;",
        "// Line_Reference 268:     C-->D;\\`} mdxType=\"Mermaid\" />"
    ]
}
