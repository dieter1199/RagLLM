{
    "cve_id": "CVE-2022-23948",
    "cve_description": "A flaw was found in Keylime before 6.3.0. The logic in the Keylime agent for checking for a secure mount can be fooled by previously created unprivileged mounts allowing secrets to be leaked to other processes on the host.",
    "cve_publish_date": "2022-09-21",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "secure_mount: add umount function\n\nThe `mount` function is called several times in different places in the\ncode, but it takes care of not mounting the secure directory if is\nalready present.  The problem is that this is never umounted.\n\nThis patch add the `umount` function, and update the `mount` one to\ntrack when a mount point needs to be umounted.\n\nAlso adjust the keylime_agent exit point to make sure that the `umount`\nfunction is called at the end.\n\nSigned-off-by: Alberto Planas <aplanas@suse.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "test_secure_mount.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "138",
    "number_of_lines_deleted_vulnerable_to_cve": "11",
    "vulnerable_lines": [
        "// Line_Reference 11:     def test_check_mounted_not_found(self, open_mock, logger_mock):",
        "// Line_Reference 15:             )",
        "// Line_Reference 20:     def test_check_mounted_found(self, open_mock, logger_mock):",
        "// Line_Reference 25:             )",
        "// Line_Reference 30:     def test_check_mounted_found_zero_optional_fields(self, open_mock, logger_mock):",
        "// Line_Reference 40:     def test_check_mounted_found_extra_optional_fields(self, open_mock, logger_mock):",
        "// Line_Reference 50:     def test_check_mounted_found_wrong_fs(self, open_mock, logger_mock):",
        "// Line_Reference 55:             )",
        "// Line_Reference 62:     def test_check_mounted_found_spaces(self, open_mock, logger_mock):",
        "// Line_Reference 67:             )",
        "// Line_Reference 72:     def test_check_mounted_wrong_format(self, open_mock, logger_mock):"
    ]
}
