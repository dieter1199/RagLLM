{
    "cve_id": "CVE-2017-1001000",
    "cve_description": "The register_routes function in wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php in the REST API in WordPress 4.7.x before 4.7.2 does not require an integer identifier, which allows remote attackers to modify arbitrary pages via a request for wp-json/wp/v2/posts followed by a numeric value and a non-numeric value, as demonstrated by the wp-json/wp/v2/posts/123?id=123helloworld URI.",
    "cve_publish_date": "2017-04-03",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "REST API: Unify object access handling for simplicity.\n\nRather than repeating ourselves, unifying the access into a single method keeps everything tidy. While we're at it, add in additional schema handling for common parameters.\n\nSee #38792.\nBuilt from https://develop.svn.wordpress.org/trunk@39954\n\n\ngit-svn-id: http://core.svn.wordpress.org/trunk@39891 1a063a9b-81f0-0310-95a4-ce76da25c4cd",
    "type_of_change": "Modification",
    "filename_of_changes": "class-wp-rest-users-controller.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "58",
    "number_of_lines_deleted_vulnerable_to_cve": "28",
    "vulnerable_lines": [
        "// Line_Reference 340: \t\t$id = (int) $request['id'];",
        "// Line_Reference 341: \t\t$user = get_userdata( $id );",
        "// Line_Reference 344: \t\tif ( empty( $id ) || empty( $user->ID ) ) {",
        "// Line_Reference 345: \t\t\treturn new WP_Error( 'rest_user_invalid_id', __( 'Invalid user ID.' ), array( 'status' => 404 ) );",
        "// Line_Reference 346: \t\t}",
        "// Line_Reference 347: ",
        "// Line_Reference 348: \t\tif ( get_current_user_id() === $id ) {",
        "// Line_Reference 354: \t\t} elseif ( ! count_user_posts( $id, $types ) && ! current_user_can( 'edit_user', $id ) && ! current_user_can( 'list_users' ) ) {",
        "// Line_Reference 371: \t\t$id   = (int) $request['id'];",
        "// Line_Reference 372: \t\t$user = get_userdata( $id );",
        "// Line_Reference 373: ",
        "// Line_Reference 374: \t\tif ( empty( $id ) || empty( $user->ID ) ) {",
        "// Line_Reference 375: \t\t\treturn new WP_Error( 'rest_user_invalid_id', __( 'Invalid user ID.' ), array( 'status' => 404 ) );",
        "// Line_Reference 546: \t\t$id = (int) $request['id'];",
        "// Line_Reference 547: ",
        "// Line_Reference 548: \t\tif ( ! current_user_can( 'edit_user', $id ) ) {",
        "// Line_Reference 569: \t\t$id   = (int) $request['id'];",
        "// Line_Reference 570: \t\t$user = get_userdata( $id );",
        "// Line_Reference 686: \t\t$id = (int) $request['id'];",
        "// Line_Reference 687: ",
        "// Line_Reference 688: \t\tif ( ! current_user_can( 'delete_user', $id ) ) {",
        "// Line_Reference 710: \t\t$id       = (int) $request['id'];",
        "// Line_Reference 719: \t\t$user = get_userdata( $id );",
        "// Line_Reference 720: ",
        "// Line_Reference 721: \t\tif ( ! $user ) {",
        "// Line_Reference 722: \t\t\treturn new WP_Error( 'rest_user_invalid_id', __( 'Invalid user ID.' ), array( 'status' => 404 ) );",
        "// Line_Reference 723: \t\t}",
        "// Line_Reference 724: "
    ]
}
