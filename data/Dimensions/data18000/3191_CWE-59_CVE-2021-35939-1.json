{
    "cve_id": "CVE-2021-35939",
    "cve_description": "It was found that the fix for CVE-2017-7500 and CVE-2017-7501 was incomplete: the check was only implemented for the parent directory of the file to be created. A local unprivileged user who owns another ancestor directory could potentially use this flaw to gain root privileges. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.",
    "cve_publish_date": "2022-08-26",
    "cwe_id": "CWE-59",
    "cwe_name": "Improper Link Resolution Before File Access ('Link Following')",
    "cwe_description": "The product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.",
    "commit_message": "Validate intermediate symlinks during installation, CVE-2021-35939\n\nWhenever directory changes during unpacking, walk the entire tree from\nstarting from / and validate any symlinks crossed, fail the install\non invalid links.\n\nThis is the first of step of many towards securing our file operations\nagainst local tamperers and besides plugging that one CVE, paves the way\nfor the next step by adding the necessary directory fd tracking.\nThis also bumps the rpm OS requirements to a whole new level by requiring\nthe *at() family of calls from POSIX-1.2008.\n\nThis necessarily does a whole lot of huffing and puffing we previously\ndid not do. It should be possible to cache secure (ie root-owned)\ndirectory structures to avoid validating everything a million times\nbut for now, just keeping things simple.",
    "type_of_change": "Modification",
    "filename_of_changes": "fsm.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "138",
    "number_of_lines_deleted_vulnerable_to_cve": "6",
    "vulnerable_lines": [
        "// Line_Reference 409: static int fsmMkdir(const char *path, mode_t mode)",
        "// Line_Reference 411:     int rc = mkdir(path, (mode & 07777));",
        "// Line_Reference 413: \trpmlog(RPMLOG_DEBUG, \" %8s (%s, 0%04o) %s\\n\", __func__,",
        "// Line_Reference 414: \t       path, (unsigned)(mode & 07777),",
        "// Line_Reference 510: \t\t    rc = fsmMkdir(dn, mode);",
        "// Line_Reference 983:                     rc = fsmMkdir(fp->fpath, mode);"
    ]
}
