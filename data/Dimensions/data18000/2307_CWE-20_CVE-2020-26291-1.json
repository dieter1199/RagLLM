{
    "cve_id": "CVE-2020-26291",
    "cve_description": "URI.js is a javascript URL mutation library (npm package urijs). In URI.js before version 1.19.4, the hostname can be spoofed by using a backslash (`\\`) character followed by an at (`@`) character. If the hostname is used in security decisions, the decision may be incorrect. Depending on library usage and attacker intent, impacts may include allow/block list bypasses, SSRF attacks, open redirects, or other undesired behavior. For example the URL `https://expected-example.com\\@observed-example.com` will incorrectly return `observed-example.com` if using an affected version. Patched versions correctly return `expected-example.com`. Patched versions match the behavior of other parsers which implement the WHATWG URL specification, including web browsers and Node's built-in URL class. Version 1.19.4 is patched against all known payload variants. Version 1.19.3 has a partial patch but is still vulnerable to a payload variant.]",
    "cve_publish_date": "2020-12-31",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "fix(parse): treat backslash as forwardslash in authority (#403)\n\nmake `https://attacker.com\\\\@example.com` like `https://attacker.com\\\\@example.com/` result in `https://attacker.com/@example.com`",
    "type_of_change": "Modification",
    "filename_of_changes": "URI.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "6",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 617:     var slash = firstBackSlash === -1 ? firstSlash : (firstSlash !== -1 ? Math.min(firstBackSlash, firstSlash): firstSlash)",
        "// Line_Reference 622:     if (pos > -1 && (slash === -1 || pos < slash)) {",
        "// Line_Reference 627:       string = string.substring(pos + 1);"
    ]
}
