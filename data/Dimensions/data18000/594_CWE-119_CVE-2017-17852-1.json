{
    "cve_id": "CVE-2017-17852",
    "cve_description": "kernel/bpf/verifier.c in the Linux kernel through 4.14.8 allows local users to cause a denial of service (memory corruption) or possibly have unspecified other impact by leveraging mishandling of 32-bit ALU ops.",
    "cve_publish_date": "2017-12-27",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "bpf: fix 32-bit ALU op verification\n\n32-bit ALU ops operate on 32-bit values and have 32-bit outputs.\nAdjust the verifier accordingly.\n\nFixes: f1174f77b50c (\"bpf/verifier: rework value tracking\")\nSigned-off-by: Jann Horn <jannh@google.com>\nSigned-off-by: Alexei Starovoitov <ast@kernel.org>\nSigned-off-by: Daniel Borkmann <daniel@iogearbox.net>",
    "type_of_change": "Modification",
    "filename_of_changes": "verifier.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "17",
    "number_of_lines_deleted_vulnerable_to_cve": "11",
    "vulnerable_lines": [
        "// Line_Reference 2031: \tif (BPF_CLASS(insn->code) != BPF_ALU64) {",
        "// Line_Reference 2032: \t\t/* 32-bit ALU ops are (32,32)->64 */",
        "// Line_Reference 2033: \t\tcoerce_reg_to_size(dst_reg, 4);",
        "// Line_Reference 2034: \t\tcoerce_reg_to_size(&src_reg, 4);",
        "// Line_Reference 2035: \t}",
        "// Line_Reference 2171: \t\tif (umax_val > 63) {",
        "// Line_Reference 2172: \t\t\t/* Shifts greater than 63 are undefined.  This includes",
        "// Line_Reference 2173: \t\t\t * shifts by a negative number.",
        "// Line_Reference 2199: \t\tif (umax_val > 63) {",
        "// Line_Reference 2200: \t\t\t/* Shifts greater than 63 are undefined.  This includes",
        "// Line_Reference 2201: \t\t\t * shifts by a negative number."
    ]
}
