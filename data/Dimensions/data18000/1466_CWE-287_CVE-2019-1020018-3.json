{
    "cve_id": "CVE-2019-1020018",
    "cve_description": "Discourse before 2.3.0 and 2.4.x before 2.4.0.beta3 lacks a confirmation screen when logging in via an email link.",
    "cve_publish_date": "2019-07-29",
    "cwe_id": "CWE-287",
    "cwe_name": "Improper Authentication",
    "cwe_description": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
    "commit_message": "SECURITY: Add confirmation screen when logging in via email link",
    "type_of_change": "Modification",
    "filename_of_changes": "session_controller_spec.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "95",
    "number_of_lines_deleted_vulnerable_to_cve": "51",
    "vulnerable_lines": [
        "// Line_Reference 17:   describe '#email_login' do",
        "// Line_Reference 31:         get \"/session/email-login/adasdad\"",
        "// Line_Reference 34: ",
        "// Line_Reference 35:         expect(CGI.unescapeHTML(response.body)).to match(",
        "// Line_Reference 44:           get \"/session/email-login/#{email_token.token}\"",
        "// Line_Reference 48:           expect(CGI.unescapeHTML(response.body)).to match(",
        "// Line_Reference 57:         get \"/session/email-login/#{email_token.token}\"",
        "// Line_Reference 59:         expect(response).to redirect_to(\"/\")",
        "// Line_Reference 65:         get \"/session/email-login/#{email_token.token}\"",
        "// Line_Reference 73:         get \"/session/email-login/#{email_token.token}\"",
        "// Line_Reference 81:         get \"/session/email-login/#{email_token.token}\"",
        "// Line_Reference 85:         expect(CGI.unescapeHTML(response.body)).to include(",
        "// Line_Reference 86:           I18n.t(\"login.not_approved\")",
        "// Line_Reference 87:         )",
        "// Line_Reference 102:           get \"/session/email-login/#{email_token.token}\"",
        "// Line_Reference 106:           expect(CGI.unescapeHTML(response.body)).to include(",
        "// Line_Reference 125:           get \"/session/email-login/#{email_token.token}\"",
        "// Line_Reference 129:           expect(CGI.unescapeHTML(response.body)).to include(",
        "// Line_Reference 141:         get \"/session/email-login/#{email_token.token}\"",
        "// Line_Reference 145:         expect(CGI.unescapeHTML(response.body)).to include(I18n.t(\"login.suspended\",",
        "// Line_Reference 146:           date: I18n.l(user.suspended_till, format: :date_only)",
        "// Line_Reference 154:         describe 'requires second factor' do",
        "// Line_Reference 155:           it 'should return a second factor prompt' do",
        "// Line_Reference 156:             get \"/session/email-login/#{email_token.token}\"",
        "// Line_Reference 157: ",
        "// Line_Reference 158:             expect(response.status).to eq(200)",
        "// Line_Reference 159: ",
        "// Line_Reference 160:             response_body = CGI.unescapeHTML(response.body)",
        "// Line_Reference 161: ",
        "// Line_Reference 162:             expect(response_body).to include(I18n.t(",
        "// Line_Reference 163:               \"login.second_factor_title\"",
        "// Line_Reference 164:             ))",
        "// Line_Reference 165: ",
        "// Line_Reference 166:             expect(response_body).to_not include(I18n.t(",
        "// Line_Reference 167:               \"login.invalid_second_factor_code\"",
        "// Line_Reference 168:             ))",
        "// Line_Reference 169:           end",
        "// Line_Reference 170:         end",
        "// Line_Reference 171: ",
        "// Line_Reference 175:               post \"/session/email-login/#{email_token.token}\", params: {",
        "// Line_Reference 182:               expect(CGI.unescapeHTML(response.body)).to include(I18n.t(",
        "// Line_Reference 183:                 \"login.invalid_second_factor_code\"",
        "// Line_Reference 184:               ))",
        "// Line_Reference 189:               post \"/session/email-login/#{email_token.token}\", params: {",
        "// Line_Reference 195:               expect(CGI.unescapeHTML(response.body)).to include(I18n.t(",
        "// Line_Reference 196:                 \"login.invalid_second_factor_code\"",
        "// Line_Reference 197:               ))",
        "// Line_Reference 205:               post \"/session/email-login/#{email_token.token}\", params: {",
        "// Line_Reference 210:               expect(response).to redirect_to(\"/\")",
        "// Line_Reference 215:               post \"/session/email-login/#{email_token.token}\", params: {",
        "// Line_Reference 220:               expect(response).to redirect_to(\"/\")"
    ]
}
