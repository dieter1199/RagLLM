{
    "cve_id": "CVE-2022-39213",
    "cve_description": "go-cvss is a Go module to manipulate Common Vulnerability Scoring System (CVSS). In affected versions when a full CVSS v2.0 vector string is parsed using `ParseVector`, an Out-of-Bounds Read is possible due to a lack of tests. The Go module will then panic. The problem is patched in tag `v0.4.0`, by the commit `d9d478ff0c13b8b09ace030db9262f3c2fe031f4`. Users are advised to upgrade. Users unable to upgrade may avoid this issue by parsing only CVSS v2.0 vector strings that do not have all attributes defined (e.g. `AV:N/AC:L/Au:N/C:P/I:P/A:C/E:U/RL:OF/RC:C/CDP:MH/TD:H/CR:M/IR:M/AR:M`). As stated in [SECURITY.md](https://github.com/pandatix/go-cvss/blob/master/SECURITY.md), the CPE v2.3 to refer to this Go module is `cpe:2.3:a:pandatix:go_cvss:*:*:*:*:*:*:*:*`. The entry has already been requested to the NVD CPE dictionary.",
    "cve_publish_date": "2022-09-15",
    "cwe_id": "CWE-125",
    "cwe_name": "Out-of-bounds Read",
    "cwe_description": "The product reads data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "Improve CVSS v2.0 implementation (0/1 allocs/op)",
    "type_of_change": "Modification",
    "filename_of_changes": "cvss20.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "187",
    "number_of_lines_deleted_vulnerable_to_cve": "101",
    "vulnerable_lines": [
        "// Line_Reference 11: \tpts := strings.Split(vector, \"/\")",
        "// Line_Reference 12: \tif len(pts) != 6 && len(pts) != 9 && len(pts) != 14 {",
        "// Line_Reference 18: \t\tBase: Base{},",
        "// Line_Reference 19: \t\tTemporal: Temporal{",
        "// Line_Reference 20: \t\t\tExploitability:   \"ND\",",
        "// Line_Reference 21: \t\t\tRemediationLevel: \"ND\",",
        "// Line_Reference 22: \t\t\tReportConfidence: \"ND\",",
        "// Line_Reference 24: \t\tEnvironmental: Environmental{",
        "// Line_Reference 25: \t\t\tCollateralDamagePotential:  \"ND\",",
        "// Line_Reference 26: \t\t\tTargetDistribution:         \"ND\",",
        "// Line_Reference 27: \t\t\tConfidentialityRequirement: \"ND\",",
        "// Line_Reference 28: \t\t\tIntegrityRequirement:       \"ND\",",
        "// Line_Reference 29: \t\t\tAvailabilityRequirement:    \"ND\",",
        "// Line_Reference 33: \t// Parse metrics in order",
        "// Line_Reference 34: \tslcs := [][]string{",
        "// Line_Reference 35: \t\t{\"AV\", \"AC\", \"Au\", \"C\", \"I\", \"A\"}, // Base metrics",
        "// Line_Reference 36: \t\t{\"E\", \"RL\", \"RC\"},                 // Temporal metrics",
        "// Line_Reference 37: \t\t{\"CDP\", \"TD\", \"CR\", \"IR\", \"AR\"},   // Environmental metrics",
        "// Line_Reference 38: \t}",
        "// Line_Reference 40: \tcurrSlc := slcs[slci]",
        "// Line_Reference 44: \t\tif abv != currSlc[i] {",
        "// Line_Reference 52: \t\tif i == len(currSlc) {",
        "// Line_Reference 54: \t\t\tcurrSlc = slcs[slci]",
        "// Line_Reference 63: \ts := \"\"",
        "// Line_Reference 65: \ts += \"AV:\" + cvss20.AccessVector",
        "// Line_Reference 66: \ts += \"/AC:\" + cvss20.AccessComplexity",
        "// Line_Reference 67: \ts += \"/Au:\" + cvss20.Authentication",
        "// Line_Reference 68: \ts += \"/C:\" + cvss20.ConfidentialityImpact",
        "// Line_Reference 69: \ts += \"/I:\" + cvss20.IntegrityImpact",
        "// Line_Reference 70: \ts += \"/A:\" + cvss20.AvailabilityImpact",
        "// Line_Reference 71: \t// Temporal, if any is defined",
        "// Line_Reference 72: \tif cvss20.Exploitability != \"ND\" || cvss20.RemediationLevel != \"ND\" || cvss20.ReportConfidence != \"ND\" {",
        "// Line_Reference 73: \t\ts += \"/E:\" + cvss20.Exploitability",
        "// Line_Reference 74: \t\ts += \"/RL:\" + cvss20.RemediationLevel",
        "// Line_Reference 75: \t\ts += \"/RC:\" + cvss20.ReportConfidence",
        "// Line_Reference 77: \t// Environmental, if any is defined",
        "// Line_Reference 78: \tif cvss20.CollateralDamagePotential != \"ND\" || cvss20.TargetDistribution != \"ND\" || cvss20.ConfidentialityRequirement != \"ND\" || cvss20.IntegrityRequirement != \"ND\" || cvss20.AvailabilityRequirement != \"ND\" {",
        "// Line_Reference 79: \t\ts += \"/CDP:\" + cvss20.CollateralDamagePotential",
        "// Line_Reference 80: \t\ts += \"/TD:\" + cvss20.TargetDistribution",
        "// Line_Reference 81: \t\ts += \"/CR:\" + cvss20.ConfidentialityRequirement",
        "// Line_Reference 82: \t\ts += \"/IR:\" + cvss20.IntegrityRequirement",
        "// Line_Reference 83: \t\ts += \"/AR:\" + cvss20.AvailabilityRequirement",
        "// Line_Reference 85: \treturn s",
        "// Line_Reference 93: \tBase",
        "// Line_Reference 94: \tTemporal",
        "// Line_Reference 95: \tEnvironmental",
        "// Line_Reference 98: // Base is the group of metrics defined with such name by the",
        "// Line_Reference 101: type Base struct {",
        "// Line_Reference 103: \tAccessVector string",
        "// Line_Reference 105: \tAccessComplexity string",
        "// Line_Reference 107: \tAuthentication string",
        "// Line_Reference 109: \tConfidentialityImpact string",
        "// Line_Reference 111: \tIntegrityImpact string",
        "// Line_Reference 113: \tAvailabilityImpact string",
        "// Line_Reference 116: // Temporal is the group of metrics defined with such name by the",
        "// Line_Reference 119: type Temporal struct {",
        "// Line_Reference 121: \tExploitability string",
        "// Line_Reference 123: \tRemediationLevel string",
        "// Line_Reference 125: \tReportConfidence string",
        "// Line_Reference 128: // Environmental is the group of metrics defined with such name by the",
        "// Line_Reference 131: type Environmental struct {",
        "// Line_Reference 133: \tCollateralDamagePotential string",
        "// Line_Reference 135: \tTargetDistribution string",
        "// Line_Reference 137: \tConfidentialityRequirement string",
        "// Line_Reference 138: \tIntegrityRequirement       string",
        "// Line_Reference 139: \tAvailabilityRequirement    string",
        "// Line_Reference 145: \t\treturn cvss20.AccessVector, nil",
        "// Line_Reference 147: \t\treturn cvss20.AccessComplexity, nil",
        "// Line_Reference 149: \t\treturn cvss20.Authentication, nil",
        "// Line_Reference 151: \t\treturn cvss20.ConfidentialityImpact, nil",
        "// Line_Reference 153: \t\treturn cvss20.IntegrityImpact, nil",
        "// Line_Reference 155: \t\treturn cvss20.AvailabilityImpact, nil",
        "// Line_Reference 157: \t\treturn cvss20.Exploitability, nil",
        "// Line_Reference 159: \t\treturn cvss20.RemediationLevel, nil",
        "// Line_Reference 161: \t\treturn cvss20.ReportConfidence, nil",
        "// Line_Reference 163: \t\treturn cvss20.CollateralDamagePotential, nil",
        "// Line_Reference 165: \t\treturn cvss20.TargetDistribution, nil",
        "// Line_Reference 167: \t\treturn cvss20.ConfidentialityRequirement, nil",
        "// Line_Reference 169: \t\treturn cvss20.IntegrityRequirement, nil",
        "// Line_Reference 171: \t\treturn cvss20.AvailabilityRequirement, nil",
        "// Line_Reference 184: \t\tcvss20.AccessVector = value",
        "// Line_Reference 189: \t\tcvss20.AccessComplexity = value",
        "// Line_Reference 194: \t\tcvss20.Authentication = value",
        "// Line_Reference 199: \t\tcvss20.ConfidentialityImpact = value",
        "// Line_Reference 204: \t\tcvss20.IntegrityImpact = value",
        "// Line_Reference 209: \t\tcvss20.AvailabilityImpact = value",
        "// Line_Reference 215: \t\tcvss20.Exploitability = value",
        "// Line_Reference 220: \t\tcvss20.RemediationLevel = value",
        "// Line_Reference 225: \t\tcvss20.ReportConfidence = value",
        "// Line_Reference 231: \t\tcvss20.CollateralDamagePotential = value",
        "// Line_Reference 236: \t\tcvss20.TargetDistribution = value",
        "// Line_Reference 241: \t\tcvss20.ConfidentialityRequirement = value",
        "// Line_Reference 246: \t\tcvss20.IntegrityRequirement = value",
        "// Line_Reference 251: \t\tcvss20.AvailabilityRequirement = value",
        "// Line_Reference 270: \timpact := 10.41 * (1 - (1-cia(cvss20.ConfidentialityImpact))*(1-cia(cvss20.IntegrityImpact))*(1-cia(cvss20.AvailabilityImpact)))",
        "// Line_Reference 275: \texploitability := 20 * accessVector(cvss20.AccessVector) * accessComplexity(cvss20.AccessComplexity) * authentication(cvss20.Authentication)",
        "// Line_Reference 281: \treturn roundTo1Decimal(cvss20.BaseScore() * exploitability(cvss20.Exploitability) * remediationLevel(cvss20.RemediationLevel) * reportConfidence(cvss20.ReportConfidence))",
        "// Line_Reference 287: \tadjustedImpact := math.Min(10, 10.41*(1-(1-cia(cvss20.ConfidentialityImpact)*ciar(cvss20.ConfidentialityRequirement))*(1-cia(cvss20.IntegrityImpact)*ciar(cvss20.IntegrityRequirement))*(1-cia(cvss20.AvailabilityImpact)*ciar(cvss20.AvailabilityRequirement))))",
        "// Line_Reference 292: \texpltBase := 20 * accessVector(cvss20.AccessVector) * accessComplexity(cvss20.AccessComplexity) * authentication(cvss20.Authentication)",
        "// Line_Reference 294: \tadjustedTemporal := roundTo1Decimal(recBase * exploitability(cvss20.Exploitability) * remediationLevel(cvss20.RemediationLevel) * reportConfidence(cvss20.ReportConfidence))",
        "// Line_Reference 295: \treturn roundTo1Decimal((adjustedTemporal + (10-adjustedTemporal)*collateralDamagePotential(cvss20.CollateralDamagePotential)) * targetDistribution(cvss20.TargetDistribution))"
    ]
}
