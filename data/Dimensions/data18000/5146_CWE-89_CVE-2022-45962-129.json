{
    "cve_id": "CVE-2022-45962",
    "cve_description": "Open Solutions for Education, Inc openSIS Community Edition v8.0 and earlier is vulnerable to SQL Injection via CalendarModal.php.",
    "cve_publish_date": "2023-02-13",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "Version 9.0 release\n\nOlder version shifted to branch: Version_8.0",
    "type_of_change": "ModificationType.ADD",
    "filename_of_changes": "Sections.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "95",
    "number_of_lines_deleted_vulnerable_to_cve": "146",
    "vulnerable_lines": [
        "// Line_Reference 30: ",
        "// Line_Reference 31: ",
        "// Line_Reference 32: if(clean_param($_REQUEST['values'],PARAM_NOTAGS) && ($_POST['values'] || $_REQUEST['ajax']))",
        "// Line_Reference 33: {",
        "// Line_Reference 34:     foreach($_REQUEST['values'] as $vi=>$vd)",
        "// Line_Reference 35:     {",
        "// Line_Reference 36:         if($vi=='new')",
        "// Line_Reference 37:         {",
        "// Line_Reference 38:             if($vd['NAME']!='')",
        "// Line_Reference 39:             {",
        "// Line_Reference 40:                 $check_name=DBGet(DBQuery('SELECT COUNT(*) as REC_EX FROM school_gradelevel_sections WHERE NAME=\\''.str_replace(\"'\",\"''\",$vd['NAME']).'\\' AND SCHOOL_ID='.UserSchool()));",
        "// Line_Reference 41:                 if($check_name[1]['REC_EX']>0)",
        "// Line_Reference 42:                 {",
        "// Line_Reference 43:                     $err_msg=_sectionAlreadyExists.'.';",
        "// Line_Reference 47: //            if($vd['SORT_ORDER']!='')",
        "// Line_Reference 48: //            {",
        "// Line_Reference 49: //                $check_sort=DBGet(DBQuery('SELECT COUNT(*) as REC_EX FROM school_gradelevel_sections WHERE SORT_ORDER=\\''.$vd['SORT_ORDER'].'\\' AND SCHOOL_ID='.UserSchool()));",
        "// Line_Reference 50: //                if($check_sort[1]['REC_EX']>0)",
        "// Line_Reference 51: //                {",
        "// Line_Reference 52: //                $err_msg='Sort order already exists.';",
        "// Line_Reference 53: //                unset($vd['SORT_ORDER']);",
        "// Line_Reference 54: //                }",
        "// Line_Reference 55: //            }",
        "// Line_Reference 56: ",
        "// Line_Reference 57: ",
        "// Line_Reference 58:             if($vd['NAME']!='' && $vd['SORT_ORDER']!='')",
        "// Line_Reference 59:             DBQuery('INSERT INTO school_gradelevel_sections (SCHOOL_ID,NAME,SORT_ORDER) VALUES ('.UserSchool().',\\''.str_replace(\"'\",\"''\",$vd['NAME']).'\\',\\''.$vd['SORT_ORDER'].'\\')');",
        "// Line_Reference 60:             elseif($vd['NAME']!='' && $vd['SORT_ORDER']=='')",
        "// Line_Reference 61:             DBQuery('INSERT INTO school_gradelevel_sections (SCHOOL_ID,NAME) VALUES ('.UserSchool().',\\''.str_replace(\"'\",\"''\",$vd['NAME']).'\\')');",
        "// Line_Reference 62: ",
        "// Line_Reference 63: ",
        "// Line_Reference 64:         }",
        "// Line_Reference 65:         elseif($vi!='new')",
        "// Line_Reference 66:         {",
        "// Line_Reference 67:             $go=1;",
        "// Line_Reference 68:             if($vd['NAME']!='')",
        "// Line_Reference 69:             {",
        "// Line_Reference 70:                 $check_name=DBGet(DBQuery('SELECT COUNT(*) as REC_EX FROM school_gradelevel_sections WHERE NAME=\\''.str_replace(\"'\",\"''\",$vd['NAME']).'\\' AND SCHOOL_ID='.UserSchool().' AND ID!='.$vi));",
        "// Line_Reference 71:                 if($check_name[1]['REC_EX']>0)",
        "// Line_Reference 72:                 {",
        "// Line_Reference 73:                     $err_msg=_sectionAlreadyExists.'.';",
        "// Line_Reference 75:                 }",
        "// Line_Reference 76:                 else",
        "// Line_Reference 77:                 $go++;",
        "// Line_Reference 78: ",
        "// Line_Reference 80: //            if($vd['SORT_ORDER']!='')",
        "// Line_Reference 81: //            {",
        "// Line_Reference 82: //                $check_sort=DBGet(DBQuery('SELECT COUNT(*) as REC_EX FROM school_gradelevel_sections WHERE SORT_ORDER=\\''.$vd['SORT_ORDER'].'\\' AND SCHOOL_ID='.UserSchool().' AND ID!='.$vi));",
        "// Line_Reference 83: //                if($check_sort[1]['REC_EX']>0)",
        "// Line_Reference 84: //                {",
        "// Line_Reference 85: //                $err_msg='Sort order already exists.';",
        "// Line_Reference 86: //                unset($vd['SORT_ORDER']);",
        "// Line_Reference 87: //                if($vd['NAME']!='')",
        "// Line_Reference 88: //                $go++;",
        "// Line_Reference 89: //                }",
        "// Line_Reference 90: //                else",
        "// Line_Reference 91: //                $go++;",
        "// Line_Reference 92: //            }",
        "// Line_Reference 93: ",
        "// Line_Reference 94: ",
        "// Line_Reference 95:             $qry='UPDATE school_gradelevel_sections SET ';",
        "// Line_Reference 96: ",
        "// Line_Reference 97:             if($vd['NAME']!='')",
        "// Line_Reference 98:                 $qry.=' NAME=\\''.str_replace(\"'\",\"''\",$vd['NAME']).'\\',';",
        "// Line_Reference 99: ",
        "// Line_Reference 100:             if($vd['SORT_ORDER']!='')",
        "// Line_Reference 101:                 $qry.=' SORT_ORDER=\\''.$vd['SORT_ORDER'].'\\',';",
        "// Line_Reference 102: ",
        "// Line_Reference 103:             if($vd['SORT_ORDER']=='')",
        "// Line_Reference 104:                 $qry.=' SORT_ORDER=\\''.$vd['SORT_ORDER'].'\\',';",
        "// Line_Reference 105: ",
        "// Line_Reference 106:             $qry=substr($qry,0,-1);",
        "// Line_Reference 107:             $qry.=' WHERE ID='.$vi;",
        "// Line_Reference 108:             if($go=1)",
        "// Line_Reference 109:             DBQuery($qry);",
        "// Line_Reference 110: ",
        "// Line_Reference 111: ",
        "// Line_Reference 115: DrawBC(\"\"._schoolSetup.\" > \".ProgramTitle());",
        "// Line_Reference 117: if(clean_param($_REQUEST['modfunc'],PARAM_ALPHAMOD)=='remove')",
        "// Line_Reference 118: {",
        "// Line_Reference 119:     $sec_id=paramlib_validation($colmn=PERIOD_ID,$_REQUEST[id]);",
        "// Line_Reference 120:     $has_assigned_RET=DBGet(DBQuery('SELECT COUNT(*) AS TOTAL_ASSIGNED FROM student_enrollment WHERE SECTION_ID=\\''.$sec_id.'\\''));",
        "// Line_Reference 121: \t$has_assigned=$has_assigned_RET[1]['TOTAL_ASSIGNED'];",
        "// Line_Reference 122: \tif($has_assigned>0){",
        "// Line_Reference 123: \tUnableDeletePrompt( _cannotDeleteBecauseSectionsAreAssociated.'.');",
        "// Line_Reference 124: \t}else{",
        "// Line_Reference 125: \tif(DeletePrompt_Sections('section'))",
        "// Line_Reference 126: \t{",
        "// Line_Reference 127: \t\tDBQuery('DELETE FROM school_gradelevel_sections WHERE ID='.$sec_id);",
        "// Line_Reference 128: \t\tunset($_REQUEST['modfunc']);",
        "// Line_Reference 129: \t}",
        "// Line_Reference 130: \t}",
        "// Line_Reference 133: if($_REQUEST['modfunc']!='remove')",
        "// Line_Reference 134: {",
        "// Line_Reference 135: \t$sql = 'SELECT * FROM school_gradelevel_sections WHERE SCHOOL_ID=\\''.UserSchool().'\\' ORDER BY SORT_ORDER';",
        "// Line_Reference 136: \t$sec_RET = DBGet(DBQuery($sql),array('NAME'=>'makeTextInput','SORT_ORDER'=>'makeTextInput'));",
        "// Line_Reference 137: ",
        "// Line_Reference 138: \t$columns = array('NAME'=>_section,'SORT_ORDER'=>_sortOrder);",
        "// Line_Reference 139: \t$link['add']['html'] = array('NAME'=>makeTextInput('','NAME'),'SORT_ORDER'=>makeTextInputMod2('','SORT_ORDER'));",
        "// Line_Reference 140: \t$link['remove']['link'] = \"Modules.php?modname=$_REQUEST[modname]&modfunc=remove\";",
        "// Line_Reference 141: \t$link['remove']['variables'] = array('id'=>'ID');",
        "// Line_Reference 142: \tif($err_msg)",
        "// Line_Reference 143:         {",
        "// Line_Reference 144:             echo \"<b style='color:red'>\".$err_msg.\"</b>\";",
        "// Line_Reference 145: ",
        "// Line_Reference 146:             unset($err_msg);",
        "// Line_Reference 147:         }",
        "// Line_Reference 148: \techo \"<FORM name=F1 id=F1 action=Modules.php?modname=\".strip_tags(trim($_REQUEST[modname])).\"&modfunc=update  onSubmit='return formcheck_school_sections();'  method=POST>\";",
        "// Line_Reference 149: ",
        "// Line_Reference 150:         $section_ids=array('new');",
        "// Line_Reference 151:         foreach($sec_RET as $li=>$ld)",
        "// Line_Reference 152:         $section_ids[]=$ld['ID'];",
        "// Line_Reference 153: ",
        "// Line_Reference 155:     ListOutput($sec_RET,$columns,section,sections,$link, true, array('search'=>false));",
        "// Line_Reference 158: \techo '<input type=hidden value=\"'.implode('_',$section_ids).'\" id=\"get_ids\" />' ;",
        "// Line_Reference 159:     echo '<INPUT class=\"btn btn-primary\" type=submit value='._save.' onclick=\"self_disable(this)\">';",
        "// Line_Reference 162: \techo '</FORM>';",
        "// Line_Reference 165: function makeTextInput($value,$name)",
        "// Line_Reference 166: {\tglobal $THIS_RET;",
        "// Line_Reference 167: ",
        "// Line_Reference 168: \tif($THIS_RET['ID'])",
        "// Line_Reference 169: \t\t$id = $THIS_RET['ID'];",
        "// Line_Reference 170: \telse",
        "// Line_Reference 171: \t\t$id = 'new';",
        "// Line_Reference 172: ",
        "// Line_Reference 173: ",
        "// Line_Reference 174: \t$extra = 'class=cell_floating size=25';",
        "// Line_Reference 175: ",
        "// Line_Reference 176: \treturn TextInput($value,'values['.$id.']['.$name.']','',$extra);",
        "// Line_Reference 177: }",
        "// Line_Reference 180: function makeTextInputMod2($value,$name)",
        "// Line_Reference 181: {\tglobal $THIS_RET;",
        "// Line_Reference 182: \tif($THIS_RET['ID'])",
        "// Line_Reference 183: \t\t$id = $THIS_RET['ID'];",
        "// Line_Reference 184: \telse",
        "// Line_Reference 185: \t\t$id = 'new';",
        "// Line_Reference 186: ",
        "// Line_Reference 187:         if($id=='new')",
        "// Line_Reference 188:                 $extra = 'size=25 maxlength=5 class=cell_floating onKeyDown=\"return numberOnly(event);\"';",
        "// Line_Reference 189:         else",
        "// Line_Reference 190:                 $extra = 'size=25 maxlength=5 class=cell_floating onKeyDown=\\\"return numberOnly(event);\\\"';",
        "// Line_Reference 191: ",
        "// Line_Reference 192: ",
        "// Line_Reference 193: ",
        "// Line_Reference 194: \treturn TextInput($value,'values['.$id.']['.$name.']','',$extra);",
        "// Line_Reference 201: ?>"
    ]
}
