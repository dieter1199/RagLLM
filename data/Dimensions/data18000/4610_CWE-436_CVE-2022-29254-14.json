{
    "cve_id": "CVE-2022-29254",
    "cve_description": "silverstripe-omnipay is a SilverStripe integration with Omnipay PHP payments library. For a subset of Omnipay gateways (those that use intermediary states like `isNotification()` or `isRedirect()`), if the payment identifier or success URL is exposed it is possible for payments to be prematurely marked as completed without payment being taken. This is mitigated by the fact that most payment gateways hide this information from users, however some issuing banks offer flawed 3DSecure implementations that may inadvertently expose this data. The following versions have been patched to fix this issue: `2.5.2`, `3.0.2`, `3.1.4`, and `3.2.1`. There are no known workarounds for this vulnerability.",
    "cve_publish_date": "2022-06-09",
    "cwe_id": "CWE-436",
    "cwe_name": "Interpretation Conflict",
    "cwe_description": "Product A handles inputs or steps differently than Product B, which causes A to perform incorrect actions based on its perception of B's state.",
    "commit_message": "[CVE-2022-29254] Add extra validation on payment completion",
    "type_of_change": "Modification",
    "filename_of_changes": "VoidService.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "12",
    "number_of_lines_deleted_vulnerable_to_cve": "12",
    "vulnerable_lines": [
        "// Line_Reference 7: use Omnipay\\Common\\Exception\\OmnipayException;",
        "// Line_Reference 10: use SilverStripe\\Omnipay\\Model\\Message;",
        "// Line_Reference 20:     protected $requestMessageType = Message\\VoidRequest::class;",
        "// Line_Reference 22:     protected $errorMessageType = Message\\VoidError::class;",
        "// Line_Reference 100:         if ($serviceResponse->isAwaitingNotification()) {",
        "// Line_Reference 103:         } else {",
        "// Line_Reference 104:             if ($serviceResponse->isError()) {",
        "// Line_Reference 105:                 $this->createMessage($this->errorMessageType, $response);",
        "// Line_Reference 106:             } else {",
        "// Line_Reference 107:                 $this->markCompleted($this->endState, $serviceResponse, $response);",
        "// Line_Reference 108:             }",
        "// Line_Reference 117:         $this->createMessage(Message\\VoidedResponse::class, $gatewayMessage);"
    ]
}
