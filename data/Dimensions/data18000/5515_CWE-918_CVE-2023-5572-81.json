{
    "cve_id": "CVE-2023-5572",
    "cve_description": "Server-Side Request Forgery (SSRF) in GitHub repository vriteio/vrite prior to 0.3.0.",
    "cve_publish_date": "2023-10-13",
    "cwe_id": "CWE-918",
    "cwe_name": "Server-Side Request Forgery (SSRF)",
    "cwe_description": "The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
    "commit_message": "Vrite v0.3 (#45)\n\n- Replace wrapper with element;\r\n- Add XML-like syntax for elements;\r\n- Redesign editor block menus;\r\n- Add MDX extension;\r\n- Allow CORS API access;\r\n- Restructure @vrite/backend;",
    "type_of_change": "Modification",
    "filename_of_changes": "index.tsx",
    "code_language": "TypeScript",
    "number_of_lines_added_for_mitigation": "2",
    "number_of_lines_deleted_vulnerable_to_cve": "120",
    "vulnerable_lines": [
        "// Line_Reference 2: import { ConfigureWrapperSubSection } from \"./configure-wrapper-subsection\";",
        "// Line_Reference 27: const WrapperDetails: Component<{",
        "// Line_Reference 28:   wrapper: App.Wrapper;",
        "// Line_Reference 29:   onEdit?(): void;",
        "// Line_Reference 30:   onDelete?(): void;",
        "// Line_Reference 31: }> = (props) => {",
        "// Line_Reference 32:   const [loading, setLoading] = createSignal(false);",
        "// Line_Reference 33:   const { notify } = useNotifications();",
        "// Line_Reference 34:   const client = useClient();",
        "// Line_Reference 35: ",
        "// Line_Reference 36:   return (",
        "// Line_Reference 37:     <Card class=\"flex flex-col gap-0 w-full m-0\" color=\"contrast\">",
        "// Line_Reference 38:       <div class=\"flex items-start justify-center gap-2 w-full\">",
        "// Line_Reference 39:         <Heading level={3} class=\"break-anywhere flex-1\">",
        "// Line_Reference 40:           {props.wrapper.label || \"[No name]\"}",
        "// Line_Reference 41:         </Heading>",
        "// Line_Reference 42:         <Show",
        "// Line_Reference 43:           when={!props.wrapper.extension}",
        "// Line_Reference 44:           fallback={",
        "// Line_Reference 45:             <Tooltip text=\"Extension\" class=\"mt-1\">",
        "// Line_Reference 46:               <IconButton path={mdiPuzzle} text=\"soft\" class=\"m-0\" badge />",
        "// Line_Reference 47:             </Tooltip>",
        "// Line_Reference 48:           }",
        "// Line_Reference 49:         >",
        "// Line_Reference 50:           <Show when={hasPermission(\"manageWorkspace\")}>",
        "// Line_Reference 51:             <Tooltip text=\"Delete\" class=\"mt-1\">",
        "// Line_Reference 52:               <IconButton",
        "// Line_Reference 53:                 path={mdiTrashCan}",
        "// Line_Reference 54:                 text=\"soft\"",
        "// Line_Reference 55:                 class=\"m-0\"",
        "// Line_Reference 56:                 loading={loading()}",
        "// Line_Reference 57:                 onClick={async () => {",
        "// Line_Reference 58:                   try {",
        "// Line_Reference 59:                     setLoading(true);",
        "// Line_Reference 60:                     await client.workspaceSettings.deleteWrapper.mutate({",
        "// Line_Reference 61:                       key: props.wrapper.key",
        "// Line_Reference 62:                     });",
        "// Line_Reference 63:                     setLoading(false);",
        "// Line_Reference 64:                     props.onDelete?.();",
        "// Line_Reference 65:                     notify({",
        "// Line_Reference 66:                       text: \"Wrapper deleted\",",
        "// Line_Reference 67:                       type: \"success\"",
        "// Line_Reference 68:                     });",
        "// Line_Reference 69:                   } catch (error) {",
        "// Line_Reference 70:                     setLoading(false);",
        "// Line_Reference 71:                     notify({",
        "// Line_Reference 72:                       text: \"Failed to delete wrapper\",",
        "// Line_Reference 73:                       type: \"error\"",
        "// Line_Reference 74:                     });",
        "// Line_Reference 75:                   }",
        "// Line_Reference 76:                 }}",
        "// Line_Reference 77:               />",
        "// Line_Reference 78:             </Tooltip>",
        "// Line_Reference 79:           </Show>",
        "// Line_Reference 80:         </Show>",
        "// Line_Reference 81:       </div>",
        "// Line_Reference 82:     </Card>",
        "// Line_Reference 83:   );",
        "// Line_Reference 84: };",
        "// Line_Reference 87:   const [openedSubsection, setOpenedSubsection] = createSignal<\"none\" | \"configure-wrapper\">(",
        "// Line_Reference 88:     \"none\"",
        "// Line_Reference 89:   );",
        "// Line_Reference 94:   const [wrappers, setWrappers] = createSignal<App.WorkspaceSettings[\"wrappers\"]>([]);",
        "// Line_Reference 113:   const handleNewWrapper = (): void => {",
        "// Line_Reference 114:     setOpenedSubsection(\"configure-wrapper\");",
        "// Line_Reference 115:     props.setSubSection({",
        "// Line_Reference 116:       label: \"New wrapper\",",
        "// Line_Reference 117:       icon: mdiCube,",
        "// Line_Reference 118:       goBack() {",
        "// Line_Reference 119:         setOpenedSubsection(\"none\");",
        "// Line_Reference 120:       }",
        "// Line_Reference 121:     });",
        "// Line_Reference 122:   };",
        "// Line_Reference 129:     setWrappers(workspaceSettings()?.wrappers || []);",
        "// Line_Reference 277:         <Show when={enabledBlocks().includes(\"wrapper\")}>",
        "// Line_Reference 278:           <TitledCard",
        "// Line_Reference 279:             label=\"Wrappers\"",
        "// Line_Reference 280:             icon={mdiCube}",
        "// Line_Reference 281:             action={",
        "// Line_Reference 282:               <Show when={hasPermission(\"manageWorkspace\")}>",
        "// Line_Reference 283:                 <>",
        "// Line_Reference 284:                   <Button color=\"primary\" class=\"m-0 hidden @md:flex\" onClick={handleNewWrapper}>",
        "// Line_Reference 285:                     New Wrapper",
        "// Line_Reference 286:                   </Button>",
        "// Line_Reference 287:                   <Tooltip text=\"New Wrapper\" wrapperClass=\"flex @md:hidden\" class=\"mt-1\" fixed>",
        "// Line_Reference 288:                     <IconButton",
        "// Line_Reference 289:                       path={mdiPlus}",
        "// Line_Reference 290:                       class=\"m-0\"",
        "// Line_Reference 291:                       color=\"primary\"",
        "// Line_Reference 292:                       onClick={handleNewWrapper}",
        "// Line_Reference 293:                     />",
        "// Line_Reference 294:                   </Tooltip>",
        "// Line_Reference 295:                 </>",
        "// Line_Reference 296:               </Show>",
        "// Line_Reference 297:             }",
        "// Line_Reference 298:           >",
        "// Line_Reference 299:             <div class=\"flex flex-col gap-2 w-full\">",
        "// Line_Reference 300:               <For",
        "// Line_Reference 301:                 each={wrappers()}",
        "// Line_Reference 302:                 fallback={",
        "// Line_Reference 303:                   <p class=\"px-2 w-full text-start text-gray-500 dark:text-gray-400\">",
        "// Line_Reference 304:                     No wrappers found",
        "// Line_Reference 305:                   </p>",
        "// Line_Reference 306:                 }",
        "// Line_Reference 307:               >",
        "// Line_Reference 308:                 {(wrapper) => {",
        "// Line_Reference 309:                   return <WrapperDetails wrapper={wrapper} />;",
        "// Line_Reference 310:                 }}",
        "// Line_Reference 311:               </For>",
        "// Line_Reference 312:             </div>",
        "// Line_Reference 313:           </TitledCard>",
        "// Line_Reference 314:         </Show>",
        "// Line_Reference 344:       <Match when={openedSubsection() === \"configure-wrapper\"}>",
        "// Line_Reference 345:         <ConfigureWrapperSubSection",
        "// Line_Reference 346:           setActionComponent={props.setActionComponent}",
        "// Line_Reference 347:           onWrapperConfigured={() => {",
        "// Line_Reference 348:             setOpenedSubsection(\"none\");",
        "// Line_Reference 349:           }}",
        "// Line_Reference 350:         />",
        "// Line_Reference 351:       </Match>"
    ]
}
