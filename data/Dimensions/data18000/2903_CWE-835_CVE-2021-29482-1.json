{
    "cve_id": "CVE-2021-29482",
    "cve_description": "xz is a compression and decompression library focusing on the xz format completely written in Go. The function readUvarint used to read the xz container format may not terminate a loop provide malicous input. The problem has been fixed in release v0.5.8. As a workaround users can limit the size of the compressed file input to a reasonable size for their use case. The standard library had recently the same issue and got the CVE-2020-16845 allocated.",
    "cve_publish_date": "2021-04-28",
    "cwe_id": "CWE-835",
    "cwe_name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
    "cwe_description": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.",
    "commit_message": "xz: fix a security issue for readUvarint\n\nreadUvarint could be provided a sequence of bytes where the application\nwould never stop. That is the same issue that has been recently\nreported for the Go Standard Library as CVE-2020-16845.\n\nThe fix simply adds a check for the number of bytes read and reports an\noverflow after more than 10 bytes are read, which is\n$\\ceil{\\frac{64}{7}}$.\n\nThe commit also includes a test to ensure that the error is returned.\n\nI thank Github user 0xdecaf for reporting the issue.",
    "type_of_change": "Modification",
    "filename_of_changes": "bits.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "6",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 66: \t\t\tif i > 10 || i == 10 && b > 1 {"
    ]
}
