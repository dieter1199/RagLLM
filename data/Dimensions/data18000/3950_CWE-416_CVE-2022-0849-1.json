{
    "cve_id": "CVE-2022-0849",
    "cve_description": "Use After Free in r_reg_get_name_idx in GitHub repository radareorg/radare2 prior to 5.6.6.",
    "cve_publish_date": "2022-03-05",
    "cwe_id": "CWE-416",
    "cwe_name": "Use After Free",
    "cwe_description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
    "commit_message": "aaef on arm/thumb switches causes uaf ##crash\n\n* Reported by peacock-doris via huntr.dev\n* Reproducer: poc_uaf_r_reg_get",
    "type_of_change": "Modification",
    "filename_of_changes": "canal.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "11",
    "number_of_lines_deleted_vulnerable_to_cve": "9",
    "vulnerable_lines": [
        "// Line_Reference 1: /* radare - LGPL - Copyright 2009-2021 - pancake, nibble */",
        "// Line_Reference 4730: \tconst char *spname;",
        "// Line_Reference 5102: \tconst char *pcname;",
        "// Line_Reference 5191: \tconst char *spname = r_reg_get_name (core->anal->reg, R_REG_NAME_SP);",
        "// Line_Reference 5192: \tif (!spname) {",
        "// Line_Reference 5213: \tpcname = r_reg_get_name (core->anal->reg, R_REG_NAME_PC);",
        "// Line_Reference 5214: \tif (!pcname || !*pcname) {",
        "// Line_Reference 5302: #if 1",
        "// Line_Reference 5306: #endif"
    ]
}
