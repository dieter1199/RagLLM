{
    "cve_id": "CVE-2023-5572",
    "cve_description": "Server-Side Request Forgery (SSRF) in GitHub repository vriteio/vrite prior to 0.3.0.",
    "cve_publish_date": "2023-10-13",
    "cwe_id": "CWE-918",
    "cwe_name": "Server-Side Request Forgery (SSRF)",
    "cwe_description": "The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
    "commit_message": "Vrite v0.3 (#45)\n\n- Replace wrapper with element;\r\n- Add XML-like syntax for elements;\r\n- Redesign editor block menus;\r\n- Add MDX extension;\r\n- Allow CORS API access;\r\n- Restructure @vrite/backend;",
    "type_of_change": "Modification",
    "filename_of_changes": "workspace-memberships.ts",
    "code_language": "TypeScript",
    "number_of_lines_added_for_mitigation": "26",
    "number_of_lines_deleted_vulnerable_to_cve": "49",
    "vulnerable_lines": [
        "// Line_Reference 1: import { procedure, router } from \"../lib/trpc\";",
        "// Line_Reference 2: import { AuthenticatedContext, isAuthenticated, isAuthenticatedUser } from \"../lib/middleware\";",
        "// Line_Reference 3: import { UnderscoreID, generateSalt, hashValue, stringToRegex, zodId } from \"../lib\";",
        "// Line_Reference 9:   WorkspaceMembership,",
        "// Line_Reference 11:   workspaceMembership",
        "// Line_Reference 12: } from \"#database/workspace-memberships\";",
        "// Line_Reference 13: import * as errors from \"#lib/errors\";",
        "// Line_Reference 14: import { getWorkspacesCollection, workspace } from \"#database/workspaces\";",
        "// Line_Reference 15: import { createEventPublisher, createEventSubscription } from \"#lib/pub-sub\";",
        "// Line_Reference 16: import { runWebhooks } from \"#lib/webhooks\";",
        "// Line_Reference 17: import {",
        "// Line_Reference 18:   Role,",
        "// Line_Reference 19:   contentPieceMember,",
        "// Line_Reference 22:   profile,",
        "// Line_Reference 23:   role",
        "// Line_Reference 25: import { updateSessionUser } from \"#lib/session\";",
        "// Line_Reference 26: ",
        "// Line_Reference 27: type WorkspaceMembershipEvent =",
        "// Line_Reference 28:   | { action: \"create\"; data: { id: string; pendingInvite: boolean } & WorkspaceMembership }",
        "// Line_Reference 29:   | {",
        "// Line_Reference 30:       action: \"update\";",
        "// Line_Reference 31:       data: {",
        "// Line_Reference 32:         id: string;",
        "// Line_Reference 33:         userId: string;",
        "// Line_Reference 34:         role?: Role;",
        "// Line_Reference 35:         pendingInvite?: boolean;",
        "// Line_Reference 36:         profile?: {",
        "// Line_Reference 37:           fullName?: string;",
        "// Line_Reference 38:           username?: string;",
        "// Line_Reference 39:           avatar?: string;",
        "// Line_Reference 40:         };",
        "// Line_Reference 41:       } & Partial<WorkspaceMembership>;",
        "// Line_Reference 42:     }",
        "// Line_Reference 43:   | {",
        "// Line_Reference 44:       action: \"delete\";",
        "// Line_Reference 45:       data: { id: string; userId: string };",
        "// Line_Reference 46:     };",
        "// Line_Reference 47: ",
        "// Line_Reference 48: const publishEvent = createEventPublisher<WorkspaceMembershipEvent>(",
        "// Line_Reference 49:   (workspaceId) => `workspaceMemberships:${workspaceId}`",
        "// Line_Reference 50: );",
        "// Line_Reference 86:   publishEvent(ctx, `${ctx.auth.workspaceId}`, {",
        "// Line_Reference 153:       publishEvent(ctx, `${ctx.auth.workspaceId}`, {",
        "// Line_Reference 335:         email: z.string().email(),",
        "// Line_Reference 371:       publishEvent(ctx, `${ctx.auth.workspaceId}`, {",
        "// Line_Reference 382:     return createEventSubscription<WorkspaceMembershipEvent>(",
        "// Line_Reference 383:       ctx,",
        "// Line_Reference 384:       `workspaceMemberships:${ctx.auth.workspaceId}`",
        "// Line_Reference 385:     );"
    ]
}
