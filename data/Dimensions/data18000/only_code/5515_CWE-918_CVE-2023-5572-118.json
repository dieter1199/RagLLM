import { zodId } from "#lib/mongo";
import { stringToRegex } from "#lib/utils";
import { isAuthenticated } from "#lib/middleware";
import { procedure, router } from "#lib/trpc";
import * as errors from "#lib/errors";
import { createEventPublisher, createEventSubscription } from "#lib/pub-sub";
import { ExtendedTag, Tag, getTagsCollection, tag, getContentPiecesCollection } from "#database";
type TagEvent =
| { action: "create"; data: Tag }
| { action: "update"; data: Partial<Tag> & { id: string } }
| {
action: "delete";
data: { id: string };
};
const publishEvent = createEventPublisher<TagEvent>((workspaceId) => `tags:${workspaceId}`);
publishEvent(ctx, `${ctx.auth.workspaceId}`, {
publishEvent(ctx, `${ctx.auth.workspaceId}`, {
publishEvent(ctx, `${ctx.auth.workspaceId}`, {
return createEventSubscription<TagEvent>(ctx, `tags:${ctx.auth.workspaceId}`);
