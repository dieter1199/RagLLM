Err          error
// Execute yields all the objects of the provided objectType that the given user has, possibly, a specific relation with
// and sends those objects to resultChan. It MUST guarantee no duplicate objects sent.
// If an error is encountered before resolving all objects: the provided channel will NOT be closed and
// - if the error is context cancellation or deadline: Execute may send the error through the channel
// - otherwise: Execute will send the error through the channel
// If no errors, Execute will yield all of the objects on the provided channel and then close the channel
// to signal that it is done.
) {
select {
case <-ctx.Done():
return
case resultChan <- &ReverseExpandResult{Err: err}:
return
}