static void read_module(RBuffer *b, ut64 addr, struct minidump_module *module) {
r_buf_seek (b, addr, R_BUF_SET);
for (i = 0; i < module_list.number_of_modules; i++) {
struct minidump_module *module = R_NEW (struct minidump_module);
break;
read_module (obj->b, offset, module);
for (i = 0; i < memory_list.number_of_memory_ranges; i++) {
for (i = 0; i < thread_ex_list.number_of_threads; i++) {
for (i = 0; i < memory64_list.number_of_memory_ranges; i++) {
for (i = 0; i < unloaded_module_list.number_of_entries; i++) {
for (i = 0; i < memory_info_list.number_of_entries; i++) {
for (i = 0; i < thread_info_list.number_of_entries; i++) {
for (i = 0; i < handle_operation_list.number_of_entries; i++) {
for (i = 0; i < token_info_list.number_of_entries; i++) {