new DefaultResetPasswordRequestResponse(this.userReference, email,
verificationCode);
void requestResetPasswordUnexistingUser()
String exceptionMessage = "User [user:Foobar] doesn't exist";
when(this.localizationManager.getTranslationPlain("xe.admin.passwordReset.error.noUser",
"user:Foobar")).thenReturn(exceptionMessage);
ResetPasswordException resetPasswordException = assertThrows(ResetPasswordException.class,
() -> this.resetPasswordManager.requestResetPassword(this.userReference));
assertEquals(exceptionMessage, resetPasswordException.getMessage());
String exceptionMessage = "User has no email address.";
when(this.localizationManager.getTranslationPlain("xe.admin.passwordReset.error.noEmail"))
.thenReturn(exceptionMessage);
ResetPasswordException resetPasswordException = assertThrows(ResetPasswordException.class,
() -> this.resetPasswordManager.requestResetPassword(this.userReference));
assertEquals(exceptionMessage, resetPasswordException.getMessage());
new DefaultResetPasswordRequestResponse(this.userReference, email,
verificationCode);
new DefaultResetPasswordRequestResponse(this.userReference, email,
newVerificationCode);
void checkVerificationCodeUnexistingUser()
String exceptionMessage = "User [user:Foobar] doesn't exist";
when(this.localizationManager.getTranslationPlain("xe.admin.passwordReset.error.noUser",
"user:Foobar")).thenReturn(exceptionMessage);
ResetPasswordException resetPasswordException = assertThrows(ResetPasswordException.class,
() -> this.resetPasswordManager.checkVerificationCode(this.userReference, "some code"));
assertEquals(exceptionMessage, resetPasswordException.getMessage());
String exceptionMessage = "User [user:Foobar] doesn't exist";
when(this.localizationManager.getTranslationPlain("xe.admin.passwordReset.error.noUser",
"user:Foobar")).thenReturn(exceptionMessage);
ResetPasswordException resetPasswordException = assertThrows(ResetPasswordException.class,
() -> this.resetPasswordManager.resetPassword(this.userReference, "some password"));
assertEquals(exceptionMessage, resetPasswordException.getMessage());