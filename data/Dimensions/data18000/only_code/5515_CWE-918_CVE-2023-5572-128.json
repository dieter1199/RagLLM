import { isAuthenticated, isAuthenticatedUser } from "#lib/middleware";
import { procedure, router } from "#lib/trpc";
import * as errors from "#lib/errors";
import { createEventPublisher, createEventSubscription } from "#lib/pub-sub";
AppearanceSettings,
import { zodId } from "#lib";
type UserSettingsEvent = { action: "update"; data: Partial<AppearanceSettings> };
const publishEvent = createEventPublisher<UserSettingsEvent>((userId) => `userSettings:${userId}`);
.input(appearanceSettings.partial())
publishEvent(ctx, `${ctx.auth.userId}`, { action: "update", data: input });
codeEditorTheme: userSettings.codeEditorTheme,
return createEventSubscription<UserSettingsEvent>(ctx, `userSettings:${ctx.auth.userId}`);
export type { UserSettingsEvent };
