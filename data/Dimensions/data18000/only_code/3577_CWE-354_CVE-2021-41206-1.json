BCast::FromShape(labels_in.shape()));
if (logits_in.IsSameSize(labels_in)) {
functor(context->eigen_device<Device>(), shape_in.AsEigenDSizes<2>(),
Eigen::array<Eigen::DenseIndex, 2>{1, 1},
Eigen::array<Eigen::DenseIndex, 2>{1, 1}, logits_in.matrix<T>(),
labels_in.matrix<T>(), scratch.matrix<T>(), loss_out->vec<T>(),
back_out->matrix<T>());
} else {
functor(context->eigen_device<Device>(), shape_in.AsEigenDSizes<2>(),
BCast::ToIndexArray<2>(bcast.x_bcast()),
BCast::ToIndexArray<2>(bcast.y_bcast()),
logits_in.template shaped<T, 2>(bcast.x_reshape()),
labels_in.template shaped<T, 2>(bcast.y_reshape()),
scratch.matrix<T>(), loss_out->vec<T>(), back_out->matrix<T>());
}