{
    "cve_id": "CVE-2023-1513",
    "cve_description": "A flaw was found in KVM. When calling the KVM_GET_DEBUGREGS ioctl, on 32-bit systems, there might be some uninitialized portions of the kvm_debugregs structure that could be copied to userspace, causing an information leak.",
    "cve_publish_date": "2023-03-23",
    "cwe_id": "CWE-665",
    "cwe_name": "Improper Initialization",
    "cwe_description": "The product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.",
    "commit_message": "kvm: initialize all of the kvm_debugregs structure before sending it to userspace\n\nWhen calling the KVM_GET_DEBUGREGS ioctl, on some configurations, there\nmight be some unitialized portions of the kvm_debugregs structure that\ncould be copied to userspace.  Prevent this as is done in the other kvm\nioctls, by setting the whole structure to 0 before copying anything into\nit.\n\nBonus is that this reduces the lines of code as the explicit flag\nsetting and reserved space zeroing out can be removed.\n\nCc: Sean Christopherson <seanjc@google.com>\nCc: Paolo Bonzini <pbonzini@redhat.com>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: Ingo Molnar <mingo@redhat.com>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Dave Hansen <dave.hansen@linux.intel.com>\nCc: <x86@kernel.org>\nCc: \"H. Peter Anvin\" <hpa@zytor.com>\nCc: stable <stable@kernel.org>\nReported-by: Xingyuan Mo <hdthky0@gmail.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nMessage-Id: <20230214103304.3689213-1-gregkh@linuxfoundation.org>\nTested-by: Xingyuan Mo <hdthky0@gmail.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "x86.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 5270: \tdbgregs->flags = 0;",
        "// Line_Reference 5271: \tmemset(&dbgregs->reserved, 0, sizeof(dbgregs->reserved));"
    ]
}
