{
    "cve_id": "CVE-2018-7191",
    "cve_description": "In the tun subsystem in the Linux kernel before 4.13.14, dev_get_valid_name is not called before register_netdevice. This allows local users to cause a denial of service (NULL pointer dereference and panic) via an ioctl(TUNSETIFF) call with a dev name containing a / character. This is similar to CVE-2013-4343.",
    "cve_publish_date": "2019-05-17",
    "cwe_id": "CWE-476",
    "cwe_name": "NULL Pointer Dereference",
    "cwe_description": "The product dereferences a pointer that it expects to be valid but is NULL.",
    "commit_message": "tun: call dev_get_valid_name() before register_netdevice()\n\nregister_netdevice() could fail early when we have an invalid\ndev name, in which case ->ndo_uninit() is not called. For tun\ndevice, this is a problem because a timer etc. are already\ninitialized and it expects ->ndo_uninit() to clean them up.\n\nWe could move these initializations into a ->ndo_init() so\nthat register_netdevice() knows better, however this is still\ncomplicated due to the logic in tun_detach().\n\nTherefore, I choose to just call dev_get_valid_name() before\nregister_netdevice(), which is quicker and much easier to audit.\nAnd for this specific case, it is already enough.\n\nFixes: 96442e42429e (\"tuntap: choose the txq based on rxq\")\nReported-by: Dmitry Alexeev <avekceeb@gmail.com>\nCc: Jason Wang <jasowang@redhat.com>\nCc: \"Michael S. Tsirkin\" <mst@redhat.com>\nSigned-off-by: Cong Wang <xiyou.wangcong@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "type_of_change": "Modification",
    "filename_of_changes": "dev.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "3",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 1150: static int dev_get_valid_name(struct net *net,",
        "// Line_Reference 1151: \t\t\t      struct net_device *dev,",
        "// Line_Reference 1152: \t\t\t      const char *name)"
    ]
}
