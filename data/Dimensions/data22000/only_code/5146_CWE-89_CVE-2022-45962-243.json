// echo "<PRE>";
// print_r($_REQUEST);
// echo "<PRE>";
if (count($config_RET))
if (count($assignments_RET)) {
if (count($assignments_RET)) {
$extra['SELECT'] .= ',\'' . $id . '\' AS G' . $id . ',\'' . $assignment[DUE] . '\' AS D' . $id . ',\'' . $assignment[DUE_DATE] . '\' AS DUE_' . $id . '';
if (count($assignments_RET)) {
//			$extra['functions'] = array('POINTS'=>'_makeExtraAssnCols','LETTER_GRADE'=>'_makeExtraAssnCols','WEIGHT_GRADE'=>'_makeWtg');
//			$LO_columns += array('POINTS'=>'Points','LETTER_GRADE'=>'Grade','WEIGHT_GRADE'=>'WEIGHT GRADE');
)  ) ', "'0'", 'ga.POINTS')) . ') AS PARTIAL_TOTAL, gt.FINAL_GRADE_PERCENT FROM students s JOIN schedule ss ON (ss.STUDENT_ID=s.STUDENT_ID AND ss.COURSE_PERIOD_ID=\'' . $course_period_id . '\') JOIN gradebook_assignments ga ON ((ga.COURSE_PERIOD_ID=ss.COURSE_PERIOD_ID OR ga.COURSE_ID=\'' . $course_id . '\' AND ga.STAFF_ID=\'' . User('STAFF_ID') . '\') AND ga.MARKING_PERIOD_ID=\'' . (GetCpDet($course_period_id, 'MARKING_PERIOD_ID') != '' ? UserMP() : GetMPId('FY')) . '\') LEFT OUTER JOIN gradebook_grades gg ON (gg.STUDENT_ID=s.STUDENT_ID AND gg.ASSIGNMENT_ID=ga.ASSIGNMENT_ID AND gg.COURSE_PERIOD_ID=ss.COURSE_PERIOD_ID)
//                        print_r($current_RET);
if (clean_param($_REQUEST['values'], PARAM_NOTAGS) && ($_POST['values'] || $_REQUEST['ajax']) && $_SESSION['assignment_id'] == clean_param($_REQUEST['assignment_id'], PARAM_INT)) {
//                DBQuery('UPDATE gradebook_assignments SET UNGRADED=2 WHERE ASSIGNMENT_ID IN (SELECT ASSIGNMENT_ID FROM gradebook_grades WHERE POINTS IS NULL OR POINTS=\'\') OR ASSIGNMENT_ID NOT IN (SELECT ASSIGNMENT_ID FROM gradebook_grades WHERE POINTS IS NOT NULL OR POINTS!=\'\')');
$current_RET[$_REQUEST['student_id']] = DBGet(DBQuery('SELECT g.ASSIGNMENT_ID FROM gradebook_grades g,gradebook_assignments a WHERE a.ASSIGNMENT_ID=g.ASSIGNMENT_ID AND a.MARKING_PERIOD_ID=\'' . (GetCpDet($course_period_id, 'MARKING_PERIOD_ID') != '' ? UserMP() : GetMPId('FY')) . '\' AND g.STUDENT_ID=\'' . $_REQUEST[student_id] . '\' AND g.COURSE_PERIOD_ID=\'' . $course_period_id . '\'' . ($_REQUEST['assignment_id'] == 'all' ? '' : ' AND g.ASSIGNMENT_ID=\'' . $_REQUEST[assignment_id] . '\'')), array(), array('ASSIGNMENT_ID'));
$current_RET = DBGet(DBQuery('SELECT STUDENT_ID,POINTS,COMMENT,ASSIGNMENT_ID FROM gradebook_grades WHERE ASSIGNMENT_ID=\'' . $_REQUEST[assignment_id] . '\' AND COURSE_PERIOD_ID=\'' . $course_period_id . '\''), array(), array('STUDENT_ID', 'ASSIGNMENT_ID'));
$assignment_select = '<SELECT name=assignment_id class="form-control" onchange="document.location.href=\'Modules.php?modname=' . $_REQUEST['modname'] . '&include_inactive=' . $_REQUEST['include_inactive'] . '&cpv_id=' . CpvId() . '&assignment_id=\'+this.options[selectedIndex].value"><OPTION value="">'._totals.'</OPTION><OPTION value="all"' . (($_REQUEST['assignment_id'] == 'all' && !$_REQUEST['student_id']) ? ' SELECTED' : '') . '>'._all.'</OPTION>';
echo '<div class="panel-body">';
echo "<FORM class='m-b-0' action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&student_id=" . strip_tags(trim($_REQUEST[student_id])) . "&cpv_id=" . CpvId() . " method=POST>";
if (count($stu_RET) == 0 && !$_REQUEST['student_id'])
echo '<div class="form-inline">' . $assignment_select . ' &nbsp; &nbsp; <label class="checkbox checkbox-inline checkbox-switch switch-success switch-xs"><INPUT type=checkbox name=include_inactive value=Y' . ($_REQUEST['include_inactive'] == 'Y' ? " CHECKED onclick='document.location.href=\"" . PreparePHP_SELF($tmp_REQUEST) . "&include_inactive=\";'" : " onclick='document.location.href=\"" . PreparePHP_SELF($tmp_REQUEST) . "&include_inactive=Y\";'") . '><span></span> &nbsp; '._includeInactiveStudents.'</label> &nbsp; ' . ($_REQUEST['assignment_id'] ? SubmitButton(_save, '', 'class="btn btn-primary pull-right" onclick="self_disable(this);"') : '') . '</div>';
echo '<div class="form-inline">' . $assignment_select . ' &nbsp; ' . ($_REQUEST['assignment_id'] ? SubmitButton(_save, '', 'class="btn btn-primary pull-right" onclick="self_disable(this);"') : '') . '</div>';
if (count($assignments_RET) != 0)
echo $_REQUEST['assignment_id'] ? '<CENTER>' . SubmitButton(_save, '', 'class="btn btn-primary" onclick="self_disable(this);"') . '</CENTER>' : '';
if (count($rounding))
if (count($points_RET[$THIS_RET['STUDENT_ID']])) {
if (count($points_RET[$THIS_RET['STUDENT_ID']])) {
if (count($rounding))
global $THIS_RET,$total_points,$current_RET,$points_RET,$tabindex,$max_allowed;
if(clean_param($_REQUEST['assignment_id'],PARAM_INT)=='' && substr($_REQUEST['assignment_id'],0,1)!='t' && !$_REQUEST['student_id'])
{
if(count($current_RET[$THIS_RET['STUDENT_ID']]))
{
$total = $total_percent = 0;
$assign_typ_wg=array();
$tot_weight_grade='';
$tot_weighted_percent=array();
$assignment_type_count=array();
foreach($current_RET[$THIS_RET['STUDENT_ID']] as $partial_points)
{
$THIS_RET['STUDENT_ID']['flag']=0;
if( $partial_points['LETTERWTD_GRADE']!=-1.00 && $partial_points['LETTERWTD_GRADE']!='')
{
$wper = explode('%', $partial_points['LETTER_GRADE']);
if ($tot_weighted_percent[$partial_points['ASSIGNMENT_TYPE_ID']] != '')
$tot_weighted_percent[$partial_points['ASSIGNMENT_TYPE_ID']] = $tot_weighted_percent[$partial_points['ASSIGNMENT_TYPE_ID']] + $wper[0];
else
$tot_weighted_percent[$partial_points['ASSIGNMENT_TYPE_ID']] = $wper[0];
if ($assignment_type_count[$partial_points['ASSIGNMENT_TYPE_ID']] != '')
$assignment_type_count[$partial_points['ASSIGNMENT_TYPE_ID']] = $assignment_type_count[$partial_points['ASSIGNMENT_TYPE_ID']] + 1;
else
$assignment_type_count[$partial_points['ASSIGNMENT_TYPE_ID']] = 1;
if ($partial_points['ASSIGN_TYP_WG'] != '')
$assign_typ_wg[$partial_points['ASSIGNMENT_TYPE_ID']] = substr($partial_points['ASSIGN_TYP_WG'], 0, -2);
//                                                            $total += (($partial_points['PARTIAL_POINTS']/$partial_points['PARTIAL_TOTAL']))*$partial_points['FINAL_GRADE_PERCENT'];
//$total_percent += $partial_points['PARTIAL_TOTAL'];
$THIS_RET['STUDENT_ID']['flag']=1;
}
}
$total_weightage = 0;
//                                                            print_r($assignment_type_count);
foreach ($assignment_type_count as $assign_key => $value) {
$total_weightage = $total_weightage + $assign_typ_wg[$assign_key];
if ($tot_weight_grade == '')
{
$tot_weight_grade = round((round(($tot_weighted_percent[$assign_key] / $value), 2) * $assign_typ_wg[$assign_key]) / 100, 2);
//echo $tot_weight_grade .'= round((round(('.$tot_weighted_percent[$assign_key].' / '.$value.'), 2) * '.$assign_typ_wg[$assign_key].') / 100, 2)----new<br/><br/>';
}else{
$tot_weight_grade = $tot_weight_grade + (round((round(($tot_weighted_percent[$assign_key] / $value), 2) * $assign_typ_wg[$assign_key]) / 100, 2));
//echo $tot_weight_grade .'= '.$tot_weight_grade.' + (round((round(('.$tot_weighted_percent[$assign_key].' / '.$value.'), 2) * '.$assign_typ_wg[$assign_key].') / 100, 2))----old<br/><br/>';
}
}
$tot_weight_grade = $tot_weight_grade / 100;
//$tot_weight_grade=$tot_weight_grade/100;
//                                            if($total_percent!=0)
//						$total = ($total/$total_percent)*$partial_points;
}
else
$total = 0;
$tot_weight_grade = ($tot_weight_grade / $total_weightage) * 100;
// return (($current_RET[$THIS_RET['STUDENT_ID']][1]['LETTERWTD_GRADE']!=-1.00 && $current_RET[$THIS_RET['STUDENT_ID']][1]['LETTERWTD_GRADE']!='' && $current_RET[$THIS_RET['STUDENT_ID']][1]['ASSIGN_TYP_WG']!='N/A') ?_makeLetterGrade($tot_weight_grade,"",User('STAFF_ID'),'%').'% <B>'._makeLetterGrade($tot_weight_grade,"",User('STAFF_ID'),'').'</B>':'N/A');
return (($THIS_RET['STUDENT_ID']['flag']==1) ?_makeLetterGrade($tot_weight_grade,"",User('STAFF_ID'),'%').'% <B>'._makeLetterGrade($tot_weight_grade,"",User('STAFF_ID'),'').'</B>':'N/A');
//                                $ppercent= _makeLetterGrade($total,"",User('STAFF_ID'),"%");
//                                if($points_RET[$THIS_RET['STUDENT_ID']][1]['PARTIAL_POINTS']!='')
//                                    return ($total>$max_allowed?'<FONT color=red>':'').$ppercent.($total>$max_allowed?'</FONT>':'').'% &nbsp;<B>'._makeLetterGrade($total,"",User('STAFF_ID')).'</B>';
//                                else
//					return 'Not Graded';
}
else if(clean_param($_REQUEST['assignment_id'],PARAM_INT)!='' && substr($_REQUEST['assignment_id'],0,1)!='t' && !$_REQUEST['student_id'])
{
$points = $points_RET[$THIS_RET['STUDENT_ID']][1]['POINTS'];
if($points!='-1')
{
if($points!='')
{
foreach($points_RET[$THIS_RET['STUDENT_ID']] as $partial_points)
if($partial_points['TOTAL_POINTS']!=0 && $partial_points['POINTS']!=-1.00 && $partial_points['POINTS']!='')
{
$pnt=(($partial_points['POINTS']/$partial_points['TOTAL_POINTS'])*100)*$partial_points['FINAL_GRADE_PERCENT'];
$pnt=$pnt/100;
return (($points_RET[$THIS_RET['STUDENT_ID']][1]['LETTERWTD_GRADE']!=-1.00 && $points_RET[$THIS_RET['STUDENT_ID']][1]['LETTERWTD_GRADE']!='' && $points_RET[$THIS_RET['STUDENT_ID']][1]['ASSIGN_TYP_WG']!='N/A') ?_makeLetterGrade($pnt,"",User('STAFF_ID'),'%').'% <B>'._makeLetterGrade($pnt,"",User('STAFF_ID'),'').'</B>':'N/A');
//
}
else
return 'N/A';
}
else
return 'N/A';
}
//
else
return 'N/A';
//                                        }
//					else
//						return 'N/A&nbsp;N/A';
//                                }
//				else
//					return 'E/C';
}
else
{
$wtdper=($THIS_RET['POINTS']/$THIS_RET['TOTAL_POINTS'])*$THIS_RET['FINAL_GRADE_PERCENT'];
return (($THIS_RET['LETTERWTD_GRADE']!=-1.00 && $THIS_RET['LETTERWTD_GRADE']!='' && $THIS_RET['ASSIGN_TYP_WG']!='N/A') ?_makeLetterGrade($wtdper,"",User('STAFF_ID'),'%').'% <B>'._makeLetterGrade($wtdper,"",User('STAFF_ID'),'').'</B>':'N/A');
}
