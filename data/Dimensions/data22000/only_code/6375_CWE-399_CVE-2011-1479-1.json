struct user_struct *user = group->inotify_data.user;
atomic_dec(&user->inotify_devs);
static struct fsnotify_group *inotify_new_group(struct user_struct *user, unsigned int max_events)
group->inotify_data.user = user;
struct user_struct *user;
user = get_current_user();
if (unlikely(atomic_read(&user->inotify_devs) >=
inotify_max_user_instances)) {
ret = -EMFILE;
goto out_free_uid;
}
group = inotify_new_group(user, inotify_max_queued_events);
if (IS_ERR(group)) {
ret = PTR_ERR(group);
goto out_free_uid;
}
atomic_inc(&user->inotify_devs);
if (ret >= 0)
return ret;
fsnotify_put_group(group);
atomic_dec(&user->inotify_devs);
out_free_uid:
free_uid(user);
