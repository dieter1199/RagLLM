if (!empty($_GET['iframeHeight'])) {
$height = $_GET['iframeHeight'];
unset($_GET['iframeHeight']);
if (!empty($_GET['bs'])) {
$border = intval(preg_replace('/[^0-9]/', '', $_GET['bs']));
} else if (!empty($_GET['bc'])) {
if (!empty($_GET['bc'])) echo $_GET['bc'];
unset($_GET['bs']);
unset($_GET['bc']);
padding-bottom: <?php echo $padding ."px;\n"?>
height: <?php echo $height ."px;\n"?>
if (!empty($_GET['fg'])) {
echo 'color: '. $_GET['fg'] .";\n";
unset($_GET['fg']);
if (!empty($_GET['bgc'])) echo 'background-color: '. $_GET['bgc'] .";\n";
unset($_GET['bgc']);
if (!empty($_GET['font'])) {
echo 'font-family: '. FontPickerInput::getFontCss($_GET['font']) .";\n";
unset($_GET['font']);
br + input[type="text"],
input[type="hidden"] + input[type="text"] {
'onSubmit'=> (($useDefaults) ? 'return validate();' : ''),
<input type="text" name="Services[<?php echo $field['fieldName']; ?>]"
$_POST['Services'][$field['fieldName']] : ''; ?>" />
var defaultFields = <?php echo CJSON::encode ($fieldTypes); ?>;
/*
Sets input to empty string unless it contains the default value
*/
function clearText(field){
if (typeof field !== "undefined" && $(field).prop ('defaultValue') === $(field).val ())
$(field).val ("");
}
/*
Add error styling if field input is invalid.
Returns: false if field input is invalid, true otherwise
*/
function validateField(field) {
var input = $('#<?php echo $type; ?>').find (
'[name="<?php echo $modelName; ?>[' + field + ']"]');
if (!$(input).val () || // field is empty
$(input).val ().match (/^\s+$/) || // field contains only whitespace
(field == "email" && // invalid email format
$(input).val ().match(/[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}/) == null)) {
// add error styling
$(input).css ({"border-color": "#c00"});
$(input).css ({"background-color": "#fee"});
return false;
} else {
// remove error styling
$(input).css ({"border-color": ""});
$(input).css ({"background-color": ""});
return true;
}
}
/*
Clear and validate all default input fields
*/
function validate() {
clearText ($('#<?php echo $type; ?>').find (
'[name="<?php echo $modelName; ?>[backgroundInfo]"]'));
var valid = true;
for (var i in defaultFields) {
if (defaultFields[i] === null) continue;
if (!validateField(defaultFields[i])) {
valid = false;
}
}
return valid;
}
