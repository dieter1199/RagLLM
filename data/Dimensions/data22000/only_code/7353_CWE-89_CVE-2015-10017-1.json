def getClusters(s: String, ontologyNamespace : String): Seq[Group] = {
val table = s
case e : SqlSyntaxErrorException => println("This dataset has no clusters: " + s)
println(e.getMessage + System.lineSeparator() + sql.toString)
case e : SqlSyntaxErrorException => println(e.getMessage)
case e : SqlSyntaxErrorException => println(e.getMessage)
case e: SqlException => println(e.getMessage)
println(e.getMessage)
val sql = sql"""SELECT ONTOLOGY_NAMESPACE FROM PROLOD_MAIN.SCHEMATA WHERE SCHEMA_NAME = '#${s}'""".as[String]
case e: SqlException => println(e.getMessage + System.lineSeparator())
case e: SqlSyntaxErrorException   => println(e.getMessage + System.lineSeparator())
val sql = sql"""SELECT NAMESPACE FROM PROLOD_MAIN.SCHEMATA WHERE SCHEMA_NAME = '#${s}'""".as[String]
case e: SqlException => println(e.getMessage + System.lineSeparator())
val sql = sql"""SELECT COUNT(*) FROM #${dataset}.MAINTABLE as m, #${dataset}.predicatetable as p, #${dataset}.objecttable as o WHERE m.predicate_id = p.id  AND o.tuple_id = m.tuple_id  AND p.predicate = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type' AND o.object = '#${ontologyNamespace}#${cluster.name}'""".as[(Int)]