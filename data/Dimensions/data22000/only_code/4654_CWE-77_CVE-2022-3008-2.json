#define TINYGLTF_COMPONENT_TYPE_DOUBLE (5130) // OpenGL double type. Note that some of glTF 2.0 validator does not support double type even the schema seems allow any value of integer: https://github.com/KhronosGroup/glTF/blob/b9884a2fd45130b4d673dd6c8a706ee21ee5c5f7/specification/2.0/schema/accessor.schema.json#L22
//int wrapR = TINYGLTF_TEXTURE_WRAP_REPEAT;  // TinyGLTF extension. currently not used.
/// Set warning message to `warn` for example it fails to load asserts.
/// Returns false and set error string to `err` if there's an error.
#include <wordexp.h>
this->wrapS == other.wrapS &&
this->wrapT == other.wrapT;
//this->wrapR == other.wrapR
if (idx != std::string::npos)
return filepath.substr(idx + 1);
if (!ParseIntegerProperty(&indices_buffer_view, err, indices_obj, "bufferView",
true, "SparseAccessor")) {
true, "SparseAccessor")) {
true, "SparseAccessor")) {
//int wrapR = TINYGLTF_TEXTURE_WRAP_REPEAT;
//ParseIntegerProperty(&wrapR, err, o, "wrapR", false);  // tinygltf extension
//sampler->wrapR = wrapR;
//SerializeNumberProperty("wrapR", sampler.wrapR, o);
const uint32_t content_padding_size = content_size % 4 == 0 ? 0 : 4 - content_size % 4;
const uint32_t bin_padding_size = binBuffer_size % 4 == 0 ? 0 : 4 - binBuffer_size % 4;