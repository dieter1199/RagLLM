endpoints.stateless_listener.reset(new PDPSecurityInitiatorListener(this));
endpoints.stateless_listener.get(), c_EntityId_SPDPReader, true, false))
// Enable unknown clients to reach this reader
reader->enableMessagesFromUnkownWriters(true);
endpoints.stateless_listener.reset();
mp_listener = new PDPListener(this);
if (mp_RTPSParticipant->createReader(&reader, ratt, endpoints.reader.history_.get(), mp_listener,
delete mp_listener;
mp_listener = nullptr;
eprosima::shared_lock<eprosima::shared_mutex> disc_lock(mp_builtin->getDiscoveryMutex());
// Verify if this participant is a server
for (auto& svr : mp_builtin->m_DiscoveryServers)
if (data_matches_with_prefix(svr.guidPrefix, *pdata))
std::unique_lock<std::recursive_mutex> lock(*getMutex());
svr.proxy = pdata;
}
if (mp_RTPSParticipant->security_manager().discovered_participant(*pdata))
{
perform_builtin_endpoints_matching(*pdata);
