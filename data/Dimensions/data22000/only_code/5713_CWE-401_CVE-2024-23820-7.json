require := require.New(t)
require.NoError(err)
require.NoError(err)
reverseExpandQuery.Execute(timeoutCtx, test.request, resultChan, resolutionMetadata)
reverseExpandErrCh := make(chan error)
go func() {
for result := range resultChan {
if result.Err != nil {
reverseExpandErrCh <- result.Err
results = append(results, result)
reverseExpandErrCh <- nil
}()
select {
case <-timeoutCtx.Done():
require.FailNow("timed out waiting for response")
case err := <-reverseExpandErrCh:
require.ErrorIs(err, test.expectedError)
}
if test.expectedError == nil {
require.ElementsMatch(test.expectedResult, results)
require.Equal(test.expectedDSQueryCount, *resolutionMetadata.QueryCount)
