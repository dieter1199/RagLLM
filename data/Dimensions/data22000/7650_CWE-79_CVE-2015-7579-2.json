{
    "cve_id": "CVE-2015-7579",
    "cve_description": "Cross-site scripting (XSS) vulnerability in the rails-html-sanitizer gem 1.0.2 for Ruby on Rails 4.2.x and 5.x allows remote attackers to inject arbitrary web script or HTML via an HTML entity that is mishandled by the Rails::Html::FullSanitizer class.",
    "cve_publish_date": "2016-02-16",
    "cwe_id": "CWE-79",
    "cwe_name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "cwe_description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
    "commit_message": "Do not unescape already escaped HTML entities\n\nThe full sanitizer was using Loofah's #text method that automatically\nescapes HTML entities. That behavior caused some problems where strings\nthat were not escaped in the older sanitizer started to be escaped. To\nfix these problems we used the #text's `encode_special_chars` option as\n`false` that not just skipped the HTML entities escaping but unescaped\nalready escaped entities.\n\nThis introduced a security bug because an attacker can pass escaped HTML\ntags that will not be sanitized and will be returned as unescaped HTML\ntags.\n\nTo fix it properly we introduced a new scrubber that will remove all\ntags and keep just the text nodes of these tags without changing how\nto escape the string.\n\nCVE-2015-7579",
    "type_of_change": "Modification",
    "filename_of_changes": "sanitizer_test.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "5",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 107:   def test_full_sanitize_allows_turning_off_encoding_special_chars",
        "// Line_Reference 109:     assert_equal '&', full_sanitize('&', encode_special_chars: false)"
    ]
}
