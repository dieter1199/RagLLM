{
    "cve_id": "CVE-2015-10094",
    "cve_description": "A vulnerability was found in Fastly Plugin up to 0.97 on WordPress. It has been rated as problematic. Affected by this issue is the function post of the file lib/api.php. The manipulation of the argument url leads to cross site scripting. The attack may be launched remotely. Upgrading to version 0.98 is able to address this issue. The patch is identified as d7fe42538f4d4af500e3af9678b6b06fba731656. It is recommended to upgrade the affected component. VDB-222326 is the identifier assigned to this vulnerability.",
    "cve_publish_date": "2023-03-06",
    "cwe_id": "CWE-79",
    "cwe_name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
    "cwe_description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
    "commit_message": "Version 0.98 - CSRF/XSS Security Fixes\n\nBumps version to 0.98. Addresses potential XSS/CSRF security issues in plugin.\n\nChanges admin.php to use the esc_attr() and esc_url() on the Fastly\noption values prior to outputting them in the context of the HTML to be\nrendered in the admin panel. While it appears that the values of these\noptions could not be set from an unprivileged context we should be\nescaping them prior to rendering irregardless.\n\nPreviously the FastlyAdmin::ajaxSetPage() and FastlyAdmin::ajaxSignUp()\nhandlers in lib/admin.php were not enforcing the presence of a CSRF\ntoken. This commit also modifies these handlers to use the\nwp_verify_nonce() function. The static/fastly.js AJAX posts were\nmodified to supply a wp_create_nonce() token injected into the scripts\ncontext by wp_localize_script(). The wp_register_script() and associated\ncalls were moved to a wp_enqueue_scripts event handler in order to\nensure that wp_create_nonce() is defined/loaded at the time we try to\nuse it.\n\nChanges all calls to update_option() with dynamic content to use\nesc_sql() on the data before passing it to update_option() to avoid\npotential for SQLi.\n\nThanks to Zack Tollman for the original vulnerability reports.\n\n\n\n\ngit-svn-id: https://plugins.svn.wordpress.org/fastly/trunk@1081712 b8457f37-d9ea-0310-8a92-e5e31aec5664",
    "type_of_change": "Modification",
    "filename_of_changes": "api.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "93",
    "number_of_lines_deleted_vulnerable_to_cve": "97",
    "vulnerable_lines": [
        "// Line_Reference 1: <?php",
        "// Line_Reference 2: ",
        "// Line_Reference 3: /**",
        "// Line_Reference 4:  * Fastly API for PHP.",
        "// Line_Reference 5:  * @package Fastly",
        "// Line_Reference 6:  * @author Ryan Sandor Richards",
        "// Line_Reference 7:  * @copyright 2011 Fastly.com, All Rights Reserved",
        "// Line_Reference 8:  */",
        "// Line_Reference 9: class FastlyAPI {",
        "// Line_Reference 10:   /**",
        "// Line_Reference 11:    * Default constructor.",
        "// Line_Reference 12:    * @param $api_key Fastly API key.",
        "// Line_Reference 13:    * @param $host Hostname of the API server.",
        "// Line_Reference 14:    * @param $port Port for the API server.",
        "// Line_Reference 15:    */",
        "// Line_Reference 16:   function FastlyAPI($api_key='', $host='https://app.fastly.com', $port=null) {",
        "// Line_Reference 17:     $this->api_key   = $api_key;",
        "// Line_Reference 18:     $this->host      = $host;",
        "// Line_Reference 19:     $this->port      = $port;",
        "// Line_Reference 20:     $this->host_name = preg_replace('/^(ssl|https?):\\/\\//', '', $host);",
        "// Line_Reference 21:   }",
        "// Line_Reference 22: ",
        "// Line_Reference 23:   /**",
        "// Line_Reference 24:    * Sends a purge request to the Fastly API.",
        "// Line_Reference 25:    * @param $uri URI to purge.",
        "// Line_Reference 26:    */",
        "// Line_Reference 27:   function purge($uris) {",
        "// Line_Reference 28:     // TODO How can we handle this more elegantly?",
        "// Line_Reference 29:     if (!$this->api_key)",
        "// Line_Reference 30:       return;",
        "// Line_Reference 31: ",
        "// Line_Reference 32:     if (!is_array($uris)) {",
        "// Line_Reference 33:       $uris = array($uris);",
        "// Line_Reference 34:     }",
        "// Line_Reference 35:     // TODO - change this to a curl_multi_exec at some point",
        "// Line_Reference 36: \t$logPurges = (bool)get_option('fastly_log_purges');",
        "// Line_Reference 37:     foreach ($uris as $uri) {",
        "// Line_Reference 38:       #$uri = preg_replace(\"/^https?:\\/\\//\", '', $uri);",
        "// Line_Reference 39: \t  if( $logPurges ) {",
        "// Line_Reference 40:         error_log(\"Purging \" . $uri);",
        "// Line_Reference 41:       }",
        "// Line_Reference 42:       $this->post($uri);",
        "// Line_Reference 43:     }",
        "// Line_Reference 44:   }",
        "// Line_Reference 45: ",
        "// Line_Reference 46:   /**",
        "// Line_Reference 47:    * Sends a purge all request to the Fastly API.",
        "// Line_Reference 48:    */",
        "// Line_Reference 49:   function purgeAll($service_id) {",
        "// Line_Reference 50:     $url = $this->host;",
        "// Line_Reference 51:     if (!is_null($this->port) && is_numeric($this->port)) {",
        "// Line_Reference 52:       $url .= \":\" . $this->port;",
        "// Line_Reference 53:     }",
        "// Line_Reference 54:     $url .= '/service/' . $service_id . '/purge_all';",
        "// Line_Reference 55: ",
        "// Line_Reference 56:     return $this->post($url, true);",
        "// Line_Reference 57:   }",
        "// Line_Reference 58: ",
        "// Line_Reference 59:   /**",
        "// Line_Reference 60:    * Sends a post request to the Fastly API.",
        "// Line_Reference 61:    * @param $path Path to call on the remote host.",
        "// Line_Reference 62:    * @param $data Data for the body for the post request.",
        "// Line_Reference 63:    * @return The response from the server or -1 if an error occurred.",
        "// Line_Reference 64:    */",
        "// Line_Reference 65:   function post($url, $do_post = true) {",
        "// Line_Reference 66: ",
        "// Line_Reference 67:     $headers = array();",
        "// Line_Reference 68:     if ($this->api_key) {",
        "// Line_Reference 69:       $headers[] = \"Fastly-Key: \" . $this->api_key;",
        "// Line_Reference 70:     }",
        "// Line_Reference 71: ",
        "// Line_Reference 72:     $ch  = curl_init();",
        "// Line_Reference 73:     # Temporary workaround to fix purging. Use POST instead of PURGE method.",
        "// Line_Reference 74:     # Strip off protocol",
        "// Line_Reference 75:     $url = get_option('fastly_api_hostname') . \"/purge/\" . preg_replace(\"/^http(s?):\\/\\//\",'', $url);",
        "// Line_Reference 76: ",
        "// Line_Reference 77: \tif( (bool)get_option('fastly_log_purges') ) {",
        "// Line_Reference 78:       error_log(\"Purging using POST for \" . $url);",
        "// Line_Reference 79:     }",
        "// Line_Reference 80: ",
        "// Line_Reference 81:     curl_setopt($ch, CURLOPT_URL, $url );",
        "// Line_Reference 82:     if ($do_post) {",
        "// Line_Reference 83:       curl_setopt($ch, CURLOPT_POST, 1);",
        "// Line_Reference 84:     } else {",
        "// Line_Reference 85:       curl_setopt($ch, CURLOPT_CUSTOMREQUEST, \"PURGE\");",
        "// Line_Reference 86:     }",
        "// Line_Reference 87:     curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);",
        "// Line_Reference 88:     curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);",
        "// Line_Reference 89:     $response = curl_exec($ch);",
        "// Line_Reference 90:     curl_close($ch);",
        "// Line_Reference 91:     return !!$response;",
        "// Line_Reference 92: ",
        "// Line_Reference 93:   }",
        "// Line_Reference 94: }",
        "// Line_Reference 95: ",
        "// Line_Reference 96: // \"WHITE LIGHT, doo-doo doo-doo doo, WHITE LIGHT\" -- Gorillaz",
        "// Line_Reference 97: ?>"
    ]
}
