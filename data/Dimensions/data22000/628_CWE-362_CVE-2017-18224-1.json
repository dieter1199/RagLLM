{
    "cve_id": "CVE-2017-18224",
    "cve_description": "In the Linux kernel before 4.15, fs/ocfs2/aops.c omits use of a semaphore and consequently has a race condition for access to the extent tree during read operations in DIRECT mode, which allows local users to cause a denial of service (BUG) by modifying a certain e_cpos field.",
    "cve_publish_date": "2018-03-12",
    "cwe_id": "CWE-362",
    "cwe_name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
    "cwe_description": "The product contains a code sequence that can run concurrently with other code, and the code sequence requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence that is operating concurrently.",
    "commit_message": "ocfs2: ip_alloc_sem should be taken in ocfs2_get_block()\n\nip_alloc_sem should be taken in ocfs2_get_block() when reading file in\nDIRECT mode to prevent concurrent access to extent tree with\nocfs2_dio_end_io_write(), which may cause BUGON in the following\nsituation:\n\nread file 'A'                                  end_io of writing file 'A'\nvfs_read\n __vfs_read\n  ocfs2_file_read_iter\n   generic_file_read_iter\n    ocfs2_direct_IO\n     __blockdev_direct_IO\n      do_blockdev_direct_IO\n       do_direct_IO\n        get_more_blocks\n         ocfs2_get_block\n          ocfs2_extent_map_get_blocks\n           ocfs2_get_clusters\n            ocfs2_get_clusters_nocache()\n             ocfs2_search_extent_list\n              return the index of record which\n              contains the v_cluster, that is\n              v_cluster > rec[i]->e_cpos.\n                                                ocfs2_dio_end_io\n                                                 ocfs2_dio_end_io_write\n                                                  down_write(&oi->ip_alloc_sem);\n                                                  ocfs2_mark_extent_written\n                                                   ocfs2_change_extent_flag\n                                                    ocfs2_split_extent\n                                                     ...\n                                                 --> modify the rec[i]->e_cpos, resulting\n                                                     in v_cluster < rec[i]->e_cpos.\n             BUG_ON(v_cluster < le32_to_cpu(rec->e_cpos))\n\n[alex.chen@huawei.com: v3]\n  Link: http://lkml.kernel.org/r/59EF3614.6050008@huawei.com\nLink: http://lkml.kernel.org/r/59EF3614.6050008@huawei.com\nFixes: c15471f79506 (\"ocfs2: fix sparse file & data ordering issue in direct io\")\nSigned-off-by: Alex Chen <alex.chen@huawei.com>\nReviewed-by: Jun Piao <piaojun@huawei.com>\nReviewed-by: Joseph Qi <jiangqi903@gmail.com>\nReviewed-by: Gang He <ghe@suse.com>\nAcked-by: Changwei Ge <ge.changwei@h3c.com>\nCc: Mark Fasheh <mfasheh@versity.com>\nCc: Joel Becker <jlbec@evilplan.org>\nCc: Junxiao Bi <junxiao.bi@oracle.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "aops.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "18",
    "number_of_lines_deleted_vulnerable_to_cve": "8",
    "vulnerable_lines": [
        "// Line_Reference 2131: static int ocfs2_dio_get_block(struct inode *inode, sector_t iblock,",
        "// Line_Reference 2157: \t\tdown_read(&oi->ip_alloc_sem);",
        "// Line_Reference 2158: \t\t/* This is the fast path for re-write. */",
        "// Line_Reference 2159: \t\tret = ocfs2_get_block(inode, iblock, bh_result, create);",
        "// Line_Reference 2160: ",
        "// Line_Reference 2161: \t\tup_read(&oi->ip_alloc_sem);",
        "// Line_Reference 2427: \t\tget_block = ocfs2_get_block;",
        "// Line_Reference 2429: \t\tget_block = ocfs2_dio_get_block;"
    ]
}
