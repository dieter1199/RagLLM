{
    "cve_id": "CVE-2016-8688",
    "cve_description": "The mtree bidder in libarchive 3.2.1 does not keep track of line sizes when extending the read-ahead, which allows remote attackers to cause a denial of service (crash) via a crafted file, which triggers an invalid read in the (1) detect_form or (2) bid_entry function in libarchive/archive_read_support_format_mtree.c.",
    "cve_publish_date": "2017-02-15",
    "cwe_id": "CWE-125",
    "cwe_name": "Out-of-bounds Read",
    "cwe_description": "The product reads data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "Issue 747 (and others?):  Avoid OOB read when parsing multiple long lines\n\nThe mtree bidder needs to look several lines ahead\nin the input.  It does this by extending the read-ahead\nand parsing subsequent lines from the same growing buffer.\nA bookkeeping error when extending the read-ahead would\nsometimes lead it to significantly over-count the\nsize of the line being read.",
    "type_of_change": "Modification",
    "filename_of_changes": "archive_read_support_format_mtree.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "10",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 342: \t\tlen = get_line_size(*b, *avail, nl);"
    ]
}
