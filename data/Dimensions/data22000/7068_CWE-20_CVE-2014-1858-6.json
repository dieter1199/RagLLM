{
    "cve_id": "CVE-2014-1858",
    "cve_description": "__init__.py in f2py in NumPy before 1.8.1 allows local users to write to arbitrary files via a symlink attack on a temporary file.",
    "cve_publish_date": "2018-01-08",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "ENH: remove insecure mktemp use\n\nmktemp only returns a filename, a malicous user could replace it before\nit gets used.",
    "type_of_change": "Modification",
    "filename_of_changes": "__init__.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "13",
    "number_of_lines_deleted_vulnerable_to_cve": "13",
    "vulnerable_lines": [
        "// Line_Reference 31:         fname = os.path.join(tempfile.mktemp()+'.f')",
        "// Line_Reference 33:         fname = source_fn",
        "// Line_Reference 34: ",
        "// Line_Reference 35:     f = open(fname, 'w')",
        "// Line_Reference 36:     f.write(source)",
        "// Line_Reference 37:     f.close()",
        "// Line_Reference 38: ",
        "// Line_Reference 39:     args = ' -c -m %s %s %s'%(modulename, fname, extra_args)",
        "// Line_Reference 40:     c = '%s -c \"import numpy.f2py as f2py2e;f2py2e.main()\" %s' %(sys.executable, args)",
        "// Line_Reference 41:     s, o = exec_command(c)",
        "// Line_Reference 42:     if source_fn is None:",
        "// Line_Reference 43:         try: os.remove(fname)",
        "// Line_Reference 44:         except OSError: pass"
    ]
}
