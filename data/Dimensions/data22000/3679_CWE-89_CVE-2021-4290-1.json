{
    "cve_id": "CVE-2021-4290",
    "cve_description": "A vulnerability was found in DHBW Fallstudie. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file app/config/passport.js of the component Login. The manipulation of the argument id/email leads to sql injection. The name of the patch is 5c13c6a972ef4c07c5f35b417916e0598af9e123. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-216907.",
    "cve_publish_date": "2022-12-27",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "Update passport.js\n\nFIXES: SQLInjection Vulnerability in Login",
    "type_of_change": "Modification",
    "filename_of_changes": "passport.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "3",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 28:         connection.query(\"select * from users where id = \" + id, function (err, rows) {",
        "// Line_Reference 49:             connection.query(\"select * from users where email = '\" + email + \"'\", function (err, rows) {",
        "// Line_Reference 87:             connection.query(\"SELECT * FROM `users` WHERE `email` = '\" + email + \"'\", function (err, rows) {"
    ]
}
