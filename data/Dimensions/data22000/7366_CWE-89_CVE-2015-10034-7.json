{
    "cve_id": "CVE-2015-10034",
    "cve_description": "A vulnerability has been found in j-nowak workout-organizer and classified as critical. This vulnerability affects unknown code. The manipulation leads to sql injection. The patch is identified as 13cd6c3d1210640bfdb39872b2bb3597aa991279. It is recommended to apply a patch to fix this issue. VDB-217714 is the identifier assigned to this vulnerability.",
    "cve_publish_date": "2023-01-09",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "Fixed building queries - preventing SQL-injection",
    "type_of_change": "Modification",
    "filename_of_changes": "WorkoutDao.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "48",
    "number_of_lines_deleted_vulnerable_to_cve": "27",
    "vulnerable_lines": [
        "// Line_Reference 7: import java.sql.Statement;",
        "// Line_Reference 28: \t\treturn getWorkouts(\"SELECT workouts.*, gyms.gym_name \"",
        "// Line_Reference 29: \t\t\t\t+ \"FROM workouts \"",
        "// Line_Reference 30: \t\t\t\t+ \"LEFT JOIN gyms using (gym_id) \"",
        "// Line_Reference 31: \t\t\t\t+ \"ORDER BY workouts.finished_at DESC\");",
        "// Line_Reference 35: \t\treturn getWorkouts(\"SELECT workouts.*, gyms.gym_name \"",
        "// Line_Reference 36: \t\t\t\t+ \"FROM workouts \"",
        "// Line_Reference 37: \t\t\t\t+ \"LEFT JOIN gyms using (gym_id) \"",
        "// Line_Reference 38: \t\t\t\t+ \"WHERE user_id = \" + userId + \" \"",
        "// Line_Reference 39: \t\t\t\t+ \"ORDER BY workouts.finished_at DESC\");",
        "// Line_Reference 119: \tprivate List<Workout> getWorkouts(String sql) {",
        "// Line_Reference 121: ",
        "// Line_Reference 122: \t\tConnection connection = null;",
        "// Line_Reference 124: \t\t\tconnection = DB.getConnection();",
        "// Line_Reference 125: \t\t\tStatement statement = connection.createStatement();",
        "// Line_Reference 126: \t\t\tResultSet resultSet = statement.executeQuery(sql);",
        "// Line_Reference 127: ",
        "// Line_Reference 141: ",
        "// Line_Reference 143: \t\t\tstatement.close();",
        "// Line_Reference 146: \t\t} finally {",
        "// Line_Reference 147: \t\t\tif (connection != null) {",
        "// Line_Reference 148: \t\t\t\ttry {",
        "// Line_Reference 149: \t\t\t\t\tconnection.close();",
        "// Line_Reference 150: \t\t\t\t} catch (SQLException e) {",
        "// Line_Reference 151: \t\t\t\t\te.printStackTrace();",
        "// Line_Reference 152: \t\t\t\t}",
        "// Line_Reference 153: \t\t\t}"
    ]
}
