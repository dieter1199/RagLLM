{
    "cve_id": "CVE-2023-5572",
    "cve_description": "Server-Side Request Forgery (SSRF) in GitHub repository vriteio/vrite prior to 0.3.0.",
    "cve_publish_date": "2023-10-13",
    "cwe_id": "CWE-918",
    "cwe_name": "Server-Side Request Forgery (SSRF)",
    "cwe_description": "The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
    "commit_message": "Vrite v0.3 (#45)\n\n- Replace wrapper with element;\r\n- Add XML-like syntax for elements;\r\n- Redesign editor block menus;\r\n- Add MDX extension;\r\n- Allow CORS API access;\r\n- Restructure @vrite/backend;",
    "type_of_change": "Modification",
    "filename_of_changes": "content-groups.ts",
    "code_language": "TypeScript",
    "number_of_lines_added_for_mitigation": "22",
    "number_of_lines_deleted_vulnerable_to_cve": "31",
    "vulnerable_lines": [
        "// Line_Reference 3: import { procedure, router } from \"#lib/trpc\";",
        "// Line_Reference 4: import { isAuthenticated } from \"#lib/middleware\";",
        "// Line_Reference 5: import { UnderscoreID, zodId } from \"#lib/mongo\";",
        "// Line_Reference 6: import * as errors from \"#lib/errors\";",
        "// Line_Reference 7: import { createEventPublisher, createEventSubscription } from \"#lib/pub-sub\";",
        "// Line_Reference 8: import { runWebhooks } from \"#lib/webhooks\";",
        "// Line_Reference 20: import { runGitSyncHook } from \"#lib\";",
        "// Line_Reference 21: ",
        "// Line_Reference 22: type ContentGroupEvent =",
        "// Line_Reference 23:   | {",
        "// Line_Reference 24:       action: \"create\";",
        "// Line_Reference 25:       data: ContentGroup;",
        "// Line_Reference 26:     }",
        "// Line_Reference 27:   | {",
        "// Line_Reference 28:       action: \"update\";",
        "// Line_Reference 29:       data: Partial<ContentGroup> & { id: string };",
        "// Line_Reference 30:     }",
        "// Line_Reference 31:   | { action: \"delete\"; data: { id: string } }",
        "// Line_Reference 32:   | { action: \"move\"; data: ContentGroup }",
        "// Line_Reference 33:   | { action: \"reorder\"; data: { id: string; index: number } };",
        "// Line_Reference 34: ",
        "// Line_Reference 35: const publishEvent = createEventPublisher<ContentGroupEvent>(",
        "// Line_Reference 36:   (workspaceId) => `contentGroups:${workspaceId}`",
        "// Line_Reference 37: );",
        "// Line_Reference 182:       publishEvent(ctx, `${ctx.auth.workspaceId}`, { action: \"update\", data: { id, ...update } });",
        "// Line_Reference 234:       publishEvent(ctx, `${ctx.auth.workspaceId}`, {",
        "// Line_Reference 331:       publishEvent(ctx, `${ctx.auth.workspaceId}`, {",
        "// Line_Reference 507:       publishEvent(ctx, `${ctx.auth.workspaceId}`, {",
        "// Line_Reference 586:       publishEvent(ctx, `${ctx.auth.workspaceId}`, {",
        "// Line_Reference 592:     return createEventSubscription<ContentGroupEvent>(ctx, `contentGroups:${ctx.auth.workspaceId}`);",
        "// Line_Reference 596: export { contentGroupsRouter, publishEvent as publishContentGroupEvent };"
    ]
}
