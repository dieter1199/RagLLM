{
    "cve_id": "CVE-2015-2310",
    "cve_description": "Integer overflow in layout.c++ in Sandstorm Cap'n Proto before 0.4.1.1 and 0.5.x before 0.5.1.1 allows remote peers to cause a denial of service or possibly obtain sensitive information from memory via a crafted message, related to pointer validation.",
    "cve_publish_date": "2017-08-09",
    "cwe_id": "CWE-190",
    "cwe_name": "Integer Overflow or Wraparound",
    "cwe_description": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
    "commit_message": "SECURITY: Integer overflow in pointer validation.\n\nDetails: https://github.com/sandstorm-io/capnproto/tree/master/security-advisories/2014-03-02-0-c++-integer-overflow.md",
    "type_of_change": "Modification",
    "filename_of_changes": "layout.c++",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "4",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 688:             KJ_REQUIRE(elementTag->structRef.wordSize() / ELEMENTS * count <= wordCount,",
        "// Line_Reference 1666:           KJ_REQUIRE(wordsPerElement * elementCount <= wordCount,",
        "// Line_Reference 1922:       KJ_REQUIRE(size * wordsPerElement <= wordCount,"
    ]
}
