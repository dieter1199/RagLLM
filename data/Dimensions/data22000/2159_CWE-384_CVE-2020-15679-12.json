{
    "cve_id": "CVE-2020-15679",
    "cve_description": "An OAuth session fixation vulnerability existed in the VPN login flow, where an attacker could craft a custom login URL, convince a VPN user to login via that URL, and obtain authenticated access as that user. This issue is limited to cases where attacker and victim are sharing the same source IP and could allow the ability to view session states and disconnect VPN sessions. This vulnerability affects Mozilla VPN iOS 1.0.7 < (929), Mozilla VPN Windows < 1.2.2, and Mozilla VPN Android 1.1.0 < (1360).",
    "cve_publish_date": "2022-12-22",
    "cwe_id": "CWE-384",
    "cwe_name": "Session Fixation",
    "cwe_description": "Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.",
    "commit_message": "New non-polling authentication flow.\n\n- Fixes intermittent hanging during auth\n- Implements PKCE",
    "type_of_change": "Modification",
    "filename_of_changes": "Service.cs",
    "code_language": "C#",
    "number_of_lines_added_for_mitigation": "0",
    "number_of_lines_deleted_vulnerable_to_cve": "21",
    "vulnerable_lines": [
        "// Line_Reference 121:         /// <summary>",
        "// Line_Reference 122:         /// Initiate login.",
        "// Line_Reference 123:         /// </summary>",
        "// Line_Reference 124:         /// <param name=\"req\">LoginRequest WCF command object.</param>",
        "// Line_Reference 125:         /// <returns>WCF response.</returns>",
        "// Line_Reference 126:         public Response Login(LoginRequest req)",
        "// Line_Reference 127:         {",
        "// Line_Reference 128:             try",
        "// Line_Reference 129:             {",
        "// Line_Reference 130:                 var loginInstance = new FxA.Login();",
        "// Line_Reference 131:                 var pollInterval = req.PollInterval % 31; // Max 30 seconds, no more",
        "// Line_Reference 132:                 Manager.Account.LoginState = FxA.LoginState.LoggingIn;",
        "// Line_Reference 133:                 loginInstance.StartQueryLoginThread(req.VerificationUrl, req.PollInterval, req.ExpiresOn, CancellationToken.None);",
        "// Line_Reference 134:                 return new Response(200, \"Success\");",
        "// Line_Reference 135:             }",
        "// Line_Reference 136:             catch (Exception ex)",
        "// Line_Reference 137:             {",
        "// Line_Reference 138:                 return new Response(500, ex.Message);",
        "// Line_Reference 139:             }",
        "// Line_Reference 140:         }",
        "// Line_Reference 141: "
    ]
}
