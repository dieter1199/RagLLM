{
    "cve_id": "CVE-2017-18203",
    "cve_description": "The dm_get_from_kobject function in drivers/md/dm.c in the Linux kernel before 4.14.3 allow local users to cause a denial of service (BUG) by leveraging a race condition with __dm_destroy during creation and removal of DM devices.",
    "cve_publish_date": "2018-02-27",
    "cwe_id": "CWE-362",
    "cwe_name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
    "cwe_description": "The product contains a code sequence that can run concurrently with other code, and the code sequence requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence that is operating concurrently.",
    "commit_message": "dm: fix race between dm_get_from_kobject() and __dm_destroy()\n\nThe following BUG_ON was hit when testing repeat creation and removal of\nDM devices:\n\n    kernel BUG at drivers/md/dm.c:2919!\n    CPU: 7 PID: 750 Comm: systemd-udevd Not tainted 4.1.44\n    Call Trace:\n     [<ffffffff81649e8b>] dm_get_from_kobject+0x34/0x3a\n     [<ffffffff81650ef1>] dm_attr_show+0x2b/0x5e\n     [<ffffffff817b46d1>] ? mutex_lock+0x26/0x44\n     [<ffffffff811df7f5>] sysfs_kf_seq_show+0x83/0xcf\n     [<ffffffff811de257>] kernfs_seq_show+0x23/0x25\n     [<ffffffff81199118>] seq_read+0x16f/0x325\n     [<ffffffff811de994>] kernfs_fop_read+0x3a/0x13f\n     [<ffffffff8117b625>] __vfs_read+0x26/0x9d\n     [<ffffffff8130eb59>] ? security_file_permission+0x3c/0x44\n     [<ffffffff8117bdb8>] ? rw_verify_area+0x83/0xd9\n     [<ffffffff8117be9d>] vfs_read+0x8f/0xcf\n     [<ffffffff81193e34>] ? __fdget_pos+0x12/0x41\n     [<ffffffff8117c686>] SyS_read+0x4b/0x76\n     [<ffffffff817b606e>] system_call_fastpath+0x12/0x71\n\nThe bug can be easily triggered, if an extra delay (e.g. 10ms) is added\nbetween the test of DMF_FREEING & DMF_DELETING and dm_get() in\ndm_get_from_kobject().\n\nTo fix it, we need to ensure the test of DMF_FREEING & DMF_DELETING and\ndm_get() are done in an atomic way, so _minor_lock is used.\n\nThe other callers of dm_get() have also been checked to be OK: some\ncallers invoke dm_get() under _minor_lock, some callers invoke it under\n_hash_lock, and dm_start_request() invoke it after increasing\nmd->open_count.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Hou Tao <houtao1@huawei.com>\nSigned-off-by: Mike Snitzer <snitzer@redhat.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "dm.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "8",
    "number_of_lines_deleted_vulnerable_to_cve": "4",
    "vulnerable_lines": [
        "// Line_Reference 2714: \tif (test_bit(DMF_FREEING, &md->flags) ||",
        "// Line_Reference 2715: \t    dm_deleting_md(md))",
        "// Line_Reference 2716: \t\treturn NULL;",
        "// Line_Reference 2717: "
    ]
}
