{
    "cve_id": "CVE-2021-22204",
    "cve_description": "Improper neutralization of user data in the DjVu file format in ExifTool versions 7.44 and up allows arbitrary code execution when parsing the malicious image",
    "cve_publish_date": "2021-04-23",
    "cwe_id": "CWE-94",
    "cwe_name": "Improper Control of Generation of Code ('Code Injection')",
    "cwe_description": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
    "commit_message": "Update to 12.24",
    "type_of_change": "Modification",
    "filename_of_changes": "Jpeg2000.pm",
    "code_language": "Perl",
    "number_of_lines_added_for_mitigation": "69",
    "number_of_lines_deleted_vulnerable_to_cve": "21",
    "vulnerable_lines": [
        "// Line_Reference 610:     type => {",
        "// Line_Reference 611:         Name => 'JUMBFType',",
        "// Line_Reference 624:     label      => { Name => 'JUMBFLabel' },",
        "// Line_Reference 625:     id         => { Name => 'JUMBFID', Description => 'JUMBF ID' },",
        "// Line_Reference 626:     signature  => { Name => 'JUMBFSignature', PrintConv => 'unpack \"H*\", $val' },",
        "// Line_Reference 669:     $et->HandleTag($tagTablePtr, 'type', substr($$dataPt, $pos, 16));",
        "// Line_Reference 677:         $et->HandleTag($tagTablePtr, 'label', $name);",
        "// Line_Reference 689:         $et->HandleTag($tagTablePtr, 'id', Get32u($dataPt, $pos));",
        "// Line_Reference 694:         $et->HandleTag($tagTablePtr, 'signature', substr($$dataPt, $pos, 32));",
        "// Line_Reference 1097:             ($hdr eq \"\\0\\0\\0\\x0cJXL \\x0d\\x0a\\x87\\x0a\" and $$et{IsJXL} = 1)) # (JPEG XL)",
        "// Line_Reference 1099:         if ($hdr =~ /^\\xff\\x0a/) {",
        "// Line_Reference 1100:             $outfile and $et->Error('Writing of JPEG XL codestream files is not yet supported'), return 0;",
        "// Line_Reference 1101:             # JPEG XL codestream",
        "// Line_Reference 1102:             $et->SetFileType('JXC',undef,'JXL'); # (PH invention)",
        "// Line_Reference 1103:             $et->Warn('JPEG XL codestream support is currently experimental',1);",
        "// Line_Reference 1104:             ProcessJXLCodestream($et, \\$hdr);",
        "// Line_Reference 1105:             return 1;",
        "// Line_Reference 1106:         }",
        "// Line_Reference 1120:     $et->Warn('JPEG XL support is currently experimental',1) if $$et{IsJXL};",
        "// Line_Reference 1157: # Returns: 1 on success, 0 if this wasn't a valid JPEG XL file",
        "// Line_Reference 1161:     return ProcessJP2($et, $dirInfo);"
    ]
}
