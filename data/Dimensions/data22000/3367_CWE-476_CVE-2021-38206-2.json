{
    "cve_id": "CVE-2021-38206",
    "cve_description": "The mac80211 subsystem in the Linux kernel before 5.12.13, when a device supporting only 5 GHz is used, allows attackers to cause a denial of service (NULL pointer dereference in the radiotap parser) by injecting a frame with 802.11a rates.",
    "cve_publish_date": "2021-08-08",
    "cwe_id": "CWE-476",
    "cwe_name": "NULL Pointer Dereference",
    "cwe_description": "The product dereferences a pointer that it expects to be valid but is NULL.",
    "commit_message": "mac80211: Fix NULL ptr deref for injected rate info\n\nThe commit cb17ed29a7a5 (\"mac80211: parse radiotap header when selecting Tx\nqueue\") moved the code to validate the radiotap header from\nieee80211_monitor_start_xmit to ieee80211_parse_tx_radiotap. This made is\npossible to share more code with the new Tx queue selection code for\ninjected frames. But at the same time, it now required the call of\nieee80211_parse_tx_radiotap at the beginning of functions which wanted to\nhandle the radiotap header. And this broke the rate parser for radiotap\nheader parser.\n\nThe radiotap parser for rates is operating most of the time only on the\ndata in the actual radiotap header. But for the 802.11a/b/g rates, it must\nalso know the selected band from the chandef information. But this\ninformation is only written to the ieee80211_tx_info at the end of the\nieee80211_monitor_start_xmit - long after ieee80211_parse_tx_radiotap was\nalready called. The info->band information was therefore always 0\n(NL80211_BAND_2GHZ) when the parser code tried to access it.\n\nFor a 5GHz only device, injecting a frame with 802.11a rates would cause a\nNULL pointer dereference because local->hw.wiphy->bands[NL80211_BAND_2GHZ]\nwould most likely have been NULL when the radiotap parser searched for the\ncorrect rate index of the driver.\n\nCc: stable@vger.kernel.org\nReported-by: Ben Greear <greearb@candelatech.com>\nFixes: cb17ed29a7a5 (\"mac80211: parse radiotap header when selecting Tx queue\")\nSigned-off-by: Mathy Vanhoef <Mathy.Vanhoef@kuleuven.be>\n[sven@narfation.org: added commit message]\nSigned-off-by: Sven Eckelmann <sven@narfation.org>\nLink: https://lore.kernel.org/r/20210530133226.40587-1-sven@narfation.org\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "tx.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "36",
    "number_of_lines_deleted_vulnerable_to_cve": "16",
    "vulnerable_lines": [
        "// Line_Reference 2025: \tstruct ieee80211_supported_band *sband =",
        "// Line_Reference 2026: \t\tlocal->hw.wiphy->bands[info->band];",
        "// Line_Reference 2039: \t/* check for not even having the fixed radiotap header part */",
        "// Line_Reference 2040: \tif (unlikely(skb->len < sizeof(struct ieee80211_radiotap_header)))",
        "// Line_Reference 2041: \t\treturn false; /* too short to be possibly valid */",
        "// Line_Reference 2042: ",
        "// Line_Reference 2043: \t/* is it a header version we can trust to find length from? */",
        "// Line_Reference 2044: \tif (unlikely(rthdr->it_version))",
        "// Line_Reference 2045: \t\treturn false; /* only version 0 is supported */",
        "// Line_Reference 2046: ",
        "// Line_Reference 2047: \t/* does the skb contain enough to deliver on the alleged length? */",
        "// Line_Reference 2048: \tif (unlikely(skb->len < ieee80211_get_radiotap_len(skb->data)))",
        "// Line_Reference 2049: \t\treturn false; /* skb too short for claimed rt header extent */",
        "// Line_Reference 2202: \t\t} else {",
        "// Line_Reference 2239: \t/* Sanity-check and process the injection radiotap header */",
        "// Line_Reference 2240: \tif (!ieee80211_parse_tx_radiotap(skb, dev))"
    ]
}
