{
    "cve_id": "CVE-2017-12990",
    "cve_description": "The ISAKMP parser in tcpdump before 4.9.2 could enter an infinite loop due to bugs in print-isakmp.c, several functions.",
    "cve_publish_date": "2017-09-14",
    "cwe_id": "CWE-835",
    "cwe_name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
    "cwe_description": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.",
    "commit_message": "CVE-2017-12990/Fix printing of ISAKMPv1 Notification payload data.\n\nThe closest thing to a specification for the contents of the payload\ndata is draft-ietf-ipsec-notifymsg-04, and nothing in there says that it\nis ever a complete ISAKMP message, so don't dissect types we don't have\nspecific code for as a complete ISAKMP message.\n\nWhile we're at it, fix a comment, and clean up printing of V1 Nonce,\nV2 Authentication payloads, and v2 Notice payloads.\n\nThis fixes an infinite loop discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom√§ki.\n\nAdd a test using the capture file supplied by the reporter(s).",
    "type_of_change": "Modification",
    "filename_of_changes": "print-isakmp.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "60",
    "number_of_lines_deleted_vulnerable_to_cve": "52",
    "vulnerable_lines": [
        "// Line_Reference 431: /* 3.8 Notification Payload */",
        "// Line_Reference 1593: \tND_PRINT((ndo,\" n len=%d\", ntohs(e.len) - 4));",
        "// Line_Reference 1594: \tif (2 < ndo->ndo_vflag && 4 < ntohs(e.len)) {",
        "// Line_Reference 1595: \t\tND_PRINT((ndo,\" \"));",
        "// Line_Reference 1596: \t\tif (!rawprint(ndo, (const uint8_t *)(ext + 1), ntohs(e.len) - 4))",
        "// Line_Reference 1597: \t\t\tgoto trunc;",
        "// Line_Reference 1598: \t} else if (1 < ndo->ndo_vflag && 4 < ntohs(e.len)) {",
        "// Line_Reference 1599: \t\tND_PRINT((ndo,\" \"));",
        "// Line_Reference 1600: \t\tif (!ike_show_somedata(ndo, (const u_char *)(const uint8_t *)(ext + 1), ep))",
        "// Line_Reference 1601: \t\t\tgoto trunc;",
        "// Line_Reference 1612: \t      const u_char *ep, uint32_t phase, uint32_t doi0 _U_,",
        "// Line_Reference 1613: \t      uint32_t proto0 _U_, int depth)",
        "// Line_Reference 1715: \t\tND_PRINT((ndo,\" orig=(\"));",
        "// Line_Reference 1730: \t\t\tbreak;",
        "// Line_Reference 1731: \t\tcase ISAKMP_NTYPE_NO_PROPOSAL_CHOSEN:",
        "// Line_Reference 1732: \t\t\tif (ikev1_sub_print(ndo, ISAKMP_NPTYPE_SA,",
        "// Line_Reference 1733: \t\t\t\t\t    (const struct isakmp_gen *)cp, ep, phase, doi, proto,",
        "// Line_Reference 1734: \t\t\t\t\t    depth) == NULL)",
        "// Line_Reference 1735: \t\t\t\treturn NULL;",
        "// Line_Reference 1738: \t\t\t/* NULL is dummy */",
        "// Line_Reference 1739: \t\t\tisakmp_print(ndo, cp,",
        "// Line_Reference 1740: \t\t\t\t     item_len - sizeof(*p) - n.spi_size,",
        "// Line_Reference 1741: \t\t\t\t     NULL);",
        "// Line_Reference 1743: \t\tND_PRINT((ndo,\")\"));",
        "// Line_Reference 2267: \tND_PRINT((ndo,\" len=%d method=%s\", len-4,",
        "// Line_Reference 2269: ",
        "// Line_Reference 2270: \tif (1 < ndo->ndo_vflag && 4 < len) {",
        "// Line_Reference 2271: \t\tND_PRINT((ndo,\" authdata=(\"));",
        "// Line_Reference 2272: \t\tif (!rawprint(ndo, (const uint8_t *)authdata, len - sizeof(a)))",
        "// Line_Reference 2273: \t\t\tgoto trunc;",
        "// Line_Reference 2274: \t\tND_PRINT((ndo,\") \"));",
        "// Line_Reference 2275: \t} else if(ndo->ndo_vflag && 4 < len) {",
        "// Line_Reference 2276: \t\tif(!ike_show_somedata(ndo, authdata, ep)) goto trunc;",
        "// Line_Reference 2325: \tu_char showspi, showdata, showsomedata;",
        "// Line_Reference 2335: \tshowdata = 0;",
        "// Line_Reference 2449: \t\tshowdata= 0;",
        "// Line_Reference 2502: \tif(3 < ndo->ndo_vflag) {",
        "// Line_Reference 2503: \t\tshowdata = 1;",
        "// Line_Reference 2504: \t}",
        "// Line_Reference 2505: ",
        "// Line_Reference 2506: \tif ((showdata || (showsomedata && ep-cp < 30)) && cp < ep) {",
        "// Line_Reference 2507: \t\tND_PRINT((ndo,\" data=(\"));",
        "// Line_Reference 2508: \t\tif (!rawprint(ndo, (const uint8_t *)(cp), ep - cp))",
        "// Line_Reference 2509: \t\t\tgoto trunc;",
        "// Line_Reference 2510: ",
        "// Line_Reference 2511: \t\tND_PRINT((ndo,\")\"));",
        "// Line_Reference 2513: \t} else if(showsomedata && cp < ep) {",
        "// Line_Reference 2514: \t\tif(!ike_show_somedata(ndo, cp, ep)) goto trunc;",
        "// Line_Reference 3094: ",
        "// Line_Reference 3095: ",
        "// Line_Reference 3096: ",
        "// Line_Reference 3097: "
    ]
}
