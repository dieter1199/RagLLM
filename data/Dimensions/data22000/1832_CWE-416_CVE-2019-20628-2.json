{
    "cve_id": "CVE-2019-20628",
    "cve_description": "An issue was discovered in libgpac.a in GPAC before 0.8.0, as demonstrated by MP4Box. It contains a Use-After-Free vulnerability in gf_m2ts_process_pmt in media_tools/mpegts.c that can cause a denial of service via a crafted MP4 file.",
    "cve_publish_date": "2020-03-24",
    "cwe_id": "CWE-416",
    "cwe_name": "Use After Free",
    "cwe_description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
    "commit_message": "fixed potential crash on PMT IOD parse - cf #1268 #1269",
    "type_of_change": "Modification",
    "filename_of_changes": "mpegts.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "21",
    "number_of_lines_deleted_vulnerable_to_cve": "14",
    "vulnerable_lines": [
        "// Line_Reference 1155: \tif (info_length != 0) {",
        "// Line_Reference 1163: \t\t\t\tu32 size;",
        "// Line_Reference 1164: \t\t\t\tGF_BitStream *iod_bs;",
        "// Line_Reference 1165: \t\t\t\tiod_bs = gf_bs_new((char *)data+8, len-2, GF_BITSTREAM_READ);",
        "// Line_Reference 1166: \t\t\t\tif (pmt->program->pmt_iod) gf_odf_desc_del((GF_Descriptor *)pmt->program->pmt_iod);",
        "// Line_Reference 1167: \t\t\t\te = gf_odf_parse_descriptor(iod_bs , (GF_Descriptor **) &pmt->program->pmt_iod, &size);",
        "// Line_Reference 1168: \t\t\t\tgf_bs_del(iod_bs );",
        "// Line_Reference 1169: \t\t\t\tif (e==GF_OK) {",
        "// Line_Reference 1170: \t\t\t\t\t/*remember program number for service/program selection*/",
        "// Line_Reference 1171: \t\t\t\t\tif (pmt->program->pmt_iod) pmt->program->pmt_iod->ServiceID = pmt->program->number;",
        "// Line_Reference 1172: \t\t\t\t\t/*if empty IOD (freebox case), discard it and use dynamic declaration of object*/",
        "// Line_Reference 1173: \t\t\t\t\tif (!gf_list_count(pmt->program->pmt_iod->ESDescriptors)) {",
        "// Line_Reference 1174: \t\t\t\t\t\tgf_odf_desc_del((GF_Descriptor *)pmt->program->pmt_iod);",
        "// Line_Reference 1175: \t\t\t\t\t\tpmt->program->pmt_iod = NULL;"
    ]
}
