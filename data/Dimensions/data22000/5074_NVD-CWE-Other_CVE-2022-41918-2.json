{
    "cve_id": "CVE-2022-41918",
    "cve_description": "OpenSearch is a community-driven, open source fork of Elasticsearch and Kibana. There is an issue with the implementation of fine-grained access control rules (document-level security, field-level security and field masking) where they are not correctly applied to the indices that back data streams potentially leading to incorrect access authorization. OpenSearch 1.3.7 and 2.4.0 contain a fix for this issue. Users are advised to update. There are no known workarounds for this issue.",
    "cve_publish_date": "2022-11-15",
    "cwe_id": "NVD-CWE-Other",
    "cwe_name": "Other",
    "cwe_description": "NVD is only using a subset of CWE for mapping instead of the entire CWE, and the weakness type is not covered by that subset.",
    "commit_message": "Merge pull request from GHSA-wmx7-x4jp-9jgg\n\n* Resolving backing indices of data streams when resolving for aliases\n\n* Fixing resolution of indices for non-wild card scenarios / exact matches\n\n* Adding tests for DLS/FLS/Field-Masking on Data Streams\n\nCo-authored-by: Sandesh Kumar <kusandes@amazon.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "ConfigModelV7.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "9",
    "number_of_lines_deleted_vulnerable_to_cve": "6",
    "vulnerable_lines": [
        "// Line_Reference 773:                 final String[] aliasesForPermittedPattern = cs.state().getMetadata().getIndicesLookup().entrySet().stream()",
        "// Line_Reference 774:                         .filter(e -> e.getValue().getType() == ALIAS)",
        "// Line_Reference 778:                 if (aliasesForPermittedPattern.length > 0) {",
        "// Line_Reference 779:                     final String[] resolvedAliases = resolver.concreteIndexNames(cs.state(), IndicesOptions.lenientExpandOpen(), aliasesForPermittedPattern);",
        "// Line_Reference 780:                     resolvedIndices.addAll(Arrays.asList(resolvedAliases));",
        "// Line_Reference 785:                 final String[] resolvedIndicesFromPattern = resolver.concreteIndexNames(cs.state(), IndicesOptions.lenientExpandOpen(), unresolved);"
    ]
}
