{
    "cve_id": "CVE-2022-1974",
    "cve_description": "A use-after-free flaw was found in the Linux kernel's NFC core functionality due to a race condition between kobject creation and delete. This vulnerability allows a local attacker with CAP_NET_ADMIN privilege to leak kernel information.",
    "cve_publish_date": "2022-08-31",
    "cwe_id": "CWE-367",
    "cwe_name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
    "cwe_description": "The product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state.",
    "commit_message": "nfc: replace improper check device_is_registered() in netlink related functions\n\nThe device_is_registered() in nfc core is used to check whether\nnfc device is registered in netlink related functions such as\nnfc_fw_download(), nfc_dev_up() and so on. Although device_is_registered()\nis protected by device_lock, there is still a race condition between\ndevice_del() and device_is_registered(). The root cause is that\nkobject_del() in device_del() is not protected by device_lock.\n\n   (cleanup task)         |     (netlink task)\n                          |\nnfc_unregister_device     | nfc_fw_download\n device_del               |  device_lock\n  ...                     |   if (!device_is_registered)//(1)\n  kobject_del//(2)        |   ...\n ...                      |  device_unlock\n\nThe device_is_registered() returns the value of state_in_sysfs and\nthe state_in_sysfs is set to zero in kobject_del(). If we pass check in\nposition (1), then set zero in position (2). As a result, the check\nin position (1) is useless.\n\nThis patch uses bool variable instead of device_is_registered() to judge\nwhether the nfc device is registered, which is well synchronized.\n\nFixes: 3e256b8f8dfa (\"NFC: add nfc subsystem core\")\nSigned-off-by: Duoming Zhou <duoming@zju.edu.cn>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "type_of_change": "Modification",
    "filename_of_changes": "core.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "14",
    "number_of_lines_deleted_vulnerable_to_cve": "15",
    "vulnerable_lines": [
        "// Line_Reference 41: \tif (!device_is_registered(&dev->dev)) {",
        "// Line_Reference 97: \tif (!device_is_registered(&dev->dev)) {",
        "// Line_Reference 145: \tif (!device_is_registered(&dev->dev)) {",
        "// Line_Reference 210: \tif (!device_is_registered(&dev->dev)) {",
        "// Line_Reference 249: \tif (!device_is_registered(&dev->dev)) {",
        "// Line_Reference 294: \tif (!device_is_registered(&dev->dev)) {",
        "// Line_Reference 338: \tif (!device_is_registered(&dev->dev)) {",
        "// Line_Reference 404: \tif (!device_is_registered(&dev->dev)) {",
        "// Line_Reference 451: \tif (!device_is_registered(&dev->dev)) {",
        "// Line_Reference 498: \tif (!device_is_registered(&dev->dev)) {",
        "// Line_Reference 555: \tif (!device_is_registered(&dev->dev)) {",
        "// Line_Reference 604: \tif (!device_is_registered(&dev->dev)) {",
        "// Line_Reference 1172: \t\tdevice_lock(&dev->dev);",
        "// Line_Reference 1173: \t\tdev->shutting_down = true;",
        "// Line_Reference 1174: \t\tdevice_unlock(&dev->dev);"
    ]
}
