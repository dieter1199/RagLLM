{
    "cve_id": "CVE-2015-8963",
    "cve_description": "Race condition in kernel/events/core.c in the Linux kernel before 4.4 allows local users to gain privileges or cause a denial of service (use-after-free) by leveraging incorrect handling of an swevent data structure during a CPU unplug operation.",
    "cve_publish_date": "2016-11-16",
    "cwe_id": "CWE-362",
    "cwe_name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
    "cwe_description": "The product contains a code sequence that can run concurrently with other code, and the code sequence requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence that is operating concurrently.",
    "commit_message": "perf: Fix race in swevent hash\n\nThere's a race on CPU unplug where we free the swevent hash array\nwhile it can still have events on. This will result in a\nuse-after-free which is BAD.\n\nSimply do not free the hash array on unplug. This leaves the thing\naround and no use-after-free takes place.\n\nWhen the last swevent dies, we do a for_each_possible_cpu() iteration\nanyway to clean these up, at which time we'll free it, so no leakage\nwill occur.\n\nReported-by: Sasha Levin <sasha.levin@oracle.com>\nTested-by: Sasha Levin <sasha.levin@oracle.com>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nCc: Arnaldo Carvalho de Melo <acme@redhat.com>\nCc: Frederic Weisbecker <fweisbec@gmail.com>\nCc: Jiri Olsa <jolsa@redhat.com>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Stephane Eranian <eranian@google.com>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: Vince Weaver <vincent.weaver@maine.edu>\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "core.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "19",
    "vulnerable_lines": [
        "// Line_Reference 6491: ",
        "// Line_Reference 6492: \t/* Keeps track of cpu being initialized/exited */",
        "// Line_Reference 6493: \tbool\t\t\t\tonline;",
        "// Line_Reference 6751: \tif (!head) {",
        "// Line_Reference 6752: \t\t/*",
        "// Line_Reference 6753: \t\t * We can race with cpu hotplug code. Do not",
        "// Line_Reference 6754: \t\t * WARN if the cpu just got unplugged.",
        "// Line_Reference 6755: \t\t */",
        "// Line_Reference 6756: \t\tWARN_ON_ONCE(swhash->online);",
        "// Line_Reference 6758: \t}",
        "// Line_Reference 6826: ",
        "// Line_Reference 9289: \tswhash->online = true;",
        "// Line_Reference 9331: \tstruct swevent_htable *swhash = &per_cpu(swevent_htable, cpu);",
        "// Line_Reference 9332: ",
        "// Line_Reference 9334: ",
        "// Line_Reference 9335: \tmutex_lock(&swhash->hlist_mutex);",
        "// Line_Reference 9336: \tswhash->online = false;",
        "// Line_Reference 9337: \tswevent_hlist_release(swhash);",
        "// Line_Reference 9338: \tmutex_unlock(&swhash->hlist_mutex);"
    ]
}
