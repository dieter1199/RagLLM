{
    "cve_id": "CVE-2014-6410",
    "cve_description": "The __udf_read_inode function in fs/udf/inode.c in the Linux kernel through 3.16.3 does not restrict the amount of ICB indirection, which allows physically proximate attackers to cause a denial of service (infinite loop or stack consumption) via a UDF filesystem with a crafted inode.",
    "cve_publish_date": "2014-09-28",
    "cwe_id": "CWE-399",
    "cwe_name": "Resource Management Errors",
    "cwe_description": "Weaknesses in this category are related to improper management of system resources.",
    "commit_message": "udf: Avoid infinite loop when processing indirect ICBs\n\nWe did not implement any bound on number of indirect ICBs we follow when\nloading inode. Thus corrupted medium could cause kernel to go into an\ninfinite loop, possibly causing a stack overflow.\n\nFix the possible stack overflow by removing recursion from\n__udf_read_inode() and limit number of indirect ICBs we follow to avoid\ninfinite loops.\n\nSigned-off-by: Jan Kara <jack@suse.cz>",
    "type_of_change": "Modification",
    "filename_of_changes": "inode.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "21",
    "number_of_lines_deleted_vulnerable_to_cve": "14",
    "vulnerable_lines": [
        "// Line_Reference 1320: \t\t\tstruct buffer_head *nbh = NULL;",
        "// Line_Reference 1327: \t\t\tif (ie->indirectICB.extLength &&",
        "// Line_Reference 1328: \t\t\t\t(nbh = udf_read_ptagged(inode->i_sb, &loc, 0,",
        "// Line_Reference 1329: \t\t\t\t\t\t\t&ident))) {",
        "// Line_Reference 1330: \t\t\t\tif (ident == TAG_IDENT_FE ||",
        "// Line_Reference 1331: \t\t\t\t\tident == TAG_IDENT_EFE) {",
        "// Line_Reference 1332: \t\t\t\t\tmemcpy(&iinfo->i_location,",
        "// Line_Reference 1333: \t\t\t\t\t\t&loc,",
        "// Line_Reference 1334: \t\t\t\t\t\tsizeof(struct kernel_lb_addr));",
        "// Line_Reference 1335: \t\t\t\t\tbrelse(bh);",
        "// Line_Reference 1336: \t\t\t\t\tbrelse(ibh);",
        "// Line_Reference 1337: \t\t\t\t\tbrelse(nbh);",
        "// Line_Reference 1338: \t\t\t\t\t__udf_read_inode(inode);",
        "// Line_Reference 1341: \t\t\t\tbrelse(nbh);"
    ]
}
