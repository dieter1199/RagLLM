{
    "cve_id": "CVE-2017-6448",
    "cve_description": "The dalvik_disassemble function in libr/asm/p/asm_dalvik.c in radare2 1.2.1 allows remote attackers to cause a denial of service (stack-based buffer overflow and application crash) or possibly have unspecified other impact via a crafted DEX file.",
    "cve_publish_date": "2017-04-03",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "Fix #6885 - oob write in dalvik_disassemble",
    "type_of_change": "Modification",
    "filename_of_changes": "asm_dalvik.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "59",
    "number_of_lines_deleted_vulnerable_to_cve": "59",
    "vulnerable_lines": [
        "// Line_Reference 29: \t\t\t\tsprintf (op->buf_asm, \"packed-switch-payload %d, %d\", array_size, first_key);",
        "// Line_Reference 41: \t\t\t\tsprintf (op->buf_asm, \"sparse-switch-payload %d\", array_size);",
        "// Line_Reference 77: \t\t\tsprintf (str, \" v%i, v%i\", vA, vB);",
        "// Line_Reference 83: \t\t\tsprintf (str, \" v%i, v%i\", vA, vB);",
        "// Line_Reference 89: \t\t\tsprintf (str, \" v%i, v%i\", vA, vB);",
        "// Line_Reference 94: \t\t\tsprintf (str, \" v%i\", vA);",
        "// Line_Reference 100: \t\t\tsprintf (str, \" v%i, %#x\", vA, vB);",
        "// Line_Reference 107: \t\t\t\tsprintf (str, \" v%i, %#04hx\", vA, sB);",
        "// Line_Reference 140: \t\t\tsprintf (str, \" v%i:v%i, 0x%\"PFMT64x, vA, vA + 1, lB);",
        "// Line_Reference 147: \t\t\tsprintf (str, \" v%i, v%i, v%i\", vA, vB, vC);",
        "// Line_Reference 154: \t\t\tsprintf (str, \" v%i, v%i, %#x\", vA, vB, vC);",
        "// Line_Reference 161: \t\t\tsprintf (str, \" v%i, v%i, %#x\", vA, vB, vC);",
        "// Line_Reference 166: \t\t\t//sprintf (str, \" %i\", vA*2); // vA : word -> byte",
        "// Line_Reference 178: \t\t\t//sprintf (str, \" v%i, %i\", vA, vB);",
        "// Line_Reference 184: \t\t\t//sprintf (str, \" %#08x\", vA*2); // vA: word -> byte",
        "// Line_Reference 192: \t\t\t//sprintf (str, \" v%i, v%i, %i\", vA, vB, vC);",
        "// Line_Reference 208: \t\t\t\tsprintf (str, \" {v%i}\", buf[4] & 0x0f);",
        "// Line_Reference 211: \t\t\t\tsprintf (str, \" {v%i, v%i}\", buf[4] & 0x0f, (buf[4] & 0xf0) >> 4);",
        "// Line_Reference 214: \t\t\t\tsprintf (str, \" {v%i, v%i, v%i}\", buf[4] & 0x0f, (buf[4] & 0xf0) >> 4, buf[5] & 0x0f);",
        "// Line_Reference 217: \t\t\t\tsprintf (str, \" {v%i, v%i, v%i, v%i}\", buf[4] & 0x0f,",
        "// Line_Reference 221: \t\t\t\tsprintf (str, \" {}\");",
        "// Line_Reference 224: \t\t\tsprintf (str, \", [%04x]\", vB);",
        "// Line_Reference 232: \t\t\tsprintf (str, \" {v%i..v%i}, [%04x]\", vC, vC + vA - 1, vB);",
        "// Line_Reference 240: \t\t\t\tsprintf (str, \" {v%i}\", buf[4] & 0x0f);",
        "// Line_Reference 243: \t\t\t\tsprintf (str, \" {v%i, v%i}\", buf[4] & 0x0f, (buf[4] & 0xf0) >> 4);",
        "// Line_Reference 246: \t\t\t\tsprintf (str, \" {v%i, v%i, v%i}\", buf[4] & 0x0f,",
        "// Line_Reference 250: \t\t\t\tsprintf (str, \" {v%i, v%i, v%i, v%i}\", buf[4] & 0x0f,",
        "// Line_Reference 254: \t\t\t\tsprintf (str, \" {}\");",
        "// Line_Reference 258: \t\t\tsprintf (str, \", [%04x]\", vB);",
        "// Line_Reference 267: \t\t\t\t\tsprintf (str, \" v%i, string+%i\", vA, vB);",
        "// Line_Reference 269: \t\t\t\t\tsprintf (str, \" v%i, 0x%\"PFMT64x, vA, offset);",
        "// Line_Reference 274: \t\t\t\t\tsprintf (str, \" v%i, class+%i\", vA, vB);",
        "// Line_Reference 276: \t\t\t\t\tsprintf (str, \" v%i, %s\", vA, flag_str);",
        "// Line_Reference 281: \t\t\t\t\tsprintf (str, \" v%i, field+%i\", vA, vB);",
        "// Line_Reference 283: \t\t\t\t\tsprintf (str, \" v%i, %s\", vA, flag_str);",
        "// Line_Reference 294: \t\t\t\tsprintf (str, \" v%i, v%i, [obj+%04x]\", vA, vB, vC);",
        "// Line_Reference 296: \t\t\t\tsprintf (str, \" v%i, v%i, [0x%\"PFMT64x\"]\", vA, vB, offset);",
        "// Line_Reference 305: \t\t\t\tsprintf (str, \" v%i, thing+%i\", vA, vB);",
        "// Line_Reference 307: \t\t\t\tsprintf (str, \" v%i, 0x%\"PFMT64x, vA, offset);",
        "// Line_Reference 318: \t\t\t\t\tsprintf (str, \" v%i, v%i, %s\", vA, vB, flag_str);",
        "// Line_Reference 321: \t\t\t\t\tsprintf (str, \" v%i, v%i, class+%i\", vA, vB, vC);",
        "// Line_Reference 326: \t\t\t\t\tsprintf (str, \" v%i, v%i, %s\", vA, vB, flag_str);",
        "// Line_Reference 329: \t\t\t\t\tsprintf (str, \" v%i, v%i, field+%i\", vA, vB, vC);",
        "// Line_Reference 339: \t\t\t\tsprintf (str, \" v%i, string+%i\", vA, vB);",
        "// Line_Reference 342: \t\t\t\tsprintf (str, \" v%i, 0x%\"PFMT64x, vA, offset);",
        "// Line_Reference 353: \t\t\t\t\tsprintf (str, \" {v%i..v%i}, %s\", vC, vC + vA - 1, flag_str);",
        "// Line_Reference 356: \t\t\t\t\tsprintf (str, \" {v%i..v%i}, class+%i\", vC, vC + vA - 1, vB);",
        "// Line_Reference 361: \t\t\t\t\tsprintf (str, \" {v%i..v%i}, %s\", vC, vC + vA - 1, flag_str);",
        "// Line_Reference 364: \t\t\t\t\tsprintf (str, \" {v%i..v%i}, method+%i\", vC, vC + vA - 1, vB);",
        "// Line_Reference 374: \t\t\t\t\tsprintf (str, \" {v%i}\", buf[4] & 0x0f);",
        "// Line_Reference 377: \t\t\t\t\tsprintf (str, \" {v%i, v%i}\", buf[4] & 0x0f, (buf[4] & 0xf0) >> 4);",
        "// Line_Reference 380: \t\t\t\t\tsprintf (str, \" {v%i, v%i, v%i}\", buf[4] & 0x0f,",
        "// Line_Reference 384: \t\t\t\t\tsprintf (str, \" {v%i, v%i, v%i, v%i}\", buf[4] & 0x0f,",
        "// Line_Reference 388: \t\t\t\t\tsprintf (str, \" {v%i, v%i, v%i, v%i, v%i}\", buf[4] & 0x0f,",
        "// Line_Reference 392: \t\t\t\t\tsprintf (str, \" {}\");",
        "// Line_Reference 398: \t\t\t\t\tsprintf (str, \", %s ; 0x%x\", flag_str, vB);",
        "// Line_Reference 400: \t\t\t\t\tsprintf (str, \", class+%i\", vB);",
        "// Line_Reference 405: \t\t\t\t\tsprintf (str, \", %s ; 0x%x\", flag_str, vB);",
        "// Line_Reference 407: \t\t\t\t\tsprintf (str, \", method+%i\", vB);"
    ]
}
