{
    "cve_id": "CVE-2015-3291",
    "cve_description": "arch/x86/entry/entry_64.S in the Linux kernel before 4.1.6 on the x86_64 platform does not properly determine when nested NMI processing is occurring, which allows local users to cause a denial of service (skipped NMI) by modifying the rsp register, issuing a syscall instruction, and triggering an NMI.",
    "cve_publish_date": "2015-08-31",
    "cwe_id": "CWE-17",
    "cwe_name": "DEPRECATED: Code",
    "cwe_description": "This entry has been deprecated.  It was originally used for organizing the Development View (CWE-699) and some other views, but it introduced unnecessary complexity and depth to the resulting tree.",
    "commit_message": "x86/nmi/64: Use DF to avoid userspace RSP confusing nested NMI detection\n\nWe have a tricky bug in the nested NMI code: if we see RSP\npointing to the NMI stack on NMI entry from kernel mode, we\nassume that we are executing a nested NMI.\n\nThis isn't quite true.  A malicious userspace program can point\nRSP at the NMI stack, issue SYSCALL, and arrange for an NMI to\nhappen while RSP is still pointing at the NMI stack.\n\nFix it with a sneaky trick.  Set DF in the region of code that\nthe RSP check is intended to detect.  IRET will clear DF\natomically.\n\n( Note: other than paravirt, there's little need for all this\n  complexity. We could check RIP instead of RSP. )\n\nSigned-off-by: Andy Lutomirski <luto@kernel.org>\nReviewed-by: Steven Rostedt <rostedt@goodmis.org>\nCc: Borislav Petkov <bp@suse.de>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: stable@vger.kernel.org\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "entry_64.S",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "25",
    "number_of_lines_deleted_vulnerable_to_cve": "4",
    "vulnerable_lines": [
        "// Line_Reference 1391: \t * \"NMI executing\" but before IRET.",
        "// Line_Reference 1403: \t/* Ah, it is within the NMI stack, treat it as nested */",
        "// Line_Reference 1509: \t/* Clear \"NMI executing\". */",
        "// Line_Reference 1510: \tmovq\t$0, 5*8(%rsp)"
    ]
}
