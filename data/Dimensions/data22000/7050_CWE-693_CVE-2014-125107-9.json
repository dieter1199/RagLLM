{
    "cve_id": "CVE-2014-125107",
    "cve_description": "A vulnerability was found in Corveda PHPSandbox 1.3.4 and classified as critical. Affected by this issue is some unknown functionality of the component String Handler. The manipulation leads to protection mechanism failure. The attack may be launched remotely. Upgrading to version 1.3.5 is able to address this issue. The patch is identified as 48fde5ffa4d76014bad260a3cbab7ada3744a4cc. It is recommended to upgrade the affected component. VDB-248270 is the identifier assigned to this vulnerability.",
    "cve_publish_date": "2023-12-19",
    "cwe_id": "CWE-693",
    "cwe_name": "Protection Mechanism Failure",
    "cwe_description": "The product does not use or incorrectly uses a protection mechanism that provides sufficient defense against directed attacks against the product.",
    "commit_message": "- Addressed potential vulnerabilities related to SandboxedStrings where sandboxed code could manipulate the strings in a way that could defeat their protection\n- Solved errors from casting sandboxed strings to int\n- Overwrote some internal PHP functions to further mask SandboxedStrings from the sandboxed code and prevent type-checking errors\n- Added more tests related to SandboxedStrings\n- Made some minor tweaks to PHPSandbox Toolkit",
    "type_of_change": "Modification",
    "filename_of_changes": "ValidatorVisitor.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "19",
    "number_of_lines_deleted_vulnerable_to_cve": "17",
    "vulnerable_lines": [
        "// Line_Reference 16:      * @version 1.3.2",
        "// Line_Reference 63:                     if($this->sandbox->overwrite_var_funcs && in_array($name, PHPSandbox::$var_funcs)){",
        "// Line_Reference 583:          * @throws  Error             Throws exception if $node attempts to cast when $allow_casting is false in the PHPSandbox configuration",
        "// Line_Reference 584:          *",
        "// Line_Reference 588:             switch($node->getType()){",
        "// Line_Reference 589:                 case 'Expr_Cast_Array':",
        "// Line_Reference 590:                 case 'Expr_Cast_Bool':",
        "// Line_Reference 591:                 case 'Expr_Cast_Double':",
        "// Line_Reference 592:                 case 'Expr_Cast_Int':",
        "// Line_Reference 593:                 case 'Expr_Cast_String':",
        "// Line_Reference 594:                 case 'Expr_Cast_Object':",
        "// Line_Reference 595:                 case 'Expr_Cast_Unset':",
        "// Line_Reference 596:                     if(!$this->sandbox->allow_casting){",
        "// Line_Reference 597:                         $this->sandbox->error(\"Sandboxed code attempted to cast!\", Error::CAST_ERROR, $node);",
        "// Line_Reference 598:                     }",
        "// Line_Reference 599:                     break;",
        "// Line_Reference 600:             }"
    ]
}
