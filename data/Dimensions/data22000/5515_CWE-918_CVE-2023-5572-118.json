{
    "cve_id": "CVE-2023-5572",
    "cve_description": "Server-Side Request Forgery (SSRF) in GitHub repository vriteio/vrite prior to 0.3.0.",
    "cve_publish_date": "2023-10-13",
    "cwe_id": "CWE-918",
    "cwe_name": "Server-Side Request Forgery (SSRF)",
    "cwe_description": "The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
    "commit_message": "Vrite v0.3 (#45)\n\n- Replace wrapper with element;\r\n- Add XML-like syntax for elements;\r\n- Redesign editor block menus;\r\n- Add MDX extension;\r\n- Allow CORS API access;\r\n- Restructure @vrite/backend;",
    "type_of_change": "Modification",
    "filename_of_changes": "tags.ts",
    "code_language": "TypeScript",
    "number_of_lines_added_for_mitigation": "7",
    "number_of_lines_deleted_vulnerable_to_cve": "20",
    "vulnerable_lines": [
        "// Line_Reference 3: import { zodId } from \"#lib/mongo\";",
        "// Line_Reference 4: import { stringToRegex } from \"#lib/utils\";",
        "// Line_Reference 5: import { isAuthenticated } from \"#lib/middleware\";",
        "// Line_Reference 6: import { procedure, router } from \"#lib/trpc\";",
        "// Line_Reference 7: import * as errors from \"#lib/errors\";",
        "// Line_Reference 8: import { createEventPublisher, createEventSubscription } from \"#lib/pub-sub\";",
        "// Line_Reference 9: import { ExtendedTag, Tag, getTagsCollection, tag, getContentPiecesCollection } from \"#database\";",
        "// Line_Reference 10: ",
        "// Line_Reference 11: type TagEvent =",
        "// Line_Reference 12:   | { action: \"create\"; data: Tag }",
        "// Line_Reference 13:   | { action: \"update\"; data: Partial<Tag> & { id: string } }",
        "// Line_Reference 14:   | {",
        "// Line_Reference 15:       action: \"delete\";",
        "// Line_Reference 16:       data: { id: string };",
        "// Line_Reference 17:     };",
        "// Line_Reference 21: const publishEvent = createEventPublisher<TagEvent>((workspaceId) => `tags:${workspaceId}`);",
        "// Line_Reference 75:       publishEvent(ctx, `${ctx.auth.workspaceId}`, {",
        "// Line_Reference 97:       publishEvent(ctx, `${ctx.auth.workspaceId}`, {",
        "// Line_Reference 163:       publishEvent(ctx, `${ctx.auth.workspaceId}`, {",
        "// Line_Reference 191:     return createEventSubscription<TagEvent>(ctx, `tags:${ctx.auth.workspaceId}`);"
    ]
}
