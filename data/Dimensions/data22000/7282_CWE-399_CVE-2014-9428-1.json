{
    "cve_id": "CVE-2014-9428",
    "cve_description": "The batadv_frag_merge_packets function in net/batman-adv/fragmentation.c in the B.A.T.M.A.N. implementation in the Linux kernel through 3.18.1 uses an incorrect length field during a calculation of an amount of memory, which allows remote attackers to cause a denial of service (mesh-node system crash) via fragmented packets.",
    "cve_publish_date": "2015-01-02",
    "cwe_id": "CWE-399",
    "cwe_name": "Resource Management Errors",
    "cwe_description": "Weaknesses in this category are related to improper management of system resources.",
    "commit_message": "batman-adv: Calculate extra tail size based on queued fragments\n\nThe fragmentation code was replaced in 610bfc6bc99bc83680d190ebc69359a05fc7f605\n(\"batman-adv: Receive fragmented packets and merge\"). The new code provided a\nmostly unused parameter skb for the merging function. It is used inside the\nfunction to calculate the additionally needed skb tailroom. But instead of\nincreasing its own tailroom, it is only increasing the tailroom of the first\nqueued skb. This is not correct in some situations because the first queued\nentry can be a different one than the parameter.\n\nAn observed problem was:\n\n1. packet with size 104, total_size 1464, fragno 1 was received\n   - packet is queued\n2. packet with size 1400, total_size 1464, fragno 0 was received\n   - packet is queued at the end of the list\n3. enough data was received and can be given to the merge function\n   (1464 == (1400 - 20) + (104 - 20))\n   - merge functions gets 1400 byte large packet as skb argument\n4. merge function gets first entry in queue (104 byte)\n   - stored as skb_out\n5. merge function calculates the required extra tail as total_size - skb->len\n   - pskb_expand_head tail of skb_out with 64 bytes\n6. merge function tries to squeeze the extra 1380 bytes from the second queued\n   skb (1400 byte aka skb parameter) in the 64 extra tail bytes of skb_out\n\nInstead calculate the extra required tail bytes for skb_out also using skb_out\ninstead of using the parameter skb. The skb parameter is only used to get the\ntotal_size from the last received packet. This is also the total_size used to\ndecide that all fragments were received.\n\nReported-by: Philipp Psurek <philipp.psurek@gmail.com>\nSigned-off-by: Sven Eckelmann <sven@narfation.org>\nAcked-by: Martin Hundeb√∏ll <martin@hundeboll.net>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "type_of_change": "Modification",
    "filename_of_changes": "fragmentation.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 254: \tif (pskb_expand_head(skb_out, 0, size - skb->len, GFP_ATOMIC) < 0) {"
    ]
}
