{
    "cve_id": "CVE-2014-3158",
    "cve_description": "Integer overflow in the getword function in options.c in pppd in Paul's PPP Package (ppp) before 2.4.7 allows attackers to \"access privileged options\" via a long word in an options file, which triggers a heap-based buffer overflow that \"[corrupts] security-relevant variables.\"",
    "cve_publish_date": "2014-11-15",
    "cwe_id": "CWE-119",
    "cwe_name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
    "cwe_description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.",
    "commit_message": "pppd: Eliminate potential integer overflow in option parsing\n\nWhen we are reading in a word from an options file, we maintain a count\nof the length we have seen so far in 'len', which is an int.  When len\nexceeds MAXWORDLEN - 1 (i.e. 1023) we cease storing characters in the\nbuffer but we continue to increment len.  Since len is an int, it will\nwrap around to -2147483648 after it reaches 2147483647.  At that point\nour test of (len < MAXWORDLEN-1) will succeed and we will start writing\ncharacters to memory again.\n\nThis may enable an attacker to overwrite the heap and thereby corrupt\nsecurity-relevant variables.  For this reason it has been assigned a\nCVE identifier, CVE-2014-3158.\n\nThis fixes the bug by ceasing to increment len once it reaches MAXWORDLEN.\n\nReported-by: Lee Campbell <leecam@google.com>\nSigned-off-by: Paul Mackerras <paulus@samba.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "options.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "6",
    "number_of_lines_deleted_vulnerable_to_cve": "4",
    "vulnerable_lines": [
        "// Line_Reference 1292: \t    if (len < MAXWORDLEN-1)",
        "// Line_Reference 1294: \t    ++len;",
        "// Line_Reference 1332: \tif (len < MAXWORDLEN-1)",
        "// Line_Reference 1334: \t++len;"
    ]
}
