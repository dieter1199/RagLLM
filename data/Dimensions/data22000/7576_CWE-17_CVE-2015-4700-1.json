{
    "cve_id": "CVE-2015-4700",
    "cve_description": "The bpf_int_jit_compile function in arch/x86/net/bpf_jit_comp.c in the Linux kernel before 4.0.6 allows local users to cause a denial of service (system crash) by creating a packet filter and then loading crafted BPF instructions that trigger late convergence by the JIT compiler.",
    "cve_publish_date": "2015-08-31",
    "cwe_id": "CWE-17",
    "cwe_name": "DEPRECATED: Code",
    "cwe_description": "This entry has been deprecated.  It was originally used for organizing the Development View (CWE-699) and some other views, but it introduced unnecessary complexity and depth to the resulting tree.",
    "commit_message": "x86: bpf_jit: fix compilation of large bpf programs\n\nx86 has variable length encoding. x86 JIT compiler is trying\nto pick the shortest encoding for given bpf instruction.\nWhile doing so the jump targets are changing, so JIT is doing\nmultiple passes over the program. Typical program needs 3 passes.\nSome very short programs converge with 2 passes. Large programs\nmay need 4 or 5. But specially crafted bpf programs may hit the\npass limit and if the program converges on the last iteration\nthe JIT compiler will be producing an image full of 'int 3' insns.\nFix this corner case by doing final iteration over bpf program.\n\nFixes: 0a14842f5a3c (\"net: filter: Just In Time compiler for x86-64\")\nReported-by: Daniel Borkmann <daniel@iogearbox.net>\nSigned-off-by: Alexei Starovoitov <ast@plumgrid.com>\nTested-by: Daniel Borkmann <daniel@iogearbox.net>\nAcked-by: Daniel Borkmann <daniel@iogearbox.net>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "type_of_change": "Modification",
    "filename_of_changes": "bpf_jit_comp.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "6",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 969: \tfor (pass = 0; pass < 10; pass++) {"
    ]
}
