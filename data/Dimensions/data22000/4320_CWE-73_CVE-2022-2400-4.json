{
    "cve_id": "CVE-2022-2400",
    "cve_description": "External Control of File Name or Path in GitHub repository dompdf/dompdf prior to 2.0.0.",
    "cve_publish_date": "2022-07-18",
    "cwe_id": "CWE-73",
    "cwe_name": "External Control of File Name or Path",
    "cwe_description": "The product allows user input to control or influence paths or file names that are used in filesystem operations.",
    "commit_message": "Update resource URI validation and handling\n\nURI scheme (protocol) validation rules are now specified through the Options class. By default file and http(s) URIs are allowed and validation rules defined. Validation rules for PHAR URIs are defined but the scheme is not enabled by default.\n\nResource retrieval has been updated to use file_get_contents for schemes other than http(s).\n\nfixes #621\nfixes #2826\n\nin lieu of #1903",
    "type_of_change": "Modification",
    "filename_of_changes": "FontMetrics.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "8",
    "number_of_lines_deleted_vulnerable_to_cve": "27",
    "vulnerable_lines": [
        "// Line_Reference 217:         if (!$this->options->isRemoteEnabled() && ($protocol !== \"\" && $protocol !== \"file://\")) {",
        "// Line_Reference 218:             Helpers::record_warnings(E_USER_WARNING, \"Remote font resource $remoteFile referenced, but remote file download is disabled.\", __FILE__, __LINE__);",
        "// Line_Reference 219:             return false;",
        "// Line_Reference 221:         if ($protocol === \"\" || $protocol === \"file://\") {",
        "// Line_Reference 222:             $realfile = realpath($remoteFile);",
        "// Line_Reference 223: ",
        "// Line_Reference 224:             $rootDir = realpath($this->options->getRootDir());",
        "// Line_Reference 225:             if (strpos($realfile, $rootDir) !== 0) {",
        "// Line_Reference 226:                 $chroot = $this->options->getChroot();",
        "// Line_Reference 227:                 $chrootValid = false;",
        "// Line_Reference 228:                 foreach ($chroot as $chrootPath) {",
        "// Line_Reference 229:                     $chrootPath = realpath($chrootPath);",
        "// Line_Reference 230:                     if ($chrootPath !== false && strpos($realfile, $chrootPath) === 0) {",
        "// Line_Reference 231:                         $chrootValid = true;",
        "// Line_Reference 232:                         break;",
        "// Line_Reference 233:                     }",
        "// Line_Reference 234:                 }",
        "// Line_Reference 235:                 if ($chrootValid !== true) {",
        "// Line_Reference 236:                     Helpers::record_warnings(E_USER_WARNING, \"Permission denied on $remoteFile. The file could not be found under the paths specified by Options::chroot.\", __FILE__, __LINE__);",
        "// Line_Reference 237:                     return false;",
        "// Line_Reference 238:                 }",
        "// Line_Reference 239:             }",
        "// Line_Reference 241:             if (!$realfile) {",
        "// Line_Reference 242:                 Helpers::record_warnings(E_USER_WARNING, \"File '$realfile' not found.\", __FILE__, __LINE__);",
        "// Line_Reference 243:                 return false;",
        "// Line_Reference 245: ",
        "// Line_Reference 246:             $remoteFile = $realfile;"
    ]
}
