{
    "cve_id": "CVE-2022-45962",
    "cve_description": "Open Solutions for Education, Inc openSIS Community Edition v8.0 and earlier is vulnerable to SQL Injection via CalendarModal.php.",
    "cve_publish_date": "2023-02-13",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "Version 9.0 release\n\nOlder version shifted to branch: Version_8.0",
    "type_of_change": "ModificationType.ADD",
    "filename_of_changes": "DataImportCounter.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "150",
    "number_of_lines_deleted_vulnerable_to_cve": "176",
    "vulnerable_lines": [
        "// Line_Reference 30: error_reporting(0);",
        "// Line_Reference 55:             if($value=='LANGUAGE')",
        "// Line_Reference 56:                 $value='LANGUAGE_ID';",
        "// Line_Reference 57:             if($value=='ETHNICITY')",
        "// Line_Reference 58:                 $value='ETHNICITY_ID';",
        "// Line_Reference 76:         $id = DBGet(DBQuery(\"SHOW TABLE STATUS LIKE 'students'\"));",
        "// Line_Reference 77:         $student_id[1]['STUDENT_ID'] = $id[1]['AUTO_INCREMENT'];",
        "// Line_Reference 78:         $student_id = $student_id[1]['STUDENT_ID'];",
        "// Line_Reference 82:         $err_msg=array();",
        "// Line_Reference 91:                 $student_columns = array('STUDENT_ID');",
        "// Line_Reference 92:                 $student_values = array($student_id);",
        "// Line_Reference 100:                     if ($arr_v[$array_index[$students_v]] != '') {",
        "// Line_Reference 102:                         if ($students_v == 'BIRTHDATE' || $students_v == 'ESTIMATED_GRAD_DATE' ) {",
        "// Line_Reference 104: ",
        "// Line_Reference 105: ",
        "// Line_Reference 106:                         }elseif($students_v == 'LANGUAGE_ID'){",
        "// Line_Reference 107:                             if(is_numeric($arr_v[$array_index[$students_v]]))",
        "// Line_Reference 108:                             {",
        "// Line_Reference 109:                                 $student_values[] = \"'\".$arr_v[$array_index[$students_v]].\"'\";",
        "// Line_Reference 110:                             }",
        "// Line_Reference 111:                             else",
        "// Line_Reference 112:                             {",
        "// Line_Reference 113:                                 $lang_id= DBGet(DBQuery('SELECT language_id FROM `language` WHERE LANGUAGE_NAME =\\''. $arr_v[$array_index[$students_v]] . '\\''));",
        "// Line_Reference 114:                                 $student_values[] = \"'\".$lang_id[1]['LANGUAGE_ID'].\"'\";",
        "// Line_Reference 116:                         }elseif($students_v == 'ETHNICITY_ID'){",
        "// Line_Reference 117:                             if(is_numeric($arr_v[$array_index[$students_v]]))",
        "// Line_Reference 118:                             {",
        "// Line_Reference 119:                                 $student_values[] = \"'\".$arr_v[$array_index[$students_v]].\"'\";",
        "// Line_Reference 121:                             else",
        "// Line_Reference 122:                             {",
        "// Line_Reference 123:                                 $lang_id= DBGet(DBQuery('SELECT ethnicity_id FROM `ethnicity` WHERE ethnicity_name =\\''. $arr_v[$array_index[$students_v]] . '\\''));",
        "// Line_Reference 124:                                 $student_values[] = \"'\".$lang_id[1]['ETHNICITY_ID'].\"'\";",
        "// Line_Reference 125:                             }",
        "// Line_Reference 126:                         }",
        "// Line_Reference 127:                         else {",
        "// Line_Reference 130:                         if ($students_v == 'FIRST_NAME' || $students_v == 'LAST_NAME' || $students_v == 'EMAIL' || $students_v == 'BIRTHDATE' )",
        "// Line_Reference 131: ",
        "// Line_Reference 132:                              $check_query[] = $students_v . '=' . \"'\" .($students_v=='BIRTHDATE'?fromExcelToLinux(singleQuoteReplace(\"\", \"\", $arr_v[$array_index[$students_v]])):singleQuoteReplace(\"\", \"\", $arr_v[$array_index[$students_v]]) ). \"'\";",
        "// Line_Reference 133: ",
        "// Line_Reference 135:                             $check_query_alt_id[]= $students_v . '=' . \"'\" .(singleQuoteReplace(\"\", \"\", $arr_v[$array_index[$students_v]]) ). \"'\";",
        "// Line_Reference 136: ",
        "// Line_Reference 139: ",
        "// Line_Reference 143:                             $check_query_username[]= $username . '=' . \"'\" .(singleQuoteReplace(\"\", \"\", $arr_v[$array_index[$username]]) ). \"'\";",
        "// Line_Reference 146: ",
        "// Line_Reference 147: ",
        "// Line_Reference 152:                     if ($check_exist != 0){",
        "// Line_Reference 153:                         $err_msg[0]= 'duplicate student';",
        "// Line_Reference 156: ",
        "// Line_Reference 158:                     $check_exist_al= DBGet(DBQuery('SELECT COUNT(*) as REC_EXISTS FROM students WHERE ' . implode(\" \",$check_query_alt_id)));",
        "// Line_Reference 159:                     $check_exist_alt= $check_exist_al[1]['REC_EXISTS'];",
        "// Line_Reference 160: ",
        "// Line_Reference 161:                     if ($check_exist_alt != 0){",
        "// Line_Reference 162:                         $err_msg[1]= 'duplicate alternet id';",
        "// Line_Reference 167:                     $check_exist_al_username= DBGet(DBQuery('SELECT COUNT(*) as REC_EXISTS FROM login_authentication WHERE ' . implode(\" \",$check_query_username)));",
        "// Line_Reference 168:                     $check_exist_alt_username= $check_exist_al_username[1]['REC_EXISTS'];",
        "// Line_Reference 169: ",
        "// Line_Reference 170:                     if ($check_exist_alt_username != 0){",
        "// Line_Reference 171:                         $err_msg[2]= 'duplicate username';",
        "// Line_Reference 174: ",
        "// Line_Reference 175:                 if ( $check_exist == 0 && $check_exist_alt == 0 && $check_exist_alt_username == 0) {",
        "// Line_Reference 186:                         $enrollment_columns+=array('CALENDAR_ID');",
        "// Line_Reference 187:                         $enrollment_values+=array($calendar_id[1]['CALENDAR_ID']);",
        "// Line_Reference 224:                         $la_values[] = \"'\" . md5(str_replace(\"'\", \"\", $arr_v[$array_index['PASSWORD']])) . \"'\";",
        "// Line_Reference 336: ",
        "// Line_Reference 340:             if(count($err_msg)==1){",
        "// Line_Reference 341:                 $msg='';",
        "// Line_Reference 342:                foreach($err_msg as $key=>$val)",
        "// Line_Reference 343:                {",
        "// Line_Reference 344:                    $msg=$val;",
        "// Line_Reference 345:                }",
        "// Line_Reference 347:                 echo '<div class=\"col-xs-12 text-danger\"><i class=\"icon-info22\"></i> Possible cause for rejection is '.$msg.' found.</div>';",
        "// Line_Reference 349: ",
        "// Line_Reference 350: ",
        "// Line_Reference 352:             if(count($err_msg)==2){",
        "// Line_Reference 353:                  $msg='';",
        "// Line_Reference 354:                foreach($err_msg as $key=>$val)",
        "// Line_Reference 355:                {",
        "// Line_Reference 356:                    $msg.= $val.' and ';",
        "// Line_Reference 357:                }",
        "// Line_Reference 358:                $msg=substr($val,0,-5);",
        "// Line_Reference 360:                 echo '<div class=\"col-xs-12 text-danger\"><i class=\"icon-info22\"></i> Possible causes for rejection are '.$msg.' found.</div>';",
        "// Line_Reference 363:             if(count($err_msg)==3){",
        "// Line_Reference 364:                   $msg='';",
        "// Line_Reference 365:                foreach($err_msg as $key=>$val)",
        "// Line_Reference 366:                {",
        "// Line_Reference 367:                    $msg.= $val.' and ';",
        "// Line_Reference 368:                }",
        "// Line_Reference 369:                $msg=substr($val,0,-5);",
        "// Line_Reference 371:                 echo '<div class=\"col-xs-12 text-danger\"><i class=\"icon-info22\"></i> Possible causes for rejection are '.$msg.' found.</div>';",
        "// Line_Reference 373:             }",
        "// Line_Reference 374: ",
        "// Line_Reference 410: ",
        "// Line_Reference 422:         $id = DBGet(DBQuery(\"SHOW TABLE STATUS LIKE 'staff'\"));",
        "// Line_Reference 423:         $staff_id[1]['STAFF_ID'] = $id[1]['AUTO_INCREMENT'];",
        "// Line_Reference 424:         $staff_id = $staff_id[1]['STAFF_ID'];",
        "// Line_Reference 428:         $err_msg=array();",
        "// Line_Reference 430: ",
        "// Line_Reference 437:                 $staff_columns = array('STAFF_ID', 'CURRENT_SCHOOL_ID');",
        "// Line_Reference 438:                 $staff_values = array($staff_id, UserSchool());",
        "// Line_Reference 444: ",
        "// Line_Reference 446:                         $arr_v[$array_index[$staff_v]]=strtolower($arr_v[$array_index[$staff_v]]);",
        "// Line_Reference 487:                         if ($staff_v == 'BIRTHDATE'){",
        "// Line_Reference 488:                             $staff_values[] = \"'\" .fromExcelToLinux(singleQuoteReplace(\"\", \"\", $arr_v[$array_index[$staff_v]])) . \"'\";",
        "// Line_Reference 489:                         }else{",
        "// Line_Reference 490:                         $staff_values[] = \"'\" . singleQuoteReplace(\"\", \"\", $arr_v[$array_index[$staff_v]]) . \"'\";",
        "// Line_Reference 491:                           }",
        "// Line_Reference 496:                             $check_query[] = $staff_v . '=' . \"'\" .fromExcelToLinux(singleQuoteReplace(\"\", \"\", $arr_v[$array_index[$staff_v]])) . \"'\";",
        "// Line_Reference 498:                         if($staff_v == 'ALTERNATE_ID')",
        "// Line_Reference 499: ",
        "// Line_Reference 500:                          $check_query_alt_id[] = $staff_v . '=' . \"'\" . singleQuoteReplace(\"\", \"\", $arr_v[$array_index[$staff_v]]) . \"'\";",
        "// Line_Reference 504: ",
        "// Line_Reference 505: ",
        "// Line_Reference 507: ",
        "// Line_Reference 510:                          if ($username == 'USERNAME')",
        "// Line_Reference 511:                             $check_query_username[]= $username . '=' . \"'\" .(singleQuoteReplace(\"\", \"\", $arr_v[$array_index[$username]]) ). \"'\";",
        "// Line_Reference 512: ",
        "// Line_Reference 513:                         }",
        "// Line_Reference 514: ",
        "// Line_Reference 515: ",
        "// Line_Reference 516: ",
        "// Line_Reference 518: ",
        "// Line_Reference 524:                 if ($check_exist != 0){",
        "// Line_Reference 525:                 $err_msg[0]= 'duplicate staff';",
        "// Line_Reference 526:                 }",
        "// Line_Reference 528: ",
        "// Line_Reference 529:                  if (count($check_query_alt_id) > 0) {",
        "// Line_Reference 533:                  if ($check_exist_alt != 0){",
        "// Line_Reference 534:                  $err_msg[1]= 'duplicate alternet id';",
        "// Line_Reference 536: ",
        "// Line_Reference 538: ",
        "// Line_Reference 539:                  if (count($check_query_username) > 0) {",
        "// Line_Reference 540: ",
        "// Line_Reference 541:                     $check_exist_al_username= DBGet(DBQuery('SELECT COUNT(*) as REC_EXISTS FROM login_authentication WHERE ' . implode(\" \",$check_query_username)));",
        "// Line_Reference 542:                     $check_exist_alt_username= $check_exist_al_username[1]['REC_EXISTS'];",
        "// Line_Reference 543: ",
        "// Line_Reference 544:                  if ($check_exist_alt_username != 0){",
        "// Line_Reference 545:                  $err_msg[2]= 'duplicate username';",
        "// Line_Reference 546: ",
        "// Line_Reference 547:                  }",
        "// Line_Reference 548:                  }",
        "// Line_Reference 600:                         $la_values[] = \"'\" . md5(str_replace(\"'\", \"\", $arr_v[$array_index['PASSWORD']])) . \"'\";",
        "// Line_Reference 603:                         $la_values[] = \"'\" . md5(trim(strtolower(str_replace(\"'\", \"\", str_replace(\" \", \"\", $arr_v[$array_index['FIRST_NAME']]))) . $staff_id)) . \"'\";",
        "// Line_Reference 671: ",
        "// Line_Reference 672: ",
        "// Line_Reference 675:             if(count($err_msg)==1){",
        "// Line_Reference 676:                 $msg='';",
        "// Line_Reference 677:                foreach($err_msg as $key=>$val)",
        "// Line_Reference 678:                {",
        "// Line_Reference 679:                    $msg=$val;",
        "// Line_Reference 680:                }",
        "// Line_Reference 682:                 echo '<div class=\"col-xs-12 text-danger\"><i class=\"icon-info22\"></i> Possible cause for rejection is '.$msg.' found.</div>';",
        "// Line_Reference 684: ",
        "// Line_Reference 685: ",
        "// Line_Reference 687:             if(count($err_msg)==2){",
        "// Line_Reference 688:                  $msg='';",
        "// Line_Reference 689:                foreach($err_msg as $key=>$val)",
        "// Line_Reference 690:                {",
        "// Line_Reference 691:                    $msg.= $val.' and ';",
        "// Line_Reference 692:                }",
        "// Line_Reference 693:                $msg=substr($val,0,-5);",
        "// Line_Reference 695:                 echo '<div class=\"col-xs-12 text-danger\"><i class=\"icon-info22\"></i> Possible causes for rejection are '.$msg.' found.</div>';",
        "// Line_Reference 698:             if(count($err_msg)==3){",
        "// Line_Reference 699:                   $msg='';",
        "// Line_Reference 700:                foreach($err_msg as $key=>$val)",
        "// Line_Reference 701:                {",
        "// Line_Reference 702:                    $msg.= $val.' and ';",
        "// Line_Reference 703:                }",
        "// Line_Reference 704:                $msg=substr($val,0,-5);",
        "// Line_Reference 706:                 echo '<div class=\"col-xs-12 text-danger\"><i class=\"icon-info22\"></i> Possible causes for rejection are '.$msg.' found.</div>';",
        "// Line_Reference 708:             }",
        "// Line_Reference 709: ",
        "// Line_Reference 723: function fromExcelToLinux($excel_time) {",
        "// Line_Reference 725: ",
        "// Line_Reference 727: ",
        "// Line_Reference 729: ",
        "// Line_Reference 730: ?>"
    ]
}
