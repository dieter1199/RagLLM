{
    "cve_id": "CVE-2013-10008",
    "cve_description": "A vulnerability was found in sheilazpy eShop. It has been classified as critical. Affected is an unknown function. The manipulation leads to sql injection. The name of the patch is e096c5849c4dc09e1074104531014a62a5413884. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-217572.",
    "cve_publish_date": "2023-01-06",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "some sql injection vulnerabilities fixes\n\n+ some sql injection vulnerabilities fixes\n+ new sql injection safe methods in mysql wrapper",
    "type_of_change": "ModificationType.RENAME",
    "filename_of_changes": "d0500513b75d001211398853d386ea7d",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "62",
    "number_of_lines_deleted_vulnerable_to_cve": "40",
    "vulnerable_lines": [
        "// Line_Reference 6: import javax.swing.JButton;",
        "// Line_Reference 7: ",
        "// Line_Reference 36: \t\tEventQueue.invokeLater(new Runnable() {",
        "// Line_Reference 45: \t\t});",
        "// Line_Reference 54: \t\tsetDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);",
        "// Line_Reference 139: \t\t\t\tdbPortal.finallize();",
        "// Line_Reference 155: \t\t\t\t\t}",
        "// Line_Reference 159: \t\t\t\t\tdbPortal.finallize();",
        "// Line_Reference 174: \t\t\tJOptionPane.showMessageDialog(this, \"  !     MySQL   !\",",
        "// Line_Reference 176: \t\t\tdbPortal.finallize();",
        "// Line_Reference 180: \t\tif (dbPortal.executeNonQuery(\"CREATE DATABASE \" + mysqlDatabaseNameTextField.getText()) != 1) {",
        "// Line_Reference 183: \t\t\t\t\t\"     !\", JOptionPane.ERROR_MESSAGE);",
        "// Line_Reference 184: \t\t\tdbPortal.disconnect();",
        "// Line_Reference 185: \t\t\tdbPortal.finallize();",
        "// Line_Reference 189: \t\tif (dbPortal.executeNonQuery(\"CREATE TABLE operators (operator_id int NOT NULL AUTO_INCREMENT primary key,\" +",
        "// Line_Reference 190: \t\t\t\t\"operator_username nvarchar(20) NOT NULL, operator_password nvarchar(20) NOT NULL,\" +",
        "// Line_Reference 191: \t\t\t\t\"operator_first_name nvarchar(20) NOT NULL, operator_last_name nvarchar(20) NOT NULL)\") == 0) {",
        "// Line_Reference 194: \t\t\tdbPortal.finallize();",
        "// Line_Reference 198: \t\tif (dbPortal.executeNonQuery(\"CREATE TABLE orders (order_id int NOT NULL AUTO_INCREMENT primary key,\" +",
        "// Line_Reference 200: \t\t\t\t\"CONSTRAINT FK_OPERATORS FOREIGN KEY (order_operator_id) REFERENCES operators(operator_id) ON DELETE CASCADE ON UPDATE CASCADE)\") == 0) {",
        "// Line_Reference 201: ",
        "// Line_Reference 202: \t\t\tdbPortal.disconnect();",
        "// Line_Reference 203: \t\t\tdbPortal.finallize();",
        "// Line_Reference 204: \t\t\treturn false;",
        "// Line_Reference 205: \t\t}",
        "// Line_Reference 207: \t\tif (dbPortal.executeNonQuery(\"CREATE TABLE products (product_id int NOT NULL AUTO_INCREMENT primary key,\" +",
        "// Line_Reference 208: \t\t\t\t\"product_name nvarchar(30) NOT NULL, product_quantity int NOT NULL,\tproduct_price decimal(10,2) NOT NULL)\") == 0) {",
        "// Line_Reference 209: ",
        "// Line_Reference 210: \t\t\tdbPortal.disconnect();",
        "// Line_Reference 211: \t\t\tdbPortal.finallize();",
        "// Line_Reference 212: \t\t\treturn false;",
        "// Line_Reference 213: \t\t}",
        "// Line_Reference 215: \t\tif (dbPortal.executeNonQuery(\"CREATE TABLE order_details (order_detail_id int NOT NULL AUTO_INCREMENT primary key,\" +",
        "// Line_Reference 219: \t\t\t\t\"CONSTRAINT FK_PRODUCTS FOREIGN KEY (order_detail_product_id) REFERENCES products(product_id) ON DELETE CASCADE ON UPDATE CASCADE)\") == 0) {",
        "// Line_Reference 220: ",
        "// Line_Reference 221: \t\t\tdbPortal.disconnect();",
        "// Line_Reference 222: \t\t\tdbPortal.finallize();",
        "// Line_Reference 223: \t\t\treturn false;",
        "// Line_Reference 227: \t}",
        "// Line_Reference 228: "
    ]
}
