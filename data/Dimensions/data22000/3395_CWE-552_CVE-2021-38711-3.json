{
    "cve_id": "CVE-2021-38711",
    "cve_description": "In gitit before 0.15.0.0, the Export feature can be exploited to leak information from files.",
    "cve_publish_date": "2021-08-16",
    "cwe_id": "CWE-552",
    "cwe_name": "Files or Directories Accessible to External Parties",
    "cwe_description": "The product makes files or directories accessible to unauthorized actors, even though they should not be.",
    "commit_message": "Remove the Export feature.\n\nThis feature is a security risk; it provided multiple\nvectors by which contents of files could be exposed.\n\nAPI change: remove Network.Gitit.Export.",
    "type_of_change": "Modification",
    "filename_of_changes": "ContentTransformer.hs",
    "code_language": "Haskell",
    "number_of_lines_added_for_mitigation": "0",
    "number_of_lines_deleted_vulnerable_to_cve": "23",
    "vulnerable_lines": [
        "// Line_Reference 34:   , exportPage",
        "// Line_Reference 48:   , exportPandoc",
        "// Line_Reference 82: import Network.Gitit.Export (exportFormats)",
        "// Line_Reference 189: -- | Responds with page exported into selected format.",
        "// Line_Reference 190: exportPage :: Handler",
        "// Line_Reference 191: exportPage = runPageTransformer exportViaPandoc",
        "// Line_Reference 192: ",
        "// Line_Reference 223: -- | Responds with a wiki page in the format specified",
        "// Line_Reference 224: -- by the @format@ parameter.",
        "// Line_Reference 225: exportViaPandoc :: ContentTransformer Response",
        "// Line_Reference 226: exportViaPandoc = rawContents >>=",
        "// Line_Reference 227:                   maybe mzero return >>=",
        "// Line_Reference 228:                   contentsToPage >>=",
        "// Line_Reference 229:                   pageToWikiPandoc >>=",
        "// Line_Reference 230:                   exportPandoc",
        "// Line_Reference 231: ",
        "// Line_Reference 325: -- | Converts Pandoc to response using format specified in parameters.",
        "// Line_Reference 326: exportPandoc :: Pandoc -> ContentTransformer Response",
        "// Line_Reference 327: exportPandoc doc = do",
        "// Line_Reference 328:   params <- getParams",
        "// Line_Reference 329:   page <- getPageName",
        "// Line_Reference 330:   cfg <- lift getConfig",
        "// Line_Reference 331:   let format = pFormat params",
        "// Line_Reference 332:   case lookup format (exportFormats cfg) of",
        "// Line_Reference 333:        Nothing     -> error $ \"Unknown export format: \" ++ format",
        "// Line_Reference 334:        Just writer -> lift (writer page doc)",
        "// Line_Reference 335: "
    ]
}
