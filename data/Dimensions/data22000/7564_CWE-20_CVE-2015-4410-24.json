{
    "cve_id": "CVE-2015-4410",
    "cve_description": "The Moped::BSON::ObjecId.legal? method in rubygem-moped before commit dd5a7c14b5d2e466f7875d079af71ad19774609b allows remote attackers to cause a denial of service (worker resource consumption) or perform a cross-site scripting (XSS) attack via a crafted string.",
    "cve_publish_date": "2020-02-20",
    "cwe_id": "CWE-20",
    "cwe_name": "Improper Input Validation",
    "cwe_description": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
    "commit_message": "Merge Replica Set Refactor\n\n* Removes Server, and Socket; replaced with Node, and Connection.\n\n  Replica sets are now much more robustly supported, including failover\n  and discovery.\n\n* Refactors specs.\n\n  Internal APIs are now tested with integration specs through the public\n  APIs.\n\n* More documentation.",
    "type_of_change": "Modification",
    "filename_of_changes": "indexes_spec.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "26",
    "number_of_lines_deleted_vulnerable_to_cve": "101",
    "vulnerable_lines": [
        "// Line_Reference 4:   let(:session) { Moped::Session.new [\"127.0.0.1:27017\"], database: \"moped_test\" }",
        "// Line_Reference 5:   let(:indexes) do",
        "// Line_Reference 6:     described_class.new(session.current_database, :users)",
        "// Line_Reference 7:   end",
        "// Line_Reference 8: ",
        "// Line_Reference 9:   after do",
        "// Line_Reference 10:     session.command(deleteIndexes: \"users\", index: \"*\")",
        "// Line_Reference 13:   describe \"#each\" do",
        "// Line_Reference 14:     before do",
        "// Line_Reference 15:       session[:\"system.indexes\"].insert(ns: \"moped_test.users\", key: { name: 1 }, name: \"name_1\")",
        "// Line_Reference 16:     end",
        "// Line_Reference 17: ",
        "// Line_Reference 18:     it \"yields all indexes on the collection\" do",
        "// Line_Reference 19:       indexes.to_a.should eq \\",
        "// Line_Reference 20:         session[:\"system.indexes\"].find(ns: \"moped_test.users\").to_a",
        "// Line_Reference 21:     end",
        "// Line_Reference 24:   describe \"#[]\" do",
        "// Line_Reference 25:     before do",
        "// Line_Reference 26:       session[:\"system.indexes\"].insert(ns: \"moped_test.users\", key: { name: 1 }, name: \"name_1\")",
        "// Line_Reference 27:     end",
        "// Line_Reference 28: ",
        "// Line_Reference 29:     it \"returns the index with the provided key\" do",
        "// Line_Reference 30:       indexes[name: 1][\"name\"].should eq \"name_1\"",
        "// Line_Reference 31:     end",
        "// Line_Reference 35:     let(:key) do",
        "// Line_Reference 36:       Hash[\"location.latlong\" => \"2d\", \"name\" => 1, \"age\" => -1]",
        "// Line_Reference 37:     end",
        "// Line_Reference 38: ",
        "// Line_Reference 39:     context \"with no options\" do",
        "// Line_Reference 40:       it \"creates an index with a generated name\" do",
        "// Line_Reference 41:         indexes.create(key)",
        "// Line_Reference 42:         indexes[key][\"name\"].should eq \"location.latlong_2d_name_1_age_-1\"",
        "// Line_Reference 43:       end",
        "// Line_Reference 44:     end",
        "// Line_Reference 45: ",
        "// Line_Reference 46:     context \"with a name provided\" do",
        "// Line_Reference 47:       it \"creates an index with the provided name\" do",
        "// Line_Reference 48:         indexes.create(key, name: \"custom_index_name\")",
        "// Line_Reference 49:         indexes[key][\"name\"].should eq \"custom_index_name\"",
        "// Line_Reference 50:       end",
        "// Line_Reference 51:     end",
        "// Line_Reference 52: ",
        "// Line_Reference 53:     context \"with background: true\" do",
        "// Line_Reference 54:       it \"creates an index\" do",
        "// Line_Reference 55:         indexes.create(key, background: true)",
        "// Line_Reference 56:         indexes[key][\"background\"].should eq true",
        "// Line_Reference 57:       end",
        "// Line_Reference 58:     end",
        "// Line_Reference 59: ",
        "// Line_Reference 60:     context \"with dropDups: true\" do",
        "// Line_Reference 61:       it \"creates an index\" do",
        "// Line_Reference 62:         indexes.create(key, dropDups: true)",
        "// Line_Reference 63:         indexes[key][\"dropDups\"].should eq true",
        "// Line_Reference 67:     context \"with unique: true\" do",
        "// Line_Reference 68:       it \"creates an index\" do",
        "// Line_Reference 69:         indexes.create(key, unique: true)",
        "// Line_Reference 70:         indexes[key][\"unique\"].should eq true",
        "// Line_Reference 73: ",
        "// Line_Reference 74:     context \"with sparse: true\" do",
        "// Line_Reference 75:       it \"creates an index\" do",
        "// Line_Reference 76:         indexes.create(key, sparse: true)",
        "// Line_Reference 77:         indexes[key][\"sparse\"].should eq true",
        "// Line_Reference 78:       end",
        "// Line_Reference 79:     end",
        "// Line_Reference 80: ",
        "// Line_Reference 81:     context \"with v: 0\" do",
        "// Line_Reference 82:       it \"creates an index\" do",
        "// Line_Reference 83:         indexes.create(key, v: 0)",
        "// Line_Reference 84:         indexes[key][\"v\"].should eq 0",
        "// Line_Reference 85:       end",
        "// Line_Reference 86:     end",
        "// Line_Reference 87: ",
        "// Line_Reference 91:     before do",
        "// Line_Reference 92:       indexes.create name: 1",
        "// Line_Reference 93:       indexes.create age: -1",
        "// Line_Reference 94:     end",
        "// Line_Reference 95: ",
        "// Line_Reference 96:     context \"with no key\" do",
        "// Line_Reference 97:       before do",
        "// Line_Reference 98:         indexes.drop",
        "// Line_Reference 99:       end",
        "// Line_Reference 100: ",
        "// Line_Reference 101:       it \"drops all indexes for the collection\" do",
        "// Line_Reference 102:         indexes[name: 1].should be_nil",
        "// Line_Reference 103:         indexes[age: -1].should be_nil",
        "// Line_Reference 107:     context \"with a key\" do",
        "// Line_Reference 108:       before do",
        "// Line_Reference 109:         indexes.drop(name: 1)",
        "// Line_Reference 110:       end",
        "// Line_Reference 111: ",
        "// Line_Reference 112:       it \"drops the index that matches the key\" do",
        "// Line_Reference 114:       end",
        "// Line_Reference 115: ",
        "// Line_Reference 116:       it \"does not drop other indexes\" do",
        "// Line_Reference 117:         indexes[age: -1].should_not be_nil",
        "// Line_Reference 118:       end",
        "// Line_Reference 119:     end",
        "// Line_Reference 120: ",
        "// Line_Reference 121:     context \"with a key that doesn't exist\" do",
        "// Line_Reference 122:       it \"returns false\" do",
        "// Line_Reference 123:         indexes.drop(other: 1).should be_false"
    ]
}
