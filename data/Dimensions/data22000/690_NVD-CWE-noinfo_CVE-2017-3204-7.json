{
    "cve_id": "CVE-2017-3204",
    "cve_description": "The Go SSH library (x/crypto/ssh) by default does not verify host keys, facilitating man-in-the-middle attacks. Default behavior changed in commit e4e2799 to require explicitly registering a hostkey verification mechanism.",
    "cve_publish_date": "2017-04-04",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "ssh: require host key checking in the ClientConfig\n\nThis change breaks existing behavior.\n\nBefore, a missing ClientConfig.HostKeyCallback would cause host key\nchecking to be disabled. In this configuration, establishing a\nconnection to any host just works, so today, most SSH client code in\nthe wild does not perform any host key checks.\n\nThis makes it easy to perform a MITM attack:\n\n* SSH installations that use keyboard-interactive or password\nauthentication can be attacked with MITM, thereby stealing\npasswords.\n\n* Clients that use public-key authentication with agent forwarding are\nalso vulnerable: the MITM server could allow the login to succeed, and\nthen immediately ask the agent to authenticate the login to the real\nserver.\n\n* Clients that use public-key authentication without agent forwarding\nare harder to attack unnoticedly: an attacker cannot authenticate the\nlogin to the real server, so it cannot in general present a convincing\nserver to the victim.\n\nNow, a missing HostKeyCallback will cause the handshake to fail. This\nchange also provides InsecureIgnoreHostKey() and FixedHostKey(key) as\nready made host checkers.\n\nA simplistic parser for OpenSSH's known_hosts file is given as an\nexample.  This change does not provide a full-fledged parser, as it\nhas complexity (wildcards, revocation, hashed addresses) that will\nneed further consideration.\n\nWhen introduced, the host checking feature maintained backward\ncompatibility at the expense of security. We have decided this is not\nthe right tradeoff for the SSH library.\n\nFixes golang/go#19767\n\nChange-Id: I45fc7ba9bd1ea29c31ec23f115cdbab99913e814\nReviewed-on: https://go-review.googlesource.com/38701\nRun-TryBot: Han-Wen Nienhuys <hanwen@google.com>\nTryBot-Result: Gobot Gobot <gobot@golang.org>\nReviewed-by: Brad Fitzpatrick <bradfitz@golang.org>",
    "type_of_change": "Modification",
    "filename_of_changes": "example_test.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "54",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 93: \t// Service the incoming Channel channel.",
        "// Line_Reference 94: ",
        "// Line_Reference 138: \t// implementation of AuthMethod via the Auth field in ClientConfig."
    ]
}
