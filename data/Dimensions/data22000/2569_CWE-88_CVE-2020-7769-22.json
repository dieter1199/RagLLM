{
    "cve_id": "CVE-2020-7769",
    "cve_description": "This affects the package nodemailer before 6.4.16. Use of crafted recipient email addresses may result in arbitrary command flag injection in sendmail transport for sending mails.",
    "cve_publish_date": "2020-11-12",
    "cwe_id": "CWE-88",
    "cwe_name": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
    "cwe_description": "The product constructs a string for a command to be executed by a separate component\nin another control sphere, but it does not properly delimit the\nintended arguments, options, or switches within that command string.",
    "commit_message": "v6.4.16",
    "type_of_change": "Modification",
    "filename_of_changes": "smtp-tranport-test.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "39",
    "number_of_lines_deleted_vulnerable_to_cve": "39",
    "vulnerable_lines": [
        "// Line_Reference 44: describe('SMTP Transport Tests', function() {",
        "// Line_Reference 47:     describe('Anonymous sender tests', function() {",
        "// Line_Reference 50:         beforeEach(function(done) {",
        "// Line_Reference 55:                     stream.on('data', function() {});",
        "// Line_Reference 111:         afterEach(function(done) {",
        "// Line_Reference 115:         it('Should expose version number', function() {",
        "// Line_Reference 121:         it('Should detect wellknown data', function() {",
        "// Line_Reference 131:         it('Should fail envelope', function(done) {",
        "// Line_Reference 148:                 function(err) {",
        "// Line_Reference 155:         it('Should not fail auth', function(done) {",
        "// Line_Reference 175:                 function(err) {",
        "// Line_Reference 182:         it('Should fail auth if forceAuth=true', function(done) {",
        "// Line_Reference 203:                 function(err) {",
        "// Line_Reference 210:         it('Should send mail', function(done) {",
        "// Line_Reference 215:             server.on('data', function(connection, chunk) {",
        "// Line_Reference 219:             server.on('dataReady', function(connection, callback) {",
        "// Line_Reference 236:                 function(err) {",
        "// Line_Reference 243:         it('Should recover unexpeced close during transmission', function(done) {",
        "// Line_Reference 248:             server.on('data', function(connection, chunk) {",
        "// Line_Reference 252:             server.on('dataReady', function(connection, callback) {",
        "// Line_Reference 269:                 function(err) {",
        "// Line_Reference 277:     describe('Authenticated sender tests', function() {",
        "// Line_Reference 280:         beforeEach(function(done) {",
        "// Line_Reference 286:                     stream.on('data', function() {});",
        "// Line_Reference 326:         afterEach(function(done) {",
        "// Line_Reference 330:         it('Should login and send mail', function(done) {",
        "// Line_Reference 338:             server.on('data', function(connection, chunk) {",
        "// Line_Reference 342:             server.on('dataReady', function(connection, callback) {",
        "// Line_Reference 359:                 function(err) {",
        "// Line_Reference 366:         it('Should verify connection with success', function(done) {",
        "// Line_Reference 372:             client.verify(function(err, success) {",
        "// Line_Reference 379:         it('Should not verify connection', function(done) {",
        "// Line_Reference 385:             client.verify(function(err) {",
        "// Line_Reference 391:         it('Should login and send mail using proxied socket', function(done) {",
        "// Line_Reference 397:                     let errHandler = function(err) {",
        "// Line_Reference 401:                     socket.on('connect', function() {",
        "// Line_Reference 412:             server.on('data', function(connection, chunk) {",
        "// Line_Reference 416:             server.on('dataReady', function(connection, callback) {",
        "// Line_Reference 433:                 function(err) {"
    ]
}
