{
    "cve_id": "CVE-2012-3864",
    "cve_description": "Puppet before 2.6.17 and 2.7.x before 2.7.18, and Puppet Enterprise before 2.5.2, allows remote authenticated users to read arbitrary files on the puppet master server by leveraging an arbitrary user's certificate and private key in a GET request.",
    "cve_publish_date": "2012-08-06",
    "cwe_id": "CWE-200",
    "cwe_name": "Exposure of Sensitive Information to an Unauthorized Actor",
    "cwe_description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
    "commit_message": "Add Selector terminus for file_content/file_metadata\n\nThis terminus is now the default, and encapsulates the behavior that was\npreviously in the IndirectionHooks. That is, we dynamically select the\nterminus to use for a file request based on the key. However, for the\npuppet master, we instead explicitly always use the FileServer terminus,\nso that *all* requests for files from the master will go through\nthe file server. This ensures that we will never accidentally\nserve local files on the puppet master.",
    "type_of_change": "Modification",
    "filename_of_changes": "metadata_spec.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "5",
    "vulnerable_lines": [
        "// Line_Reference 9:   it \"should should be a subclass of Base\" do",
        "// Line_Reference 17:   it \"should should include the IndirectionHooks module in its indirection\" do",
        "// Line_Reference 18:     Puppet::FileServing::Metadata.indirection.singleton_class.included_modules.should include(Puppet::FileServing::IndirectionHooks)",
        "// Line_Reference 19:   end",
        "// Line_Reference 20: "
    ]
}
