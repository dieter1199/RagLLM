{
    "cve_id": "CVE-2012-0879",
    "cve_description": "The I/O implementation for block devices in the Linux kernel before 2.6.33 does not properly handle the CLONE_IO feature, which allows local users to cause a denial of service (I/O instability) by starting multiple processes that share an I/O context.",
    "cve_publish_date": "2012-05-17",
    "cwe_id": "CWE-400",
    "cwe_name": "Uncontrolled Resource Consumption",
    "cwe_description": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
    "commit_message": "block: Fix io_context leak after failure of clone with CLONE_IO\n\nWith CLONE_IO, parent's io_context->nr_tasks is incremented, but never\ndecremented whenever copy_process() fails afterwards, which prevents\nexit_io_context() from calling IO schedulers exit functions.\n\nGive a task_struct to exit_io_context(), and call exit_io_context() instead of\nput_io_context() in copy_process() cleanup path.\n\nSigned-off-by: Louis Rilling <louis.rilling@kerlabs.com>\nSigned-off-by: Jens Axboe <jens.axboe@oracle.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "iocontext.h",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "3",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 103: void exit_io_context(void);",
        "// Line_Reference 108: static inline void exit_io_context(void)"
    ]
}
