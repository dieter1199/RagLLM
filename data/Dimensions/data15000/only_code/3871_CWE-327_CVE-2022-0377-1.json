'upload-user-avatar',
'save-uploaded-user-avatar',
add_action( 'wp_ajax_learnpress_upload-user-avatar', array( __CLASS__, 'upload_user_avatar' ) );
public static function upload_user_avatar() {
}
public static function save_uploaded_user_avatar() {
$avatar_data = wp_parse_args(
LP_Request::get( 'lp-user-avatar-crop' ),
array(
'name'   => '',
'width'  => '',
'height' => '',
'points' => '',
'nonce'  => '',
)
);
$current_user_id = get_current_user_id();
if ( ! wp_verify_nonce( $avatar_data['nonce'], 'save-uploaded-profile-' . $current_user_id ) ) {
die( 'ERROR VERIFY NONCE!' );
}
$url = learn_press_update_user_profile_avatar();
if ( $url ) {
$user = learn_press_get_current_user();
learn_press_send_json(
array(
'success' => true,
'avatar'  => sprintf( '<img src="%s" />', $url ),
)
);
};
wp_die();
}
