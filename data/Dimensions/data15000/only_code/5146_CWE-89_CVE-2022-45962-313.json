if (isset($_REQUEST['student_id'])) {
$count_student_RET = DBGet(DBQuery('SELECT COUNT(*) AS NUM FROM students'));
if ($count_student_RET[1]['NUM'] > 1) {
DrawHeaderHome( ''._selectedStudent.':: '.$RET[1]['FIRST_NAME'].'&nbsp;'.($RET[1]['MIDDLE_NAME']?$RET[1]['MIDDLE_NAME'].' ':'').$RET[1]['LAST_NAME'].'&nbsp;'.$RET[1]['NAME_SUFFIX'].' (<A HREF=Side.php?student_id=new&modcat='.$_REQUEST['modcat'].'><font color=red>'._selectedStudent.':</font></A>) | <A HREF=Modules.php?modname='.$_REQUEST['modname'].'&search_modfunc=list&next_modname=students/Student.php&ajax=true&bottom_back=true&return_session=true target=body>'._selectedStudent.':</A>');
} else if ($count_student_RET[1]['NUM'] == 1) {
DrawHeaderHome( ''._selectedStudent.':: '.$RET[1]['FIRST_NAME'].'&nbsp;'.($RET[1]['MIDDLE_NAME']?$RET[1]['MIDDLE_NAME'].' ':'').$RET[1]['LAST_NAME'].'&nbsp;'.$RET[1]['NAME_SUFFIX'].' (<A HREF=Side.php?student_id=new&modcat='.$_REQUEST['modcat'].'><font color=red>'._selectedStudent.':</font></A>) ');
}
DrawHeader(_totals, "<span class=\"heading-text\"><A HREF=Modules.php?modname=$_REQUEST[modname]&id=all><i class=\"icon-menu-open\"></i> &nbsp; "._expandAll."</A></span>");
$LO_columns = array('TITLE' =>_courseTitle,
'TEACHER' =>_teacher,
'PERCENT' =>_percent,
'GRADE' =>_letter,
'UNGRADED' =>_ungraded,
) + ($do_stats ? array('BAR1' =>  ''._gradeRange.'(%)',
'BAR2' =>_classRank,
) : array());
$LO_columns = array('TITLE' =>_courseTitle,
'TEACHER' =>_teacher,
'PERCENT' =>_percent,
'GRADE' =>_letter,
'UNGRADED' =>_ungraded,
) + ($do_stats ? array('BAR1' =>  ''._gradeRange.'(%)',
) : array());
$config_RET = DBGet(DBQuery('SELECT TITLE,VALUE FROM program_user_config WHERE USER_ID=\'' . User('STAFF_ID') . '\' AND SCHOOL_ID=\'' . UserSchool() . '\' AND PROGRAM=\'Gradebook\' AND VALUE LIKE \'%_' . $course_period_id . '\''), array(), array('TITLE'));
if (count($config_RET))
if ($title == 'ANOMALOUS_MAX') {
$arr = explode('_', $value[1]['VALUE']);
$programconfig[User('STAFF_ID')][$title] = $arr[0];
} elseif (substr($title, 0, 3) == 'SEM' || substr($title, 0, 1) == 'Q' || substr($title, 0, 1) == 'FY') {
$arr = explode('_', $value[1]['VALUE']);
$programconfig[User('STAFF_ID')][$title] = $arr[0];
} else {
$unused_var = explode('_', $value[1]['VALUE']);
$programconfig[User('STAFF_ID')][$title] = $unused_var[0];
//			$programconfig[User('STAFF_ID')][$title] = rtrim($value[1]['VALUE'],'_'.UserCoursePeriod());
} else
}
else {
//'gg.POINTS','\'-1\' OR gg.POINTS IS NULL OR (ga.due_date < (select DISTINCT ssm.start_date  from student_enrollment ssm where ssm.STUDENT_ID=s.STUDENT_ID AND ssm.SYEAR=\''.UserSyear().'\' AND ssm.SCHOOL_ID='.UserSchool().' AND (ssm.START_DATE IS NOT NULL AND (CURRENT_DATE<=ssm.END_DATE OR CURRENT_DATE>=ssm.END_DATE OR  ssm.END_DATE IS NULL)) order by ssm.start_date desc limit 1) ) ',"'0'",'ga.POINTS'
$points_RET = DBGet(DBQuery('SELECT \'-1\' AS ASSIGNMENT_TYPE_ID,sum(' . db_case(array('gg.POINTS', "'-1'", "'0'", 'gg.POINTS')) . ') AS PARTIAL_POINTS,sum(' . db_case(array('gg.POINTS', '\'-1\' OR gg.POINTS IS NULL OR (ga.due_date < (select DISTINCT ssm.start_date  from student_enrollment ssm,students s where ssm.STUDENT_ID=s.STUDENT_ID AND s.STUDENT_ID=\'' . UserStudentID() . '\' AND ssm.SYEAR=\'' . UserSyear() . '\' AND ssm.SCHOOL_ID=' . UserSchool() . ' AND (ssm.START_DATE IS NOT NULL AND (CURRENT_DATE<=ssm.END_DATE OR CURRENT_DATE>=ssm.END_DATE OR  ssm.END_DATE IS NULL)) order by ssm.start_date desc limit 1) ) ', "'0'", 'ga.POINTS')) . ') AS PARTIAL_TOTAL,\'1\' AS FINAL_GRADE_PERCENT,sum(' . db_case(array('gg.POINTS', "''", "1", "0")) . ') AS UNGRADED FROM gradebook_assignments ga LEFT OUTER JOIN gradebook_grades gg ON (gg.COURSE_PERIOD_ID=\'' . $course_period_id . '\' AND gg.STUDENT_ID=\'' . UserStudentID() . '\' AND gg.ASSIGNMENT_ID=ga.ASSIGNMENT_ID) WHERE (ga.COURSE_PERIOD_ID=\'' . $course_period_id . '\' OR ga.COURSE_ID=\'' . $course_id . '\' AND ga.STAFF_ID=\'' . $staff_id . '\') AND ga.MARKING_PERIOD_ID IN (' . $mp . ') AND (ga.ASSIGNED_DATE IS NOT NULL ) GROUP BY  FINAL_GRADE_PERCENT'));
//                                $Class_Rank = DBGet(DBQuery(' SELECT FOUND_ROWS() as TOTAL_STUDENT')) ;
$avg_percent += $total;
$avg_percent /= count($all_RET);
$w1 = round(100 * $min_percent / $scale);
$w2 = round(100 * ($avg_percent - $min_percent) / $scale);
$w4 = round(100 * ($max_percent - $percent) / $scale);
$w5 = round(100 * (1.0 - $max_percent / $scale));
rsort($Rank_Pos);
if (number_format(100 * $percent, 1) == $val)
ListOutput($LO_ret, $LO_columns,  _course, _courses, $link, array(), array('center' =>false, 'save' =>false, 'search' =>false));
}
else {
$val1 = '<div class="panel-heading"><h6 class="panel-title">'._assignmentDetails.'</h6></div>';
$val1 .= '<label class="control-label col-lg-4">'._title.'</label>';
$val1 .= '<label class="control-label col-lg-4">'._assignedDate.'</label>';
$val1 .= '<label class="control-label col-lg-4">'._dueDate.'</label>';
$val1 .= '<label class="control-label col-lg-4">'._assignementType.'</label>';
$val1 .= '<label class="control-label col-lg-4">'._points.'</label>';
$val1 .= '<label class="control-label col-lg-4">'._description.'</label>';
}
else {
$courses_RET = DBGet(DBQuery('SELECT c.TITLE AS COURSE_TITLE,cp.TITLE,cp.COURSE_PERIOD_ID,cp.COURSE_ID,cp.TEACHER_ID AS STAFF_ID FROM course_periods cp,courses c WHERE cp.COURSE_PERIOD_ID=\'' . clean_param($_REQUEST[id], PARAM_INT) . '\' AND c.COURSE_ID=cp.COURSE_ID'));
DrawHeader('<span class="text-pink"><b>' . $courses_RET[1]['COURSE_TITLE'] . '</b> - ' . substr($courses_RET[1]['TITLE'].'</span>', strrpos(str_replace(' - ', ' ^ ', $courses_RET[1]['TITLE']), '^') + 2), "<span class=\"heading-text\"><A HREF=Modules.php?modname=$_REQUEST[modname]><i class=\"icon-square-left\"></i> &nbsp; Back to Totals</A></span>");
echo '</div>';
echo '<div class="panel">';
DrawHeaderhome($val1);
ON (gg.COURSE_PERIOD_ID=\'' . $course[COURSE_PERIOD_ID] . '\' AND gg.ASSIGNMENT_ID=ga.ASSIGNMENT_ID AND gg.STUDENT_ID=\'' . UserStudentID() . '\'),gradebook_assignment_types at
WHERE (ga.COURSE_PERIOD_ID=\'' . $course[COURSE_PERIOD_ID] . '\' OR ga.COURSE_ID=\'' . $course[COURSE_ID] . '\' AND ga.STAFF_ID=\'' . $staff_id . '\') AND ga.MARKING_PERIOD_ID IN (' . GetAllMP($MP_TYPE, UserMP()) . ')
$stu_enroll_date = $stu_enroll_date[1][START_DATE];
DrawHeader('<span class="text-pink"><b>' . $course['COURSE_TITLE'] . '</b> - ' . substr($course['TITLE'], strrpos(str_replace(' - ', ' ^ ', $course['TITLE']), '^') + 2).'</span>', "<span class=\"heading-text\"><A HREF=Modules.php?modname=$_REQUEST[modname]><i class=\"icon-square-left\"></i> &nbsp; Back to Totals</A></span>");
$LO_columns = array('TITLE' =>_title,
'CATEGORY' =>_category,
'POINTS' =>_pointsPossible,
'PERCENT' =>_percent,
'LETTER' =>_letter,
'ASSIGNED_DATE' =>_assignedDate,
'DUE_DATE' =>_dueDate,
) + ($do_stats ? array('BAR1' =>_gradeRange,
'BAR2' =>_classRank,
) : array());
$LO_columns = array('TITLE' =>_title,
'CATEGORY' =>_category,
'POINTS' =>_pointsPossible,
'PERCENT' =>_percent,
'LETTER' =>_letter,
'ASSIGNED_DATE' =>_assignedDate,
'DUE_DATE' =>_dueDate,
) + ($do_stats ? array('BAR1' =>_gradeRange,
) : array());
$days_left = floor((strtotime($assignment[DUE], 0) - strtotime($stu_enroll_date, 0)) / 86400);
$all_RET1 = DBGet(DBQuery('SELECT g.ASSIGNMENT_ID,g.POINTS  FROM gradebook_grades g where g.COURSE_PERIOD_ID=\'' . $course[COURSE_PERIOD_ID] . '\' '));
$ranknew = $k;
;
ListOutput($LO_ret, $LO_columns,  _assignment, _assignments, array(), array(), array('center' =>false, 'save' => $_REQUEST['id'] != 'all', 'search' =>false));
function _makeTipTitle($value, $column) {
$tip_title = '<A HREF=Modules.php?modname=grades/StudentGrades.php&id=' . $_REQUEST['id'] . '&modfun=assgn_detail&assignment_id=' . $THIS_RET['ASSIGNMENT_ID'].'>' . $value . '</A>';
?>
