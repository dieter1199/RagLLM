*     Utility for programmatic plotting using gnuplot 7.3.2 or later
*         ~ output to png (color), ps (mono), x11 (color), latex (mono)
static const l_int32  L_BUF_SIZE = 512;
char     buf[L_BUF_SIZE];
snprintf(buf, L_BUF_SIZE, "%s.cmd", rootname);
snprintf(buf, L_BUF_SIZE, "%s.png", newroot);
snprintf(buf, L_BUF_SIZE, "%s.ps", newroot);
snprintf(buf, L_BUF_SIZE, "%s.eps", newroot);
snprintf(buf, L_BUF_SIZE, "%s.tex", newroot);
char       buf[L_BUF_SIZE];
snprintf(buf, L_BUF_SIZE, "%s.data.%d", gplot->rootname, gplot->nplots);
snprintf(buf, L_BUF_SIZE, "%f %f\n", valx, valy);
char     buf[L_BUF_SIZE];
snprintf(buf, L_BUF_SIZE, "gnuplot %s", cmdname);
snprintf(buf, L_BUF_SIZE, "wgnuplot %s", cmdname);
char     buf[L_BUF_SIZE];
snprintf(buf, L_BUF_SIZE, "set title '%s'", gplot->title);
snprintf(buf, L_BUF_SIZE, "set xlabel '%s'", gplot->xlabel);
snprintf(buf, L_BUF_SIZE, "set ylabel '%s'", gplot->ylabel);
snprintf(buf, L_BUF_SIZE, "set terminal png; set output '%s'",
snprintf(buf, L_BUF_SIZE, "set terminal postscript; set output '%s'",
snprintf(buf, L_BUF_SIZE,
snprintf(buf, L_BUF_SIZE, "set terminal latex; set output '%s'",
snprintf(buf, L_BUF_SIZE, "set logscale x");
snprintf(buf, L_BUF_SIZE, "set logscale y");
snprintf(buf, L_BUF_SIZE, "plot '%s' title '%s' %s",
snprintf(buf, L_BUF_SIZE, "plot '%s' title '%s' %s, \\",
snprintf(buf, L_BUF_SIZE, " '%s' title '%s' %s, \\",
snprintf(buf, L_BUF_SIZE, " '%s' title '%s' %s",
char     buf[L_BUF_SIZE];
ignore = fscanf(fp, "Rootname: %s\n", buf);
ignores = fgets(buf, L_BUF_SIZE, fp);   /* Title: ... */
ignores = fgets(buf, L_BUF_SIZE, fp);   /* X axis label: ... */
ignores = fgets(buf, L_BUF_SIZE, fp);   /* Y axis label: ... */
ignore = fscanf(fp, "Commandfile name: %s\n", buf);
ignore = fscanf(fp, "Output file name: %s\n", buf);