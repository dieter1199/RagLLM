import org.codehaus.plexus.util.StringUtils;
private static final char[] BASH_QUOTING_TRIGGER_CHARS = {
' ',
'$',
';',
'&',
'|',
'<',
'>',
'*',
'?',
'(',
')',
'[',
']',
'{',
'}',
'`' };
this( false );
setExecutableQuoteDelimiter( '\"' );
return unifyQuotes( super.getExecutable());
sb.append( unifyQuotes( dir ) );
protected char[] getQuotingTriggerChars()
{
return BASH_QUOTING_TRIGGER_CHARS;
}
* BourneShell.unifyQuotes(null)                       = null
* BourneShell.unifyQuotes("")                         = (empty)
* BourneShell.unifyQuotes("/test/quotedpath'abc")     = /test/quotedpath\'abc
* BourneShell.unifyQuotes("/test/quoted path'abc")    = "/test/quoted path'abc"
* BourneShell.unifyQuotes("/test/quotedpath\"abc")    = "/test/quotedpath\"abc"
* BourneShell.unifyQuotes("/test/quoted path\"abc")   = "/test/quoted path\"abc"
* BourneShell.unifyQuotes("/test/quotedpath\"'abc")   = "/test/quotedpath\"'abc"
* BourneShell.unifyQuotes("/test/quoted path\"'abc")  = "/test/quoted path\"'abc"
protected static String unifyQuotes( String path )
if ( path.indexOf( " " ) == -1 && path.indexOf( "'" ) != -1 && path.indexOf( "\"" ) == -1 )
{
return StringUtils.escape( path );
}
return StringUtils.quoteAndEscape( path, '\"', BASH_QUOTING_TRIGGER_CHARS );
