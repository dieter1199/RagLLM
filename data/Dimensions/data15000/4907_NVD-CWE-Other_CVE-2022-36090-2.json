{
    "cve_id": "CVE-2022-36090",
    "cve_description": "XWiki Platform Old Core is a core package for XWiki Platform, a generic wiki platform. Prior to versions 13.1.0.5 and 14.3-rc-1, some resources are missing a check for inactive (not yet activated or disabled) users in XWiki, including the REST service. This means a disabled user can enable themselves using a REST call. On the same way some resources handler created by extensions are not protected by default, so an inactive user could perform actions for such extensions. This issue has existed since at least version 1.1 of XWiki for instance configured with the email activation required for new users. Now it's more critical for versions 11.3-rc-1 and later since the maintainers provided the capability to disable user without deleting them and encouraged using that feature. XWiki 14.3-rc-1 and XWiki 13.10.5 contain a patch. There is no workaround for this other than upgrading XWiki.",
    "cve_publish_date": "2022-09-08",
    "cwe_id": "NVD-CWE-Other",
    "cwe_name": "Other",
    "cwe_description": "NVD is only using a subset of CWE for mapping instead of the entire CWE, and the weakness type is not covered by that subset.",
    "commit_message": "XWIKI-19559: Refactor handling of users in oldcore\n\n  * Add property for inactive users in XWikiContext\n  * Ensure that all calls to checkAuth in XS goes through\n    XWiki#checkAuth so that inactive users are handled\n  * Improve code of XWiki#prepareDocuments to simplify it\n  * Ensure that the login page is not displayed if a inactive user\n    logged in, in XWikiCachingRightService\n  * Improve a bit the code of the drawer to display the logout link in\n    case of logged in inactive user",
    "type_of_change": "Modification",
    "filename_of_changes": "XWiki.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "54",
    "number_of_lines_deleted_vulnerable_to_cve": "53",
    "vulnerable_lines": [
        "// Line_Reference 4327:         return getAuthService().checkAuth(context);",
        "// Line_Reference 5875:         if (!hasAccess) {",
        "// Line_Reference 5880:         // User is disabled: the mail address is marked as checked",
        "// Line_Reference 5881:         } else if (user.isDisabled(context) && user.isEmailChecked(context)) {",
        "// Line_Reference 5882:             String action = context.getAction();",
        "// Line_Reference 5883:             /*",
        "// Line_Reference 5884:              * Allow inactive users to see skins, ressources, SSX, JSX and downloads they could have seen as guest. The",
        "// Line_Reference 5885:              * rational behind this behaviour is that inactive users should be able to access the same UI that guests",
        "// Line_Reference 5886:              * are used to see, including custom icons, panels, and so on...",
        "// Line_Reference 5887:              */",
        "// Line_Reference 5888:             if (!((action.equals(\"skin\") && (doc.getSpace().equals(\"skins\") || doc.getSpace().equals(\"resources\")))",
        "// Line_Reference 5889:                 || ((action.equals(\"skin\") || action.equals(\"download\") || action.equals(\"ssx\") || action.equals(\"jsx\"))",
        "// Line_Reference 5890:                     && getRightService().hasAccessLevel(\"view\", XWikiRightService.GUEST_USER_FULLNAME,",
        "// Line_Reference 5891:                         doc.getPrefixedFullName(), context))",
        "// Line_Reference 5892:                 || ((action.equals(\"view\") && doc.getFullName().equals(\"XWiki.AccountValidation\"))))) {",
        "// Line_Reference 5893:                 Object[] args = { user.getUser() };",
        "// Line_Reference 5894:                 setPhonyDocument(reference, context, vcontext);",
        "// Line_Reference 5895:                 throw new XWikiException(XWikiException.MODULE_XWIKI_USER, XWikiException.ERROR_XWIKI_USER_DISABLED,",
        "// Line_Reference 5896:                     \"User {0} account is disabled\", null, args);",
        "// Line_Reference 5897:             }",
        "// Line_Reference 5898:         // User actually needs to activate his mail address.",
        "// Line_Reference 5899:         } else if (user.isDisabled(context) && !user.isEmailChecked(context)) {",
        "// Line_Reference 5900:             boolean allow = false;",
        "// Line_Reference 5901:             String action = context.getAction();",
        "// Line_Reference 5902:             /*",
        "// Line_Reference 5903:              * Allow inactive users to see skins, ressources, SSX, JSX and downloads they could have seen as guest. The",
        "// Line_Reference 5904:              * rational behind this behaviour is that inactive users should be able to access the same UI that guests",
        "// Line_Reference 5905:              * are used to see, including custom icons, panels, and so on...",
        "// Line_Reference 5906:              */",
        "// Line_Reference 5907:             if ((action.equals(\"skin\") && (doc.getSpace().equals(\"skins\") || doc.getSpace().equals(\"resources\")))",
        "// Line_Reference 5908:                 || ((action.equals(\"skin\") || action.equals(\"download\") || action.equals(\"ssx\") || action.equals(\"jsx\"))",
        "// Line_Reference 5909:                     && getRightService().hasAccessLevel(\"view\", XWikiRightService.GUEST_USER_FULLNAME,",
        "// Line_Reference 5910:                         doc.getPrefixedFullName(), context))",
        "// Line_Reference 5911:                 || ((action.equals(\"view\") && doc.getFullName().equals(\"XWiki.AccountValidation\")))) {",
        "// Line_Reference 5912:                 allow = true;",
        "// Line_Reference 5913:             } else {",
        "// Line_Reference 5914:                 String allowed = getConfiguration().getProperty(\"xwiki.inactiveuser.allowedpages\", \"\");",
        "// Line_Reference 5915:                 if (context.getAction().equals(\"view\") && !allowed.equals(\"\")) {",
        "// Line_Reference 5916:                     String[] allowedList = StringUtils.split(allowed, \" ,\");",
        "// Line_Reference 5917:                     for (String element : allowedList) {",
        "// Line_Reference 5918:                         if (element.equals(doc.getFullName())) {",
        "// Line_Reference 5919:                             allow = true;",
        "// Line_Reference 5920:                             break;",
        "// Line_Reference 5921:                         }",
        "// Line_Reference 5922:                     }",
        "// Line_Reference 5923:                 }",
        "// Line_Reference 5924:             }",
        "// Line_Reference 5925:             if (!allow) {",
        "// Line_Reference 5926:                 Object[] args = { context.getUser() };",
        "// Line_Reference 5927:                 setPhonyDocument(reference, context, vcontext);",
        "// Line_Reference 5928:                 throw new XWikiException(XWikiException.MODULE_XWIKI_USER, XWikiException.ERROR_XWIKI_USER_INACTIVE,",
        "// Line_Reference 5929:                     \"User {0} account is inactive\", null, args);",
        "// Line_Reference 5930:             }"
    ]
}
