{
    "cve_id": "CVE-2022-35984",
    "cve_description": "TensorFlow is an open source platform for machine learning. `ParameterizedTruncatedNormal` assumes `shape` is of type `int32`. A valid `shape` of type `int64` results in a mismatched type `CHECK` fail that can be used to trigger a denial of service attack. We have patched the issue in GitHub commit 72180be03447a10810edca700cbc9af690dfeb51. The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range. There are no known workarounds for this issue.",
    "cve_publish_date": "2022-09-16",
    "cwe_id": "CWE-617",
    "cwe_name": "Reachable Assertion",
    "cwe_description": "The product contains an assert() or similar statement that can be triggered by an attacker, which leads to an application exit or other behavior that is more severe than necessary.",
    "commit_message": "Fix tensor shape dtype bug in parameterized_truncated_normal.\n\nThe original made the assumption that the dtype is int32 when it could\nalso be int64 - leading to a crash due to mismatched type.\n\nPiperOrigin-RevId: 456685278",
    "type_of_change": "Modification",
    "filename_of_changes": "parameterized_truncated_normal_op.cc",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "6",
    "number_of_lines_deleted_vulnerable_to_cve": "7",
    "vulnerable_lines": [
        "// Line_Reference 633:     int32_t num_batches = shape_tensor.flat<int32>()(0);",
        "// Line_Reference 636:     const int32_t num_dims = shape_tensor.dim_size(0);",
        "// Line_Reference 638:       samples_per_batch *= shape_tensor.flat<int32>()(i);",
        "// Line_Reference 643:     auto shape_vec = shape_tensor.flat<int32>();",
        "// Line_Reference 644:     TensorShape tensor_shape;",
        "// Line_Reference 645:     OP_REQUIRES_OK(ctx, TensorShapeUtils::MakeShape(",
        "// Line_Reference 646:                             shape_vec.data(), shape_vec.size(), &tensor_shape));"
    ]
}
