{
    "cve_id": "CVE-2022-0645",
    "cve_description": "Open redirect vulnerability via endpoint authorize_and_redirect/?redirect= in GitHub repository posthog/posthog prior to 1.34.1.",
    "cve_publish_date": "2022-04-19",
    "cwe_id": "CWE-601",
    "cwe_name": "URL Redirection to Untrusted Site ('Open Redirect')",
    "cwe_description": "A web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a Redirect. This simplifies phishing attacks.",
    "commit_message": "fix(toolbar): only redirect to hosts in app_urls (#9268)\n\n* fix(toolbar): only redirect to hosts in app_urls\r\n\r\n* fix mypy and regex",
    "type_of_change": "Modification",
    "filename_of_changes": "decide.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "17",
    "number_of_lines_deleted_vulnerable_to_cve": "10",
    "vulnerable_lines": [
        "// Line_Reference 26:         hostname = parse_domain(url)",
        "// Line_Reference 27:         if hostname:",
        "// Line_Reference 28:             permitted_domains.append(hostname)",
        "// Line_Reference 30:     origin = parse_domain(request.headers.get(\"Origin\"))",
        "// Line_Reference 31:     referer = parse_domain(request.headers.get(\"Referer\"))",
        "// Line_Reference 34:             pattern = \"^{}$\".format(permitted_domain.replace(\".\", \"\\\\.\").replace(\"*\", \"(.*)\"))",
        "// Line_Reference 35:             if (origin and re.search(pattern, origin)) or (referer and re.search(pattern, referer)):",
        "// Line_Reference 36:                 return True",
        "// Line_Reference 37:         else:",
        "// Line_Reference 38:             if permitted_domain == origin or permitted_domain == referer:"
    ]
}
