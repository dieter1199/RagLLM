{
    "cve_id": "CVE-2022-2582",
    "cve_description": "The AWS S3 Crypto SDK sends an unencrypted hash of the plaintext alongside the ciphertext as a metadata field. This hash can be used to brute force the plaintext, if the hash is readable to the attacker. AWS now blocks this metadata field, but older SDK versions still send it.",
    "cve_publish_date": "2022-12-27",
    "cwe_id": "CWE-326",
    "cwe_name": "Inadequate Encryption Strength",
    "cwe_description": "The product stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required.",
    "commit_message": "service/s3/s3crypto: V2 Client Release (#3403)",
    "type_of_change": "Modification",
    "filename_of_changes": "decryption_client.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "24",
    "number_of_lines_deleted_vulnerable_to_cve": "34",
    "vulnerable_lines": [
        "// Line_Reference 85: //\tsess := session.New()",
        "// Line_Reference 93: \treq, out := c.S3Client.GetObjectRequest(input)",
        "// Line_Reference 94: \treq.Handlers.Unmarshal.PushBack(func(r *request.Request) {",
        "// Line_Reference 95: \t\tenv, err := c.LoadStrategy.Load(r)",
        "// Line_Reference 96: \t\tif err != nil {",
        "// Line_Reference 97: \t\t\tr.Error = err",
        "// Line_Reference 98: \t\t\tout.Body.Close()",
        "// Line_Reference 99: \t\t\treturn",
        "// Line_Reference 100: \t\t}",
        "// Line_Reference 101: ",
        "// Line_Reference 102: \t\t// If KMS should return the correct CEK algorithm with the proper",
        "// Line_Reference 103: \t\t// KMS key provider",
        "// Line_Reference 104: \t\tcipher, err := c.contentCipherFromEnvelope(r.Context(), env)",
        "// Line_Reference 105: \t\tif err != nil {",
        "// Line_Reference 106: \t\t\tr.Error = err",
        "// Line_Reference 107: \t\t\tout.Body.Close()",
        "// Line_Reference 108: \t\t\treturn",
        "// Line_Reference 109: \t\t}",
        "// Line_Reference 110: ",
        "// Line_Reference 111: \t\treader, err := cipher.DecryptContents(out.Body)",
        "// Line_Reference 112: \t\tif err != nil {",
        "// Line_Reference 113: \t\t\tr.Error = err",
        "// Line_Reference 114: \t\t\tout.Body.Close()",
        "// Line_Reference 115: \t\t\treturn",
        "// Line_Reference 116: \t\t}",
        "// Line_Reference 117: \t\tout.Body = reader",
        "// Line_Reference 118: \t})",
        "// Line_Reference 119: \treturn req, out",
        "// Line_Reference 124: \treq, out := c.GetObjectRequest(input)",
        "// Line_Reference 125: \treturn out, req.Send()",
        "// Line_Reference 136: \treq, out := c.GetObjectRequest(input)",
        "// Line_Reference 137: \treq.SetContext(ctx)",
        "// Line_Reference 138: \treq.ApplyOptions(opts...)",
        "// Line_Reference 139: \treturn out, req.Send()"
    ]
}
