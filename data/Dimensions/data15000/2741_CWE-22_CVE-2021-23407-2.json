{
    "cve_id": "CVE-2021-23407",
    "cve_description": "This affects the package elFinder.Net.Core from 0 and before 1.2.4. The user-controlled file name is not properly sanitized before it is used to create a file system path.",
    "cve_publish_date": "2021-07-14",
    "cwe_id": "CWE-22",
    "cwe_name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
    "cwe_description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
    "commit_message": "Finish security patch 1.2.4",
    "type_of_change": "Modification",
    "filename_of_changes": "FileSystemDriver.cs",
    "code_language": "C#",
    "number_of_lines_added_for_mitigation": "79",
    "number_of_lines_deleted_vulnerable_to_cve": "23",
    "vulnerable_lines": [
        "// Line_Reference 139:                 var newDir = new FileSystemDirectory(Path.Combine(targetPath.Directory.FullName, cmd.Name), volume);",
        "// Line_Reference 152:                 var newDir = new FileSystemDirectory(Path.Combine(targetPath.Directory.FullName, dirName), volume);",
        "// Line_Reference 179:             var newFile = new FileSystemFile(Path.Combine(targetPath.Directory.FullName, cmd.Name), volume);",
        "// Line_Reference 516:                     string uploadFullName = Path.Combine(dest.FullName, Path.GetFileName(formFile.FileName));",
        "// Line_Reference 527:                             var fullBakName = Path.Combine(uploadFileInfo.Parent.FullName, backupName);",
        "// Line_Reference 544:                             uploadFullName = Path.Combine(uploadFileInfo.DirectoryName, newName);",
        "// Line_Reference 729:                     var newDest = Path.Combine(dstPath.Directory.FullName, src.Directory.Name);",
        "// Line_Reference 736:                         var fullBakName = Path.Combine(newDestDir.Parent.FullName, backupName);",
        "// Line_Reference 793:                     var newDest = Path.Combine(dstPath.Directory.FullName, file.Name);",
        "// Line_Reference 802:                         var fullBakName = Path.Combine(newDestFile.Parent.FullName, backupName);",
        "// Line_Reference 849:                     var newDest = Path.Combine(src.Directory.Parent.FullName, newName);",
        "// Line_Reference 915:             var directoryInfo = targetPath.Directory;",
        "// Line_Reference 923:             var archivePath = Path.Combine(directoryInfo.FullName, filename);",
        "// Line_Reference 982:                 fromPath = Path.Combine(fromPath, Path.GetFileNameWithoutExtension(targetPath.File.Name));",
        "// Line_Reference 1008:                     string fullName = PathHelper.GetFullPathNormalized(fromPath, entry.FullName);",
        "// Line_Reference 1273:             var memStream = new MemoryStream();",
        "// Line_Reference 1279: ",
        "// Line_Reference 1413:             string newPath = Path.Combine(newDir, file.Name);",
        "// Line_Reference 1422:                     newPath = Path.Combine(newDir, newName);",
        "// Line_Reference 1442:             string newPath = Path.Combine(newDir, file.Name);",
        "// Line_Reference 1450:                     newPath = Path.Combine(newDir, newName);",
        "// Line_Reference 1509:                     var newDir = new FileSystemDirectory(Path.Combine(currentNewDest.FullName, dir.Name), directory.Volume);",
        "// Line_Reference 1553:                     var newDir = new FileSystemDirectory(Path.Combine(currentNewDest.FullName, dir.Name), srcDir.Volume);"
    ]
}
