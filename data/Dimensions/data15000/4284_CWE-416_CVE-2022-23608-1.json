{
    "cve_id": "CVE-2022-23608",
    "cve_description": "PJSIP is a free and open source multimedia communication library written in C language implementing standard based protocols such as SIP, SDP, RTP, STUN, TURN, and ICE. In versions up to and including 2.11.1 when in a dialog set (or forking) scenario, a hash key shared by multiple UAC dialogs can potentially be prematurely freed when one of the dialogs is destroyed . The issue may cause a dialog set to be registered in the hash table multiple times (with different hash keys) leading to undefined behavior such as dialog list collision which eventually leading to endless loop. A patch is available in commit db3235953baa56d2fb0e276ca510fefca751643f which will be included in the next release. There are no known workarounds for this issue.",
    "cve_publish_date": "2022-02-22",
    "cwe_id": "CWE-416",
    "cwe_name": "Use After Free",
    "cwe_description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
    "commit_message": "Merge pull request from GHSA-ffff-m5fm-qm62\n\n* Update pjsip_ua_unregister_dlg():\n- update the hash key if the dialog being unregistered is used as hash key.\n- add an assertion check to make sure that the dlg_set to be removed is valid (can be found in the hash table).\n\n* Change hash key string comparison method.",
    "type_of_change": "Modification",
    "filename_of_changes": "sip_ua_layer.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "42",
    "number_of_lines_deleted_vulnerable_to_cve": "6",
    "vulnerable_lines": [
        "// Line_Reference 337: \t\t\t         dlg->local.info->tag.ptr,",
        "// Line_Reference 338:                                  (unsigned)dlg->local.info->tag.slen,",
        "// Line_Reference 354: \t\t             dlg->local.info->tag.ptr,",
        "// Line_Reference 355:                              (unsigned)dlg->local.info->tag.slen,",
        "// Line_Reference 400: \tpj_hash_set_lower(NULL, mod_ua.dlg_table, dlg->local.info->tag.ptr,",
        "// Line_Reference 401: \t\t          (unsigned)dlg->local.info->tag.slen,"
    ]
}
