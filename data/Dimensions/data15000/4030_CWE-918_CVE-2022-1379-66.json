{
    "cve_id": "CVE-2022-1379",
    "cve_description": "URL Restriction Bypass in GitHub repository plantuml/plantuml prior to V1.2022.5. An attacker can abuse this to bypass URL restrictions that are imposed by the different security profiles and achieve server side request forgery (SSRF). This allows accessing restricted internal resources/servers or sending requests to third party servers.",
    "cve_publish_date": "2022-05-14",
    "cwe_id": "CWE-918",
    "cwe_name": "Server-Side Request Forgery (SSRF)",
    "cwe_description": "The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
    "commit_message": "Import version 1.2022.5",
    "type_of_change": "Modification",
    "filename_of_changes": "RoundedContainer.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "21",
    "number_of_lines_deleted_vulnerable_to_cve": "19",
    "vulnerable_lines": [
        "// Line_Reference 39: ",
        "// Line_Reference 61: \t\tif (dim.getWidth() == 0) {",
        "// Line_Reference 63: \t\t}",
        "// Line_Reference 76: \t\tug = ug.apply(backColor.bg()).apply(borderColor);",
        "// Line_Reference 78: \t\trect.setDeltaShadow(shadowing);",
        "// Line_Reference 79: \t\tug.apply(stroke).draw(rect);",
        "// Line_Reference 80: ",
        "// Line_Reference 81: \t\tfinal double yLine = titleHeight + attributeHeight;",
        "// Line_Reference 83: \t\tug = ug.apply(imgBackcolor.bg());",
        "// Line_Reference 85: \t\tfinal double thickness = stroke.getThickness();",
        "// Line_Reference 87: \t\tfinal URectangle inner = new URectangle(dim.getWidth() - 4 * thickness,",
        "// Line_Reference 88: \t\t\t\tdim.getHeight() - titleHeight - 4 * thickness - attributeHeight).rounded(rounded);",
        "// Line_Reference 89: \t\tug.apply(imgBackcolor).apply(new UTranslate(2 * thickness, yLine + 2 * thickness)).draw(inner);",
        "// Line_Reference 91: \t\tif (titleHeight > 0) {",
        "// Line_Reference 92: \t\t\tug.apply(stroke).apply(UTranslate.dy(yLine)).draw(ULine.hline(dim.getWidth()));",
        "// Line_Reference 93: \t\t}",
        "// Line_Reference 95: \t\tif (attributeHeight > 0) {",
        "// Line_Reference 96: \t\t\tug.apply(stroke).apply(UTranslate.dy(yLine - attributeHeight)).draw(ULine.hline(dim.getWidth()));",
        "// Line_Reference 97: \t\t}"
    ]
}
