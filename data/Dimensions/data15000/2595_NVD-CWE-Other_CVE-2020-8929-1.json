{
    "cve_id": "CVE-2020-8929",
    "cve_description": "A mis-handling of invalid unicode characters in the Java implementation of Tink versions prior to 1.5 allows an attacker to change the ID part of a ciphertext, which result in the creation of a second ciphertext that can decrypt to the same plaintext. This can be a problem with encrypting deterministic AEAD with a single key, and rely on a unique ciphertext-per-plaintext.",
    "cve_publish_date": "2020-10-19",
    "cwe_id": "NVD-CWE-Other",
    "cwe_name": "Other",
    "cwe_description": "NVD is only using a subset of CWE for mapping instead of the entire CWE, and the weakness type is not covered by that subset.",
    "commit_message": "Fixing ciphertext malleability issue in Java caused by storing the ciphertext prefix in a hashmap keyed by UTF8 encoded strings, instead of byte arrays, leading to the ability to retrieve keys with IDs that happen to be invalid Unicode strings with a changed ID.\n\nPiperOrigin-RevId: 336763863",
    "type_of_change": "Modification",
    "filename_of_changes": "PrimitiveSet.java",
    "code_language": "Java",
    "number_of_lines_added_for_mitigation": "47",
    "number_of_lines_deleted_vulnerable_to_cve": "7",
    "vulnerable_lines": [
        "// Line_Reference 22: import java.nio.charset.Charset;",
        "// Line_Reference 52:   private static final Charset UTF_8 = Charset.forName(\"UTF-8\");",
        "// Line_Reference 120:     List<Entry<P>> found = primitives.get(new String(identifier, UTF_8));",
        "// Line_Reference 139:   private ConcurrentMap<java.lang.String, List<Entry<P>>> primitives =",
        "// Line_Reference 140:       new ConcurrentHashMap<java.lang.String, List<Entry<P>>>();",
        "// Line_Reference 188:     // Cannot use [] as keys in hash map, convert to string.",
        "// Line_Reference 189:     String identifier = new String(entry.getIdentifier(), UTF_8);"
    ]
}
