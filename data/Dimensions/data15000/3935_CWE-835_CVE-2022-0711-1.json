{
    "cve_id": "CVE-2022-0711",
    "cve_description": "A flaw was found in the way HAProxy processed HTTP responses containing the \"Set-Cookie2\" header. This flaw could allow an attacker to send crafted HTTP response packets which lead to an infinite loop, eventually resulting in a denial of service condition. The highest threat from this vulnerability is availability.",
    "cve_publish_date": "2022-03-02",
    "cwe_id": "CWE-835",
    "cwe_name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
    "cwe_description": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.",
    "commit_message": "BUG/MAJOR: http/htx: prevent unbounded loop in http_manage_server_side_cookies\n\nEnsure calls to http_find_header() terminate. If a \"Set-Cookie2\"\nheader is found then the while(1) loop in\nhttp_manage_server_side_cookies() will never terminate, resulting in\nthe watchdog firing and the process terminating via SIGABRT.\n\nThe while(1) loop becomes unbounded because an unmatched call to\nhttp_find_header(\"Set-Cookie\") will leave ctx->blk=NULL. Subsequent\ncalls to check for \"Set-Cookie2\" will now enumerate from the beginning\nof all the blocks and will once again match on subsequent\npasses (assuming a match first time around), hence the loop becoming\nunbounded.\n\nThis issue was introduced with HTX and this fix should be backported\nto all versions supporting HTX.\n\nMany thanks to Grant Spence (gspence@redhat.com) for working through\nthis issue with me.",
    "type_of_change": "Modification",
    "filename_of_changes": "http_ana.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 3421: \t\tif (!http_find_header(htx, ist(\"Set-Cookie\"), &ctx, 1)) {"
    ]
}
