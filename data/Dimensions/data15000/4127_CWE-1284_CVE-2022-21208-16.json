{
    "cve_id": "CVE-2022-21208",
    "cve_description": "The package node-opcua before 2.74.0 are vulnerable to Denial of Service (DoS) due to a missing limitation on the number of received chunks - per single session or in total for all concurrent sessions. An attacker can exploit this vulnerability by sending an unlimited number of huge chunks (e.g. 2GB each) without sending the Final closing chunk.",
    "cve_publish_date": "2022-08-23",
    "cwe_id": "CWE-1284",
    "cwe_name": "Improper Validation of Specified Quantity in Input",
    "cwe_description": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
    "commit_message": "fix message chunk overflow detection",
    "type_of_change": "Modification",
    "filename_of_changes": "test_e2e_issue896_execute_method_access_control.ts",
    "code_language": "TypeScript",
    "number_of_lines_added_for_mitigation": "29",
    "number_of_lines_deleted_vulnerable_to_cve": "27",
    "vulnerable_lines": [
        "// Line_Reference 1: import {allPermissions, OPCUAClient, OPCUAServer, StatusCodes, UserTokenType, WellKnownRoles, makeRoles} from \"node-opcua\";",
        "// Line_Reference 7:         {username: \"Gandalf\", password: \"g\", roles: makeRoles([WellKnownRoles.AuthenticatedUser,WellKnownRoles.ConfigureAdmin])},",
        "// Line_Reference 8:         {username: \"Frodo\", password: \"f\", roles:  makeRoles([WellKnownRoles.AuthenticatedUser])},",
        "// Line_Reference 15:             getUserRoles: username => users.find(user => user.username === username)!.roles,",
        "// Line_Reference 16: ",
        "// Line_Reference 17:             isValidUser(username, password) {",
        "// Line_Reference 18:                 const user = users.find(user => user.username === username);",
        "// Line_Reference 23:     })",
        "// Line_Reference 26:         endpointMustExist: false,",
        "// Line_Reference 39:         namespace.addMethod(folder, {",
        "// Line_Reference 40:             browseName: \"doIt\",",
        "// Line_Reference 41:             nodeId: \"ns=1;s=doIt\",",
        "// Line_Reference 42:             rolePermissions: [",
        "// Line_Reference 43:                 {",
        "// Line_Reference 44:                     roleId:  WellKnownRoles.ConfigureAdmin,",
        "// Line_Reference 45:                     permissions: allPermissions",
        "// Line_Reference 46:                 }",
        "// Line_Reference 47:             ]",
        "// Line_Reference 48:             /*",
        "// Line_Reference 53:         }).bindMethod((inputArguments, context, callback) => {",
        "// Line_Reference 54:             wasExecuted = true;",
        "// Line_Reference 55:             callback(null, {statusCode: StatusCodes.Good})",
        "// Line_Reference 56:         });",
        "// Line_Reference 66:     beforeEach(() => wasExecuted = false);",
        "// Line_Reference 77:             inputArguments: [],",
        "// Line_Reference 93:             inputArguments: [],",
        "// Line_Reference 99: });"
    ]
}
