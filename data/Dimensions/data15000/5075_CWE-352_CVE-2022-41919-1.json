{
    "cve_id": "CVE-2022-41919",
    "cve_description": "Fastify is a web framework with minimal overhead and plugin architecture. The attacker can use the incorrect `Content-Type` to bypass the `Pre-Flight` checking of `fetch`. `fetch()` requests with Content-Typeâ€™s essence as \"application/x-www-form-urlencoded\", \"multipart/form-data\", or \"text/plain\", could potentially be used to invoke routes that only accepts `application/json` content type, thus bypassing any CORS protection, and therefore they could lead to a Cross-Site Request Forgery attack. This issue has been patched in version 4.10.2 and 3.29.4. As a workaround, implement Cross-Site Request Forgery protection using `@fastify/csrf'.",
    "cve_publish_date": "2022-11-22",
    "cwe_id": "CWE-352",
    "cwe_name": "Cross-Site Request Forgery (CSRF)",
    "cwe_description": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
    "commit_message": "Merge pull request from GHSA-3fjj-p79j-c9hh\n\n* fix: content-type spoofing\n\n* refactor: improve performance",
    "type_of_change": "Modification",
    "filename_of_changes": "contentTypeParser.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "75",
    "number_of_lines_deleted_vulnerable_to_cve": "6",
    "vulnerable_lines": [
        "// Line_Reference 36:   this.parserList = ['application/json', 'text/plain']",
        "// Line_Reference 69:       this.parserList.unshift(contentType)",
        "// Line_Reference 102:     const parserName = this.parserList[i]",
        "// Line_Reference 103:     if (contentType.indexOf(parserName) !== -1) {",
        "// Line_Reference 104:       const parser = this.customParsers.get(parserName)",
        "// Line_Reference 113:     if (parserRegExp.test(contentType)) {"
    ]
}
