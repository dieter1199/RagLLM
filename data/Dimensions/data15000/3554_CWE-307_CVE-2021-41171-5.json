{
    "cve_id": "CVE-2021-41171",
    "cve_description": "eLabFTW is an open source electronic lab notebook manager for research teams. In versions of eLabFTW before 4.1.0, it allows attackers to bypass a brute-force protection mechanism by using many different forged PHPSESSID values in HTTP Cookie header. This issue has been addressed by implementing brute force login protection, as recommended by Owasp with Device Cookies. This mechanism will not impact users and will effectively thwart any brute-force attempts at guessing passwords. The only correct way to address this is to upgrade to version 4.1.0. Adding rate limitation upstream of the eLabFTW service is of course a valid option, with or without upgrading.",
    "cve_publish_date": "2021-10-22",
    "cwe_id": "CWE-307",
    "cwe_name": "Improper Restriction of Excessive Authentication Attempts",
    "cwe_description": "The product does not implement sufficient measures to prevent multiple failed authentication attempts within a short time frame, making it more susceptible to brute force attacks.",
    "commit_message": "Add JWT anti brute-force login protection (#2831)\n\n* WIP: better brute force login protection\r\n\r\n* split device token classes\r\n\r\n* mv schema to 63\r\n\r\n* use int(10) in schema too\r\n\r\n* add sysadmin action to clear locked users/devices\r\n\r\n* remove the FK on authfail\r\n\r\n* remove authfail users_id fk constraint in structure.sql\r\n\r\n* catch the invalid device token exception\r\n\r\n* remove the banned users stuff\r\n\r\n* change invalid token message\r\n\r\n* cleanup the exceptions a bit\r\n\r\n* get rid of the useless InvalidCsrfTokenException\r\n\r\n* remove unused js import\r\n\r\n* introduce the AuthenticatedUser and AnonymousUser classes\r\n\r\nand improve the App and init.inc.php files\r\n\r\n* remove the populateFromEmail method from Users\r\n\r\n* get rid of the useless SessionAuth\r\n\r\nand rearrange init Auth and App\r\n\r\n* be more specific about which kind of user can be loaded in App\r\n\r\n* change Update class signature\r\n\r\n* use init.inc.php in ApiController\r\n\r\n* don't store the whole teamconfigarr in app",
    "type_of_change": "Modification",
    "filename_of_changes": "AuthTest.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "5",
    "number_of_lines_deleted_vulnerable_to_cve": "21",
    "vulnerable_lines": [
        "// Line_Reference 12: use Elabftw\\Exceptions\\InvalidCredentialsException;",
        "// Line_Reference 14: use Monolog\\Logger;",
        "// Line_Reference 16: use Symfony\\Component\\HttpFoundation\\Session\\Session;",
        "// Line_Reference 24:         $Request = Request::createFromGlobals();",
        "// Line_Reference 25:         $Session = new Session();",
        "// Line_Reference 26:         $App = new App($Request, $Session, Config::getConfig(), new Logger('elabftw'), new Csrf($Request, $Session));",
        "// Line_Reference 27:         $this->Auth = new Auth($App);",
        "// Line_Reference 30:     /*",
        "// Line_Reference 31:     public function testCheckCredentials()",
        "// Line_Reference 33:         $this->assertEquals($this->Auth->checkCredentials('phpunit@example.com', 'phpunitftw'), 1);",
        "// Line_Reference 34:         $this->expectException(InvalidCredentialsException::class);",
        "// Line_Reference 35:         $this->Auth->checkCredentials('phpunit@example.com', 'wrong password');",
        "// Line_Reference 37:      */",
        "// Line_Reference 38: ",
        "// Line_Reference 39:     /*",
        "// Line_Reference 40:     public function testLogin()",
        "// Line_Reference 41:     {",
        "// Line_Reference 42:         $this->assertTrue($this->Auth->login($this->Auth->checkCredentials('phpunit@example.com', 'phpunitftw')));",
        "// Line_Reference 43:         //$this->assertFalse($this->Auth->login('toto@yopmail.com', '0'));",
        "// Line_Reference 44:     }",
        "// Line_Reference 45:      */"
    ]
}
