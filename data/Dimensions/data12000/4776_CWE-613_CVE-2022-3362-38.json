{
    "cve_id": "CVE-2022-3362",
    "cve_description": "Insufficient Session Expiration in GitHub repository ikus060/rdiffweb prior to 2.5.0.",
    "cve_publish_date": "2022-11-14",
    "cwe_id": "CWE-613",
    "cwe_name": "Insufficient Session Expiration",
    "cwe_description": "According to WASC, \"Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization.\"",
    "commit_message": "Delete user's session on password change\n\n* Revisit add, delete commit function\n* Clean-up Access Token using a scheduled job",
    "type_of_change": "Modification",
    "filename_of_changes": "_user.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "18",
    "number_of_lines_deleted_vulnerable_to_cve": "13",
    "vulnerable_lines": [
        "// Line_Reference 17: import datetime",
        "// Line_Reference 180:                 SshKey(userid=self.userid, fingerprint=key.fingerprint, key=key.getvalue()).add()",
        "// Line_Reference 182:                 SshKey.session.rollback()",
        "// Line_Reference 198:             obj = Token(userid=self.userid, name=name, hash_token=hash_password(token), expiration_time=expiration_time)",
        "// Line_Reference 199:             obj.add()",
        "// Line_Reference 201:             Token.session.rollback()",
        "// Line_Reference 224:         Base.delete(self)",
        "// Line_Reference 381:         logger.info(\"updating user password [%s]\", self.username)",
        "// Line_Reference 398:             # If token expired. Let delete it.",
        "// Line_Reference 400:                 access_token.delete()",
        "// Line_Reference 403:                 # When it matches, let update the record.",
        "// Line_Reference 404:                 access_token.access_time = datetime.datetime.utcnow",
        "// Line_Reference 405:                 return True"
    ]
}
