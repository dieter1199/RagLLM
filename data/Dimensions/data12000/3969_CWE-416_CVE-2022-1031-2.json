{
    "cve_id": "CVE-2022-1031",
    "cve_description": "Use After Free in op_is_set_bp in GitHub repository radareorg/radare2 prior to 5.6.6.",
    "cve_publish_date": "2022-03-22",
    "cwe_id": "CWE-416",
    "cwe_name": "Use After Free",
    "cwe_description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
    "commit_message": "Fix UAF in aaaa on arm/thumb switching ##crash\n\n* Reported by @peacock-doris via huntr.dev\n* Reproducer tests_65185\n* This is a logic fix, but not the fully safe as changes in the code\n  can result on UAF again, to properly protect r2 from crashing we\n  need to break the ABI and add refcounting to RRegItem, which can't\n  happen in 5.6.x because of abi-compat rules",
    "type_of_change": "Modification",
    "filename_of_changes": "var.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 1051: \t\tif (maxstackframe != 0 && (frame_off > maxstackframe || frame_off < -maxstackframe)) {"
    ]
}
