{
    "cve_id": "CVE-2022-35977",
    "cve_description": "Redis is an in-memory database that persists on disk. Authenticated users issuing specially crafted `SETRANGE` and `SORT(_RO)` commands can trigger an integer overflow, resulting with Redis attempting to allocate impossible amounts of memory and abort with an out-of-memory (OOM) panic. The problem is fixed in Redis versions 7.0.8, 6.2.9 and 6.0.17. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "cve_publish_date": "2023-01-20",
    "cwe_id": "CWE-190",
    "cwe_name": "Integer Overflow or Wraparound",
    "cwe_description": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
    "commit_message": "Avoid integer overflows in SETRANGE and SORT (CVE-2022-35977) (#11720)\n\nAuthenticated users issuing specially crafted SETRANGE and SORT(_RO)\r\ncommands can trigger an integer overflow, resulting with Redis attempting\r\nto allocate impossible amounts of memory and abort with an OOM panic.",
    "type_of_change": "Modification",
    "filename_of_changes": "t_string.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "11",
    "number_of_lines_deleted_vulnerable_to_cve": "6",
    "vulnerable_lines": [
        "// Line_Reference 40: static int checkStringLength(client *c, long long size) {",
        "// Line_Reference 41:     if (!mustObeyClient(c) && size > server.proto_max_bulk_len) {",
        "// Line_Reference 457:         if (checkStringLength(c,offset+sdslen(value)) != C_OK)",
        "// Line_Reference 477:         if (checkStringLength(c,offset+sdslen(value)) != C_OK)",
        "// Line_Reference 706:         totlen = stringObjectLen(o)+sdslen(append->ptr);",
        "// Line_Reference 707:         if (checkStringLength(c,totlen) != C_OK)"
    ]
}
