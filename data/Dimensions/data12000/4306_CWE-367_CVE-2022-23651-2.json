{
    "cve_id": "CVE-2022-23651",
    "cve_description": "b2-sdk-python is a python library to access cloud storage provided by backblaze. Linux and Mac releases of the SDK version 1.14.0 and below contain a key disclosure vulnerability that, in certain conditions, can be exploited by local attackers through a time-of-check-time-of-use (TOCTOU) race condition. SDK users of the SqliteAccountInfo format are vulnerable while users of the InMemoryAccountInfo format are safe. The SqliteAccountInfo saves API keys (and bucket name-to-id mapping) in a local database file ($XDG_CONFIG_HOME/b2/account_info, ~/.b2_account_info or a user-defined path). When first created, the file is world readable and is (typically a few milliseconds) later altered to be private to the user. If the directory containing the file is readable by a local attacker then during the brief period between file creation and permission modification, a local attacker can race to open the file and maintain a handle to it. This allows the local attacker to read the contents after the file after the sensitive information has been saved to it. Consumers of this SDK who rely on it to save data using SqliteAccountInfo class should upgrade to the latest version of the SDK. Those who believe a local user might have opened a handle using this race condition, should remove the affected database files and regenerate all application keys. Users should upgrade to b2-sdk-python 1.14.1 or later.",
    "cve_publish_date": "2022-02-23",
    "cwe_id": "CWE-367",
    "cwe_name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
    "cwe_description": "The product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state.",
    "commit_message": "Merge pull request from GHSA-p867-fxfr-ph2w\n\n* Fix setting permissions for local sqlite database\n\nThanks to Jan Schejbal for responsible disclosure!\n\nThere used to be a brief moment between creation of the sqlite\ndatabase and applying chmod, now there is no such delay.\n\n* Rename self.home to self.test_home in tests\n\n* Actually call the test cleanup\n\n* Add a test for sqlite permissions\n\n* Skip the sqlite chmod test on Windows",
    "type_of_change": "Modification",
    "filename_of_changes": "test_account_info.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "30",
    "number_of_lines_deleted_vulnerable_to_cve": "15",
    "vulnerable_lines": [
        "// Line_Reference 322:         self.home = tempfile.mkdtemp()",
        "// Line_Reference 325:         for cleanup_method in [lambda: os.unlink(self.db_path), lambda: shutil.rmtree(self.home)]:",
        "// Line_Reference 327:                 cleanup_method",
        "// Line_Reference 374:         with mock.patch('os.environ', env or {'HOME': self.home}):",
        "// Line_Reference 383:                 'HOME': self.home,",
        "// Line_Reference 384:                 'USERPROFILE': self.home,",
        "// Line_Reference 388:         assert os.path.join(self.home, '.b2_account_info') == actual_path",
        "// Line_Reference 394:                     'HOME': self.home,",
        "// Line_Reference 395:                     'USERPROFILE': self.home,",
        "// Line_Reference 400:                 expected_path = os.path.abspath(os.path.join(self.home, '.b2_account_info'))",
        "// Line_Reference 409:             default_db_file_location = os.path.join(self.home, '.b2_account_info')",
        "// Line_Reference 413:                     'HOME': self.home,",
        "// Line_Reference 414:                     'USERPROFILE': self.home,",
        "// Line_Reference 426:                     'HOME': self.home,",
        "// Line_Reference 427:                     'USERPROFILE': self.home,"
    ]
}
