{
    "cve_id": "CVE-2017-1001000",
    "cve_description": "The register_routes function in wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php in the REST API in WordPress 4.7.x before 4.7.2 does not require an integer identifier, which allows remote attackers to modify arbitrary pages via a request for wp-json/wp/v2/posts followed by a numeric value and a non-numeric value, as demonstrated by the wp-json/wp/v2/posts/123?id=123helloworld URI.",
    "cve_publish_date": "2017-04-03",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "REST API: Unify object access handling for simplicity.\n\nRather than repeating ourselves, unifying the access into a single method keeps everything tidy. While we're at it, add in additional schema handling for common parameters.\n\nSee #38792.\nBuilt from https://develop.svn.wordpress.org/trunk@39954\n\n\ngit-svn-id: http://core.svn.wordpress.org/trunk@39891 1a063a9b-81f0-0310-95a4-ce76da25c4cd",
    "type_of_change": "Modification",
    "filename_of_changes": "class-wp-rest-posts-controller.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "62",
    "number_of_lines_deleted_vulnerable_to_cve": "24",
    "vulnerable_lines": [
        "// Line_Reference 362: ",
        "// Line_Reference 363: \t\t$post = get_post( (int) $request['id'] );",
        "// Line_Reference 431: \t\t$id   = (int) $request['id'];",
        "// Line_Reference 432: \t\t$post = get_post( $id );",
        "// Line_Reference 433: ",
        "// Line_Reference 434: \t\tif ( empty( $id ) || empty( $post->ID ) || $this->post_type !== $post->post_type ) {",
        "// Line_Reference 435: \t\t\treturn new WP_Error( 'rest_post_invalid_id', __( 'Invalid post ID.' ), array( 'status' => 404 ) );",
        "// Line_Reference 442: \t\t\t$response->link_header( 'alternate',  get_permalink( $id ), array( 'type' => 'text/html' ) );",
        "// Line_Reference 595: \t\t$post = get_post( $request['id'] );",
        "// Line_Reference 627: \t\t$id   = (int) $request['id'];",
        "// Line_Reference 628: \t\t$post = get_post( $id );",
        "// Line_Reference 629: ",
        "// Line_Reference 630: \t\tif ( empty( $id ) || empty( $post->ID ) || $this->post_type !== $post->post_type ) {",
        "// Line_Reference 631: \t\t\treturn new WP_Error( 'rest_post_invalid_id', __( 'Invalid post ID.' ), array( 'status' => 404 ) );",
        "// Line_Reference 717: ",
        "// Line_Reference 718: \t\t$post = get_post( $request['id'] );",
        "// Line_Reference 737: \t\t$id    = (int) $request['id'];",
        "// Line_Reference 738: \t\t$force = (bool) $request['force'];",
        "// Line_Reference 739: ",
        "// Line_Reference 740: \t\t$post = get_post( $id );",
        "// Line_Reference 741: ",
        "// Line_Reference 742: \t\tif ( empty( $id ) || empty( $post->ID ) || $this->post_type !== $post->post_type ) {",
        "// Line_Reference 743: \t\t\treturn new WP_Error( 'rest_post_invalid_id', __( 'Invalid post ID.' ), array( 'status' => 404 ) );",
        "// Line_Reference 904: \t\t\t$prepared_post->ID = absint( $request['id'] );"
    ]
}
