import net.sourceforge.plantuml.skin.rose.Rose;
import net.sourceforge.plantuml.style.StyleSignature;
public void drawU(UGraphic ug, UmlDiagramType umlDiagramType, ISkinParam skinParam2) {
Style style = null;
final double rounded;
final double diagonalCorner;
final double shadowing;
if (UseStyle.useBetaStyle()) {
final USymbol uSymbol = group.getUSymbol() == null ? USymbols.PACKAGE : group.getUSymbol();
final StyleSignatureBasic tmp = getDefaultStyleDefinition(umlDiagramType.getStyleName(), uSymbol);
style = tmp.withTOBECHANGED(group.getStereotype()).getMergedStyle(skinParam.getCurrentStyleBuilder());
shadowing = style.value(PName.Shadowing).asDouble();
if (group.getColors().getColor(ColorType.LINE) != null)
borderColor = group.getColors().getColor(ColorType.LINE);
else
borderColor = style.value(PName.LineColor).asColor(skinParam2.getThemeStyle(),
skinParam2.getIHtmlColorSet());
rounded = style.value(PName.RoundCorner).asDouble();
diagonalCorner = style.value(PName.DiagonalCorner).asDouble();
} else {
if (group.getUSymbol() == null)
shadowing = skinParam2.shadowing2(group.getStereotype(), USymbols.PACKAGE.getSkinParameter()) ? 3 : 0;
else
shadowing = skinParam2.shadowing2(group.getStereotype(), group.getUSymbol().getSkinParameter()) ? 3 : 0;
rounded = IEntityImage.CORNER;
if (umlDiagramType == UmlDiagramType.STATE)
borderColor = getColor(ColorParam.stateBorder, skinParam, group.getStereotype());
else if (umlDiagramType == UmlDiagramType.ACTIVITY)
borderColor = getColor(ColorParam.packageBorder, skinParam, group.getStereotype());
else
borderColor = getColor(ColorParam.packageBorder, skinParam, group.getStereotype());
diagonalCorner = 0;
}
UStroke strokeForState = getDefaultStyleDefinition(SName.stateDiagram, null)
.getMergedStyle(skinParam.getCurrentStyleBuilder()).getStroke();
if (group.getColors().getSpecificLineStroke() != null)
strokeForState = group.getColors().getSpecificLineStroke();
if (group.getColors().getColor(ColorType.LINE) != null)
borderColor = group.getColors().getColor(ColorType.LINE);
drawUState(ug, borderColor, skinParam2, strokeForState, umlDiagramType, rounded, shadowing);
packageStyle = skinParam2.packageStyle();
final HColor tmp = skinParam2.getHtmlColor(border, group.getStereotype(), false);
final UStroke stroke;
if (UseStyle.useBetaStyle())
stroke = getStrokeInternal(group, skinParam2, style);
else
stroke = getStrokeInternal(group, skinParam2, null);
backColor = getBackColor(backColor, skinParam2, group.getStereotype(), umlDiagramType.getStyleName(),
final double roundCorner;
if (UseStyle.useBetaStyle())
roundCorner = rounded;
else
roundCorner = group.getUSymbol() == null ? 0
: group.getUSymbol().getSkinParameter().getRoundCorner(skinParam, group.getStereotype());
decoration.drawU(ug, backColor, borderColor, shadowing, roundCorner,
skinParam2.getHorizontalAlignment(AlignmentParam.packageTitleAlignment, null, false, null),
skinParam2.getStereotypeAlignment(), diagonalCorner);
static public UStroke getStrokeInternal(IGroup group, ISkinParam skinParam, Style style) {
if (style != null)
return style.getStroke();
if (group.getUSymbol() != null && group.getUSymbol() != USymbols.PACKAGE)
return group.getUSymbol().getSkinParameter().getStroke(skinParam, group.getStereotype());
return GeneralImageBuilder.getForcedStroke(group.getStereotype(), skinParam);
private HColor getColorLegacy(ISkinParam skinParam, ColorParam colorParam, Stereotype stereo) {
return new Rose().getHtmlColor(skinParam, stereo, colorParam);
private void drawUState(UGraphic ug, HColor borderColor, ISkinParam skinParam2, UStroke stroke,
UmlDiagramType umlDiagramType, double rounded, double shadowing) {
HColor stateBack = getBackColor(umlDiagramType, styleGroup);
if (UseStyle.useBetaStyle() == false && stateBack == null)
stateBack = getColorLegacy(skinParam2, ColorParam.stateBackground, group.getStereotype());
final HColor background;
if (UseStyle.useBetaStyle() == false)
background = getColorLegacy(skinParam2, ColorParam.background, null);
else
background = stateBack;
final TextBlock attribute = GeneralImageBuilder.stateHeader(group, styleGroup, skinParam2);
attributeHeight + (attributeHeight > 0 ? IEntityImage.MARGIN : 0), borderColor, stateBack, background,
if (UseStyle.useBetaStyle())
return style.value(PName.BackGroundColor).asColor(skinParam.getThemeStyle(), skinParam.getIHtmlColorSet());
final USymbol sym = group.getUSymbol() == null ? USymbols.PACKAGE : group.getUSymbol();
final ColorParam backparam = umlDiagramType == UmlDiagramType.ACTIVITY ? ColorParam.partitionBackground
: sym.getColorParamBack();
final HColor c1 = skinParam.getHtmlColor(backparam, stereo, false);
if (c1 != null)
return c1;
if (parentCluster == null)
return null;
return parentCluster.getBackColor(umlDiagramType, style);
