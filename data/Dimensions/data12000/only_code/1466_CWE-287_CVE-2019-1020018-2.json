before_action :check_local_login_allowed, only: %i(create forgot_password email_login)
skip_before_action :preload_json, :check_xhr, only: %i(sso sso_login sso_provider destroy email_login one_time_password)
valid_token = !!EmailToken.valid_token_format?(token)
user = EmailToken.confirmable(token)&.user
if valid_token && user&.totp_enabled?
@second_factor_required = true
@backup_codes_enabled = true if user&.backup_codes_enabled?
return render layout: 'no_ember'
elsif !user.authenticate_second_factor(second_factor_token, second_factor_method)
@error = I18n.t('login.invalid_second_factor_code')
return render layout: 'no_ember'
@error = login_not_approved[:error]
@error = payload[:error]
return redirect_to path("/")
else
@error = I18n.t('email_login.invalid_token')
render layout: 'no_ember'