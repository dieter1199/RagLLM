type => {
Name => 'JUMBFType',
label      => { Name => 'JUMBFLabel' },
id         => { Name => 'JUMBFID', Description => 'JUMBF ID' },
signature  => { Name => 'JUMBFSignature', PrintConv => 'unpack "H*", $val' },
$et->HandleTag($tagTablePtr, 'type', substr($$dataPt, $pos, 16));
$et->HandleTag($tagTablePtr, 'label', $name);
$et->HandleTag($tagTablePtr, 'id', Get32u($dataPt, $pos));
$et->HandleTag($tagTablePtr, 'signature', substr($$dataPt, $pos, 32));
($hdr eq "\0\0\0\x0cJXL \x0d\x0a\x87\x0a" and $$et{IsJXL} = 1)) # (JPEG XL)
if ($hdr =~ /^\xff\x0a/) {
$outfile and $et->Error('Writing of JPEG XL codestream files is not yet supported'), return 0;
# JPEG XL codestream
$et->SetFileType('JXC',undef,'JXL'); # (PH invention)
$et->Warn('JPEG XL codestream support is currently experimental',1);
ProcessJXLCodestream($et, \$hdr);
return 1;
}
$et->Warn('JPEG XL support is currently experimental',1) if $$et{IsJXL};
# Returns: 1 on success, 0 if this wasn't a valid JPEG XL file
return ProcessJP2($et, $dirInfo);