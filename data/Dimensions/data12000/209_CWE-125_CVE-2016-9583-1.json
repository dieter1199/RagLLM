{
    "cve_id": "CVE-2016-9583",
    "cve_description": "An out-of-bounds heap read vulnerability was found in the jpc_pi_nextpcrl() function of jasper before 2.0.6 when processing crafted input.",
    "cve_publish_date": "2018-08-01",
    "cwe_id": "CWE-125",
    "cwe_name": "Out-of-bounds Read",
    "cwe_description": "The product reads data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "Fixed numerous integer overflow problems in the code for packet iterators\nin the JPC decoder.",
    "type_of_change": "Modification",
    "filename_of_changes": "jpc_t2cod.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "77",
    "number_of_lines_deleted_vulnerable_to_cve": "53",
    "vulnerable_lines": [
        "// Line_Reference 201: \t\t\t  pi->compno < JAS_CAST(int, pchg->compnoend); ++pi->compno, ++pi->picomp) {",
        "// Line_Reference 250: \t\t\t\txstep = picomp->hsamp * (1 << (pirlvl->prcwidthexpn +",
        "// Line_Reference 251: \t\t\t\t  picomp->numrlvls - rlvlno - 1));",
        "// Line_Reference 252: \t\t\t\tystep = picomp->vsamp * (1 << (pirlvl->prcheightexpn +",
        "// Line_Reference 253: \t\t\t\t  picomp->numrlvls - rlvlno - 1));",
        "// Line_Reference 283: \t\t\t\t\tif (((pi->x == pi->xstart && ((trx0 << r) % (1 << rpx)))",
        "// Line_Reference 284: \t\t\t\t\t  || !(pi->x % (1 << rpx))) &&",
        "// Line_Reference 285: \t\t\t\t\t  ((pi->y == pi->ystart && ((try0 << r) % (1 << rpy)))",
        "// Line_Reference 286: \t\t\t\t\t  || !(pi->y % (1 << rpy)))) {",
        "// Line_Reference 287: \t\t\t\t\t\tprchind = JPC_FLOORDIVPOW2(JPC_CEILDIV(pi->x, pi->picomp->hsamp",
        "// Line_Reference 288: \t\t\t\t\t\t  << r), pi->pirlvl->prcwidthexpn) - JPC_FLOORDIVPOW2(trx0,",
        "// Line_Reference 289: \t\t\t\t\t\t  pi->pirlvl->prcwidthexpn);",
        "// Line_Reference 290: \t\t\t\t\t\tprcvind = JPC_FLOORDIVPOW2(JPC_CEILDIV(pi->y, pi->picomp->vsamp",
        "// Line_Reference 291: \t\t\t\t\t\t  << r), pi->pirlvl->prcheightexpn) - JPC_FLOORDIVPOW2(try0,",
        "// Line_Reference 292: \t\t\t\t\t\t  pi->pirlvl->prcheightexpn);",
        "// Line_Reference 297: \t\t\t\t\t\t  pi->numlyrs && pi->lyrno < JAS_CAST(int, pchg->lyrnoend); ++pi->lyrno) {",
        "// Line_Reference 342: \t\t\t\txstep = picomp->hsamp * (1 <<",
        "// Line_Reference 343: \t\t\t\t  (pirlvl->prcwidthexpn + picomp->numrlvls -",
        "// Line_Reference 344: \t\t\t\t  rlvlno - 1));",
        "// Line_Reference 345: \t\t\t\tystep = picomp->vsamp * (1 <<",
        "// Line_Reference 346: \t\t\t\t  (pirlvl->prcheightexpn + picomp->numrlvls -",
        "// Line_Reference 347: \t\t\t\t  rlvlno - 1));",
        "// Line_Reference 348: \t\t\t\tpi->xstep = (!pi->xstep) ? xstep :",
        "// Line_Reference 349: \t\t\t\t  JAS_MIN(pi->xstep, xstep);",
        "// Line_Reference 350: \t\t\t\tpi->ystep = (!pi->ystep) ? ystep :",
        "// Line_Reference 351: \t\t\t\t  JAS_MIN(pi->ystep, ystep);",
        "// Line_Reference 378: \t\t\t\t\tif (((pi->x == pi->xstart && ((trx0 << r) % (1 << rpx))) ||",
        "// Line_Reference 380: \t\t\t\t\t  ((pi->y == pi->ystart && ((try0 << r) % (1 << rpy))) ||",
        "// Line_Reference 382: \t\t\t\t\t\tprchind = JPC_FLOORDIVPOW2(JPC_CEILDIV(pi->x, pi->picomp->hsamp",
        "// Line_Reference 383: \t\t\t\t\t\t  << r), pi->pirlvl->prcwidthexpn) - JPC_FLOORDIVPOW2(trx0,",
        "// Line_Reference 384: \t\t\t\t\t\t  pi->pirlvl->prcwidthexpn);",
        "// Line_Reference 385: \t\t\t\t\t\tprcvind = JPC_FLOORDIVPOW2(JPC_CEILDIV(pi->y, pi->picomp->vsamp",
        "// Line_Reference 386: \t\t\t\t\t\t  << r), pi->pirlvl->prcheightexpn) - JPC_FLOORDIVPOW2(try0,",
        "// Line_Reference 387: \t\t\t\t\t\t  pi->pirlvl->prcheightexpn);",
        "// Line_Reference 391: \t\t\t\t\t\t  pi->lyrno < JAS_CAST(int, pchg->lyrnoend); ++pi->lyrno) {",
        "// Line_Reference 429: \tfor (pi->compno = pchg->compnostart, pi->picomp =",
        "// Line_Reference 430: \t  &pi->picomps[pi->compno]; pi->compno < JAS_CAST(int, pchg->compnoend) && pi->compno < pi->numcomps; ++pi->compno,",
        "// Line_Reference 431: \t  ++pi->picomp) {",
        "// Line_Reference 462: \t\t\t\t\tif (((pi->x == pi->xstart && ((trx0 << r) % (1 << rpx))) ||",
        "// Line_Reference 464: \t\t\t\t\t  ((pi->y == pi->ystart && ((try0 << r) % (1 << rpy))) ||",
        "// Line_Reference 466: \t\t\t\t\t\tprchind = JPC_FLOORDIVPOW2(JPC_CEILDIV(pi->x, pi->picomp->hsamp",
        "// Line_Reference 467: \t\t\t\t\t\t  << r), pi->pirlvl->prcwidthexpn) - JPC_FLOORDIVPOW2(trx0,",
        "// Line_Reference 468: \t\t\t\t\t\t  pi->pirlvl->prcwidthexpn);",
        "// Line_Reference 469: \t\t\t\t\t\tprcvind = JPC_FLOORDIVPOW2(JPC_CEILDIV(pi->y, pi->picomp->vsamp",
        "// Line_Reference 470: \t\t\t\t\t\t  << r), pi->pirlvl->prcheightexpn) - JPC_FLOORDIVPOW2(try0,",
        "// Line_Reference 471: \t\t\t\t\t\t  pi->pirlvl->prcheightexpn);",
        "// Line_Reference 472: \t\t\t\t\t\tpi->prcno = prcvind *",
        "// Line_Reference 473: \t\t\t\t\t\t  pi->pirlvl->numhprcs +",
        "// Line_Reference 474: \t\t\t\t\t\t  prchind;",
        "// Line_Reference 475: \t\t\t\t\t\tassert(pi->prcno <",
        "// Line_Reference 476: \t\t\t\t\t\t  pi->pirlvl->numprcs);",
        "// Line_Reference 477: \t\t\t\t\t\tfor (pi->lyrno = 0; pi->lyrno <",
        "// Line_Reference 478: \t\t\t\t\t\t  pi->numlyrs && pi->lyrno < JAS_CAST(int, pchg->lyrnoend); ++pi->lyrno) {"
    ]
}
