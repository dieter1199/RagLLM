{
    "cve_id": "CVE-2019-1020018",
    "cve_description": "Discourse before 2.3.0 and 2.4.x before 2.4.0.beta3 lacks a confirmation screen when logging in via an email link.",
    "cve_publish_date": "2019-07-29",
    "cwe_id": "CWE-287",
    "cwe_name": "Improper Authentication",
    "cwe_description": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
    "commit_message": "Merge pull request from GHSA-hv9p-jfm4-gpr9\n\n* SECURITY: Add confirmation screen when logging in via email link\n\n* SECURITY: Add confirmation screen when logging in via user-api OTP\n\n* FIX: Correct translation key in session controller specs\n\n* FIX: Use .email-login class for page",
    "type_of_change": "Modification",
    "filename_of_changes": "session_controller.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "51",
    "number_of_lines_deleted_vulnerable_to_cve": "21",
    "vulnerable_lines": [
        "// Line_Reference 14:   before_action :check_local_login_allowed, only: %i(create forgot_password email_login)",
        "// Line_Reference 17:   skip_before_action :preload_json, :check_xhr, only: %i(sso sso_login sso_provider destroy email_login one_time_password)",
        "// Line_Reference 313:     valid_token = !!EmailToken.valid_token_format?(token)",
        "// Line_Reference 314:     user = EmailToken.confirmable(token)&.user",
        "// Line_Reference 316:     if valid_token && user&.totp_enabled?",
        "// Line_Reference 318:         @second_factor_required = true",
        "// Line_Reference 319:         @backup_codes_enabled = true if user&.backup_codes_enabled?",
        "// Line_Reference 320:         return render layout: 'no_ember'",
        "// Line_Reference 321:       elsif !user.authenticate_second_factor(second_factor_token, second_factor_method)",
        "// Line_Reference 323:         @error = I18n.t('login.invalid_second_factor_code')",
        "// Line_Reference 324:         return render layout: 'no_ember'",
        "// Line_Reference 330:         @error = login_not_approved[:error]",
        "// Line_Reference 332:         @error = payload[:error]",
        "// Line_Reference 335:         return redirect_to path(\"/\")",
        "// Line_Reference 337:     else",
        "// Line_Reference 338:       @error = I18n.t('email_login.invalid_token')",
        "// Line_Reference 341:     render layout: 'no_ember'",
        "// Line_Reference 345:     otp_username = $redis.get \"otp_#{params[:token]}\"",
        "// Line_Reference 348:       log_on_user(user)",
        "// Line_Reference 349:       $redis.del \"otp_#{params[:token]}\"",
        "// Line_Reference 350:       return redirect_to path(\"/\")"
    ]
}
