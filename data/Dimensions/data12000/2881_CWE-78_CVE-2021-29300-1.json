{
    "cve_id": "CVE-2021-29300",
    "cve_description": "The @ronomon/opened library before 1.5.2 is vulnerable to a command injection vulnerability which would allow a remote attacker to execute commands on the system if the library was used with untrusted input.",
    "cve_publish_date": "2021-05-24",
    "cwe_id": "CWE-78",
    "cwe_name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
    "cwe_description": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
    "commit_message": "Fix command injection vulnerability\n\n@ronomon/opened was vulnerable to a command injection vulnerability\nthat would allow a remote attacker to execute commands on the system if\nthe library was used with untrusted input.\n\nThe root cause of the problem was line 87 in index.js which took\npotential untrusted input as part of a string executed as a command\nby `child_process.exec()`. While the arguments were escaped by\n@ronomon/opened, an attacker could still bypass this sanitization\nbecause `child_process.exec()` will also interpret the string as a\nshell command.\n\nThis fix moves to `execFile` to spawn the binary with separate\narguments that will not also be interpreted as shell commands.\n\nThanks to FÃ¡bio Freitas, a security analyst at Checkmarx's CxSCA group,\nfor discovering and disclosing the vulnerability, providing clear steps\nto reproduce and suggestions for mitigation.",
    "type_of_change": "Modification",
    "filename_of_changes": "index.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "3",
    "number_of_lines_deleted_vulnerable_to_cve": "7",
    "vulnerable_lines": [
        "// Line_Reference 82:     var escapedPaths = paths.map(",
        "// Line_Reference 83:       function(path) {",
        "// Line_Reference 84:         return '\"' + path.replace(/\"/g, '\\\\\"') + '\"';",
        "// Line_Reference 85:       }",
        "// Line_Reference 86:     );",
        "// Line_Reference 87:     var command = 'lsof -F n -- ' + escapedPaths.join(' ');",
        "// Line_Reference 92:     Node.child.exec(command, options,"
    ]
}
