{
    "cve_id": "CVE-2019-10793",
    "cve_description": "dot-object before 2.1.3 is vulnerable to Prototype Pollution. The set function could be tricked into adding or modifying properties of Object.prototype using a __proto__ payload.",
    "cve_publish_date": "2020-02-18",
    "cwe_id": "CWE-74",
    "cwe_name": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
    "cwe_description": "The product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.",
    "commit_message": "guard for possible prototype polution",
    "type_of_change": "Modification",
    "filename_of_changes": "index.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "80",
    "number_of_lines_deleted_vulnerable_to_cve": "57",
    "vulnerable_lines": [
        "// Line_Reference 52:   return path.split(sep)",
        "// Line_Reference 86:     obj[k] = obj[k] ||",
        "// Line_Reference 87:       (this.useArray && isIndex(a[0]) ? [] : {})",
        "// Line_Reference 105:     if (!this.override &&",
        "// Line_Reference 106:       isArrayOrObject(obj[k]) && !isEmptyObject(obj[k])) {",
        "// Line_Reference 198:       if (i === (keys.length - 1)) {",
        "// Line_Reference 224:     obj = obj.filter(function (n) { return n !== undefined })",
        "// Line_Reference 282:       ret = ret[keys[0]].filter(function (v) { return v !== undefined })",
        "// Line_Reference 339: DotObject.prototype.transfer = function (source, target, obj1, obj2, mods, merge) {",
        "// Line_Reference 341:     this.set(target,",
        "// Line_Reference 342:       _process(",
        "// Line_Reference 343:         this.pick(source, obj1, true),",
        "// Line_Reference 344:         mods",
        "// Line_Reference 345:       ), obj2, merge)",
        "// Line_Reference 370:     this.set(target,",
        "// Line_Reference 373:         JSON.parse(",
        "// Line_Reference 374:           JSON.stringify(",
        "// Line_Reference 375:             this.pick(source, obj1, false)",
        "// Line_Reference 376:           )",
        "// Line_Reference 377:         ),",
        "// Line_Reference 379:       ), obj2, merge)",
        "// Line_Reference 411:     if (i === (keys.length - 1)) {",
        "// Line_Reference 450:   *    \"some\": {",
        "// Line_Reference 451:   *      \"thing\": \"else\"",
        "// Line_Reference 452:   *    }",
        "// Line_Reference 457:   *    \"some.thing\": \"name\"",
        "// Line_Reference 469:   Object.keys(recipe).forEach(function (key) {",
        "// Line_Reference 470:     this.set(recipe[key], this.pick(key, obj), tgt)",
        "// Line_Reference 471:   }.bind(this))",
        "// Line_Reference 497:   Object.keys(obj).forEach(function (key) {",
        "// Line_Reference 498:     var index = isArray && this.useBrackets ? '[' + key + ']' : key",
        "// Line_Reference 499:     if (",
        "// Line_Reference 500:       (",
        "// Line_Reference 502:         (",
        "// Line_Reference 503:           (isObject(obj[key]) && !isEmptyObject(obj[key])) ||",
        "// Line_Reference 504:           (Array.isArray(obj[key]) && (!this.keepArray && (obj[key].length !== 0)))",
        "// Line_Reference 505:         )",
        "// Line_Reference 506:       )",
        "// Line_Reference 507:     ) {",
        "// Line_Reference 508:       if (isArray && this.useBrackets) {",
        "// Line_Reference 509:         var previousKey = path[path.length - 1] || ''",
        "// Line_Reference 510:         return this.dot(obj[key], tgt, path.slice(0, -1).concat(previousKey + index))",
        "// Line_Reference 511:       } else {",
        "// Line_Reference 512:         return this.dot(obj[key], tgt, path.concat(index))",
        "// Line_Reference 513:       }",
        "// Line_Reference 514:     } else {",
        "// Line_Reference 515:       if (isArray && this.useBrackets) {",
        "// Line_Reference 516:         tgt[path.join(this.separator).concat('[' + key + ']')] = obj[key]",
        "// Line_Reference 518:         tgt[path.concat(index).join(this.separator)] = obj[key]",
        "// Line_Reference 520:     }",
        "// Line_Reference 521:   }.bind(this))",
        "// Line_Reference 535: DotObject.dot = wrap('dot')",
        "// Line_Reference 536: ",
        "// Line_Reference 537: ;['override', 'overwrite'].forEach(function (prop) {",
        "// Line_Reference 546: })",
        "// Line_Reference 547: ",
        "// Line_Reference 548: ;['useArray', 'keepArray', 'useBrackets'].forEach(function (prop) {"
    ]
}
