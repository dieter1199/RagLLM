{
    "cve_id": "CVE-2018-13982",
    "cve_description": "Smarty_Security::isTrustedResourceDir() in Smarty before 3.1.33 is prone to a path traversal vulnerability due to insufficient template code sanitization. This allows attackers controlling the executed template code to bypass the trusted directory security restriction and read arbitrary files.",
    "cve_publish_date": "2018-09-18",
    "cwe_id": "CWE-22",
    "cwe_name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
    "cwe_description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
    "commit_message": "- bugfix  regarding Security Vulnerability did not solve the problem under Linux",
    "type_of_change": "Modification",
    "filename_of_changes": "Smarty.class.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "12",
    "number_of_lines_deleted_vulnerable_to_cve": "32",
    "vulnerable_lines": [
        "// Line_Reference 1045:         static $nds = null;",
        "// Line_Reference 1046:         static $sepDotSep = null;",
        "// Line_Reference 1047:          static $sepSep =null;",
        "// Line_Reference 1048:         if (!isset($nds)) {",
        "// Line_Reference 1049:             $nds = array('/' => '\\\\', '\\\\' => '/');",
        "// Line_Reference 1050:             $sepDotSep = DIRECTORY_SEPARATOR . '.' . DIRECTORY_SEPARATOR;",
        "// Line_Reference 1051:             $sepSep = DIRECTORY_SEPARATOR . DIRECTORY_SEPARATOR;",
        "// Line_Reference 1052:         }",
        "// Line_Reference 1054:         $path = str_replace(array($nds[DIRECTORY_SEPARATOR], $sepDotSep), DIRECTORY_SEPARATOR, $path);",
        "// Line_Reference 1066:        // remove noop 'DIRECTORY_SEPARATOR DIRECTORY_SEPARATOR' and 'DIRECTORY_SEPARATOR.DIRECTORY_SEPARATOR' patterns",
        "// Line_Reference 1067:         $path = str_replace(array($sepDotSep,$sepSep), DIRECTORY_SEPARATOR, $path);",
        "// Line_Reference 1068:         // resolve '..DIRECTORY_SEPARATOR' pattern, smallest first",
        "// Line_Reference 1069:         if (strpos($path, '..' . DIRECTORY_SEPARATOR) !== false &&",
        "// Line_Reference 1070:             preg_match_all('#[\\\\\\\\/]([.][.][\\\\\\\\/])+#u', $path, $match)",
        "// Line_Reference 1071:         ) {",
        "// Line_Reference 1072:             $counts = array();",
        "// Line_Reference 1073:             foreach ($match[ 0 ] as $m) {",
        "// Line_Reference 1074:                 $counts[] = (int)((strlen($m) - 1) / 3);",
        "// Line_Reference 1075:             }",
        "// Line_Reference 1076:             sort($counts);",
        "// Line_Reference 1077:             foreach ($counts as $count) {",
        "// Line_Reference 1078:                 $path = preg_replace('#([\\\\\\\\/]+[^\\\\\\\\/]+){' . $count .",
        "// Line_Reference 1079:                                      '}[\\\\\\\\/]+([.][.][\\\\\\\\/]+){' . $count . '}#u',",
        "// Line_Reference 1080:                                      DIRECTORY_SEPARATOR,",
        "// Line_Reference 1081:                                      $path);",
        "// Line_Reference 1082:             }",
        "// Line_Reference 1083:         }",
        "// Line_Reference 1287:         } else if (isset($this->_cache[ $name ])) {",
        "// Line_Reference 1289:         } else if (in_array($name, $this->obsoleteProperties)) {",
        "// Line_Reference 1293:         }",
        "// Line_Reference 1312:         } else if (in_array($name, $this->obsoleteProperties)) {",
        "// Line_Reference 1320:         }"
    ]
}
