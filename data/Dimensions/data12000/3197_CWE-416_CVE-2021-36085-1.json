{
    "cve_id": "CVE-2021-36085",
    "cve_description": "The CIL compiler in SELinux 3.2 has a use-after-free in __cil_verify_classperms (called from __verify_map_perm_classperms and hashtab_map).",
    "cve_publish_date": "2021-07-01",
    "cwe_id": "CWE-416",
    "cwe_name": "Use After Free",
    "cwe_description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
    "commit_message": "libsepol/cil: Destroy classperm list when resetting map perms\n\nMap perms share the same struct as regular perms, but only the\nmap perms use the classperms field. This field is a pointer to a\nlist of classperms that is created and added to when resolving\nclassmapping rules, so the map permission doesn't own any of the\ndata in the list and this list should be destroyed when the AST is\nreset.\n\nWhen resetting a perm, destroy the classperms list without destroying\nthe data in the list.\n\nSigned-off-by: James Carter <jwcart2@gmail.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "cil_reset_ast.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 39: \tcil_reset_classperms_list(perm->classperms);"
    ]
}
