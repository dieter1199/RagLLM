{
    "cve_id": "CVE-2021-21315",
    "cve_description": "The System Information Library for Node.JS (npm package \"systeminformation\") is an open source collection of functions to retrieve detailed hardware, system and OS information. In systeminformation before version 5.3.1 there is a command injection vulnerability. Problem was fixed in version 5.3.1. As a workaround instead of upgrading, be sure to check or sanitize service parameters that are passed to si.inetLatency(), si.inetChecksite(), si.services(), si.processLoad() ... do only allow strings, reject any arrays. String sanitation works as expected.",
    "cve_publish_date": "2021-02-16",
    "cwe_id": "CWE-78",
    "cwe_name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
    "cwe_description": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
    "commit_message": "docker, processLoad fixed potential security issue",
    "type_of_change": "Modification",
    "filename_of_changes": "docker.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "48",
    "number_of_lines_deleted_vulnerable_to_cve": "16",
    "vulnerable_lines": [
        "// Line_Reference 188:   containerID = containerID || '';",
        "// Line_Reference 191:       if (containerID) {",
        "// Line_Reference 197:         _docker_socket.getInspect(containerID.trim(), data => {",
        "// Line_Reference 328:   // fallback - if only callback is given",
        "// Line_Reference 329:   if (util.isFunction(containerIDs) && !callback) {",
        "// Line_Reference 330:     callback = containerIDs;",
        "// Line_Reference 331:     containerArray = ['*'];",
        "// Line_Reference 332:   } else {",
        "// Line_Reference 333:     containerIDs = containerIDs || '*';",
        "// Line_Reference 334:     containerIDs = containerIDs.trim().toLowerCase().replace(/,+/g, '|');",
        "// Line_Reference 335:     containerArray = containerIDs.split('|');",
        "// Line_Reference 336:   }",
        "// Line_Reference 337: ",
        "// Line_Reference 447:   containerID = containerID || '';",
        "// Line_Reference 451:       if (containerID) {",
        "// Line_Reference 457:         _docker_socket.getProcesses(containerID, data => {"
    ]
}
