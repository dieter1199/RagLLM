{
    "cve_id": "CVE-2020-6018",
    "cve_description": "Valve's Game Networking Sockets prior to version v1.2.0 improperly handles long encrypted messages in function AES_GCM_DecryptContext::Decrypt() when compiled using libsodium, leading to a Stack-Based Buffer Overflow and resulting in a memory corruption and possibly even a remote code execution.",
    "cve_publish_date": "2020-12-02",
    "cwe_id": "CWE-787",
    "cwe_name": "Out-of-bounds Write",
    "cwe_description": "The product writes data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "Check if output buffer is too small.\n\nIt really seems like libsodium (whose entire purpose is to make crypto\nidiot-proof) making me mess with these details is a flaw in the API design.\n\nAlso, correct Hungarian.",
    "type_of_change": "Modification",
    "filename_of_changes": "crypto_libsodium.cpp",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "20",
    "number_of_lines_deleted_vulnerable_to_cve": "7",
    "vulnerable_lines": [
        "// Line_Reference 53:     unsigned long long pcbEncryptedDataAndTag_longlong = *pcbEncryptedDataAndTag;",
        "// Line_Reference 56: \t\tstatic_cast<unsigned char*>( pEncryptedDataAndTag ), &pcbEncryptedDataAndTag_longlong,",
        "// Line_Reference 64:     *pcbEncryptedDataAndTag = pcbEncryptedDataAndTag_longlong;",
        "// Line_Reference 75:     unsigned long long pcbPlaintextData_longlong;",
        "// Line_Reference 76: ",
        "// Line_Reference 78: \t\tstatic_cast<unsigned char*>( pPlaintextData ), &pcbPlaintextData_longlong,",
        "// Line_Reference 85:     *pcbPlaintextData = pcbPlaintextData_longlong;"
    ]
}
