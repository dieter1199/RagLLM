{
    "cve_id": "CVE-2016-7781",
    "cve_description": "SQL injection vulnerability in framework/modules/blog/controllers/blogController.php in Exponent CMS 2.3.9 and earlier allows remote attackers to execute arbitrary SQL commands via the author parameter.",
    "cve_publish_date": "2017-03-07",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "iniitial effort to greatly enhance system security (xss, sql inject, file exploit, rce, etc...)",
    "type_of_change": "Modification",
    "filename_of_changes": "expFramework.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "36",
    "number_of_lines_deleted_vulnerable_to_cve": "34",
    "vulnerable_lines": [
        "// Line_Reference 288:     $controller = new $fullControllerName($src, $parms);",
        "// Line_Reference 289: ",
        "// Line_Reference 294: ",
        "// Line_Reference 327:     $perms = $controller->permissions();",
        "// Line_Reference 328: ",
        "// Line_Reference 334:     $common_action = null;",
        "// Line_Reference 335:     //FIXME do we also need to account for actions with camelcase action/perm such as editItem ???",
        "// Line_Reference 336:     if ($parms['action'] == 'update') {",
        "// Line_Reference 338:     } elseif ($parms['action'] == 'edit' && (!isset($parms['id']) || $parms['id'] == 0)) {",
        "// Line_Reference 343:         // action convention for controllers that manage more than one model (datatype).",
        "// Line_Reference 344:         // if you preface the name action name with a common crud action name we can check perms on",
        "// Line_Reference 345:         // it with the developer needing to specify any...better safe than sorry.",
        "// Line_Reference 346:         // i.e if the action is edit_mymodel it will be checked against the edit permission",
        "// Line_Reference 347:         if (stristr($parms['action'], '_')) $parts = explode(\"_\", $parms['action']);",
        "// Line_Reference 348:         $common_action = isset($parts[0]) ? $parts[0] : null;",
        "// Line_Reference 427:             $msg = empty($controller->requires_login[$perm_action]) ? gt(\"You must be logged in to perform this action\") : $controller->requires_login[$perm_action];",
        "// Line_Reference 435:             $msg = empty($controller->requires_login[$common_action]) ? gt(\"You must be logged in to perform this action\") : $controller->requires_login[$common_action];",
        "// Line_Reference 440:     }",
        "// Line_Reference 441: ",
        "// Line_Reference 444: ",
        "// Line_Reference 489: }",
        "// Line_Reference 517: ",
        "// Line_Reference 543: ",
        "// Line_Reference 584: ",
        "// Line_Reference 590: ",
        "// Line_Reference 595: ",
        "// Line_Reference 596:     // get the common configuration files",
        "// Line_Reference 611:     // look for a config form for this module's current view",
        "// Line_Reference 628: ",
        "// Line_Reference 674: ",
        "// Line_Reference 762:     // set path information",
        "// Line_Reference 767: ",
        "// Line_Reference 807: ",
        "// Line_Reference 820: "
    ]
}
