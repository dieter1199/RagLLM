{
    "cve_id": "CVE-2021-41082",
    "cve_description": "Discourse is a platform for community discussion. In affected versions any private message that includes a group had its title and participating user exposed to users that do not have access to the private messages. However, access control for the private messages was not compromised as users were not able to view the posts in the leaked private message despite seeing it in their inbox. The problematic commit was reverted around 32 minutes after it was made. Users are encouraged to upgrade to the latest commit if they are running Discourse against the `tests-passed` branch.",
    "cve_publish_date": "2021-09-20",
    "cwe_id": "CWE-863",
    "cwe_name": "Incorrect Authorization",
    "cwe_description": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check. This allows attackers to bypass intended access restrictions.",
    "commit_message": "Partially revert \"PERF: Improve query performance all inbox private messages. (#14304)\" (#14344)\n\nThis partially reverts commit ddb458343dc39a7a8c99467dcd809b444514fe2c.\r\n\r\nSeeing performance degrade on larger sites so back to drawing board on\r\nthis one. Instead of the DISTINCT LEFT JOIN, we switch back to\r\nIN(subquery).",
    "type_of_change": "Modification",
    "filename_of_changes": "private_message_lists.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "36",
    "number_of_lines_deleted_vulnerable_to_cve": "22",
    "vulnerable_lines": [
        "// Line_Reference 148:         result = result.joins(<<~SQL)",
        "// Line_Reference 149:         LEFT JOIN topic_allowed_users tau",
        "// Line_Reference 150:           ON tau.topic_id = topics.id",
        "// Line_Reference 151:           AND tau.user_id = #{user.id.to_i}",
        "// Line_Reference 152:         LEFT JOIN topic_allowed_groups tag",
        "// Line_Reference 153:           ON tag.topic_id = topics.id",
        "// Line_Reference 154:           #{group_ids.present? ? \"AND tag.group_id IN (#{group_ids.join(\",\")})\" : \"\"}",
        "// Line_Reference 155:         SQL",
        "// Line_Reference 156: ",
        "// Line_Reference 157:         result = result",
        "// Line_Reference 158:           .where(\"tag.topic_id IS NOT NULL OR tau.topic_id IS NOT NULL\")",
        "// Line_Reference 159:           .distinct",
        "// Line_Reference 241:       list = list.joins(<<~SQL)",
        "// Line_Reference 242:       LEFT JOIN group_archived_messages gm",
        "// Line_Reference 243:         ON gm.topic_id = topics.id",
        "// Line_Reference 244:         #{group_ids.present? ? \"AND gm.group_id IN (#{group_ids.join(\",\")})\" : \"\"}",
        "// Line_Reference 245:       LEFT JOIN user_archived_messages um",
        "// Line_Reference 246:         ON um.user_id = #{user.id.to_i}",
        "// Line_Reference 247:         AND um.topic_id = topics.id",
        "// Line_Reference 248:       SQL",
        "// Line_Reference 250:       list =",
        "// Line_Reference 257:       list"
    ]
}
