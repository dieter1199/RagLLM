{
    "cve_id": "CVE-2018-6346",
    "cve_description": "A potential denial-of-service issue in the Proxygen handling of invalid HTTP2 priority settings (specifically a circular dependency). This affects Proxygen prior to v2018.12.31.00.",
    "cve_publish_date": "2018-12-31",
    "cwe_id": "CWE-388",
    "cwe_name": "7PK - Errors",
    "cwe_description": "This category represents one of the phyla in the Seven Pernicious Kingdoms vulnerability classification. It includes weaknesses that occur when an application does not properly handle errors that occur during processing. According to the authors of the Seven Pernicious Kingdoms, \"Errors and error handling represent a class of API. Errors related to error handling are so common that they deserve a special kingdom of their own. As with 'API Abuse,' there are two ways to introduce an error-related security vulnerability: the most common one is handling errors poorly (or not at all). The second is producing errors that either give out too much information (to possible attackers) or are difficult to handle.\"",
    "commit_message": "Fix h2 codec state after bad priority header.\n\nSummary:\nIt's possible for the http2 codec to enter an invalid state after processing a http2 header with invalid priorities.\nCVE-2018-6346\n\nReviewed By: maxgeorg\n\nDifferential Revision: D13510025\n\nfbshipit-source-id: 7c4e42daf1cd2b912454d13a66ab8488d1863263",
    "type_of_change": "Modification",
    "filename_of_changes": "HTTP2Codec.cpp",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "10",
    "number_of_lines_deleted_vulnerable_to_cve": "8",
    "vulnerable_lines": [
        "// Line_Reference 519:     if (curHeader_.stream == priority->streamDependency) {",
        "// Line_Reference 520:       streamError(folly::to<string>(\"Circular dependency for txn=\",",
        "// Line_Reference 521:                                     curHeader_.stream),",
        "// Line_Reference 522:                   ErrorCode::PROTOCOL_ERROR,",
        "// Line_Reference 523:                   curHeader_.type == http2::FrameType::HEADERS);",
        "// Line_Reference 524:       return ErrorCode::NO_ERROR;",
        "// Line_Reference 525:     }",
        "// Line_Reference 526: "
    ]
}
