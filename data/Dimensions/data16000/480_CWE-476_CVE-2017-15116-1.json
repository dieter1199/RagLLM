{
    "cve_id": "CVE-2017-15116",
    "cve_description": "The rngapi_reset function in crypto/rng.c in the Linux kernel before 4.2 allows attackers to cause a denial of service (NULL pointer dereference).",
    "cve_publish_date": "2017-11-30",
    "cwe_id": "CWE-476",
    "cwe_name": "NULL Pointer Dereference",
    "cwe_description": "The product dereferences a pointer that it expects to be valid but is NULL.",
    "commit_message": "crypto: rng - Remove old low-level rng interface\n\nNow that all rng implementations have switched over to the new\ninterface, we can remove the old low-level interface.\n\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
    "type_of_change": "Modification",
    "filename_of_changes": "crypto.h",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "0",
    "number_of_lines_deleted_vulnerable_to_cve": "30",
    "vulnerable_lines": [
        "// Line_Reference 141: struct crypto_rng;",
        "// Line_Reference 429: /**",
        "// Line_Reference 430:  * struct old_rng_alg - random number generator definition",
        "// Line_Reference 431:  * @rng_make_random: The function defined by this variable obtains a random",
        "// Line_Reference 432:  *\t\t     number. The random number generator transform must generate",
        "// Line_Reference 433:  *\t\t     the random number out of the context provided with this",
        "// Line_Reference 434:  *\t\t     call.",
        "// Line_Reference 435:  * @rng_reset: Reset of the random number generator by clearing the entire state.",
        "// Line_Reference 436:  *\t       With the invocation of this function call, the random number",
        "// Line_Reference 437:  *             generator shall completely reinitialize its state. If the random",
        "// Line_Reference 438:  *\t       number generator requires a seed for setting up a new state,",
        "// Line_Reference 439:  *\t       the seed must be provided by the consumer while invoking this",
        "// Line_Reference 440:  *\t       function. The required size of the seed is defined with",
        "// Line_Reference 441:  *\t       @seedsize .",
        "// Line_Reference 442:  * @seedsize: The seed size required for a random number generator",
        "// Line_Reference 443:  *\t      initialization defined with this variable. Some random number",
        "// Line_Reference 444:  *\t      generators like the SP800-90A DRBG does not require a seed as the",
        "// Line_Reference 445:  *\t      seeding is implemented internally without the need of support by",
        "// Line_Reference 446:  *\t      the consumer. In this case, the seed size is set to zero.",
        "// Line_Reference 447:  */",
        "// Line_Reference 448: struct old_rng_alg {",
        "// Line_Reference 449: \tint (*rng_make_random)(struct crypto_rng *tfm, u8 *rdata,",
        "// Line_Reference 450: \t\t\t       unsigned int dlen);",
        "// Line_Reference 451: \tint (*rng_reset)(struct crypto_rng *tfm, u8 *seed, unsigned int slen);",
        "// Line_Reference 452: ",
        "// Line_Reference 453: \tunsigned int seedsize;",
        "// Line_Reference 454: };",
        "// Line_Reference 455: ",
        "// Line_Reference 462: #define cra_rng\t\tcra_u.rng",
        "// Line_Reference 562: \t\tstruct old_rng_alg rng;"
    ]
}
