{
    "cve_id": "CVE-2022-29264",
    "cve_description": "An issue was discovered in coreboot 4.13 through 4.16. On APs, arbitrary code execution in SMM may occur.",
    "cve_publish_date": "2022-04-25",
    "cwe_id": "NVD-CWE-noinfo",
    "cwe_name": "Insufficient Information",
    "cwe_description": "There is insufficient information about the issue to classify it; details are unkown or unspecified.",
    "commit_message": "cpu/x86/smm: Introduce SMM module loader version 2\n\nXeon-SP Skylake Scalable Processor can have 36 CPU threads (18 cores).\nCurrent coreboot SMM is unable to handle more than ~32 CPU threads.\nThis patch introduces a version 2 of the SMM module loader which\naddresses this problem. Having two versions of the SMM module loader\nprevents any issues to current projects. Future Xeon-SP products will\nbe using this version of the SMM loader.  Subsequent patches will\nenable board specific functionality for Xeon-SP.\n\nThe reason for moving to version 2 is the state save area begins to\nencroach upon the SMI handling code when more than 32 CPU threads are\nin the system. This can cause system hangs, reboots, etc. The second\nchange is related to staggered entry points with simple near jumps. In\nthe current loader, near jumps will not work because the CPU is jumping\nwithin the same code segment. In version 2, \"far\" address jumps are\nnecessary therefore protected mode must be enabled first. The SMM\nlayout and how the CPUs are staggered are documented in the code.\n\nBy making the modifications above, this allows the smm module loader to\nexpand easily as more CPU threads are added.\n\nTEST=build for Tiogapass platform under OCP mainboard. Enable the\nfollowing in Kconfig.\n        select CPU_INTEL_COMMON_SMM\n        select SOC_INTEL_COMMON_BLOCK_SMM\n        select SMM_TSEG\n        select HAVE_SMI_HANDLER\n        select ACPI_INTEL_HARDWARE_SLEEP_VALUES\n\nDebug console will show all 36 cores relocated. Further tested by\ngenerating SMI's to port 0xb2 using XDP/ITP HW debugger and ensured all\ncores entering and exiting SMM properly. In addition, booted to Linux\n5.4 kernel and observed no issues during mp init.\n\nChange-Id: I00a23a5f2a46110536c344254868390dbb71854c\nSigned-off-by: Rocky Phagura <rphagura@fb.com>\nReviewed-on: https://review.coreboot.org/c/coreboot/+/43684\nTested-by: build bot (Jenkins) <no-reply@coreboot.org>\nReviewed-by: Angel Pons <th3fanbus@gmail.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "mp_init.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "31",
    "number_of_lines_deleted_vulnerable_to_cve": "8",
    "vulnerable_lines": [
        "// Line_Reference 731: ",
        "// Line_Reference 732: \tprintk(BIOS_DEBUG, \"New SMBASE 0x%08lx\\n\", perm_smbase);",
        "// Line_Reference 763: \t\t.num_concurrent_stacks = num_cpus,",
        "// Line_Reference 773: \tif (smm_setup_relocation_handler(&smm_params))",
        "// Line_Reference 775: ",
        "// Line_Reference 784: \t/* There are num_cpus concurrent stacks and num_cpus concurrent save",
        "// Line_Reference 785: \t * state areas. Lastly, set the stack size to 1KiB. */",
        "// Line_Reference 797: \tprintk(BIOS_DEBUG, \"Installing SMM handler to 0x%08lx\\n\", smbase);"
    ]
}
