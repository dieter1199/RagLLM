{
    "cve_id": "CVE-2020-24710",
    "cve_description": "Gophish before 0.11.0 allows SSRF attacks.",
    "cve_publish_date": "2020-10-28",
    "cwe_id": "CWE-918",
    "cwe_name": "Server-Side Request Forgery (SSRF)",
    "cwe_description": "The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
    "commit_message": "Implement SSRF Mitigations (#1940)\n\nInitial commit of SSRF mitigations.\r\n\r\nThis fixes #1908 by creating a *net.Dialer which restricts outbound connections to only allowed IP ranges. This implementation is based on the blog post at https://www.agwa.name/blog/post/preventing_server_side_request_forgery_in_golang\r\n\r\nTo keep things backwards compatible, by default we'll only block connections to 169.254.169.254, the link-local IP address commonly used in cloud environments to retrieve metadata about the running instance. For other internal addresses (e.g. localhost or RFC 1918 addresses), it's assumed that those are available to Gophish.\r\n\r\nTo support more secure environments, we introduce the `allowed_internal_hosts` configuration option where an admin can set one or more IP ranges in CIDR format. If addresses are specified here, then all internal connections will be blocked except to these hosts.\r\n\r\nThere are various bits about this approach I don't really like. For example, since various packages all need this functionality, I had to make the RestrictedDialer a global singleton rather than a dependency off of, say, the admin server. Additionally, since webhooks are implemented via a singleton, I had to introduce a new function, `SetTransport`.\r\n\r\nFinally, I had to make an update in the gomail package to support a custom net.Dialer.",
    "type_of_change": "Modification",
    "filename_of_changes": "imap.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "4",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 190: \t\timapClient, err = client.DialTLS(mbox.Host, config)",
        "// Line_Reference 192: \t\timapClient, err = client.Dial(mbox.Host)"
    ]
}
