DrawBC(""._users." > " . ProgramTitle());
echo "<div class='alert alert-danger'>"._unableToSaveDataBecauseTitleCanNotBeBlank."</div>";
if ($_REQUEST['DEFAULT_DATATYPE_'.$id] == 'multiple' && $columns['DEFAULT_SELECTION'] != '') {
$columns['DEFAULT_SELECTION'] = '||'.$columns['DEFAULT_SELECTION'].'||';
if ($_REQUEST['DEFAULT_DATATYPE_'.$id] == 'numeric' && $columns['REQUIRED'] == 'Y' && ($columns['DEFAULT_SELECTION'] == NULL || $columns['DEFAULT_SELECTION'] == '')) {
}
else {
$columns['DEFAULT_SELECTION'] = '||'.$columns['DEFAULT_SELECTION'].'||';
$id = DBGet(DBQuery('SHOW TABLE STATUS LIKE \'' . 'people_fields' . '\''));
$id[1]['ID'] = $id[1]['AUTO_INCREMENT'];
$id = $id[1]['ID'];
$_REQUEST['id'] = $id;
$Sql_add_column.=' NOT NULL ';
$Sql_add_column.=' NULL ';
$Sql_add_column.=' DEFAULT  \'' . $columns['DEFAULT_SELECTION'] . '\' ';
elseif ($table == 'people_field_categories') {
$id = DBGet(DBQuery('SHOW TABLE STATUS LIKE \'' . 'people_field_categories' . '\''));
$id[1]['ID'] = $id[1]['AUTO_INCREMENT'];
$id = $id[1]['ID'];
$fields = '';
$values = '';
$_REQUEST['category_id'] = $id;
// add to profile or permissions of user creating it
if (User('PROFILE_ID') != '')
DBQuery('INSERT INTO profile_exceptions (PROFILE_ID,MODNAME,CAN_USE,CAN_EDIT) values(\'' . User('PROFILE_ID') . '\',\'users/User.php&category_id=' . $id . '\',\'Y\',\'Y\')');
else
DBQuery('INSERT INTO staff_exceptions (USER_ID,MODNAME,CAN_USE,CAN_EDIT) values(\'' . User('STAFF_ID') . '\',\'users/User.php&category_id=' . $id . '\',\'Y\',\'Y\')');
}
$go = false;
foreach ($columns as $column => $value) {
if ($value) {
if ($column == 'TITLE' && $value != '') {
$value = str_replace("'", "''", clean_param(trim($value), PARAM_SPCL));
}
$fields .= $column . ',';
$values .= '\'' . $value . '\',';
$go = true;
}
}
$sql .= '(' . substr($fields, 0, -1) . ') values(' . substr($values, 0, -1) . ')';
if ($go)
DBQuery($sql);
$Sql_modify_column.=' NOT NULL ';
$Sql_modify_column.=' NULL ';
$Sql_modify_column.=' DEFAULT  \'' . $custom_update['DEFAULT_SELECTION'] . '\' ';
$existing_column_updt = 'UPDATE `people` SET CUSTOM_'.$id.' = \''.$custom_update['DEFAULT_SELECTION'].'\' WHERE (CUSTOM_'.$id.' IS NULL OR CUSTOM_'.$id.' = "")';
if($existing_column_updt)
$fields = DBGet(DBQuery('SELECT ID FROM people_fields WHERE CATEGORY_ID=\'' . $_REQUEST[category_id] . '\''));
DBQuery('DELETE FROM people_field_categories WHERE ID=\'' . $_REQUEST[category_id] . '\'');
DBQuery('DELETE FROM profile_exceptions WHERE MODNAME=\'users/User/Student.php&category_id=' . $_REQUEST[category_id] . '\'');
$delete_button = "<INPUT type=button class=\"btn btn-danger m-r-10\" value='"._delete."' onClick='javascript:window.location=\"Modules.php?modname=$_REQUEST[modname]&modfunc=delete&category_id=$_REQUEST[category_id]&id=$_REQUEST[id]\"'> ";
$sql = 'SELECT CATEGORY_ID,TITLE,TYPE,SELECT_OPTIONS,DEFAULT_SELECTION,SORT_ORDER,REQUIRED,REQUIRED,(SELECT TITLE FROM people_field_categories WHERE ID=CATEGORY_ID) AS CATEGORY_TITLE FROM people_fields WHERE ID=\'' . $_REQUEST[id] . '\'';
WHERE ID=\'' . $_REQUEST[category_id] . '\'';
$header .= '<div class="form-group">' . SelectInput($RET['TYPE'], 'tables[' . $_REQUEST['id'] . '][TYPE]', _dataType . '<br>(' . ($_REQUEST['id'] != 'new' ? _thisValueCantBeChanged : _enterThisValueCarefullyAsThisCantBeChangedLater) . ')', $type_options, false, 'id=type onchange="formcheck_student_studentField_F1_defalut();" '. ($_REQUEST['id'] != 'new' ? 'disabled' : '')) . '</div>';
$header .= '<input id="DEFAULT_DATATYPE_'.$_REQUEST['id'].'" name="DEFAULT_DATATYPE_'.$_REQUEST['id'].'" type="hidden" value="'.$RET['TYPE'].'">';
$header .= '<div class="form-group"><label class="control-label text-right col-md-4">'._userFieldCategory.'</label><div class="col-md-8">' . SelectInput($RET['CATEGORY_ID'] ? $RET['CATEGORY_ID'] : $_REQUEST['category_id'], 'tables[' . $_REQUEST['id'] . '][CATEGORY_ID]', '', $categories_options, false, 'onchange="formcheck_student_studentField_F1_defalut();"') . '</div></div>';
$exampleText = _example.':<br/>Good<br/>Bad<br/>etc.';
$exampleText = _example.':<br/>0|Good<br/>1|Bad<br/>etc.';
}
$defaultMessage = '<span class="text-warning"><b>'._warning.'!</b> '._defaultValueDoesNotMatchWithTheValuesOfPullDown.'!</span>';
$exampleText = _example.':<br/>Good<br/>Bad<br/>etc.';
$header .= '<div class="col-md-6" id="show_textarea" style="display:block"><label class="control-label col-lg-4 text-right">'._pullDown.'/'._autoPullDown.'/'._codedPullDown.'/'._selectMultipleChoices.'</label><div class="col-lg-8">' . TextAreaInput($RET['SELECT_OPTIONS'], 'tables[' . $_REQUEST['id'] . '][SELECT_OPTIONS]', '', 'rows=7 cols=40 onkeyup=checkValidDefaultValue()') . '<p class="help-block">* '.ucfirst(_onePerLine).'</p><p id="exmp" class="help-block">' . $exampleText . '</p></div></div>';
$header .= '<div style="display:none;"><textarea id="SELECT_OPTIONS_VALUE_'.$_REQUEST['id'].'">'.$RET['SELECT_OPTIONS'].'</textarea></div>';
$header .= '<div class="form-group"><label class="col-lg-4 text-right control-label">'._default.'<br>('._enterThisValueCarefullyAsThisCantBeChangedLater.')</label><div class="col-lg-8">' . TextInput($RET['DEFAULT_SELECTION'], 'tables[' . $_REQUEST['id'] . '][DEFAULT_SELECTION]', '', $defaultValueFunc) . '<p class="help-block">* '._forDatesYyyyMmDdForCheckboxesYAmpForLongTextItWillBeIgnored.'</p><p id="helpBlock" class="help-block"></p></div></div>';
$header .= '<div class="form-group"><label class="col-lg-4 text-right control-label">'._default.'<br>('._thisValueCantBeChanged.')</label><div class="col-lg-8">' . TextInput($RET['DEFAULT_SELECTION'], 'tables[' . $_REQUEST['id'] . '][DEFAULT_SELECTION]', '', $defaultValueFunc.' disabled') . '<p id="helpBlock" class="help-block">'.$defaultMessage.'</p></div></div>';
$header .= '<input id="DEFAULT_VALUE_'.$_REQUEST['id'].'" type="hidden" value="'.$RET['DEFAULT_SELECTION'].'">';
$header .= '<label class="control-label col-md-2 text-right">'._profiles.'</label>';
$header .= (($RET['ID'] > 2 || $RET['ID'] == '') ? CheckboxInput($RET['PARENT'], 'tables[' . $_REQUEST['category_id'] . '][PARENT]', ($_REQUEST['category_id'] == '1' && !$RET['PARENT'] ? '<FONT color=red>' : '') . 'Parent' . ($_REQUEST['category_id'] == '1' && !$RET['TEACHER'] ? '</FONT>' : ''), '', $new, '<i class="icon-checkbox-checked"></i>', '<i class="icon-checkbox-unchecked"></i>') : '<span>' . ($RET['PARENT'] == 'Y' ? '<i class="icon-checkbox-checked"></i>' : '<i class="icon-checkbox-unchecked"></i>') . ' &nbsp; '._parent.'</span> &nbsp; &nbsp; ');
$header .= (($RET['ID'] > 2 || $RET['ID'] == '') ? CheckboxInput($RET['NONE'], 'tables[' . $_REQUEST['category_id'] . '][NONE]', ($_REQUEST['category_id'] == '1' && !$RET['NONE'] ? '<FONT color=red>' : '') . 'No Access' . ($_REQUEST['category_id'] == '1' && !$RET['TEACHER'] ? '</FONT>' : ''), '', $new, '<i class="icon-checkbox-checked"></i>', '<i class="icon-checkbox-unchecked"></i>') : '<span>' . ($RET['NONE'] == 'Y' ? '<i class="icon-checkbox-checked"></i>' : '<i class="icon-checkbox-unchecked"></i>') . ' &nbsp; '._noAccess.'</span> &nbsp; &nbsp;');
$LO_options = array('save' =>false, 'search' =>false, 'add' =>true);
if (count($categories_RET)) {
$columns = array('TITLE' =>_category,
'SORT_ORDER' =>_order,
$categories_RET[$key]['TITLE'] = $value['TITLE'] ;
// case 'Demographic Info':
//     $categories_RET[$key]['TITLE'] = _demographicInfo;
//     break;
// case 'Addresses &amp; Contacts':
//     $categories_RET[$key]['TITLE'] = _addressesContacts;
//     break;
// case 'School Information':
//     $categories_RET[$key]['TITLE'] = _schoolInformation;
//     break;
// case 'Certification Information':
//     $categories_RET[$key]['TITLE'] = _certificationInformation;
//     break;
// case 'Schedule':
//     $categories_RET[$key]['TITLE'] = _schedule;
//     break;
if (count($fields_RET)) {
$columns = array('TITLE' =>_userField,
'SORT_ORDER' =>_order,
'TYPE' =>_dataType,
switch ($_REQUEST[category_id]) {
_name,
_emailAddress,
_disableUser,
_userId,
_homePhone,
_workPhone,
_cellPhone,
_userProfile,
_username,
_password,
_address,
_street,
_city,
_state,
_zipCode,
$fields_RET1[$count] = array('ID' => '', 'SORT_ORDER' => ($key + 1), 'TITLE' => $value, 'TYPE' => '<span style="color:#ea8828;">'._default.'</span>');
function _makeType($value, $name) {
?>
