xml = file.getData();
EditorUi.prototype.createDownloadRequest = function(filename, format, ignoreSelection, base64, transparent,
currentPage, scale, border, grid, includeXml)
var graph = this.editor.graph;
var bounds = graph.getGraphBounds();
// Exports only current page for images that does not contain file data, but for
// the other formats with XML included or pdf with all pages, we need to send the complete data and use
// the from/to URL parameters to specify the page to be exported.
var data = this.getFileData(true, null, null, null, ignoreSelection, currentPage == false? false : format != 'xmlpng');
var range = null;
var allPages = null;
var embed = (includeXml) ? '1' : '0';
if (format == 'pdf' && currentPage == false)
{
allPages = '1';
}
if (format == 'xmlpng')
{
embed = '1';
format = 'png';
// Finds the current page number
if (this.pages != null && this.currentPage != null)
{
for (var i = 0; i < this.pages.length; i++)
{
if (this.pages[i] == this.currentPage)
{
range = i;
break;
}
}
}
}
var bg = graph.background;
if (format == 'png' && transparent)
{
bg = mxConstants.NONE;
}
else if (!transparent && (bg == null || bg == mxConstants.NONE))
{
bg = '#ffffff';
}
var extras = {globalVars: graph.getExportVariables()};
if (grid)
{
extras.grid = {
size: graph.gridSize,
steps: graph.view.gridSteps,
color: graph.view.gridColor
};
}
return new mxElectronRequest('export', {
format: format,
xml: data,
from: range,
bg: (bg != null) ? bg : mxConstants.NONE,
filename: (filename != null) ? filename : null,
allPages: allPages,
base64: base64,
embedXml: embed,
extras: encodeURIComponent(JSON.stringify(extras)),
scale: scale,
border: border
});
