l2tp_msgtype_print(netdissect_options *ndo, const u_char *dat)
ND_PRINT((ndo, "%u", EXTRACT_16BITS(ptr))); ptr++;	/* Result Code */
if (length > 2) {				/* Error Code (opt) */
ND_PRINT((ndo, "/%u", EXTRACT_16BITS(ptr))); ptr++;
if (length > 4) {				/* Error Message (opt) */
ND_PRINT((ndo, " "));
print_string(ndo, (const u_char *)ptr, length - 4);
l2tp_proto_ver_print(netdissect_options *ndo, const uint16_t *dat)
l2tp_framing_cap_print(netdissect_options *ndo, const u_char *dat)
l2tp_bearer_cap_print(netdissect_options *ndo, const u_char *dat)
if (length > 3) {
print_string(ndo, dat+3, length-3);
l2tp_bearer_type_print(netdissect_options *ndo, const u_char *dat)
l2tp_framing_type_print(netdissect_options *ndo, const u_char *dat)
l2tp_proxy_auth_type_print(netdissect_options *ndo, const u_char *dat)
l2tp_proxy_auth_id_print(netdissect_options *ndo, const u_char *dat)
l2tp_call_errors_print(netdissect_options *ndo, const u_char *dat)
val_h = EXTRACT_16BITS(ptr); ptr++;
val_l = EXTRACT_16BITS(ptr); ptr++;
val_h = EXTRACT_16BITS(ptr); ptr++;
val_l = EXTRACT_16BITS(ptr); ptr++;
val_h = EXTRACT_16BITS(ptr); ptr++;
val_l = EXTRACT_16BITS(ptr); ptr++;
val_h = EXTRACT_16BITS(ptr); ptr++;
val_l = EXTRACT_16BITS(ptr); ptr++;
val_h = EXTRACT_16BITS(ptr); ptr++;
val_l = EXTRACT_16BITS(ptr); ptr++;
l2tp_accm_print(netdissect_options *ndo, const u_char *dat)
val_h = EXTRACT_16BITS(ptr); ptr++;
val_l = EXTRACT_16BITS(ptr); ptr++;
ND_PRINT((ndo, "%04x, ", EXTRACT_16BITS(ptr))); ptr++;	/* Disconnect Code */
ND_PRINT((ndo, "%04x ",  EXTRACT_16BITS(ptr))); ptr++;	/* Control Protocol Number */
"Direction-#%u", *((const u_char *)ptr++))));
if (length > 5) {
print_string(ndo, (const u_char *)ptr, length-5);
/* After this point, no need to worry about truncation */
l2tp_msgtype_print(ndo, (const u_char *)ptr);
l2tp_proto_ver_print(ndo, ptr);
l2tp_framing_cap_print(ndo, (const u_char *)ptr);
l2tp_bearer_cap_print(ndo, (const u_char *)ptr);
l2tp_bearer_type_print(ndo, (const u_char *)ptr);
l2tp_framing_type_print(ndo, (const u_char *)ptr);
l2tp_proxy_auth_type_print(ndo, (const u_char *)ptr);
l2tp_proxy_auth_id_print(ndo, (const u_char *)ptr);
l2tp_call_errors_print(ndo, (const u_char *)ptr);
l2tp_accm_print(ndo, (const u_char *)ptr);