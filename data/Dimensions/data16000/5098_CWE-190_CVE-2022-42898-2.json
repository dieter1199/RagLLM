{
    "cve_id": "CVE-2022-42898",
    "cve_description": "PAC parsing in MIT Kerberos 5 (aka krb5) before 1.19.4 and 1.20.x before 1.20.1 has integer overflows that may lead to remote code execution (in KDC, kadmind, or a GSS or Kerberos application server) on 32-bit platforms (which have a resultant heap-based buffer overflow), and cause a denial of service on other platforms. This occurs in krb5_pac_parse in lib/krb5/krb/pac.c. Heimdal before 7.7.1 has \"a similar bug.\"",
    "cve_publish_date": "2022-12-25",
    "cwe_id": "CWE-190",
    "cwe_name": "Integer Overflow or Wraparound",
    "cwe_description": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number.",
    "commit_message": "Fix integer overflows in PAC parsing\n\nIn krb5_parse_pac(), check for buffer counts large enough to threaten\ninteger overflow in the header length and memory length calculations.\nAvoid potential integer overflows when checking the length of each\nbuffer.  Credit to OSS-Fuzz for discovering one of the issues.\n\nCVE-2022-42898:\n\nIn MIT krb5 releases 1.8 and later, an authenticated attacker may be\nable to cause a KDC or kadmind process to crash by reading beyond the\nbounds of allocated memory, creating a denial of service.  A\nprivileged attacker may similarly be able to cause a Kerberos or GSS\napplication service to crash.  On 32-bit platforms, an attacker can\nalso cause insufficient memory to be allocated for the result,\npotentially leading to remote code execution in a KDC, kadmind, or GSS\nor Kerberos application server process.  An attacker with the\nprivileges of a cross-realm KDC may be able to extract secrets from a\nKDC process's memory by having them copied into the PAC of a new\nticket.\n\nticket: 9074 (new)\ntags: pullup\ntarget_version: 1.20-next\ntarget_version: 1.19-next",
    "type_of_change": "Modification",
    "filename_of_changes": "pac.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "7",
    "number_of_lines_deleted_vulnerable_to_cve": "2",
    "vulnerable_lines": [
        "// Line_Reference 352:         if (buffer->Offset < header_len ||",
        "// Line_Reference 353:             buffer->Offset + buffer->cbBufferSize > len) {"
    ]
}
