{
    "cve_id": "CVE-2022-45962",
    "cve_description": "Open Solutions for Education, Inc openSIS Community Edition v8.0 and earlier is vulnerable to SQL Injection via CalendarModal.php.",
    "cve_publish_date": "2023-02-13",
    "cwe_id": "CWE-89",
    "cwe_name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
    "cwe_description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
    "commit_message": "Version 9.0 release\n\nOlder version shifted to branch: Version_8.0",
    "type_of_change": "ModificationType.ADD",
    "filename_of_changes": "Configuration.php",
    "code_language": "PHP",
    "number_of_lines_added_for_mitigation": "30",
    "number_of_lines_deleted_vulnerable_to_cve": "26",
    "vulnerable_lines": [
        "// Line_Reference 43:         $q_total[$k[1]] = $q_total[$k[1]] + $val;",
        "// Line_Reference 50:         $f_total = $f_total + $val;",
        "// Line_Reference 64:             if (in_array($k[1], $marking_sem_id))",
        "// Line_Reference 65:                 $marking_sem_val[$k[1]] = $marking_sem_val[$k[1]] + $val;",
        "// Line_Reference 66:             else {",
        "// Line_Reference 67: ",
        "// Line_Reference 68:                 if (substr($k[1], 0, 1) != 'E') {",
        "// Line_Reference 69:                     $pr_qr = DBGet(DBQuery(\"select parent_id from marking_periods where marking_period_id='$k[1]'\"));",
        "// Line_Reference 70:                     $parent_mp_id = $pr_qr[1]['PARENT_ID'];",
        "// Line_Reference 71:                     $marking_sem_val[$parent_mp_id] = $marking_sem_val[$parent_mp_id] + $val;",
        "// Line_Reference 72:                 }",
        "// Line_Reference 73:                 if (substr($k[1], 0, 1) == 'E' && in_array(substr($k[1], 1), $marking_sem_id)) {",
        "// Line_Reference 75:                     $marking_sem_val[substr($k[1], 1)] = $marking_sem_val[substr($k[1], 1)] + $val;",
        "// Line_Reference 76:                 }",
        "// Line_Reference 77:                 if (substr($k[1], 0, 1) == 'E' && !in_array(substr($k[1], 1), $marking_sem_id)) {",
        "// Line_Reference 78:                     $pr_qr = DBGet(DBQuery(\"select parent_id from marking_periods where marking_period_id='\" . substr($k[1], 1) . \"'\"));",
        "// Line_Reference 79:                     $parent_mp_id = $pr_qr[1]['PARENT_ID'];",
        "// Line_Reference 80:                     $marking_sem_val[$parent_mp_id] = $marking_sem_val[$parent_mp_id] + $val;",
        "// Line_Reference 206:     echo '<legend><b>'._scoreBreakoffPoints.'</b></legend>';",
        "// Line_Reference 207:     echo '<TABLE cellspacing=1><TR><TD>';",
        "// Line_Reference 209:         $table = '<TABLE>';",
        "// Line_Reference 210:         $table .= '<TR><TD rowspan=2 align=right width=100>' . $cp_grades[1]['COURSE_TITLE'] . ' - ' . substr($cp_grades[1]['CP_TITLE'], 0, strrpos(str_replace(' - ', ' ^ ', $cp_grades[1]['CP_TITLE']), '^')) . '</TD>';",
        "// Line_Reference 212:             $table .= '<TD><B>' . $grade['TITLE'] . '</B></TD>';",
        "// Line_Reference 216:             $table .= '<TD><INPUT type=text name=values[' . $course_period_id . '-' . $grade['ID'] . '] value=\"' . $programconfig[$course_period_id . '-' . $grade['ID']] . '\" size=3 maxlength=5></TD>';",
        "// Line_Reference 219:         echo DrawRoundedRect($table);",
        "// Line_Reference 223:     echo '</fieldset></TD>';"
    ]
}
