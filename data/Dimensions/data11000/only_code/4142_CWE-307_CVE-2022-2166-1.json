req.remote_ip if req.api_request? && req.unauthenticated?
req.authenticated_user_id if req.post? && req.path.match?('^/api/v\d+/media')
req.remote_ip if req.path.start_with?('/media_proxy')
req.remote_ip if req.post? && req.path == '/api/v1/accounts'
req.remote_ip if req.paging_request? && req.unauthenticated?
API_DELETE_REBLOG_REGEX = /\A\/api\/v1\/statuses\/[\d]+\/unreblog/.freeze
API_DELETE_STATUS_REGEX = /\A\/api\/v1\/statuses\/[\d]+/.freeze
if req.post? && req.path == '/auth'
addr = req.remote_ip
addr = IPAddr.new(addr) if addr.is_a?(String)
addr = addr.mask(64) if addr.ipv6?
addr.to_s
end
req.remote_ip if req.post? && req.path == '/auth/password'
req.params.dig('user', 'email').presence if req.post? && req.path == '/auth/password'
req.remote_ip if req.post? && %w(/auth/confirmation /api/v1/emails/confirmations).include?(req.path)
if req.post? && req.path == '/auth/password'
req.remote_ip if req.post? && req.path == '/auth/sign_in'
req.session[:attempt_user_id] || req.params.dig('user', 'email').presence if req.post? && req.path == '/auth/sign_in'