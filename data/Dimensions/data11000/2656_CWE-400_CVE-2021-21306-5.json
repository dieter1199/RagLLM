{
    "cve_id": "CVE-2021-21306",
    "cve_description": "Marked is an open-source markdown parser and compiler (npm package \"marked\"). In marked from version 1.1.1 and before version 2.0.0, there is a Regular expression Denial of Service vulnerability. This vulnerability can affect anyone who runs user generated code through marked. This vulnerability is fixed in version 2.0.0.",
    "cve_publish_date": "2021-02-08",
    "cwe_id": "CWE-400",
    "cwe_name": "Uncontrolled Resource Consumption",
    "cwe_description": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
    "commit_message": "fix: Total rework of Emphasis/Strong (#1864)\n\nBREAKING CHANGE: `em` and `strong` tokenizers have been merged into one `emStrong` tokenizer",
    "type_of_change": "Modification",
    "filename_of_changes": "rules.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "19",
    "number_of_lines_deleted_vulnerable_to_cve": "52",
    "vulnerable_lines": [
        "// Line_Reference 176:   strong: {",
        "// Line_Reference 177:     start: /^(?:(\\*\\*(?=[*punctuation]))|\\*\\*)(?![\\s])|__/, // (1) returns if starts w/ punctuation",
        "// Line_Reference 178:     middle: /^\\*\\*(?:(?:(?!overlapSkip)(?:[^*]|\\\\\\*)|overlapSkip)|\\*(?:(?!overlapSkip)(?:[^*]|\\\\\\*)|overlapSkip)*?\\*)+?\\*\\*$|^__(?![\\s])((?:(?:(?!overlapSkip)(?:[^_]|\\\\_)|overlapSkip)|_(?:(?!overlapSkip)(?:[^_]|\\\\_)|overlapSkip)*?_)+?)__$/,",
        "// Line_Reference 179:     endAst: /[^punctuation\\s]\\*\\*(?!\\*)|[punctuation]\\*\\*(?!\\*)(?:(?=[punctuation_\\s]|$))/, // last char can't be punct, or final * must also be followed by punct (or endline)",
        "// Line_Reference 180:     endUnd: /[^\\s]__(?!_)(?:(?=[punctuation*\\s])|$)/ // last char can't be a space, and final _ must preceed punct or \\s (or endline)",
        "// Line_Reference 181:   },",
        "// Line_Reference 182:   em: {",
        "// Line_Reference 183:     start: /^(?:(\\*(?=[punctuation]))|\\*)(?![*\\s])|_/, // (1) returns if starts w/ punctuation",
        "// Line_Reference 184:     middle: /^\\*(?:(?:(?!overlapSkip)(?:[^*]|\\\\\\*)|overlapSkip)|\\*(?:(?!overlapSkip)(?:[^*]|\\\\\\*)|overlapSkip)*?\\*)+?\\*$|^_(?![_\\s])(?:(?:(?!overlapSkip)(?:[^_]|\\\\_)|overlapSkip)|_(?:(?!overlapSkip)(?:[^_]|\\\\_)|overlapSkip)*?_)+?_$/,",
        "// Line_Reference 185:     endAst: /[^punctuation\\s]\\*(?!\\*)|[punctuation]\\*(?!\\*)(?:(?=[punctuation_\\s]|$))/, // last char can't be punct, or final * must also be followed by punct (or endline)",
        "// Line_Reference 186:     endUnd: /[^\\s]_(?!_)(?:(?=[punctuation*\\s])|$)/ // last char can't be a space, and final _ must preceed punct or \\s (or endline)",
        "// Line_Reference 191:   text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n)))/,",
        "// Line_Reference 192:   punctuation: /^([\\s*punctuation])/",
        "// Line_Reference 195: // list of punctuation marks from common mark spec",
        "// Line_Reference 196: // without * and _ to workaround cases with double emphasis",
        "// Line_Reference 201: inline._blockSkip = '\\\\[[^\\\\]]*?\\\\]\\\\([^\\\\)]*?\\\\)|`[^`]*?`|<[^>]*?>';",
        "// Line_Reference 202: inline._overlapSkip = '__[^_]*?__|\\\\*\\\\*\\\\[^\\\\*\\\\]*?\\\\*\\\\*';",
        "// Line_Reference 206: inline.em.start = edit(inline.em.start)",
        "// Line_Reference 207:   .replace(/punctuation/g, inline._punctuation)",
        "// Line_Reference 208:   .getRegex();",
        "// Line_Reference 209: ",
        "// Line_Reference 210: inline.em.middle = edit(inline.em.middle)",
        "// Line_Reference 211:   .replace(/punctuation/g, inline._punctuation)",
        "// Line_Reference 212:   .replace(/overlapSkip/g, inline._overlapSkip)",
        "// Line_Reference 213:   .getRegex();",
        "// Line_Reference 214: ",
        "// Line_Reference 215: inline.em.endAst = edit(inline.em.endAst, 'g')",
        "// Line_Reference 216:   .replace(/punctuation/g, inline._punctuation)",
        "// Line_Reference 217:   .getRegex();",
        "// Line_Reference 218: ",
        "// Line_Reference 219: inline.em.endUnd = edit(inline.em.endUnd, 'g')",
        "// Line_Reference 220:   .replace(/punctuation/g, inline._punctuation)",
        "// Line_Reference 221:   .getRegex();",
        "// Line_Reference 222: ",
        "// Line_Reference 223: inline.strong.start = edit(inline.strong.start)",
        "// Line_Reference 224:   .replace(/punctuation/g, inline._punctuation)",
        "// Line_Reference 225:   .getRegex();",
        "// Line_Reference 226: ",
        "// Line_Reference 227: inline.strong.middle = edit(inline.strong.middle)",
        "// Line_Reference 228:   .replace(/punctuation/g, inline._punctuation)",
        "// Line_Reference 229:   .replace(/overlapSkip/g, inline._overlapSkip)",
        "// Line_Reference 230:   .getRegex();",
        "// Line_Reference 231: ",
        "// Line_Reference 232: inline.strong.endAst = edit(inline.strong.endAst, 'g')",
        "// Line_Reference 233:   .replace(/punctuation/g, inline._punctuation)",
        "// Line_Reference 234:   .getRegex();",
        "// Line_Reference 235: ",
        "// Line_Reference 236: inline.strong.endUnd = edit(inline.strong.endUnd, 'g')",
        "// Line_Reference 237:   .replace(/punctuation/g, inline._punctuation)",
        "// Line_Reference 240: inline.blockSkip = edit(inline._blockSkip, 'g')",
        "// Line_Reference 243: inline.overlapSkip = edit(inline._overlapSkip, 'g')",
        "// Line_Reference 322:   text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/"
    ]
}
