{
    "cve_id": "CVE-2020-5235",
    "cve_description": "There is a potentially exploitable out of memory condition In Nanopb before 0.4.1, 0.3.9.5, and 0.2.9.4. When nanopb is compiled with PB_ENABLE_MALLOC, the message to be decoded contains a repeated string, bytes or message field and realloc() runs out of memory when expanding the array nanopb can end up calling `free()` on a pointer value that comes from uninitialized memory. Depending on platform this can result in a crash or further memory corruption, which may be exploitable in some cases. This problem is fixed in nanopb-0.4.1, nanopb-0.3.9.5, nanopb-0.2.9.4.",
    "cve_publish_date": "2020-02-04",
    "cwe_id": "CWE-125",
    "cwe_name": "Out-of-bounds Read",
    "cwe_description": "The product reads data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "Fix invalid free() after failed realloc() (GHSA-gcx3-7m76-287p)",
    "type_of_change": "Modification",
    "filename_of_changes": "pb_decode.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "3",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 723:                 (*size)++;",
        "// Line_Reference 724:                 if (!allocate_field(stream, field->pField, field->data_size, *size))",
        "// Line_Reference 727:                 field->pData = *(char**)field->pField + field->data_size * (*size - 1);"
    ]
}
