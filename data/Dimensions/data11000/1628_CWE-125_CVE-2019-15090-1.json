{
    "cve_id": "CVE-2019-15090",
    "cve_description": "An issue was discovered in drivers/scsi/qedi/qedi_dbg.c in the Linux kernel before 5.1.12. In the qedi_dbg_* family of functions, there is an out-of-bounds read.",
    "cve_publish_date": "2019-08-16",
    "cwe_id": "CWE-125",
    "cwe_name": "Out-of-bounds Read",
    "cwe_description": "The product reads data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "scsi: qedi: remove memset/memcpy to nfunc and use func instead\n\nKASAN reports this:\n\nBUG: KASAN: global-out-of-bounds in qedi_dbg_err+0xda/0x330 [qedi]\nRead of size 31 at addr ffffffffc12b0ae0 by task syz-executor.0/2429\n\nCPU: 0 PID: 2429 Comm: syz-executor.0 Not tainted 5.0.0-rc7+ #45\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014\nCall Trace:\n __dump_stack lib/dump_stack.c:77 [inline]\n dump_stack+0xfa/0x1ce lib/dump_stack.c:113\n print_address_description+0x1c4/0x270 mm/kasan/report.c:187\n kasan_report+0x149/0x18d mm/kasan/report.c:317\n memcpy+0x1f/0x50 mm/kasan/common.c:130\n qedi_dbg_err+0xda/0x330 [qedi]\n ? 0xffffffffc12d0000\n qedi_init+0x118/0x1000 [qedi]\n ? 0xffffffffc12d0000\n ? 0xffffffffc12d0000\n ? 0xffffffffc12d0000\n do_one_initcall+0xfa/0x5ca init/main.c:887\n do_init_module+0x204/0x5f6 kernel/module.c:3460\n load_module+0x66b2/0x8570 kernel/module.c:3808\n __do_sys_finit_module+0x238/0x2a0 kernel/module.c:3902\n do_syscall_64+0x147/0x600 arch/x86/entry/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\nRIP: 0033:0x462e99\nCode: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f2d57e55c58 EFLAGS: 00000246 ORIG_RAX: 0000000000000139\nRAX: ffffffffffffffda RBX: 000000000073bfa0 RCX: 0000000000462e99\nRDX: 0000000000000000 RSI: 00000000200003c0 RDI: 0000000000000003\nRBP: 00007f2d57e55c70 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007f2d57e566bc\nR13: 00000000004bcefb R14: 00000000006f7030 R15: 0000000000000004\n\nThe buggy address belongs to the variable:\n __func__.67584+0x0/0xffffffffffffd520 [qedi]\n\nMemory state around the buggy address:\n ffffffffc12b0980: fa fa fa fa 00 04 fa fa fa fa fa fa 00 00 05 fa\n ffffffffc12b0a00: fa fa fa fa 00 00 04 fa fa fa fa fa 00 05 fa fa\n> ffffffffc12b0a80: fa fa fa fa 00 06 fa fa fa fa fa fa 00 02 fa fa\n                                                          ^\n ffffffffc12b0b00: fa fa fa fa 00 00 04 fa fa fa fa fa 00 00 03 fa\n ffffffffc12b0b80: fa fa fa fa 00 00 02 fa fa fa fa fa 00 00 04 fa\n\nCurrently the qedi_dbg_* family of functions can overrun the end of the\nsource string if it is less than the destination buffer length because of\nthe use of a fixed sized memcpy. Remove the memset/memcpy calls to nfunc\nand just use func instead as it is always a null terminated string.\n\nReported-by: Hulk Robot <hulkci@huawei.com>\nFixes: ace7f46ba5fd (\"scsi: qedi: Add QLogic FastLinQ offload iSCSI driver framework.\")\nSigned-off-by: YueHaibing <yuehaibing@huawei.com>\nReviewed-by: Dan Carpenter <dan.carpenter@oracle.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "qedi_dbg.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "8",
    "number_of_lines_deleted_vulnerable_to_cve": "24",
    "vulnerable_lines": [
        "// Line_Reference 19: \tchar nfunc[32];",
        "// Line_Reference 20: ",
        "// Line_Reference 21: \tmemset(nfunc, 0, sizeof(nfunc));",
        "// Line_Reference 22: \tmemcpy(nfunc, func, sizeof(nfunc) - 1);",
        "// Line_Reference 31: \t\t       nfunc, line, qedi->host_no, &vaf);",
        "// Line_Reference 33: \t\tpr_err(\"[0000:00:00.0]:[%s:%d]: %pV\", nfunc, line, &vaf);",
        "// Line_Reference 44: \tchar nfunc[32];",
        "// Line_Reference 45: ",
        "// Line_Reference 46: \tmemset(nfunc, 0, sizeof(nfunc));",
        "// Line_Reference 47: \tmemcpy(nfunc, func, sizeof(nfunc) - 1);",
        "// Line_Reference 59: \t\t\tnfunc, line, qedi->host_no, &vaf);",
        "// Line_Reference 61: \t\tpr_warn(\"[0000:00:00.0]:[%s:%d]: %pV\", nfunc, line, &vaf);",
        "// Line_Reference 73: \tchar nfunc[32];",
        "// Line_Reference 74: ",
        "// Line_Reference 75: \tmemset(nfunc, 0, sizeof(nfunc));",
        "// Line_Reference 76: \tmemcpy(nfunc, func, sizeof(nfunc) - 1);",
        "// Line_Reference 88: \t\t\t  dev_name(&qedi->pdev->dev), nfunc, line,",
        "// Line_Reference 91: \t\tpr_notice(\"[0000:00:00.0]:[%s:%d]: %pV\", nfunc, line, &vaf);",
        "// Line_Reference 103: \tchar nfunc[32];",
        "// Line_Reference 104: ",
        "// Line_Reference 105: \tmemset(nfunc, 0, sizeof(nfunc));",
        "// Line_Reference 106: \tmemcpy(nfunc, func, sizeof(nfunc) - 1);",
        "// Line_Reference 118: \t\t\tnfunc, line, qedi->host_no, &vaf);",
        "// Line_Reference 120: \t\tpr_info(\"[0000:00:00.0]:[%s:%d]: %pV\", nfunc, line, &vaf);"
    ]
}
