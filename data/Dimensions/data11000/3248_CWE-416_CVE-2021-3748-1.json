{
    "cve_id": "CVE-2021-3748",
    "cve_description": "A use-after-free vulnerability was found in the virtio-net device of QEMU. It could occur when the descriptor's address belongs to the non direct access region, due to num_buffers being set after the virtqueue elem has been unmapped. A malicious guest could use this flaw to crash QEMU, resulting in a denial of service condition, or potentially execute code on the host with the privileges of the QEMU process.",
    "cve_publish_date": "2022-03-23",
    "cwe_id": "CWE-416",
    "cwe_name": "Use After Free",
    "cwe_description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer.",
    "commit_message": "virtio-net: fix use after unmap/free for sg\n\nWhen mergeable buffer is enabled, we try to set the num_buffers after\nthe virtqueue elem has been unmapped. This will lead several issues,\nE.g a use after free when the descriptor has an address which belongs\nto the non direct access region. In this case we use bounce buffer\nthat is allocated during address_space_map() and freed during\naddress_space_unmap().\n\nFixing this by storing the elems temporarily in an array and delay the\nunmap after we set the the num_buffers.\n\nThis addresses CVE-2021-3748.\n\nReported-by: Alexander Bulekov <alxndr@bu.edu>\nFixes: fbe78f4f55c6 (\"virtio-net support\")\nCc: qemu-stable@nongnu.org\nSigned-off-by: Jason Wang <jasowang@redhat.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "virtio-net.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "32",
    "number_of_lines_deleted_vulnerable_to_cve": "7",
    "vulnerable_lines": [
        "// Line_Reference 1752:     size_t offset, i, guest_offset;",
        "// Line_Reference 1794:             return -1;",
        "// Line_Reference 1802:             return -1;",
        "// Line_Reference 1839:             return size;",
        "// Line_Reference 1842:         /* signal other side */",
        "// Line_Reference 1843:         virtqueue_fill(q->rx_vq, elem, total, i++);",
        "// Line_Reference 1844:         g_free(elem);"
    ]
}
