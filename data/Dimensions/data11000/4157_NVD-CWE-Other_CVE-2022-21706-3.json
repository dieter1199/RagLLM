{
    "cve_id": "CVE-2022-21706",
    "cve_description": "Zulip is an open-source team collaboration tool with topic-based threading. Zulip Server version 2.0.0 and above are vulnerable to insufficient access control with multi-use invitations. A Zulip Server deployment which hosts multiple organizations is vulnerable to an attack where an invitation created in one organization (potentially as a role with elevated permissions) can be used to join any other organization. This bypasses any restrictions on required domains on users' email addresses, may be used to gain access to organizations which are only accessible by invitation, and may be used to gain access with elevated privileges. This issue has been patched in release 4.10. There are no known workarounds for this issue. ### Patches _Has the problem been patched? What versions should users upgrade to?_ ### Workarounds _Is there a way for users to fix or remediate the vulnerability without upgrading?_ ### References _Are there any links users can visit to find out more?_ ### For more information If you have any questions or comments about this advisory, you can discuss them on the [developer community Zulip server](https://zulip.com/developer-community/), or email the [Zulip security team](mailto:security@zulip.com).",
    "cve_publish_date": "2022-02-26",
    "cwe_id": "NVD-CWE-Other",
    "cwe_name": "Other",
    "cwe_description": "NVD is only using a subset of CWE for mapping instead of the entire CWE, and the weakness type is not covered by that subset.",
    "commit_message": "CVE-2022-21706: Prevent use of multiuse invites to join other orgs.\n\nThe codepaths for joining an organization via a multi-use invitation\n(accounts_home_from_multiuse_invite and maybe_send_to_registration)\nweren't validating whether\nthe organization the invite was generated for matches the organization\nthe user attempts to join - potentially allowing an attacker with access\nto organization A to generate a multi-use invite and use it to join\norganization B within the same deployment, that they shouldn't have\naccess to.",
    "type_of_change": "Modification",
    "filename_of_changes": "test_signup.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "30",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 14: from django.http import HttpResponse"
    ]
}
