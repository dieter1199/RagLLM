{
    "cve_id": "CVE-2020-15888",
    "cve_description": "Lua through 5.4.0 mishandles the interaction between stack resizes and garbage collection, leading to a heap-based buffer overflow, heap-based buffer over-read, or use-after-free.",
    "cve_publish_date": "2020-07-21",
    "cwe_id": "CWE-125",
    "cwe_name": "Out-of-bounds Read",
    "cwe_description": "The product reads data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "Keep minimum size when shrinking a stack\n\nWhen shrinking a stack (during GC), do not make it smaller than the\ninitial stack size.",
    "type_of_change": "Modification",
    "filename_of_changes": "ldo.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "2",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 248:   int goodsize = inuse + (inuse / 8) + 2*EXTRA_STACK;",
        "// Line_Reference 253:   if (inuse <= (LUAI_MAXSTACK - EXTRA_STACK) &&",
        "// Line_Reference 254:       goodsize < L->stacksize)"
    ]
}
