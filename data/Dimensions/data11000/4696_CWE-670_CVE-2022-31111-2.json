{
    "cve_id": "CVE-2022-31111",
    "cve_description": "Frontier is Substrate's Ethereum compatibility layer. In affected versions the truncation done when converting between EVM balance type and Substrate balance type was incorrectly implemented. This leads to possible discrepancy between appeared EVM transfer value and actual Substrate value transferred. It is recommended that an emergency upgrade to be planned and EVM execution temporarily paused in the mean time. The issue is patched in Frontier master branch commit fed5e0a9577c10bea021721e8c2c5c378e16bf66 and polkadot-v0.9.22 branch commit e3e427fa2e5d1200a784679f8015d4774cedc934. This vulnerability affects only EVM internal states, but not Substrate balance states or node. You can temporarily pause EVM execution (by setting up a Substrate `CallFilter` that disables `pallet-evm` and `pallet-ethereum` calls before the patch can be applied.",
    "cve_publish_date": "2022-07-06",
    "cwe_id": "CWE-670",
    "cwe_name": "Always-Incorrect Control Flow Implementation",
    "cwe_description": "The code contains a control flow path that does not reflect the algorithm that the path is intended to implement, leading to incorrect behavior any time this path is navigated.",
    "commit_message": "Limit number of iterations in genesis nonce building (#753)",
    "type_of_change": "Modification",
    "filename_of_changes": "lib.rs",
    "code_language": "Rust",
    "number_of_lines_added_for_mitigation": "20",
    "number_of_lines_deleted_vulnerable_to_cve": "11",
    "vulnerable_lines": [
        "// Line_Reference 80: use sp_std::vec::Vec;",
        "// Line_Reference 441: \timpl<T: Config> GenesisBuild<T> for GenesisConfig {",
        "// Line_Reference 448: \t\t\t\tfor _ in 0..account.nonce.low_u128() {",
        "// Line_Reference 452: \t\t\t\tT::Currency::deposit_creating(",
        "// Line_Reference 453: \t\t\t\t\t&account_id,",
        "// Line_Reference 454: \t\t\t\t\taccount.balance.low_u128().unique_saturated_into(),",
        "// Line_Reference 455: \t\t\t\t);",
        "// Line_Reference 749: \t\t\tfee.low_u128().unique_saturated_into(),",
        "// Line_Reference 769: \t\t\t\t.saturating_sub(corrected_fee.low_u128().unique_saturated_into());",
        "// Line_Reference 800: \t\t\tlet (base_fee, tip) = adjusted_paid.split(base_fee.low_u128().unique_saturated_into());",
        "// Line_Reference 824: \t\tImbalance<<T::Currency as Currency<<T as frame_system::Config>::AccountId>>::Balance, Opposite = <T::Currency as Currency<<T as frame_system::Config>::AccountId>>::PositiveImbalance>, {"
    ]
}
