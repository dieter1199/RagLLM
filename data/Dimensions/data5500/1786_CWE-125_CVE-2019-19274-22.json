{
    "cve_id": "CVE-2019-19274",
    "cve_description": "typed_ast 1.3.0 and 1.3.1 has a handle_keywordonly_args out-of-bounds read. An attacker with the ability to cause a Python interpreter to parse Python source (but not necessarily execute it) may be able to crash the interpreter process. This could be a concern, for example, in a web-based service that parses (but does not execute) Python code. (This issue also affected certain Python 3.8.0-alpha prereleases.)",
    "cve_publish_date": "2019-11-26",
    "cwe_id": "CWE-125",
    "cwe_name": "Out-of-bounds Read",
    "cwe_description": "The product reads data past the end, or before the beginning, of the intended buffer.",
    "commit_message": "Fully incorporate the code from Python 3.7.2 (#78)\n\nThis is a full port, following the recipe in update_process.md. I've also tried to keep the recipe up to date and improved the automation (see tools/script). I haven't cleaned up the commits. As of #77 there are a few tests that sanity-check this (though it's far from a full test suite), and they're run by Travis-CI and AppVeyor.",
    "type_of_change": "Modification",
    "filename_of_changes": "parser.h",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "10",
    "number_of_lines_deleted_vulnerable_to_cve": "10",
    "vulnerable_lines": [
        "// Line_Reference 13: \tint\t\t s_state;\t/* State in current DFA */",
        "// Line_Reference 14: \tdfa\t\t*s_dfa;\t\t/* Current DFA */",
        "// Line_Reference 15: \tstruct _node\t*s_parent;\t/* Where to add next node */",
        "// Line_Reference 19: \tstackentry\t*s_top;\t\t/* Top entry */",
        "// Line_Reference 20: \tstackentry\t s_base[MAXSTACK];/* Array of stack entries */",
        "// Line_Reference 21: \t\t\t\t\t/* NB The stack grows down */",
        "// Line_Reference 25: \tstack\t \tp_stack;\t/* Stack of parser states */",
        "// Line_Reference 26: \tgrammar\t\t*p_grammar;\t/* Grammar to use */",
        "// Line_Reference 27: \tnode\t\t*p_tree;\t/* Top of parse tree */",
        "// Line_Reference 29: \tunsigned long\tp_flags;\t/* see co_flags in Include/code.h */"
    ]
}
