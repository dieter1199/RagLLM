{
    "cve_id": "CVE-2024-32986",
    "cve_description": "PWAsForFirefox is a tool to install, manage and use Progressive Web Apps (PWAs) in Mozilla Firefox. Due to improper sanitization of web app properties (such as name, description, shortcuts), web apps were able to inject additional lines into XDG Desktop Entries (on Linux) and `AppInfo.ini` (on PortableApps.com). This allowed malicious web apps to introduce keys like `Exec`, which could run arbitrary code when the affected web app was launched. This vulnerability affects all Linux and PortableApps.com users of all PWAsForFirefox versions up to (excluding) 2.12.0. Windows and macOS users are not affected. This vulnerability has been fixed in commit `9932d4b` which has been included in release in v2.12.0. The main fix is implemented in the native part, but the extension also contains additional fixes. All Linux and PortableApps.com users are advised to update to this version as soon as possible. It is also recommended for Windows and macOS users to update to this version, as it contains additional fixes related to properties sanitization. There are no known workarounds for this vulnerability.",
    "cve_publish_date": "2024-05-03",
    "cwe_id": "NVD-CWE-noinfo",
    "commit_message": "Fix improper sanitization of web app properties that lead to security vulnerabilities\n\nThis contains a critical security fix. More details will be published soon.",
    "type_of_change": "Modification",
    "filename_of_changes": "manage.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "23",
    "number_of_lines_deleted_vulnerable_to_cve": "18",
    "vulnerable_lines": [
        "// Line_Reference 25:   PREF_LAUNCH_CURRENT_URL, PREF_LOCALE,",
        "// Line_Reference 86:     const siteName = site.config.name || site.manifest.name || site.manifest.short_name || new URL(site.manifest.scope).host",
        "// Line_Reference 109:     descriptionElement.innerText = site.config.description || site.manifest.description || ''",
        "// Line_Reference 126:       document.getElementById('web-app-name').setAttribute('placeholder', site.manifest.name || site.manifest.short_name || new URL(site.manifest.scope).host)",
        "// Line_Reference 127:       document.getElementById('web-app-description').setAttribute('placeholder', site.manifest.description || '')",
        "// Line_Reference 143:       const categoriesList = site.config.categories?.length ? site.config.categories : site.manifest.categories",
        "// Line_Reference 144:       for (const category of categoriesList || []) categoriesElement.tagsInstance.addItem(category, category)",
        "// Line_Reference 152:       const keywordsList = site.config.keywords?.length ? site.config.keywords : site.manifest.keywords",
        "// Line_Reference 153:       for (const keyword of keywordsList || []) keywordsElement.tagsInstance.addItem(keyword, keyword)",
        "// Line_Reference 158:       profilesElement.add(new Option(profiles[site.profile].name || site.profile, site.profile))",
        "// Line_Reference 164:         const possibleHandlers = new Set([...site.config.custom_protocol_handlers, ...site.manifest.protocol_handlers].map(handler => handler.protocol).sort())",
        "// Line_Reference 165:         const enabledHandlers = site.config.enabled_protocol_handlers",
        "// Line_Reference 317:         const manifestCategories = site.manifest.categories || []",
        "// Line_Reference 321:         const manifestKeywords = site.manifest.keywords || []",
        "// Line_Reference 529:     nameElement.innerText = profile.name || await getMessage('managePageProfileListUnnamed')",
        "// Line_Reference 540:     descriptionElement.innerText = profile.description || ''",
        "// Line_Reference 687:         const itemName = item.querySelector('.list-group-item-name')?.innerText.toLowerCase()",
        "// Line_Reference 688:         const searchQuery = this.value.toLowerCase()"
    ]
}