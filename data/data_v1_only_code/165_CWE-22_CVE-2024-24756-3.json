{
    "cve_id": "CVE-2024-24756",
    "cve_description": "Crafatar serves Minecraft avatars based on the skin for use in external applications. Files outside of the `lib/public/` directory can be requested from the server. Instances running behind Cloudflare (including crafatar.com) are not affected. Instances using the Docker container as shown in the README are affected, but only files within the container can be read. By default, all of the files within the container can also be found in this repository and are not confidential. This vulnerability is patched in 2.1.5.",
    "cve_publish_date": "2024-02-01",
    "cwe_id": "CWE-22",
    "cwe_name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
    "cwe_description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
    "commit_message": "improve URL parsing\n\nuses `new URL()` and `decodeURI()` instead of `url.parse()`\nalso checks that the requested file is in a subdirectory of `public/` before serving the file\n\nfixes path traversal vulnerability GHSA-5cxq-25mp-q5f2",
    "type_of_change": "Modification",
    "filename_of_changes": "server.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "28",
    "number_of_lines_deleted_vulnerable_to_cve": "27",
    "vulnerable_lines": [
        "// Line_Reference 25:   var filename = path.join(__dirname, \"public\", req.url.path_list.join(\"/\"));",
        "// Line_Reference 26:   fs.access(filename, function(fs_err) {",
        "// Line_Reference 27:     if (!fs_err) {",
        "// Line_Reference 28:       fs.readFile(filename, function(err, data) {",
        "// Line_Reference 30:           body: data,",
        "// Line_Reference 31:           type: mime.getType(filename),",
        "// Line_Reference 32:           err: err,",
        "// Line_Reference 34:       });",
        "// Line_Reference 35:     } else {",
        "// Line_Reference 36:       callback({",
        "// Line_Reference 37:         body: \"Not found\",",
        "// Line_Reference 38:         status: -2,",
        "// Line_Reference 39:         code: 404,",
        "// Line_Reference 40:       });",
        "// Line_Reference 41:     }",
        "// Line_Reference 42:   });",
        "// Line_Reference 50: // splits a URL path into an Array",
        "// Line_Reference 51: // the path is resolved and decoded",
        "// Line_Reference 53:   // remove double and trailing slashes",
        "// Line_Reference 54:   pathname = pathname.replace(/\\/\\/+/g, \"/\").replace(/(.)\\/$/, \"$1\");",
        "// Line_Reference 57:   for (var i = 0; i < list.length; i++) {",
        "// Line_Reference 58:     // URL decode",
        "// Line_Reference 59:     list[i] = querystring.unescape(list[i]);",
        "// Line_Reference 60:   }",
        "// Line_Reference 66:   req.url = url.parse(req.url, true);",
        "// Line_Reference 67:   req.url.query = req.url.query || {};",
        "// Line_Reference 69: "
    ]
}