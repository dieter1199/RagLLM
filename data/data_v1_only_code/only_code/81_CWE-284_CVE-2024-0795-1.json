{
    "cve_id": "CVE-2024-0795",
    "cve_description": "If an attacked was given access to an instance with the admin or manager role there is no backend authentication that would prevent the attacked from creating a new user with an `admin` role and then be able to use this new account to have elevated privileges on the instance",
    "cve_publish_date": "2024-03-02",
    "cwe_id": "CWE-284",
    "cwe_name": "Improper Access Control",
    "cwe_description": "The product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.",
    "commit_message": "Implement total permission overhaul (#629)\n\n* Implement total permission overhaul\r\nAdd explicit permissions on each flex and strict route\r\nPatch issues with role escalation and CRUD of users\r\nPatch permissions on all routes for coverage\r\nImprove middleware to accept role array for clarity\r\n\r\n* update comments\r\n\r\n* remove permissions to API-keys for manager. Manager could generate API-key and using high-privelege api-key give themselves admin\r\n\r\n* update sidebar permissions for multi-user and single user\r\n\r\n* update options for mobile sidebar",
    "type_of_change": "Modification",
    "filename_of_changes": "index.js",
    "code_language": "JavaScript",
    "number_of_lines_added_for_mitigation": "7",
    "number_of_lines_deleted_vulnerable_to_cve": "16",
    "vulnerable_lines": [
        "// Line_Reference 202:       // Check to make sure with this update that includes a role change to",
        "// Line_Reference 203:       // something other than admin that we still have at least one admin left.",
        "// Line_Reference 204:       if (",
        "// Line_Reference 205:         updates.hasOwnProperty(\"role\") && // has admin prop to change",
        "// Line_Reference 206:         updates.role !== \"admin\" && // and we are changing to non-admin",
        "// Line_Reference 207:         user.role === \"admin\" // and they currently are an admin",
        "// Line_Reference 208:       ) {",
        "// Line_Reference 209:         const adminCount = await User.count({ role: \"admin\" });",
        "// Line_Reference 210:         if (adminCount - 1 <= 0) {",
        "// Line_Reference 211:           response.status(200).json({",
        "// Line_Reference 212:             success: false,",
        "// Line_Reference 213:             error:",
        "// Line_Reference 214:               \"No system admins will remain if you do this. Update failed.\",",
        "// Line_Reference 215:           });",
        "// Line_Reference 216:           return;",
        "// Line_Reference 217:         }"
    ]
}