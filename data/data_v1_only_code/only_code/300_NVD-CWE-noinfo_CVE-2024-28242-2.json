{
    "cve_id": "CVE-2024-28242",
    "cve_description": "Discourse is an open source platform for community discussion. In affected versions an attacker can learn that secret categories exist when they have backgrounds set. The issue is patched in the latest stable, beta and tests-passed version of Discourse. Users are advised to upgrade. Users unable to upgrade should temporarily remove category backgrounds.",
    "cve_publish_date": "2024-03-15",
    "cwe_id": "NVD-CWE-noinfo",
    "commit_message": "SECURITY: Generate more category CSS on client\n\nThis commit moves the generation of category background CSS from the\nserver side to the client side. This simplifies the server side code\nbecause it does not need to check which categories are visible to the\ncurrent user.",
    "type_of_change": "Modification",
    "filename_of_changes": "importer.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "0",
    "number_of_lines_deleted_vulnerable_to_cve": "30",
    "vulnerable_lines": [
        "// Line_Reference 98:     def category_backgrounds(color_scheme_id)",
        "// Line_Reference 99:       is_dark_color_scheme =",
        "// Line_Reference 100:         color_scheme_id.present? && ColorScheme.find_by_id(color_scheme_id)&.is_dark?",
        "// Line_Reference 101: ",
        "// Line_Reference 102:       contents = +\"\"",
        "// Line_Reference 103:       Category",
        "// Line_Reference 104:         .where(\"uploaded_background_id IS NOT NULL\")",
        "// Line_Reference 105:         .each do |c|",
        "// Line_Reference 106:           contents << category_css(c, is_dark_color_scheme) if c.uploaded_background&.url.present?",
        "// Line_Reference 107:         end",
        "// Line_Reference 108: ",
        "// Line_Reference 109:       contents",
        "// Line_Reference 110:     end",
        "// Line_Reference 111: ",
        "// Line_Reference 223:     def category_css(category, is_dark_color_scheme)",
        "// Line_Reference 224:       full_slug = category.full_slug.split(\"-\")[0..-2].join(\"-\")",
        "// Line_Reference 225: ",
        "// Line_Reference 226:       # in case we're using a dark color scheme, we define the background using the dark image",
        "// Line_Reference 227:       # if one is available. Otherwise, we use the light image by default.",
        "// Line_Reference 228:       if is_dark_color_scheme && category.uploaded_background_dark&.url.present?",
        "// Line_Reference 229:         return category_background_css(full_slug, category.uploaded_background_dark.url)",
        "// Line_Reference 230:       end",
        "// Line_Reference 231: ",
        "// Line_Reference 232:       category_background_css(full_slug, category.uploaded_background.url)",
        "// Line_Reference 233:     end",
        "// Line_Reference 234: ",
        "// Line_Reference 235:     def category_background_css(full_slug, background_url)",
        "// Line_Reference 236:       \"body.category-#{full_slug} { background-image: url(#{upload_cdn_path(background_url)}) }\"",
        "// Line_Reference 237:     end",
        "// Line_Reference 238: "
    ]
}