{
    "cve_id": "CVE-2024-29203",
    "cve_description": "TinyMCE is an open source rich text editor. A cross-site scripting (XSS) vulnerability was discovered in TinyMCE’s content insertion code.  This allowed `iframe` elements containing malicious code to execute when inserted into the editor.  These `iframe` elements are restricted in their permissions by same-origin browser protections, but could still trigger operations such as downloading of malicious assets. This vulnerability is fixed in 6.8.1.",
    "cve_publish_date": "2024-03-26",
    "cwe_id": "NVD-CWE-noinfo",
    "commit_message": "TINY-10348 & TINY-10349: Add sandbox_iframes and convert_unsafe_embeds options (#9172)\n\n* TINY-10348: Add sandbox_iframes option\r\n\r\n* TINY-10349: Add convert_unsafe_embeds option\r\n\r\n* TINY-10348 & TINY-10349: Add paste tests\r\n\r\n* TINY-10348 & TINY-10349: Add changelog entries\r\n\r\n* TINY-10348: Add missing PageBreakPlugin dependency in SelectionToolbarTest\r\n\r\n* TINY-10349: Add attribute preservation tests for convert_unsafe_embeds",
    "type_of_change": "Modification",
    "filename_of_changes": "PrePostProcess.ts",
    "code_language": "TypeScript",
    "number_of_lines_added_for_mitigation": "5",
    "number_of_lines_deleted_vulnerable_to_cve": "5",
    "vulnerable_lines": [
        "// Line_Reference 5: import DomParser from '../api/html/DomParser';",
        "// Line_Reference 14: const withSerializedContent = <R extends EditorEvent<{ content: string }>>(content: Content, fireEvent: (content: string) => R, sanitize: boolean): R & { content: Content } => {",
        "// Line_Reference 23:       const rootNode = DomParser({ validate: false, forced_root_block: false, sanitize }).parse(eventArgs.content, { context: content.name });",
        "// Line_Reference 50:     const processedEventArgs = withSerializedContent(content, (content) => Events.fireGetContent(editor, { ...args, content }), Options.shouldSanitizeXss(editor));",
        "// Line_Reference 59:     const processedEventArgs = withSerializedContent(args.content, (content) => Events.fireBeforeSetContent(editor, { ...args, content }), Options.shouldSanitizeXss(editor));"
    ]
}