{
    "cve_id": "CVE-2024-27304",
    "cve_description": "pgx is a PostgreSQL driver and toolkit for Go. SQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker's control. The problem is resolved in v4.18.2 and v5.5.4. As a workaround, reject user input large enough to cause a single query or bind message to exceed 4 GB in size.",
    "cve_publish_date": "2024-03-06",
    "cwe_id": "NVD-CWE-noinfo",
    "commit_message": "Do not allow protocol messages larger than ~1GB\n\nThe PostgreSQL server will reject messages greater than ~1 GB anyway.\nHowever, worse than that is that a message that is larger than 4 GB\ncould wrap the 32-bit integer message size and be interpreted by the\nserver as multiple messages. This could allow a malicious client to\ninject arbitrary protocol messages.\n\nhttps://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv",
    "type_of_change": "Modification",
    "filename_of_changes": "pgconn_test.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "10",
    "number_of_lines_deleted_vulnerable_to_cve": "3",
    "vulnerable_lines": [
        "// Line_Reference 3366:                 srv.Write((&pgproto3.AuthenticationOk{}).Encode(nil))",
        "// Line_Reference 3367:                 srv.Write((&pgproto3.BackendKeyData{ProcessID: 0, SecretKey: 0}).Encode(nil))",
        "// Line_Reference 3368:                 srv.Write((&pgproto3.ReadyForQuery{TxStatus: 'I'}).Encode(nil))"
    ]
}