{
    "cve_id": "CVE-2023-50257",
    "cve_description": "eProsima Fast DDS (formerly Fast RTPS) is a C++ implementation of the Data Distribution Service standard of the Object Management Group. Even with the application of SROS2, due to the issue where the data (`p[UD]`) and `guid` values used to disconnect between nodes are not encrypted, a vulnerability has been discovered where a malicious attacker can forcibly disconnect a Subscriber and can deny a Subscriber attempting to connect. Afterwards, if the attacker sends the packet for disconnecting, which is data (`p[UD]`), to the Global Data Space (`239.255.0.1:7400`) using the said Publisher ID, all the Subscribers (Listeners) connected to the Publisher (Talker) will not receive any data and their connection will be disconnected. Moreover, if this disconnection packet is sent continuously, the Subscribers (Listeners) trying to connect will not be able to do so. Since the initial commit of the `SecurityManager.cpp` code (`init`, `on_process_handshake`) on Nov 8, 2016, the Disconnect Vulnerability in RTPS Packets Used by SROS2 has been present prior to versions 2.13.0, 2.12.2, 2.11.3, 2.10.3, and 2.6.7.",
    "cve_publish_date": "2024-02-19",
    "cwe_id": "CWE-284",
    "cwe_name": "Improper Access Control",
    "cwe_description": "The product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.",
    "commit_message": "Refs #1811. WIP SecurityManager.",
    "type_of_change": "Modification",
    "filename_of_changes": "RTPSParticipantImpl.cpp",
    "code_language": "C++",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "6",
    "vulnerable_lines": [
        "// Line_Reference 90:         RTPSParticipantListener* plisten):    m_att(PParam), m_guid(guidP,c_EntityId_RTPSParticipant),",
        "// Line_Reference 862: const RTPSParticipantAttributes& RTPSParticipantImpl::getRTPSParticipantAttributes() const",
        "// Line_Reference 863: {",
        "// Line_Reference 864:     return this->m_att;",
        "// Line_Reference 865: }",
        "// Line_Reference 866: "
    ]
}