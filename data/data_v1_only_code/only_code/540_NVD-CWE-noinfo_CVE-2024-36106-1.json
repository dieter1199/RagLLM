{
    "cve_id": "CVE-2024-36106",
    "cve_description": "Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. It’s possible for authenticated users to enumerate clusters by name by inspecting error messages. It’s also possible to enumerate the names of projects with project-scoped clusters if you know the names of the clusters. This vulnerability is fixed in 2.11.3, 2.10.12, and 2.9.17.",
    "cve_publish_date": "2024-06-06",
    "cwe_id": "NVD-CWE-noinfo",
    "commit_message": "Merge pull request from GHSA-3cqf-953p-h5cp\n\n* fix: prevent enumerating by cluster name, return exact error for case when cluster exists and not\n\nSigned-off-by: pashakostohrys <pavel@codefresh.io>\n\n* fix: prevent cluster enumeration by name\n\nSigned-off-by: pashakostohrys <pavel@codefresh.io>\n\n* fix: prevent cluster enumeration by name\n\nSigned-off-by: pashakostohrys <pavel@codefresh.io>\n\n* fix linter and add unit test\n\nSigned-off-by: pashakostohrys <pavel@codefresh.io>\n\n* fix linter and add unit test\n\nSigned-off-by: pashakostohrys <pavel@codefresh.io>\n\n* fix linter and add unit test\n\nSigned-off-by: pashakostohrys <pavel@codefresh.io>\n\n* fix linter and add unit test\n\nSigned-off-by: pashakostohrys <pavel@codefresh.io>\n\n* fix linter and add unit test\n\nSigned-off-by: pashakostohrys <pavel@codefresh.io>\n\n---------\n\nSigned-off-by: pashakostohrys <pavel@codefresh.io>",
    "type_of_change": "Modification",
    "filename_of_changes": "cluster.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "30",
    "number_of_lines_deleted_vulnerable_to_cve": "21",
    "vulnerable_lines": [
        "// Line_Reference 190:     c, err := s.getClusterWith403IfNotExist(ctx, q)",
        "// Line_Reference 195:     if err := s.enf.EnforceErr(ctx.Value(\"claims\"), rbacpolicy.ResourceClusters, rbacpolicy.ActionGet, CreateClusterRBACObject(c.Project, q.Server)); err != nil {",
        "// Line_Reference 196:         return nil, err",
        "// Line_Reference 197:     }",
        "// Line_Reference 198: ",
        "// Line_Reference 281:     c, err := s.getClusterWith403IfNotExist(ctx, &cluster.ClusterQuery{",
        "// Line_Reference 285:     })",
        "// Line_Reference 290:     // verify that user can do update inside project where cluster is located",
        "// Line_Reference 291:     if !s.enf.Enforce(ctx.Value(\"claims\"), rbacpolicy.ResourceClusters, rbacpolicy.ActionUpdate, CreateClusterRBACObject(c.Project, c.Server)) {",
        "// Line_Reference 292:         return nil, common.PermissionDeniedAPIError",
        "// Line_Reference 293:     }",
        "// Line_Reference 294: ",
        "// Line_Reference 344:             return nil, err",
        "// Line_Reference 362:         return err",
        "// Line_Reference 381:             return nil, status.Errorf(codes.NotFound, \"failed to get cluster servers by name: %v\", err)",
        "// Line_Reference 385:                 return nil, status.Errorf(codes.PermissionDenied, \"encountered permissions issue while processing request: %v\", err)",
        "// Line_Reference 390:             return nil, status.Errorf(codes.PermissionDenied, \"encountered permissions issue while processing request: %v\", err)",
        "// Line_Reference 470:     cls, err := s.getClusterWith403IfNotExist(ctx, q)",
        "// Line_Reference 474:     if err := s.enf.EnforceErr(ctx.Value(\"claims\"), rbacpolicy.ResourceClusters, rbacpolicy.ActionUpdate, CreateClusterRBACObject(cls.Project, q.Server)); err != nil {",
        "// Line_Reference 475:         return nil, err",
        "// Line_Reference 476:     }"
    ]
}