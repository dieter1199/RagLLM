{
    "cve_id": "CVE-2024-3848",
    "cve_description": "A path traversal vulnerability exists in mlflow/mlflow version 2.11.0, identified as a bypass for the previously addressed CVE-2023-6909. The vulnerability arises from the application's handling of artifact URLs, where a '#' character can be used to insert a path into the fragment, effectively skipping validation. This allows an attacker to construct a URL that, when processed, ignores the protocol scheme and uses the provided path for filesystem access. As a result, an attacker can read arbitrary files, including sensitive information such as SSH and cloud keys, by exploiting the way the application converts the URL into a filesystem path. The issue stems from insufficient validation of the fragment portion of the URL, leading to arbitrary file read through path traversal.",
    "cve_publish_date": "2024-05-16",
    "cwe_id": "CWE-29",
    "cwe_name": "Path Traversal: '\\..\\filename'",
    "cwe_description": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '\\..\\filename' (leading backslash dot dot) sequences that can resolve to a location that is outside of that directory.",
    "commit_message": "Fix Local File Read/Path Traversal bypass (#11376)\n\nSigned-off-by: Weichen Xu <weichen.xu@databricks.com>",
    "type_of_change": "Modification",
    "filename_of_changes": "handlers.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "11",
    "number_of_lines_deleted_vulnerable_to_cve": "4",
    "vulnerable_lines": [
        "// Line_Reference 604: ",
        "// Line_Reference 1729:             run_artifact_dir = pathlib.Path(local_file_uri_to_path(run.info.artifact_uri)).resolve()",
        "// Line_Reference 1730:             if run_artifact_dir in [source, *source.parents]:",
        "// Line_Reference 1731:                 return"
    ]
}