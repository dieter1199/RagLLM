{
    "cve_id": "CVE-2024-30251",
    "cve_description": "aiohttp is an asynchronous HTTP client/server framework for asyncio and Python. In affected versions an attacker can send a specially crafted POST (multipart/form-data) request. When the aiohttp server processes it, the server will enter an infinite loop and be unable to process any further requests. An attacker can stop the application from serving requests after sending a single request. This issue has been addressed in version 3.9.4. Users are advised to upgrade. Users unable to upgrade may manually apply a patch to their systems. Please see the linked GHSA for instructions.",
    "cve_publish_date": "2024-05-02",
    "cwe_id": "NVD-CWE-noinfo",
    "commit_message": "Fix handling of multipart/form-data (#8280) (#8302)\n\nhttps://datatracker.ietf.org/doc/html/rfc7578\r\n(cherry picked from commit 7d0be3fee540a3d4161ac7dc76422f1f5ea60104)",
    "type_of_change": "Modification",
    "filename_of_changes": "test_web_functional.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "5",
    "number_of_lines_deleted_vulnerable_to_cve": "22",
    "vulnerable_lines": [
        "// Line_Reference 51:     form.add_field(\"name\", b\"123\", content_transfer_encoding=\"base64\")",
        "// Line_Reference 450: async def test_POST_DATA_with_content_transfer_encoding(aiohttp_client) -> None:",
        "// Line_Reference 451:     async def handler(request):",
        "// Line_Reference 452:         data = await request.post()",
        "// Line_Reference 453:         assert b\"123\" == data[\"name\"]",
        "// Line_Reference 454:         return web.Response()",
        "// Line_Reference 455: ",
        "// Line_Reference 456:     app = web.Application()",
        "// Line_Reference 457:     app.router.add_post(\"/\", handler)",
        "// Line_Reference 458:     client = await aiohttp_client(app)",
        "// Line_Reference 459: ",
        "// Line_Reference 460:     form = FormData()",
        "// Line_Reference 461:     form.add_field(\"name\", b\"123\", content_transfer_encoding=\"base64\")",
        "// Line_Reference 462: ",
        "// Line_Reference 463:     resp = await client.post(\"/\", data=form)",
        "// Line_Reference 464:     assert 200 == resp.status",
        "// Line_Reference 465: ",
        "// Line_Reference 466:     await resp.release()",
        "// Line_Reference 467: ",
        "// Line_Reference 468: ",
        "// Line_Reference 526:     form.add_field(\"name\", b\"123\", content_transfer_encoding=\"base64\")",
        "// Line_Reference 730:     resp = await client.post(\"/\", data={\"file\": data})"
    ]
}