{
    "cve_id": "CVE-2024-25618",
    "cve_description": "Mastodon is a free, open-source social network server based on ActivityPub. Mastodon allows new identities from configured authentication providers (CAS, SAML, OIDC) to attach to existing local users with the same e-mail address. This results in a possible account takeover if the authentication provider allows changing the e-mail address or multiple authentication providers are configured. When a user logs in through an external authentication provider for the first time, Mastodon checks the e-mail address passed by the provider to find an existing account. However, using the e-mail address alone means that if the authentication provider allows changing the e-mail address of an account, the Mastodon account can immediately be hijacked. All users logging in through external authentication providers are affected. The severity is medium, as it also requires the external authentication provider to misbehave. However, some well-known OIDC providers (like Microsoft Azure) make it very easy to accidentally allow unverified e-mail changes. Moreover, OpenID Connect also allows dynamic client registration. This issue has been addressed in versions 4.2.6, 4.1.14, 4.0.14, and 3.5.18. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "cve_publish_date": "2024-02-14",
    "cwe_id": "CWE-287",
    "cwe_name": "Improper Authentication",
    "cwe_description": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
    "commit_message": "Merge pull request from GHSA-vm39-j3vx-pch3\n\n* Prevent different identities from a same SSO provider from accessing a same account\n\n* Lock auth provider changes behind `ALLOW_UNSAFE_AUTH_PROVIDER_REATTACH=true`\n\n* Rename methods to avoid confusion between OAuth and OmniAuth",
    "type_of_change": "Modification",
    "filename_of_changes": "omniauth_callbacks_spec.rb",
    "code_language": "Ruby",
    "number_of_lines_added_for_mitigation": "1",
    "number_of_lines_deleted_vulnerable_to_cve": "1",
    "vulnerable_lines": [
        "// Line_Reference 99:         allow(User).to receive(:find_for_oauth).and_return(User.new)"
    ]
}