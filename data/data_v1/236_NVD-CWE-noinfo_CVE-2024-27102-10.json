{
    "cve_id": "CVE-2024-27102",
    "cve_description": "Wings is the server control plane for Pterodactyl Panel. This vulnerability impacts anyone running the affected versions of Wings. The vulnerability can potentially be used to access files and directories on the host system. The full scope of impact is exactly unknown, but reading files outside of a server's base directory (sandbox root) is possible. In order to use this exploit, an attacker must have an existing \"server\" allocated and controlled by Wings. Details on the exploitation of this vulnerability are embargoed until March 27th, 2024 at 18:00 UTC. In order to mitigate this vulnerability, a full rewrite of the entire server filesystem was necessary. Because of this, the size of the patch is massive, however effort was made to reduce the amount of breaking changes. Users are advised to update to version 1.11.9. There are no known workarounds for this vulnerability.",
    "cve_publish_date": "2024-03-13",
    "cwe_id": "NVD-CWE-noinfo",
    "commit_message": "server(filesystem): rebuild everything imaginable\n\nThis wonderfully large commit replaces basically everything under the\n`server/filesystem` package, re-implementing essentially everything.\n\nThis is related to\nhttps://github.com/pterodactyl/wings/security/advisories/GHSA-494h-9924-xww9\n\nIf any vulnerabilities related to symlinks persist after this commit, I\nwill be very upset.\n\nSigned-off-by: Matthew Penner <me@matthewp.io>",
    "type_of_change": "Modification",
    "filename_of_changes": "helpers.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "3",
    "number_of_lines_deleted_vulnerable_to_cve": "15",
    "vulnerable_lines": [
        "// Line_Reference 5:     \"io\"",
        "// Line_Reference 6:     \"os\"",
        "// Line_Reference 32: //   <Property value=\"testing\"/>",
        "// Line_Reference 38: // Gets the []byte representation of a configuration file to be passed through to other",
        "// Line_Reference 39: // handler functions. If the file does not currently exist, it will be created.",
        "// Line_Reference 40: func readFileBytes(path string) ([]byte, error) {",
        "// Line_Reference 41:     file, err := os.OpenFile(path, os.O_CREATE|os.O_RDWR, 0o644)",
        "// Line_Reference 42:     if err != nil {",
        "// Line_Reference 43:         return nil, err",
        "// Line_Reference 44:     }",
        "// Line_Reference 45:     defer file.Close()",
        "// Line_Reference 46: ",
        "// Line_Reference 47:     return io.ReadAll(file)",
        "// Line_Reference 48: }",
        "// Line_Reference 49: "
    ]
}