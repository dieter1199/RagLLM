{
    "cve_id": "CVE-2024-27102",
    "cve_description": "Wings is the server control plane for Pterodactyl Panel. This vulnerability impacts anyone running the affected versions of Wings. The vulnerability can potentially be used to access files and directories on the host system. The full scope of impact is exactly unknown, but reading files outside of a server's base directory (sandbox root) is possible. In order to use this exploit, an attacker must have an existing \"server\" allocated and controlled by Wings. Details on the exploitation of this vulnerability are embargoed until March 27th, 2024 at 18:00 UTC. In order to mitigate this vulnerability, a full rewrite of the entire server filesystem was necessary. Because of this, the size of the patch is massive, however effort was made to reduce the amount of breaking changes. Users are advised to update to version 1.11.9. There are no known workarounds for this vulnerability.",
    "cve_publish_date": "2024-03-13",
    "cwe_id": "NVD-CWE-noinfo",
    "commit_message": "server(filesystem): rebuild everything imaginable\n\nThis wonderfully large commit replaces basically everything under the\n`server/filesystem` package, re-implementing essentially everything.\n\nThis is related to\nhttps://github.com/pterodactyl/wings/security/advisories/GHSA-494h-9924-xww9\n\nIf any vulnerabilities related to symlinks persist after this commit, I\nwill be very upset.\n\nSigned-off-by: Matthew Penner <me@matthewp.io>",
    "type_of_change": "Modification",
    "filename_of_changes": "router_server_files.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "13",
    "number_of_lines_deleted_vulnerable_to_cve": "11",
    "vulnerable_lines": [
        "// Line_Reference 33:     p := \"/\" + strings.TrimLeft(c.Query(\"file\"), \"/\")",
        "// Line_Reference 132:                     // NOTE: os.IsNotExist() does not work if the error is wrapped.",
        "// Line_Reference 242:     if err := s.Filesystem().Writefile(f, c.Request.Body); err != nil {",
        "// Line_Reference 592:         p, err := s.Filesystem().SafePath(filepath.Join(directory, header.Filename))",
        "// Line_Reference 593:         if err != nil {",
        "// Line_Reference 594:             middleware.CaptureAndAbort(c, err)",
        "// Line_Reference 595:             return",
        "// Line_Reference 596:         }",
        "// Line_Reference 597: ",
        "// Line_Reference 600:         if err := handleFileUpload(p, s, header); err != nil {",
        "// Line_Reference 622:     if err := s.Filesystem().Writefile(p, file); err != nil {"
    ]
}