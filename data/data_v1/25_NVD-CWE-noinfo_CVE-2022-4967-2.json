{
    "cve_id": "CVE-2022-4967",
    "cve_description": "strongSwan versions 5.9.2 through 5.9.5 are affected by authorization bypass through improper validation of certificate with host mismatch (CWE-297). When certificates are used to authenticate clients in TLS-based EAP methods, the IKE or EAP identity supplied by a client is not enforced to be contained in the client's certificate. So clients can authenticate with any trusted certificate and claim an arbitrary IKE/EAP identity as their own. This is problematic if the identity is used to make policy decisions. A fix was released in strongSwan version 5.9.6 in August 2022 (e4b4aabc4996fc61c37deab7858d07bc4d220136).",
    "cve_publish_date": "2024-05-14",
    "cwe_id": "NVD-CWE-noinfo",
    "commit_message": "libtls: Enforce client/server identity when looking for public key\n\nThe client already enforces that the server identity is contained in the\nreceived certificate.  But on the server, the referenced commit changed\nthe lookup from the configured (or adopted if %any was configured) client\nidentity to the subject DN of the received client certificate.  So any\nclient with a trusted certificate was accepted.\n\nFixes: d2fc9b0961c6 (\"tls-server: Mutual authentication support for TLS 1.3\")\nCloses strongswan/strongswan#873",
    "type_of_change": "Modification",
    "filename_of_changes": "tls_server.c",
    "code_language": "C",
    "number_of_lines_added_for_mitigation": "3",
    "number_of_lines_deleted_vulnerable_to_cve": "4",
    "vulnerable_lines": [
        "// Line_Reference 176: public_key_t *tls_find_public_key(auth_cfg_t *peer_auth)",
        "// Line_Reference 187:                                             KEY_ANY, cert->get_subject(cert),",
        "// Line_Reference 188:                                             peer_auth, TRUE);",
        "// Line_Reference 926:     public = tls_find_public_key(this->peer_auth);"
    ]
}