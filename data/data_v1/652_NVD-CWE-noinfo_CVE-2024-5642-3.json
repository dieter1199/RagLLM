{
    "cve_id": "CVE-2024-5642",
    "cve_description": "CPython 3.9 and earlier doesn't disallow configuring an empty list (\"[]\") for SSLContext.set_npn_protocols() which is an invalid value for the underlying OpenSSL API. This results in a buffer over-read when NPN is used (see CVE-2024-5535 for OpenSSL). This vulnerability is of low severity due to NPN being not widely used and specifying an empty list likely being uncommon in-practice (typically a protocol name would be configured).",
    "cve_publish_date": "2024-06-27",
    "cwe_id": "NVD-CWE-noinfo",
    "commit_message": "bpo-43669: PEP 644: Require OpenSSL 1.1.1 or newer (GH-23014)\n\n- Remove HAVE_X509_VERIFY_PARAM_SET1_HOST check\r\n- Update hashopenssl to require OpenSSL 1.1.1\r\n- multissltests only OpenSSL > 1.1.0\r\n- ALPN is always supported\r\n- SNI is always supported\r\n- Remove deprecated NPN code. Python wrappers are no-op.\r\n- ECDH is always supported\r\n- Remove OPENSSL_VERSION_1_1 macro\r\n- Remove locking callbacks\r\n- Drop PY_OPENSSL_1_1_API macro\r\n- Drop HAVE_SSL_CTX_CLEAR_OPTIONS macro\r\n- SSL_CTRL_GET_MAX_PROTO_VERSION is always defined now\r\n- security level is always available now\r\n- get_num_tickets is available with TLS 1.3\r\n- X509_V_ERR MISMATCH is always available now\r\n- Always set SSL_MODE_RELEASE_BUFFERS\r\n- X509_V_FLAG_TRUSTED_FIRST is always available\r\n- get_ciphers is always supported\r\n- SSL_CTX_set_keylog_callback is always available\r\n- Update Modules/Setup with static link example\r\n- Mention PEP in whatsnew\r\n- Drop 1.0.2 and 1.1.0 from GHA tests",
    "type_of_change": "Modification",
    "filename_of_changes": "ssl.py",
    "code_language": "Python",
    "number_of_lines_added_for_mitigation": "2",
    "number_of_lines_deleted_vulnerable_to_cve": "8",
    "vulnerable_lines": [
        "// Line_Reference 912:         if _ssl.HAS_NPN:",
        "// Line_Reference 913:             return self._sslobj.selected_npn_protocol()",
        "// Line_Reference 919:         if _ssl.HAS_ALPN:",
        "// Line_Reference 920:             return self._sslobj.selected_alpn_protocol()",
        "// Line_Reference 1129:         if self._sslobj is None or not _ssl.HAS_NPN:",
        "// Line_Reference 1130:             return None",
        "// Line_Reference 1131:         else:",
        "// Line_Reference 1132:             return self._sslobj.selected_npn_protocol()"
    ]
}