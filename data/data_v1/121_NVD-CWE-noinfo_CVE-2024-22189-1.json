{
    "cve_id": "CVE-2024-22189",
    "cve_description": "quic-go is an implementation of the QUIC protocol in Go. Prior to version 0.42.0, an attacker can cause its peer to run out of memory sending a large number of `NEW_CONNECTION_ID` frames that retire old connection IDs. The receiver is supposed to respond to each retirement frame with a `RETIRE_CONNECTION_ID` frame. The attacker can prevent the receiver from sending out (the vast majority of) these `RETIRE_CONNECTION_ID` frames by collapsing the peers congestion window (by selectively acknowledging received packets) and by manipulating the peer's RTT estimate. Version 0.42.0 contains a patch for the issue. No known workarounds are available.",
    "cve_publish_date": "2024-04-04",
    "cwe_id": "NVD-CWE-noinfo",
    "commit_message": "close connection when an abnormally large number of frames are queued (#4369)\n\nUnder normal circumstances, we should be able to send out control frames\r\nright away, so we don't expect any queue to build up. To defend against\r\nresource exhaustion attacks, we limit the control frame queue to 16384\r\nelements.",
    "type_of_change": "Modification",
    "filename_of_changes": "framer.go",
    "code_language": "Go",
    "number_of_lines_added_for_mitigation": "24",
    "number_of_lines_deleted_vulnerable_to_cve": "4",
    "vulnerable_lines": [
        "// Line_Reference 26: const maxPathResponses = 256",
        "// Line_Reference 36:     controlFrameMutex sync.Mutex",
        "// Line_Reference 37:     controlFrames     []wire.Frame",
        "// Line_Reference 38:     pathResponses     []*wire.PathResponseFrame"
    ]
}