<?php

/**
 * Library Details Info View Class.
 *
 * @package   Settings.View
 *
 * @copyright YetiForce S.A.
 * @license   YetiForce Public License 5.0 (licenses/LicenseEN.txt or yetiforce.com)
 */
class Settings_Dependency_LibInfo_View extends Settings_Vtiger_BasicModal_View
{
    /**
     * Erlaubte Package-Dateien.
     *
     * @var string[]
     */
    public $validFiles = ['package.json', 'composer.json', 'bower.json'];

    /** {@inheritdoc} */
    public function process(App\Request $request)
    {
        $resultStatus = false;
        $fileData = '';

        if ($request->isEmpty('type') || $request->isEmpty('libName')) {
            $resultStatus = false;
        } else {
            $libType = $request->getByType('type', 1);
            $libIdentifier = $request->getByType('libName', 'Text');

            if ('public' === $libType) {
                $baseDir = ROOT_DIRECTORY . DIRECTORY_SEPARATOR . 'public_html' . DIRECTORY_SEPARATOR . 'libraries' . DIRECTORY_SEPARATOR;
                foreach ($this->validFiles as $fname) {
                    $path = $baseDir . $libIdentifier . DIRECTORY_SEPARATOR . $fname;
                    if ($fileData) {
                        continue;
                    }
                    if (file_exists($path)) {
                        $fileData = file_get_contents($path);
                        $resultStatus = true;
                    } else {
                        $resultStatus = false;
                    }
                }
            } elseif ('vendor' === $libType) {
                $vendorPath = 'vendor' . DIRECTORY_SEPARATOR . $libIdentifier . DIRECTORY_SEPARATOR . 'composer.json';
                if (file_exists($vendorPath)) {
                    $fileData = file_get_contents($vendorPath);
                    $resultStatus = true;
                } else {
                    $resultStatus = false;
                }
            } else {
                $resultStatus = false;
            }
        }

        $this->preProcess($request);
        $moduleQualified = $request->getModule(false);
        $viewer = $this->getViewer($request);
        $viewer->assign('QUALIFIED_MODULE', $moduleQualified);
        $viewer->assign('RESULT', $resultStatus);
        $viewer->assign('FILE_CONTENT', $fileData);
        $viewer->view('LibraryDetails.tpl', $moduleQualified);
        $this->postProcess($request);
    }
}
