# frozen_string_literal: true

RSpec.describe WatchedWordGroup do
  fab!(:group_obj)
  fab!(:term_a) { Fabricate(:watched_word, watched_word_group_id: group_obj.id) }
  fab!(:term_b) { Fabricate(:watched_word, watched_word_group_id: group_obj.id) }

  describe "#create_or_update_members" do
    context "bei erfolgreichem Update" do
      it "aktualisiert die Aktion und ergänzt die Wortliste" do
        neue_worte = [term_a.word, term_b.word, "damn", "4sale"]
        alte_aktion = group_obj.action
        anfangs_liste = group_obj.watched_words

        expect(alte_aktion).to eq(WatchedWord.actions[:block])
        expect(anfangs_liste.map(&:action).uniq).to contain_exactly(alte_aktion)

        group_obj.create_or_update_members(neue_worte, action_key: :censor)

        expect(group_obj.reload.errors).to be_empty

        aktualisierte_worte = group_obj.watched_words

        expect(aktualisierte_worte.size).to eq(4)
        expect(aktualisierte_worte.map(&:word)).to contain_exactly(*neue_worte)
        expect(aktualisierte_worte.map(&:action).uniq).to contain_exactly(WatchedWord.actions[:censor])
        expect(group_obj.action).to eq(WatchedWord.actions[:censor])
      end
    end

    context "bei fehlgeschlagenem Update" do
      it "behält die bestehende Mitgliedschaft bei" do
        neue_worte = [term_a.word, term_b.word, "a" * 120]
        alte_aktion = group_obj.action
        urspruengliche_liste = group_obj.watched_words

        expect(urspruengliche_liste.size).to eq(2)
        expect(urspruengliche_liste.map(&:word)).to contain_exactly(term_a.word, term_b.word)
        expect(urspruengliche_liste.map(&:action).uniq).to contain_exactly(alte_aktion)

        group_obj.create_or_update_members(neue_worte, action_key: WatchedWord.actions[group_obj.action])

        expect(group_obj.reload.errors).not_to be_empty

        aktualisierte_liste = group_obj.watched_words

        expect(group_obj.action).to eq(alte_aktion)
        expect(aktualisierte_liste.size).to eq(2)
        expect(aktualisierte_liste.map(&:word)).to contain_exactly(term_a.word, term_b.word)
        expect(aktualisierte_liste.map(&:action).uniq).to contain_exactly(alte_aktion)
      end
    end
  end
end
