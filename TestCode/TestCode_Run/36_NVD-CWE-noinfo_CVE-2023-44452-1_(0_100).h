/* comics-document.h: Implementation of EvDocument for comic book archives
 * Copyright (C) 2005, Teemu Tervo <teemu.tervo@gmx.net>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 */
#include <config.h>

#include <unistd.h>
#include <string.h>
#include <stdlib.h>
#include <errno.h>
 
#include <glib.h>
#include <glib/gi18n-lib.h>
#include <glib/gstdio.h>
#include <gio/gio.h>
 
#include "comics-document.h"
#include "ev-document-misc.h"
#include "ev-document-thumbnails.h"
#include "ev-file-helpers.h"
#include "ev-archive.h"
 
#define BLOCK_SIZE 10240
 
typedef struct _ComicsDocumentClass ComicsDocumentClass;
/*Start*/
#ifndef __COMICS_DOCUMENT_H__
#define __COMICS_DOCUMENT_H__

#include "ev-document.h"

G_BEGIN_DECLS

#define COMICS_TYPE_DOCUMENT    (comics_document_get_type ())
#define COMICS_DOCUMENT(obj)    (G_TYPE_CHECK_INSTANCE_CAST ((obj), COMICS_TYPE_DOCUMENT, ComicsDocument))
#define COMICS_IS_DOCUMENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), COMICS_TYPE_DOCUMENT))

typedef struct _ComicsDocument ComicsDocument;

GType                 comics_document_get_type (void) G_GNUC_CONST;

G_MODULE_EXPORT GType register_xreader_backend  (GTypeModule *module);
     
G_END_DECLS

#endif /* __COMICS_DOCUMENT_H__ */
/*End*/
 
 struct _ComicsDocumentClass
 {
     EvDocumentClass parent_class;
 };
 
 struct _ComicsDocument
 {
     EvDocument     parent_instance;
     EvArchive     *archive;
     gchar         *archive_path;
     gchar         *archive_uri;
     GPtrArray     *page_names; /* elem: char * */
     GHashTable    *page_positions; /* key: char *, value: uint + 1 */
 };
 
 static void       comics_document_document_thumbnails_iface_init (EvDocumentThumbnailsInterface *iface);
 
 EV_BACKEND_REGISTER_WITH_CODE (ComicsDocument, comics_document,
     {
         EV_BACKEND_IMPLEMENT_INTERFACE (EV_TYPE_DOCUMENT_THUMBNAILS,
                         comics_document_document_thumbnails_iface_init);
     } );
 
 #define FORMAT_UNKNOWN     0
 #define FORMAT_SUPPORTED   1
 #define FORMAT_UNSUPPORTED 2
 
 /* Returns a GHashTable of:
  * <key>: file extensions
  * <value>: degree of support in gdk-pixbuf */
 static GHashTable *
 get_image_extensions(void)
 {
     GHashTable *extensions;
     GSList *formats = gdk_pixbuf_get_formats ();
     GSList *l;
     guint i;
     const char *known_image_formats[] = {
         "png",
         "jpg",
         "jpeg",
         "webp"
     };
    }
