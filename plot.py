import matplotlib.pyplot as plt

# X-Werte: 50, 100, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4000,
#         4500, 5000, 5500, 6000, 6500, 7000, 7500, 8000
x = [50, 100, 500, 1000, 1500, 2000, 2500, 3000,
     3500, 4000, 4500, 5000, 5500, 6000, 6500, 7000, 7500, 8000, 8500, 9000, 9500, 10000, 10500, 11000, 11500, 12000, 12500,
     13000, 13500, 14000, 14500, 15000, 15500, 16000, 16500, 17000, 17500, 18000, 18500, 19000, 19500, 20000, 20500, 21000, 21500,
     22000, 22500, 23000]

# Beispielwerte (später kannst du diese durch deine echten Daten ersetzen)
# y2 = [89.1, 89.1, 89.1, 89.1, 89.1, 87,   80.4, 76.1, 76.1, 73.9, 73.9, 71.1, 71.1, 71.1, 69.9, 69.9, 69.9, 69.9]  # Top-1 Doc-Level (ursprünglich Dunkelrot)
# y1 = [95.6, 95.6, 91.3, 91.3, 91.3, 91.3, 91.3, 89.1, 89.1, 89.1, 89.1, 89.1, 89.1, 89.1, 84.8, 84.8, 84.8, 84.8]  # Top-3 Doc-Level (Rot)

# y4 = [99.3, 99.3, 97.8, 80.4, 78.3, 78.3, 65.2, 65.2, 60.9, 50,   50,   43.5, 43.5, 43.5, 34.8, 34.8, 30.4, 30.4]  # Top-1 Top-K-Mean (Dunkelgrün)
# y3 = [99.3, 99.3, 99.3, 99.3, 99.3, 99.3, 89.1, 86.9, 89.2, 89.1, 84.8, 78.3, 78.3, 67.4, 67.4, 67.4, 67.4, 67.4]  # Top-3 Top-K-Mean (Grün)

y2 = [
    89.1, 89.1, 89.1, 89.1, 89.1, 87.0, 80.4, 76.1, 76.1, 73.9, 73.9,
    71.7, 71.7, 71.7, 69.6, 69.6, 69.6, 69.6, 69.6, 69.6, 69.6, 69.6,
    69.6, 69.6, 69.6, 69.6, 69.6, 67.4, 67.4, 67.4, 67.4, 67.4, 69.6,
    67.4, 67.4, 65.2, 65.2, 65.2, 65.2, 65.2, 63.0, 65.2, 63.0, 63.0,
    65.2, 63.0, 65.2, 65.2
]


y1 = [
    89.1 + 6.5,   89.1 + 6.5,   89.1 + 2.2,   89.1 + 2.2,   89.1 + 2.2,
    87.0 + 4.3,   80.4 + 10.9,  76.1 + 13.0,  76.1 + 13.0,  73.9 + 15.2,
    73.9 + 15.2,  71.7 + 17.4,  71.7 + 17.4,  71.7 + 17.4,  69.6 + 15.2,
    69.6 + 15.2,  69.6 + 15.2,  69.6 + 15.2,  69.6 + 15.2,  69.6 + 10.9,
    69.6 + 10.9,  69.6 + 10.9,  69.6 + 10.9,  69.6 + 10.9,  69.6 + 10.9,
    69.6 + 10.9,  69.6 + 10.9,  67.4 + 13.0,  67.4 + 13.0,  67.4 + 10.9,
    67.4 + 10.9,  67.4 + 10.9,  69.6 + 8.7,   67.4 + 10.9,  67.4 + 10.9,
    65.2 + 13.0,  65.2 + 13.0,  65.2 + 13.0,  65.2 + 13.0,  65.2 + 13.0,
    63.0 + 15.2,  65.2 + 13.0,  63.0 + 15.2,  63.0 + 15.2,  65.2 + 13.0,
    63.0 + 15.2,  65.2 + 13.0,  65.2 + 13.0
]


y4 = [
    95.7, 95.7, 91.3, 91.3, 87.0, 87.0, 87.0, 84.8,
    84.8, 84.8, 84.8, 84.8, 84.8, 76.1, 73.9, 71.7,
    67.4, 67.4, 67.4, 67.4, 67.4, 67.4, 67.4, 67.4,
    67.4, 65.2, 65.2, 65.2, 65.2, 65.2, 65.2, 65.2,
    65.2, 65.2, 65.2, 65.2, 65.2, 63.0, 60.9, 60.9,
    63.0, 63.0, 60.9, 63.0, 63.0, 63.0, 63.0, 60.9
]


y3 = [
    100.0, 100.0, 93.5, 93.5, 93.5, 93.5, 93.5, 93.5,
    89.1, 89.1, 89.1, 89.1, 89.1, 89.1, 87.0, 87.0,
    84.8, 84.8, 84.8, 82.6, 82.6, 82.6, 82.6, 82.6,
    82.6, 82.6, 82.6, 82.6, 78.3, 78.3, 78.3, 78.3,
    78.3, 78.3, 78.3, 73.9, 73.9, 73.9, 73.9, 73.9,
    73.9, 73.9, 73.9, 73.9, 73.9, 73.9, 73.9, 73.9
]


# Plot erstellen (ohne Legende)
plt.plot(x, y1, color='red')
plt.plot(x, y2, color='#fa5757')
plt.plot(x, y3, color='blue')
plt.plot(x, y4, color='#2186de')

# Offset für die horizontale Verschiebung der Labels
offset = 50

# Labels an den Endpunkten der Linien platzieren
plt.text(x[-1] + offset, y1[-1], ' Top-3 intfloat/e5-large-v2', color='red', va='center')
# Label für Top-1 Doc-Level um 5 Einheiten nach oben verschoben
plt.text(x[-1] + offset, y2[-1] + 2, ' Top-1 intfloat/e5-large-v2', color='#fa5757', va='center')
# Label für Top-3 Top-K-Mean um 5 Einheiten nach unten verschoben
plt.text(x[-1] + offset, y3[-1] - 2, ' Top-3 CodeSearch-ModernBERT-Crow-Plus', color='blue', va='center')
plt.text(x[-1] + offset, y4[-1], ' Top-1 CodeSearch-ModernBERT-Crow-Plus', color='#2186de', va='center')

# Achsenbeschriftungen und Titel
plt.xlabel('Wissensbasis Größe')
plt.ylabel('Trefferquote')
plt.title('Dimension Test')
plt.ylim(0, 100)

# X-Achse erweitern, damit die Labels nicht abgeschnitten werden
plt.xlim(x[0], x[-1] + offset + 50)

# Plot speichern (im selben Verzeichnis)
plt.savefig('diagramm.png', bbox_inches='tight')
plt.show()






